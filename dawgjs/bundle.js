(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){
(function (process,Buffer){
var Module = typeof Module !== "undefined" ? Module : {};
var moduleOverrides = {};
var key;
for (key in Module) {
 if (Module.hasOwnProperty(key)) {
  moduleOverrides[key] = Module[key];
 }
}
Module["arguments"] = [];
Module["thisProgram"] = "./this.program";
Module["quit"] = (function(status, toThrow) {
 throw toThrow;
});
Module["preRun"] = [];
Module["postRun"] = [];
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;
if (Module["ENVIRONMENT"]) {
 if (Module["ENVIRONMENT"] === "WEB") {
  ENVIRONMENT_IS_WEB = true;
 } else if (Module["ENVIRONMENT"] === "WORKER") {
  ENVIRONMENT_IS_WORKER = true;
 } else if (Module["ENVIRONMENT"] === "NODE") {
  ENVIRONMENT_IS_NODE = true;
 } else if (Module["ENVIRONMENT"] === "SHELL") {
  ENVIRONMENT_IS_SHELL = true;
 } else {
  throw new Error("Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.");
 }
} else {
 ENVIRONMENT_IS_WEB = typeof window === "object";
 ENVIRONMENT_IS_WORKER = typeof importScripts === "function";
 ENVIRONMENT_IS_NODE = typeof process === "object" && typeof require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
 ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}
if (ENVIRONMENT_IS_NODE) {
 var nodeFS;
 var nodePath;
 Module["read"] = function shell_read(filename, binary) {
  var ret;
  ret = tryParseAsDataURI(filename);
  if (!ret) {
   if (!nodeFS) nodeFS = require("fs");
   if (!nodePath) nodePath = require("path");
   filename = nodePath["normalize"](filename);
   ret = nodeFS["readFileSync"](filename);
  }
  return binary ? ret : ret.toString();
 };
 Module["readBinary"] = function readBinary(filename) {
  var ret = Module["read"](filename, true);
  if (!ret.buffer) {
   ret = new Uint8Array(ret);
  }
  assert(ret.buffer);
  return ret;
 };
 if (process["argv"].length > 1) {
  Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
 }
 Module["arguments"] = process["argv"].slice(2);
 if (typeof module !== "undefined") {
  module["exports"] = Module;
 }
 process["on"]("uncaughtException", (function(ex) {
  if (!(ex instanceof ExitStatus)) {
   throw ex;
  }
 }));
 process["on"]("unhandledRejection", (function(reason, p) {
  process["exit"](1);
 }));
 Module["inspect"] = (function() {
  return "[Emscripten Module object]";
 });
} else if (ENVIRONMENT_IS_SHELL) {
 if (typeof read != "undefined") {
  Module["read"] = function shell_read(f) {
   var data = tryParseAsDataURI(f);
   if (data) {
    return intArrayToString(data);
   }
   return read(f);
  };
 }
 Module["readBinary"] = function readBinary(f) {
  var data;
  data = tryParseAsDataURI(f);
  if (data) {
   return data;
  }
  if (typeof readbuffer === "function") {
   return new Uint8Array(readbuffer(f));
  }
  data = read(f, "binary");
  assert(typeof data === "object");
  return data;
 };
 if (typeof scriptArgs != "undefined") {
  Module["arguments"] = scriptArgs;
 } else if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
 if (typeof quit === "function") {
  Module["quit"] = (function(status, toThrow) {
   quit(status);
  });
 }
} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
 Module["read"] = function shell_read(url) {
  try {
   var xhr = new XMLHttpRequest;
   xhr.open("GET", url, false);
   xhr.send(null);
   return xhr.responseText;
  } catch (err) {
   var data = tryParseAsDataURI(url);
   if (data) {
    return intArrayToString(data);
   }
   throw err;
  }
 };
 if (ENVIRONMENT_IS_WORKER) {
  Module["readBinary"] = function readBinary(url) {
   try {
    var xhr = new XMLHttpRequest;
    xhr.open("GET", url, false);
    xhr.responseType = "arraybuffer";
    xhr.send(null);
    return new Uint8Array(xhr.response);
   } catch (err) {
    var data = tryParseAsDataURI(url);
    if (data) {
     return data;
    }
    throw err;
   }
  };
 }
 Module["readAsync"] = function readAsync(url, onload, onerror) {
  var xhr = new XMLHttpRequest;
  xhr.open("GET", url, true);
  xhr.responseType = "arraybuffer";
  xhr.onload = function xhr_onload() {
   if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
    onload(xhr.response);
    return;
   }
   var data = tryParseAsDataURI(url);
   if (data) {
    onload(data.buffer);
    return;
   }
   onerror();
  };
  xhr.onerror = onerror;
  xhr.send(null);
 };
 if (typeof arguments != "undefined") {
  Module["arguments"] = arguments;
 }
 Module["setWindowTitle"] = (function(title) {
  document.title = title;
 });
}
Module["print"] = typeof console !== "undefined" ? console.log : typeof print !== "undefined" ? print : null;
Module["printErr"] = typeof printErr !== "undefined" ? printErr : typeof console !== "undefined" && console.warn || Module["print"];
Module.print = Module["print"];
Module.printErr = Module["printErr"];
for (key in moduleOverrides) {
 if (moduleOverrides.hasOwnProperty(key)) {
  Module[key] = moduleOverrides[key];
 }
}
moduleOverrides = undefined;
var STACK_ALIGN = 16;
function staticAlloc(size) {
 assert(!staticSealed);
 var ret = STATICTOP;
 STATICTOP = STATICTOP + size + 15 & -16;
 return ret;
}
function dynamicAlloc(size) {
 assert(DYNAMICTOP_PTR);
 var ret = HEAP32[DYNAMICTOP_PTR >> 2];
 var end = ret + size + 15 & -16;
 HEAP32[DYNAMICTOP_PTR >> 2] = end;
 if (end >= TOTAL_MEMORY) {
  var success = enlargeMemory();
  if (!success) {
   HEAP32[DYNAMICTOP_PTR >> 2] = ret;
   return 0;
  }
 }
 return ret;
}
function alignMemory(size, factor) {
 if (!factor) factor = STACK_ALIGN;
 var ret = size = Math.ceil(size / factor) * factor;
 return ret;
}
function getNativeTypeSize(type) {
 switch (type) {
 case "i1":
 case "i8":
  return 1;
 case "i16":
  return 2;
 case "i32":
  return 4;
 case "i64":
  return 8;
 case "float":
  return 4;
 case "double":
  return 8;
 default:
  {
   if (type[type.length - 1] === "*") {
    return 4;
   } else if (type[0] === "i") {
    var bits = parseInt(type.substr(1));
    assert(bits % 8 === 0);
    return bits / 8;
   } else {
    return 0;
   }
  }
 }
}
function warnOnce(text) {
 if (!warnOnce.shown) warnOnce.shown = {};
 if (!warnOnce.shown[text]) {
  warnOnce.shown[text] = 1;
  Module.printErr(text);
 }
}
var functionPointers = new Array(0);
var funcWrappers = {};
function dynCall(sig, ptr, args) {
 if (args && args.length) {
  return Module["dynCall_" + sig].apply(null, [ ptr ].concat(args));
 } else {
  return Module["dynCall_" + sig].call(null, ptr);
 }
}
var GLOBAL_BASE = 8;
var ABORT = 0;
var EXITSTATUS = 0;
function assert(condition, text) {
 if (!condition) {
  abort("Assertion failed: " + text);
 }
}
function getCFunc(ident) {
 var func = Module["_" + ident];
 assert(func, "Cannot call unknown function " + ident + ", make sure it is exported");
 return func;
}
var JSfuncs = {
 "stackSave": (function() {
  stackSave();
 }),
 "stackRestore": (function() {
  stackRestore();
 }),
 "arrayToC": (function(arr) {
  var ret = stackAlloc(arr.length);
  writeArrayToMemory(arr, ret);
  return ret;
 }),
 "stringToC": (function(str) {
  var ret = 0;
  if (str !== null && str !== undefined && str !== 0) {
   var len = (str.length << 2) + 1;
   ret = stackAlloc(len);
   stringToUTF8(str, ret, len);
  }
  return ret;
 })
};
var toC = {
 "string": JSfuncs["stringToC"],
 "array": JSfuncs["arrayToC"]
};
function ccall(ident, returnType, argTypes, args, opts) {
 var func = getCFunc(ident);
 var cArgs = [];
 var stack = 0;
 if (args) {
  for (var i = 0; i < args.length; i++) {
   var converter = toC[argTypes[i]];
   if (converter) {
    if (stack === 0) stack = stackSave();
    cArgs[i] = converter(args[i]);
   } else {
    cArgs[i] = args[i];
   }
  }
 }
 var ret = func.apply(null, cArgs);
 if (returnType === "string") ret = Pointer_stringify(ret);
 if (stack !== 0) {
  stackRestore(stack);
 }
 return ret;
}
function setValue(ptr, value, type, noSafe) {
 type = type || "i8";
 if (type.charAt(type.length - 1) === "*") type = "i32";
 switch (type) {
 case "i1":
  HEAP8[ptr >> 0] = value;
  break;
 case "i8":
  HEAP8[ptr >> 0] = value;
  break;
 case "i16":
  HEAP16[ptr >> 1] = value;
  break;
 case "i32":
  HEAP32[ptr >> 2] = value;
  break;
 case "i64":
  tempI64 = [ value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0) ], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
  break;
 case "float":
  HEAPF32[ptr >> 2] = value;
  break;
 case "double":
  HEAPF64[ptr >> 3] = value;
  break;
 default:
  abort("invalid type for setValue: " + type);
 }
}
var ALLOC_STATIC = 2;
var ALLOC_NONE = 4;
function allocate(slab, types, allocator, ptr) {
 var zeroinit, size;
 if (typeof slab === "number") {
  zeroinit = true;
  size = slab;
 } else {
  zeroinit = false;
  size = slab.length;
 }
 var singleType = typeof types === "string" ? types : null;
 var ret;
 if (allocator == ALLOC_NONE) {
  ret = ptr;
 } else {
  ret = [ typeof _malloc === "function" ? _malloc : staticAlloc, stackAlloc, staticAlloc, dynamicAlloc ][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
 }
 if (zeroinit) {
  var stop;
  ptr = ret;
  assert((ret & 3) == 0);
  stop = ret + (size & ~3);
  for (; ptr < stop; ptr += 4) {
   HEAP32[ptr >> 2] = 0;
  }
  stop = ret + size;
  while (ptr < stop) {
   HEAP8[ptr++ >> 0] = 0;
  }
  return ret;
 }
 if (singleType === "i8") {
  if (slab.subarray || slab.slice) {
   HEAPU8.set(slab, ret);
  } else {
   HEAPU8.set(new Uint8Array(slab), ret);
  }
  return ret;
 }
 var i = 0, type, typeSize, previousType;
 while (i < size) {
  var curr = slab[i];
  type = singleType || types[i];
  if (type === 0) {
   i++;
   continue;
  }
  if (type == "i64") type = "i32";
  setValue(ret + i, curr, type);
  if (previousType !== type) {
   typeSize = getNativeTypeSize(type);
   previousType = type;
  }
  i += typeSize;
 }
 return ret;
}
function Pointer_stringify(ptr, length) {
 if (length === 0 || !ptr) return "";
 var hasUtf = 0;
 var t;
 var i = 0;
 while (1) {
  t = HEAPU8[ptr + i >> 0];
  hasUtf |= t;
  if (t == 0 && !length) break;
  i++;
  if (length && i == length) break;
 }
 if (!length) length = i;
 var ret = "";
 if (hasUtf < 128) {
  var MAX_CHUNK = 1024;
  var curr;
  while (length > 0) {
   curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
   ret = ret ? ret + curr : curr;
   ptr += MAX_CHUNK;
   length -= MAX_CHUNK;
  }
  return ret;
 }
 return UTF8ToString(ptr);
}
var UTF8Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf8") : undefined;
function UTF8ArrayToString(u8Array, idx) {
 var endPtr = idx;
 while (u8Array[endPtr]) ++endPtr;
 if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
  return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
 } else {
  var u0, u1, u2, u3, u4, u5;
  var str = "";
  while (1) {
   u0 = u8Array[idx++];
   if (!u0) return str;
   if (!(u0 & 128)) {
    str += String.fromCharCode(u0);
    continue;
   }
   u1 = u8Array[idx++] & 63;
   if ((u0 & 224) == 192) {
    str += String.fromCharCode((u0 & 31) << 6 | u1);
    continue;
   }
   u2 = u8Array[idx++] & 63;
   if ((u0 & 240) == 224) {
    u0 = (u0 & 15) << 12 | u1 << 6 | u2;
   } else {
    u3 = u8Array[idx++] & 63;
    if ((u0 & 248) == 240) {
     u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
    } else {
     u4 = u8Array[idx++] & 63;
     if ((u0 & 252) == 248) {
      u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
     } else {
      u5 = u8Array[idx++] & 63;
      u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
     }
    }
   }
   if (u0 < 65536) {
    str += String.fromCharCode(u0);
   } else {
    var ch = u0 - 65536;
    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
   }
  }
 }
}
function UTF8ToString(ptr) {
 return UTF8ArrayToString(HEAPU8, ptr);
}
function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
 if (!(maxBytesToWrite > 0)) return 0;
 var startIdx = outIdx;
 var endIdx = outIdx + maxBytesToWrite - 1;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) {
   if (outIdx >= endIdx) break;
   outU8Array[outIdx++] = u;
  } else if (u <= 2047) {
   if (outIdx + 1 >= endIdx) break;
   outU8Array[outIdx++] = 192 | u >> 6;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 65535) {
   if (outIdx + 2 >= endIdx) break;
   outU8Array[outIdx++] = 224 | u >> 12;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 2097151) {
   if (outIdx + 3 >= endIdx) break;
   outU8Array[outIdx++] = 240 | u >> 18;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else if (u <= 67108863) {
   if (outIdx + 4 >= endIdx) break;
   outU8Array[outIdx++] = 248 | u >> 24;
   outU8Array[outIdx++] = 128 | u >> 18 & 63;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  } else {
   if (outIdx + 5 >= endIdx) break;
   outU8Array[outIdx++] = 252 | u >> 30;
   outU8Array[outIdx++] = 128 | u >> 24 & 63;
   outU8Array[outIdx++] = 128 | u >> 18 & 63;
   outU8Array[outIdx++] = 128 | u >> 12 & 63;
   outU8Array[outIdx++] = 128 | u >> 6 & 63;
   outU8Array[outIdx++] = 128 | u & 63;
  }
 }
 outU8Array[outIdx] = 0;
 return outIdx - startIdx;
}
function stringToUTF8(str, outPtr, maxBytesToWrite) {
 return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
function lengthBytesUTF8(str) {
 var len = 0;
 for (var i = 0; i < str.length; ++i) {
  var u = str.charCodeAt(i);
  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
  if (u <= 127) {
   ++len;
  } else if (u <= 2047) {
   len += 2;
  } else if (u <= 65535) {
   len += 3;
  } else if (u <= 2097151) {
   len += 4;
  } else if (u <= 67108863) {
   len += 5;
  } else {
   len += 6;
  }
 }
 return len;
}
var UTF16Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-16le") : undefined;
function allocateUTF8(str) {
 var size = lengthBytesUTF8(str) + 1;
 var ret = _malloc(size);
 if (ret) stringToUTF8Array(str, HEAP8, ret, size);
 return ret;
}
function demangle(func) {
 var __cxa_demangle_func = Module["___cxa_demangle"] || Module["__cxa_demangle"];
 assert(__cxa_demangle_func);
 try {
  var s = func.substr(1);
  var len = lengthBytesUTF8(s) + 1;
  var buf = _malloc(len);
  stringToUTF8(s, buf, len);
  var status = _malloc(4);
  var ret = __cxa_demangle_func(buf, 0, 0, status);
  if (HEAP32[status >> 2] === 0 && ret) {
   return Pointer_stringify(ret);
  }
 } catch (e) {} finally {
  if (buf) _free(buf);
  if (status) _free(status);
  if (ret) _free(ret);
 }
 return func;
}
function demangleAll(text) {
 var regex = /__Z[\w\d_]+/g;
 return text.replace(regex, (function(x) {
  var y = demangle(x);
  return x === y ? x : x + " [" + y + "]";
 }));
}
function jsStackTrace() {
 var err = new Error;
 if (!err.stack) {
  try {
   throw new Error(0);
  } catch (e) {
   err = e;
  }
  if (!err.stack) {
   return "(no stack trace available)";
  }
 }
 return err.stack.toString();
}
function stackTrace() {
 var js = jsStackTrace();
 if (Module["extraStackTrace"]) js += "\n" + Module["extraStackTrace"]();
 return demangleAll(js);
}
var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
function updateGlobalBufferViews() {
 Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
 Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
 Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
 Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
 Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
 Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
 Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
 Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
}
var STATIC_BASE, STATICTOP, staticSealed;
var STACK_BASE, STACKTOP, STACK_MAX;
var DYNAMIC_BASE, DYNAMICTOP_PTR;
STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
staticSealed = false;
function abortOnCannotGrowMemory() {
 abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + TOTAL_MEMORY + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
}
function enlargeMemory() {
 abortOnCannotGrowMemory();
}
var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;
var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 16777216;
if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was " + TOTAL_MEMORY + "! (TOTAL_STACK=" + TOTAL_STACK + ")");
if (Module["buffer"]) {
 buffer = Module["buffer"];
} else {
 {
  buffer = new ArrayBuffer(TOTAL_MEMORY);
 }
 Module["buffer"] = buffer;
}
updateGlobalBufferViews();
function getTotalMemory() {
 return TOTAL_MEMORY;
}
HEAP32[0] = 1668509029;
HEAP16[1] = 25459;
if (HEAPU8[2] !== 115 || HEAPU8[3] !== 99) throw "Runtime error: expected the system to be little-endian!";
function callRuntimeCallbacks(callbacks) {
 while (callbacks.length > 0) {
  var callback = callbacks.shift();
  if (typeof callback == "function") {
   callback();
   continue;
  }
  var func = callback.func;
  if (typeof func === "number") {
   if (callback.arg === undefined) {
    Module["dynCall_v"](func);
   } else {
    Module["dynCall_vi"](func, callback.arg);
   }
  } else {
   func(callback.arg === undefined ? null : callback.arg);
  }
 }
}
var __ATPRERUN__ = [];
var __ATINIT__ = [];
var __ATMAIN__ = [];
var __ATEXIT__ = [];
var __ATPOSTRUN__ = [];
var runtimeInitialized = false;
var runtimeExited = false;
function preRun() {
 if (Module["preRun"]) {
  if (typeof Module["preRun"] == "function") Module["preRun"] = [ Module["preRun"] ];
  while (Module["preRun"].length) {
   addOnPreRun(Module["preRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
 if (runtimeInitialized) return;
 runtimeInitialized = true;
 callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
 callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
 callRuntimeCallbacks(__ATEXIT__);
 runtimeExited = true;
}
function postRun() {
 if (Module["postRun"]) {
  if (typeof Module["postRun"] == "function") Module["postRun"] = [ Module["postRun"] ];
  while (Module["postRun"].length) {
   addOnPostRun(Module["postRun"].shift());
  }
 }
 callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
 __ATPRERUN__.unshift(cb);
}
function addOnPostRun(cb) {
 __ATPOSTRUN__.unshift(cb);
}
function writeArrayToMemory(array, buffer) {
 HEAP8.set(array, buffer);
}
function writeAsciiToMemory(str, buffer, dontAddNull) {
 for (var i = 0; i < str.length; ++i) {
  HEAP8[buffer++ >> 0] = str.charCodeAt(i);
 }
 if (!dontAddNull) HEAP8[buffer >> 0] = 0;
}
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_max = Math.max;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null;
function getUniqueRunDependency(id) {
 return id;
}
function addRunDependency(id) {
 runDependencies++;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
}
function removeRunDependency(id) {
 runDependencies--;
 if (Module["monitorRunDependencies"]) {
  Module["monitorRunDependencies"](runDependencies);
 }
 if (runDependencies == 0) {
  if (runDependencyWatcher !== null) {
   clearInterval(runDependencyWatcher);
   runDependencyWatcher = null;
  }
  if (dependenciesFulfilled) {
   var callback = dependenciesFulfilled;
   dependenciesFulfilled = null;
   callback();
  }
 }
}
Module["preloadedImages"] = {};
Module["preloadedAudios"] = {};
var memoryInitializer = null;
var dataURIPrefix = "data:application/octet-stream;base64,";
function isDataURI(filename) {
 return String.prototype.startsWith ? filename.startsWith(dataURIPrefix) : filename.indexOf(dataURIPrefix) === 0;
}
STATIC_BASE = GLOBAL_BASE;
STATICTOP = STATIC_BASE + 27120;
__ATINIT__.push({
 func: (function() {
  __GLOBAL__I_000101();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_dawg_node_api_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_bind_cpp();
 })
}, {
 func: (function() {
  __GLOBAL__sub_I_iostream_cpp();
 })
});
memoryInitializer = "data:application/octet-stream;base64,";
var tempDoublePtr = STATICTOP;
STATICTOP += 16;
function __ZSt18uncaught_exceptionv() {
 return !!__ZSt18uncaught_exceptionv.uncaught_exception;
}
var EXCEPTIONS = {
 last: 0,
 caught: [],
 infos: {},
 deAdjust: (function(adjusted) {
  if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
  for (var ptr in EXCEPTIONS.infos) {
   var info = EXCEPTIONS.infos[ptr];
   if (info.adjusted === adjusted) {
    return ptr;
   }
  }
  return adjusted;
 }),
 addRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount++;
 }),
 decRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  assert(info.refcount > 0);
  info.refcount--;
  if (info.refcount === 0 && !info.rethrown) {
   if (info.destructor) {
    Module["dynCall_vi"](info.destructor, ptr);
   }
   delete EXCEPTIONS.infos[ptr];
   ___cxa_free_exception(ptr);
  }
 }),
 clearRef: (function(ptr) {
  if (!ptr) return;
  var info = EXCEPTIONS.infos[ptr];
  info.refcount = 0;
 })
};
function ___cxa_begin_catch(ptr) {
 var info = EXCEPTIONS.infos[ptr];
 if (info && !info.caught) {
  info.caught = true;
  __ZSt18uncaught_exceptionv.uncaught_exception--;
 }
 if (info) info.rethrown = false;
 EXCEPTIONS.caught.push(ptr);
 EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
 return ptr;
}
function ___resumeException(ptr) {
 if (!EXCEPTIONS.last) {
  EXCEPTIONS.last = ptr;
 }
 throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
}
function ___cxa_find_matching_catch() {
 var thrown = EXCEPTIONS.last;
 if (!thrown) {
  return (setTempRet0(0), 0) | 0;
 }
 var info = EXCEPTIONS.infos[thrown];
 var throwntype = info.type;
 if (!throwntype) {
  return (setTempRet0(0), thrown) | 0;
 }
 var typeArray = Array.prototype.slice.call(arguments);
 var pointer = Module["___cxa_is_pointer_type"](throwntype);
 if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
 HEAP32[___cxa_find_matching_catch.buffer >> 2] = thrown;
 thrown = ___cxa_find_matching_catch.buffer;
 for (var i = 0; i < typeArray.length; i++) {
  if (typeArray[i] && Module["___cxa_can_catch"](typeArray[i], throwntype, thrown)) {
   thrown = HEAP32[thrown >> 2];
   info.adjusted = thrown;
   return (setTempRet0(typeArray[i]), thrown) | 0;
  }
 }
 thrown = HEAP32[thrown >> 2];
 return (setTempRet0(throwntype), thrown) | 0;
}
function ___gxx_personality_v0() {}
function ___lock() {}
var ERRNO_CODES = {
 EPERM: 1,
 ENOENT: 2,
 ESRCH: 3,
 EINTR: 4,
 EIO: 5,
 ENXIO: 6,
 E2BIG: 7,
 ENOEXEC: 8,
 EBADF: 9,
 ECHILD: 10,
 EAGAIN: 11,
 EWOULDBLOCK: 11,
 ENOMEM: 12,
 EACCES: 13,
 EFAULT: 14,
 ENOTBLK: 15,
 EBUSY: 16,
 EEXIST: 17,
 EXDEV: 18,
 ENODEV: 19,
 ENOTDIR: 20,
 EISDIR: 21,
 EINVAL: 22,
 ENFILE: 23,
 EMFILE: 24,
 ENOTTY: 25,
 ETXTBSY: 26,
 EFBIG: 27,
 ENOSPC: 28,
 ESPIPE: 29,
 EROFS: 30,
 EMLINK: 31,
 EPIPE: 32,
 EDOM: 33,
 ERANGE: 34,
 ENOMSG: 42,
 EIDRM: 43,
 ECHRNG: 44,
 EL2NSYNC: 45,
 EL3HLT: 46,
 EL3RST: 47,
 ELNRNG: 48,
 EUNATCH: 49,
 ENOCSI: 50,
 EL2HLT: 51,
 EDEADLK: 35,
 ENOLCK: 37,
 EBADE: 52,
 EBADR: 53,
 EXFULL: 54,
 ENOANO: 55,
 EBADRQC: 56,
 EBADSLT: 57,
 EDEADLOCK: 35,
 EBFONT: 59,
 ENOSTR: 60,
 ENODATA: 61,
 ETIME: 62,
 ENOSR: 63,
 ENONET: 64,
 ENOPKG: 65,
 EREMOTE: 66,
 ENOLINK: 67,
 EADV: 68,
 ESRMNT: 69,
 ECOMM: 70,
 EPROTO: 71,
 EMULTIHOP: 72,
 EDOTDOT: 73,
 EBADMSG: 74,
 ENOTUNIQ: 76,
 EBADFD: 77,
 EREMCHG: 78,
 ELIBACC: 79,
 ELIBBAD: 80,
 ELIBSCN: 81,
 ELIBMAX: 82,
 ELIBEXEC: 83,
 ENOSYS: 38,
 ENOTEMPTY: 39,
 ENAMETOOLONG: 36,
 ELOOP: 40,
 EOPNOTSUPP: 95,
 EPFNOSUPPORT: 96,
 ECONNRESET: 104,
 ENOBUFS: 105,
 EAFNOSUPPORT: 97,
 EPROTOTYPE: 91,
 ENOTSOCK: 88,
 ENOPROTOOPT: 92,
 ESHUTDOWN: 108,
 ECONNREFUSED: 111,
 EADDRINUSE: 98,
 ECONNABORTED: 103,
 ENETUNREACH: 101,
 ENETDOWN: 100,
 ETIMEDOUT: 110,
 EHOSTDOWN: 112,
 EHOSTUNREACH: 113,
 EINPROGRESS: 115,
 EALREADY: 114,
 EDESTADDRREQ: 89,
 EMSGSIZE: 90,
 EPROTONOSUPPORT: 93,
 ESOCKTNOSUPPORT: 94,
 EADDRNOTAVAIL: 99,
 ENETRESET: 102,
 EISCONN: 106,
 ENOTCONN: 107,
 ETOOMANYREFS: 109,
 EUSERS: 87,
 EDQUOT: 122,
 ESTALE: 116,
 ENOTSUP: 95,
 ENOMEDIUM: 123,
 EILSEQ: 84,
 EOVERFLOW: 75,
 ECANCELED: 125,
 ENOTRECOVERABLE: 131,
 EOWNERDEAD: 130,
 ESTRPIPE: 86
};
function ___setErrNo(value) {
 if (Module["___errno_location"]) HEAP32[Module["___errno_location"]() >> 2] = value;
 return value;
}
function ___map_file(pathname, size) {
 ___setErrNo(ERRNO_CODES.EPERM);
 return -1;
}
var ERRNO_MESSAGES = {
 0: "Success",
 1: "Not super-user",
 2: "No such file or directory",
 3: "No such process",
 4: "Interrupted system call",
 5: "I/O error",
 6: "No such device or address",
 7: "Arg list too long",
 8: "Exec format error",
 9: "Bad file number",
 10: "No children",
 11: "No more processes",
 12: "Not enough core",
 13: "Permission denied",
 14: "Bad address",
 15: "Block device required",
 16: "Mount device busy",
 17: "File exists",
 18: "Cross-device link",
 19: "No such device",
 20: "Not a directory",
 21: "Is a directory",
 22: "Invalid argument",
 23: "Too many open files in system",
 24: "Too many open files",
 25: "Not a typewriter",
 26: "Text file busy",
 27: "File too large",
 28: "No space left on device",
 29: "Illegal seek",
 30: "Read only file system",
 31: "Too many links",
 32: "Broken pipe",
 33: "Math arg out of domain of func",
 34: "Math result not representable",
 35: "File locking deadlock error",
 36: "File or path name too long",
 37: "No record locks available",
 38: "Function not implemented",
 39: "Directory not empty",
 40: "Too many symbolic links",
 42: "No message of desired type",
 43: "Identifier removed",
 44: "Channel number out of range",
 45: "Level 2 not synchronized",
 46: "Level 3 halted",
 47: "Level 3 reset",
 48: "Link number out of range",
 49: "Protocol driver not attached",
 50: "No CSI structure available",
 51: "Level 2 halted",
 52: "Invalid exchange",
 53: "Invalid request descriptor",
 54: "Exchange full",
 55: "No anode",
 56: "Invalid request code",
 57: "Invalid slot",
 59: "Bad font file fmt",
 60: "Device not a stream",
 61: "No data (for no delay io)",
 62: "Timer expired",
 63: "Out of streams resources",
 64: "Machine is not on the network",
 65: "Package not installed",
 66: "The object is remote",
 67: "The link has been severed",
 68: "Advertise error",
 69: "Srmount error",
 70: "Communication error on send",
 71: "Protocol error",
 72: "Multihop attempted",
 73: "Cross mount point (not really error)",
 74: "Trying to read unreadable message",
 75: "Value too large for defined data type",
 76: "Given log. name not unique",
 77: "f.d. invalid for this operation",
 78: "Remote address changed",
 79: "Can   access a needed shared lib",
 80: "Accessing a corrupted shared lib",
 81: ".lib section in a.out corrupted",
 82: "Attempting to link in too many libs",
 83: "Attempting to exec a shared library",
 84: "Illegal byte sequence",
 86: "Streams pipe error",
 87: "Too many users",
 88: "Socket operation on non-socket",
 89: "Destination address required",
 90: "Message too long",
 91: "Protocol wrong type for socket",
 92: "Protocol not available",
 93: "Unknown protocol",
 94: "Socket type not supported",
 95: "Not supported",
 96: "Protocol family not supported",
 97: "Address family not supported by protocol family",
 98: "Address already in use",
 99: "Address not available",
 100: "Network interface is not configured",
 101: "Network is unreachable",
 102: "Connection reset by network",
 103: "Connection aborted",
 104: "Connection reset by peer",
 105: "No buffer space available",
 106: "Socket is already connected",
 107: "Socket is not connected",
 108: "Can't send after socket shutdown",
 109: "Too many references",
 110: "Connection timed out",
 111: "Connection refused",
 112: "Host is down",
 113: "Host is unreachable",
 114: "Socket already connected",
 115: "Connection already in progress",
 116: "Stale file handle",
 122: "Quota exceeded",
 123: "No medium (in tape drive)",
 125: "Operation canceled",
 130: "Previous owner died",
 131: "State not recoverable"
};
var PATH = {
 splitPath: (function(filename) {
  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
  return splitPathRe.exec(filename).slice(1);
 }),
 normalizeArray: (function(parts, allowAboveRoot) {
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
   var last = parts[i];
   if (last === ".") {
    parts.splice(i, 1);
   } else if (last === "..") {
    parts.splice(i, 1);
    up++;
   } else if (up) {
    parts.splice(i, 1);
    up--;
   }
  }
  if (allowAboveRoot) {
   for (; up; up--) {
    parts.unshift("..");
   }
  }
  return parts;
 }),
 normalize: (function(path) {
  var isAbsolute = path.charAt(0) === "/", trailingSlash = path.substr(-1) === "/";
  path = PATH.normalizeArray(path.split("/").filter((function(p) {
   return !!p;
  })), !isAbsolute).join("/");
  if (!path && !isAbsolute) {
   path = ".";
  }
  if (path && trailingSlash) {
   path += "/";
  }
  return (isAbsolute ? "/" : "") + path;
 }),
 dirname: (function(path) {
  var result = PATH.splitPath(path), root = result[0], dir = result[1];
  if (!root && !dir) {
   return ".";
  }
  if (dir) {
   dir = dir.substr(0, dir.length - 1);
  }
  return root + dir;
 }),
 basename: (function(path) {
  if (path === "/") return "/";
  var lastSlash = path.lastIndexOf("/");
  if (lastSlash === -1) return path;
  return path.substr(lastSlash + 1);
 }),
 extname: (function(path) {
  return PATH.splitPath(path)[3];
 }),
 join: (function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return PATH.normalize(paths.join("/"));
 }),
 join2: (function(l, r) {
  return PATH.normalize(l + "/" + r);
 }),
 resolve: (function() {
  var resolvedPath = "", resolvedAbsolute = false;
  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
   var path = i >= 0 ? arguments[i] : FS.cwd();
   if (typeof path !== "string") {
    throw new TypeError("Arguments to path.resolve must be strings");
   } else if (!path) {
    return "";
   }
   resolvedPath = path + "/" + resolvedPath;
   resolvedAbsolute = path.charAt(0) === "/";
  }
  resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter((function(p) {
   return !!p;
  })), !resolvedAbsolute).join("/");
  return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
 }),
 relative: (function(from, to) {
  from = PATH.resolve(from).substr(1);
  to = PATH.resolve(to).substr(1);
  function trim(arr) {
   var start = 0;
   for (; start < arr.length; start++) {
    if (arr[start] !== "") break;
   }
   var end = arr.length - 1;
   for (; end >= 0; end--) {
    if (arr[end] !== "") break;
   }
   if (start > end) return [];
   return arr.slice(start, end - start + 1);
  }
  var fromParts = trim(from.split("/"));
  var toParts = trim(to.split("/"));
  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
   if (fromParts[i] !== toParts[i]) {
    samePartsLength = i;
    break;
   }
  }
  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
   outputParts.push("..");
  }
  outputParts = outputParts.concat(toParts.slice(samePartsLength));
  return outputParts.join("/");
 })
};
var TTY = {
 ttys: [],
 init: (function() {}),
 shutdown: (function() {}),
 register: (function(dev, ops) {
  TTY.ttys[dev] = {
   input: [],
   output: [],
   ops: ops
  };
  FS.registerDevice(dev, TTY.stream_ops);
 }),
 stream_ops: {
  open: (function(stream) {
   var tty = TTY.ttys[stream.node.rdev];
   if (!tty) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   stream.tty = tty;
   stream.seekable = false;
  }),
  close: (function(stream) {
   stream.tty.ops.flush(stream.tty);
  }),
  flush: (function(stream) {
   stream.tty.ops.flush(stream.tty);
  }),
  read: (function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.get_char) {
    throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
   }
   var bytesRead = 0;
   for (var i = 0; i < length; i++) {
    var result;
    try {
     result = stream.tty.ops.get_char(stream.tty);
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
    if (result === undefined && bytesRead === 0) {
     throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
    }
    if (result === null || result === undefined) break;
    bytesRead++;
    buffer[offset + i] = result;
   }
   if (bytesRead) {
    stream.node.timestamp = Date.now();
   }
   return bytesRead;
  }),
  write: (function(stream, buffer, offset, length, pos) {
   if (!stream.tty || !stream.tty.ops.put_char) {
    throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
   }
   for (var i = 0; i < length; i++) {
    try {
     stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
    } catch (e) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
   }
   if (length) {
    stream.node.timestamp = Date.now();
   }
   return i;
  })
 },
 default_tty_ops: {
  get_char: (function(tty) {
   if (!tty.input.length) {
    var result = null;
    if (ENVIRONMENT_IS_NODE) {
     var BUFSIZE = 256;
     var buf = new Buffer(BUFSIZE);
     var bytesRead = 0;
     var isPosixPlatform = process.platform != "win32";
     var fd = process.stdin.fd;
     if (isPosixPlatform) {
      var usingDevice = false;
      try {
       fd = fs.openSync("/dev/stdin", "r");
       usingDevice = true;
      } catch (e) {}
     }
     try {
      bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
     } catch (e) {
      if (e.toString().indexOf("EOF") != -1) bytesRead = 0; else throw e;
     }
     if (usingDevice) {
      fs.closeSync(fd);
     }
     if (bytesRead > 0) {
      result = buf.slice(0, bytesRead).toString("utf-8");
     } else {
      result = null;
     }
    } else if (typeof window != "undefined" && typeof window.prompt == "function") {
     result = window.prompt("Input: ");
     if (result !== null) {
      result += "\n";
     }
    } else if (typeof readline == "function") {
     result = readline();
     if (result !== null) {
      result += "\n";
     }
    }
    if (!result) {
     return null;
    }
    tty.input = intArrayFromString(result, true);
   }
   return tty.input.shift();
  }),
  put_char: (function(tty, val) {
   if (val === null || val === 10) {
    Module["print"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  }),
  flush: (function(tty) {
   if (tty.output && tty.output.length > 0) {
    Module["print"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  })
 },
 default_tty1_ops: {
  put_char: (function(tty, val) {
   if (val === null || val === 10) {
    Module["printErr"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   } else {
    if (val != 0) tty.output.push(val);
   }
  }),
  flush: (function(tty) {
   if (tty.output && tty.output.length > 0) {
    Module["printErr"](UTF8ArrayToString(tty.output, 0));
    tty.output = [];
   }
  })
 }
};
var MEMFS = {
 ops_table: null,
 mount: (function(mount) {
  return MEMFS.createNode(null, "/", 16384 | 511, 0);
 }),
 createNode: (function(parent, name, mode, dev) {
  if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (!MEMFS.ops_table) {
   MEMFS.ops_table = {
    dir: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      lookup: MEMFS.node_ops.lookup,
      mknod: MEMFS.node_ops.mknod,
      rename: MEMFS.node_ops.rename,
      unlink: MEMFS.node_ops.unlink,
      rmdir: MEMFS.node_ops.rmdir,
      readdir: MEMFS.node_ops.readdir,
      symlink: MEMFS.node_ops.symlink
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek
     }
    },
    file: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: {
      llseek: MEMFS.stream_ops.llseek,
      read: MEMFS.stream_ops.read,
      write: MEMFS.stream_ops.write,
      allocate: MEMFS.stream_ops.allocate,
      mmap: MEMFS.stream_ops.mmap,
      msync: MEMFS.stream_ops.msync
     }
    },
    link: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr,
      readlink: MEMFS.node_ops.readlink
     },
     stream: {}
    },
    chrdev: {
     node: {
      getattr: MEMFS.node_ops.getattr,
      setattr: MEMFS.node_ops.setattr
     },
     stream: FS.chrdev_stream_ops
    }
   };
  }
  var node = FS.createNode(parent, name, mode, dev);
  if (FS.isDir(node.mode)) {
   node.node_ops = MEMFS.ops_table.dir.node;
   node.stream_ops = MEMFS.ops_table.dir.stream;
   node.contents = {};
  } else if (FS.isFile(node.mode)) {
   node.node_ops = MEMFS.ops_table.file.node;
   node.stream_ops = MEMFS.ops_table.file.stream;
   node.usedBytes = 0;
   node.contents = null;
  } else if (FS.isLink(node.mode)) {
   node.node_ops = MEMFS.ops_table.link.node;
   node.stream_ops = MEMFS.ops_table.link.stream;
  } else if (FS.isChrdev(node.mode)) {
   node.node_ops = MEMFS.ops_table.chrdev.node;
   node.stream_ops = MEMFS.ops_table.chrdev.stream;
  }
  node.timestamp = Date.now();
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 }),
 getFileDataAsRegularArray: (function(node) {
  if (node.contents && node.contents.subarray) {
   var arr = [];
   for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
   return arr;
  }
  return node.contents;
 }),
 getFileDataAsTypedArray: (function(node) {
  if (!node.contents) return new Uint8Array;
  if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
  return new Uint8Array(node.contents);
 }),
 expandFileStorage: (function(node, newCapacity) {
  if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
   node.contents = MEMFS.getFileDataAsRegularArray(node);
   node.usedBytes = node.contents.length;
  }
  if (!node.contents || node.contents.subarray) {
   var prevCapacity = node.contents ? node.contents.length : 0;
   if (prevCapacity >= newCapacity) return;
   var CAPACITY_DOUBLING_MAX = 1024 * 1024;
   newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) | 0);
   if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
   var oldContents = node.contents;
   node.contents = new Uint8Array(newCapacity);
   if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
   return;
  }
  if (!node.contents && newCapacity > 0) node.contents = [];
  while (node.contents.length < newCapacity) node.contents.push(0);
 }),
 resizeFileStorage: (function(node, newSize) {
  if (node.usedBytes == newSize) return;
  if (newSize == 0) {
   node.contents = null;
   node.usedBytes = 0;
   return;
  }
  if (!node.contents || node.contents.subarray) {
   var oldContents = node.contents;
   node.contents = new Uint8Array(new ArrayBuffer(newSize));
   if (oldContents) {
    node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
   }
   node.usedBytes = newSize;
   return;
  }
  if (!node.contents) node.contents = [];
  if (node.contents.length > newSize) node.contents.length = newSize; else while (node.contents.length < newSize) node.contents.push(0);
  node.usedBytes = newSize;
 }),
 node_ops: {
  getattr: (function(node) {
   var attr = {};
   attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
   attr.ino = node.id;
   attr.mode = node.mode;
   attr.nlink = 1;
   attr.uid = 0;
   attr.gid = 0;
   attr.rdev = node.rdev;
   if (FS.isDir(node.mode)) {
    attr.size = 4096;
   } else if (FS.isFile(node.mode)) {
    attr.size = node.usedBytes;
   } else if (FS.isLink(node.mode)) {
    attr.size = node.link.length;
   } else {
    attr.size = 0;
   }
   attr.atime = new Date(node.timestamp);
   attr.mtime = new Date(node.timestamp);
   attr.ctime = new Date(node.timestamp);
   attr.blksize = 4096;
   attr.blocks = Math.ceil(attr.size / attr.blksize);
   return attr;
  }),
  setattr: (function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
   if (attr.size !== undefined) {
    MEMFS.resizeFileStorage(node, attr.size);
   }
  }),
  lookup: (function(parent, name) {
   throw FS.genericErrors[ERRNO_CODES.ENOENT];
  }),
  mknod: (function(parent, name, mode, dev) {
   return MEMFS.createNode(parent, name, mode, dev);
  }),
  rename: (function(old_node, new_dir, new_name) {
   if (FS.isDir(old_node.mode)) {
    var new_node;
    try {
     new_node = FS.lookupNode(new_dir, new_name);
    } catch (e) {}
    if (new_node) {
     for (var i in new_node.contents) {
      throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
     }
    }
   }
   delete old_node.parent.contents[old_node.name];
   old_node.name = new_name;
   new_dir.contents[new_name] = old_node;
   old_node.parent = new_dir;
  }),
  unlink: (function(parent, name) {
   delete parent.contents[name];
  }),
  rmdir: (function(parent, name) {
   var node = FS.lookupNode(parent, name);
   for (var i in node.contents) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
   }
   delete parent.contents[name];
  }),
  readdir: (function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  }),
  symlink: (function(parent, newname, oldpath) {
   var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
   node.link = oldpath;
   return node;
  }),
  readlink: (function(node) {
   if (!FS.isLink(node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return node.link;
  })
 },
 stream_ops: {
  read: (function(stream, buffer, offset, length, position) {
   var contents = stream.node.contents;
   if (position >= stream.node.usedBytes) return 0;
   var size = Math.min(stream.node.usedBytes - position, length);
   assert(size >= 0);
   if (size > 8 && contents.subarray) {
    buffer.set(contents.subarray(position, position + size), offset);
   } else {
    for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
   }
   return size;
  }),
  write: (function(stream, buffer, offset, length, position, canOwn) {
   if (!length) return 0;
   var node = stream.node;
   node.timestamp = Date.now();
   if (buffer.subarray && (!node.contents || node.contents.subarray)) {
    if (canOwn) {
     node.contents = buffer.subarray(offset, offset + length);
     node.usedBytes = length;
     return length;
    } else if (node.usedBytes === 0 && position === 0) {
     node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
     node.usedBytes = length;
     return length;
    } else if (position + length <= node.usedBytes) {
     node.contents.set(buffer.subarray(offset, offset + length), position);
     return length;
    }
   }
   MEMFS.expandFileStorage(node, position + length);
   if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); else {
    for (var i = 0; i < length; i++) {
     node.contents[position + i] = buffer[offset + i];
    }
   }
   node.usedBytes = Math.max(node.usedBytes, position + length);
   return length;
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.usedBytes;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  }),
  allocate: (function(stream, offset, length) {
   MEMFS.expandFileStorage(stream.node, offset + length);
   stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
  }),
  mmap: (function(stream, buffer, offset, length, position, prot, flags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   var ptr;
   var allocated;
   var contents = stream.node.contents;
   if (!(flags & 2) && (contents.buffer === buffer || contents.buffer === buffer.buffer)) {
    allocated = false;
    ptr = contents.byteOffset;
   } else {
    if (position > 0 || position + length < stream.node.usedBytes) {
     if (contents.subarray) {
      contents = contents.subarray(position, position + length);
     } else {
      contents = Array.prototype.slice.call(contents, position, position + length);
     }
    }
    allocated = true;
    ptr = _malloc(length);
    if (!ptr) {
     throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
    }
    buffer.set(contents, ptr);
   }
   return {
    ptr: ptr,
    allocated: allocated
   };
  }),
  msync: (function(stream, buffer, offset, length, mmapFlags) {
   if (!FS.isFile(stream.node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
   }
   if (mmapFlags & 2) {
    return 0;
   }
   var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
   return 0;
  })
 }
};
var IDBFS = {
 dbs: {},
 indexedDB: (function() {
  if (typeof indexedDB !== "undefined") return indexedDB;
  var ret = null;
  if (typeof window === "object") ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
  assert(ret, "IDBFS used, but indexedDB not supported");
  return ret;
 }),
 DB_VERSION: 21,
 DB_STORE_NAME: "FILE_DATA",
 mount: (function(mount) {
  return MEMFS.mount.apply(null, arguments);
 }),
 syncfs: (function(mount, populate, callback) {
  IDBFS.getLocalSet(mount, (function(err, local) {
   if (err) return callback(err);
   IDBFS.getRemoteSet(mount, (function(err, remote) {
    if (err) return callback(err);
    var src = populate ? remote : local;
    var dst = populate ? local : remote;
    IDBFS.reconcile(src, dst, callback);
   }));
  }));
 }),
 getDB: (function(name, callback) {
  var db = IDBFS.dbs[name];
  if (db) {
   return callback(null, db);
  }
  var req;
  try {
   req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
  } catch (e) {
   return callback(e);
  }
  if (!req) {
   return callback("Unable to connect to IndexedDB");
  }
  req.onupgradeneeded = (function(e) {
   var db = e.target.result;
   var transaction = e.target.transaction;
   var fileStore;
   if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
    fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
   } else {
    fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
   }
   if (!fileStore.indexNames.contains("timestamp")) {
    fileStore.createIndex("timestamp", "timestamp", {
     unique: false
    });
   }
  });
  req.onsuccess = (function() {
   db = req.result;
   IDBFS.dbs[name] = db;
   callback(null, db);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 getLocalSet: (function(mount, callback) {
  var entries = {};
  function isRealDir(p) {
   return p !== "." && p !== "..";
  }
  function toAbsolute(root) {
   return (function(p) {
    return PATH.join2(root, p);
   });
  }
  var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  while (check.length) {
   var path = check.pop();
   var stat;
   try {
    stat = FS.stat(path);
   } catch (e) {
    return callback(e);
   }
   if (FS.isDir(stat.mode)) {
    check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
   }
   entries[path] = {
    timestamp: stat.mtime
   };
  }
  return callback(null, {
   type: "local",
   entries: entries
  });
 }),
 getRemoteSet: (function(mount, callback) {
  var entries = {};
  IDBFS.getDB(mount.mountpoint, (function(err, db) {
   if (err) return callback(err);
   try {
    var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readonly");
    transaction.onerror = (function(e) {
     callback(this.error);
     e.preventDefault();
    });
    var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
    var index = store.index("timestamp");
    index.openKeyCursor().onsuccess = (function(event) {
     var cursor = event.target.result;
     if (!cursor) {
      return callback(null, {
       type: "remote",
       db: db,
       entries: entries
      });
     }
     entries[cursor.primaryKey] = {
      timestamp: cursor.key
     };
     cursor.continue();
    });
   } catch (e) {
    return callback(e);
   }
  }));
 }),
 loadLocalEntry: (function(path, callback) {
  var stat, node;
  try {
   var lookup = FS.lookupPath(path);
   node = lookup.node;
   stat = FS.stat(path);
  } catch (e) {
   return callback(e);
  }
  if (FS.isDir(stat.mode)) {
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode
   });
  } else if (FS.isFile(stat.mode)) {
   node.contents = MEMFS.getFileDataAsTypedArray(node);
   return callback(null, {
    timestamp: stat.mtime,
    mode: stat.mode,
    contents: node.contents
   });
  } else {
   return callback(new Error("node type not supported"));
  }
 }),
 storeLocalEntry: (function(path, entry, callback) {
  try {
   if (FS.isDir(entry.mode)) {
    FS.mkdir(path, entry.mode);
   } else if (FS.isFile(entry.mode)) {
    FS.writeFile(path, entry.contents, {
     canOwn: true
    });
   } else {
    return callback(new Error("node type not supported"));
   }
   FS.chmod(path, entry.mode);
   FS.utime(path, entry.timestamp, entry.timestamp);
  } catch (e) {
   return callback(e);
  }
  callback(null);
 }),
 removeLocalEntry: (function(path, callback) {
  try {
   var lookup = FS.lookupPath(path);
   var stat = FS.stat(path);
   if (FS.isDir(stat.mode)) {
    FS.rmdir(path);
   } else if (FS.isFile(stat.mode)) {
    FS.unlink(path);
   }
  } catch (e) {
   return callback(e);
  }
  callback(null);
 }),
 loadRemoteEntry: (function(store, path, callback) {
  var req = store.get(path);
  req.onsuccess = (function(event) {
   callback(null, event.target.result);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 storeRemoteEntry: (function(store, path, entry, callback) {
  var req = store.put(entry, path);
  req.onsuccess = (function() {
   callback(null);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 removeRemoteEntry: (function(store, path, callback) {
  var req = store.delete(path);
  req.onsuccess = (function() {
   callback(null);
  });
  req.onerror = (function(e) {
   callback(this.error);
   e.preventDefault();
  });
 }),
 reconcile: (function(src, dst, callback) {
  var total = 0;
  var create = [];
  Object.keys(src.entries).forEach((function(key) {
   var e = src.entries[key];
   var e2 = dst.entries[key];
   if (!e2 || e.timestamp > e2.timestamp) {
    create.push(key);
    total++;
   }
  }));
  var remove = [];
  Object.keys(dst.entries).forEach((function(key) {
   var e = dst.entries[key];
   var e2 = src.entries[key];
   if (!e2) {
    remove.push(key);
    total++;
   }
  }));
  if (!total) {
   return callback(null);
  }
  var completed = 0;
  var db = src.type === "remote" ? src.db : dst.db;
  var transaction = db.transaction([ IDBFS.DB_STORE_NAME ], "readwrite");
  var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return callback(err);
    }
    return;
   }
   if (++completed >= total) {
    return callback(null);
   }
  }
  transaction.onerror = (function(e) {
   done(this.error);
   e.preventDefault();
  });
  create.sort().forEach((function(path) {
   if (dst.type === "local") {
    IDBFS.loadRemoteEntry(store, path, (function(err, entry) {
     if (err) return done(err);
     IDBFS.storeLocalEntry(path, entry, done);
    }));
   } else {
    IDBFS.loadLocalEntry(path, (function(err, entry) {
     if (err) return done(err);
     IDBFS.storeRemoteEntry(store, path, entry, done);
    }));
   }
  }));
  remove.sort().reverse().forEach((function(path) {
   if (dst.type === "local") {
    IDBFS.removeLocalEntry(path, done);
   } else {
    IDBFS.removeRemoteEntry(store, path, done);
   }
  }));
 })
};
var NODEFS = {
 isWindows: false,
 staticInit: (function() {
  NODEFS.isWindows = !!process.platform.match(/^win/);
  var flags = process["binding"]("constants");
  if (flags["fs"]) {
   flags = flags["fs"];
  }
  NODEFS.flagsForNodeMap = {
   "1024": flags["O_APPEND"],
   "64": flags["O_CREAT"],
   "128": flags["O_EXCL"],
   "0": flags["O_RDONLY"],
   "2": flags["O_RDWR"],
   "4096": flags["O_SYNC"],
   "512": flags["O_TRUNC"],
   "1": flags["O_WRONLY"]
  };
 }),
 bufferFrom: (function(arrayBuffer) {
  return Buffer.alloc ? Buffer.from(arrayBuffer) : new Buffer(arrayBuffer);
 }),
 mount: (function(mount) {
  assert(ENVIRONMENT_IS_NODE);
  return NODEFS.createNode(null, "/", NODEFS.getMode(mount.opts.root), 0);
 }),
 createNode: (function(parent, name, mode, dev) {
  if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node = FS.createNode(parent, name, mode);
  node.node_ops = NODEFS.node_ops;
  node.stream_ops = NODEFS.stream_ops;
  return node;
 }),
 getMode: (function(path) {
  var stat;
  try {
   stat = fs.lstatSync(path);
   if (NODEFS.isWindows) {
    stat.mode = stat.mode | (stat.mode & 292) >> 2;
   }
  } catch (e) {
   if (!e.code) throw e;
   throw new FS.ErrnoError(ERRNO_CODES[e.code]);
  }
  return stat.mode;
 }),
 realPath: (function(node) {
  var parts = [];
  while (node.parent !== node) {
   parts.push(node.name);
   node = node.parent;
  }
  parts.push(node.mount.opts.root);
  parts.reverse();
  return PATH.join.apply(null, parts);
 }),
 flagsForNode: (function(flags) {
  flags &= ~2097152;
  flags &= ~2048;
  flags &= ~32768;
  flags &= ~524288;
  var newFlags = 0;
  for (var k in NODEFS.flagsForNodeMap) {
   if (flags & k) {
    newFlags |= NODEFS.flagsForNodeMap[k];
    flags ^= k;
   }
  }
  if (!flags) {
   return newFlags;
  } else {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
 }),
 node_ops: {
  getattr: (function(node) {
   var path = NODEFS.realPath(node);
   var stat;
   try {
    stat = fs.lstatSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   if (NODEFS.isWindows && !stat.blksize) {
    stat.blksize = 4096;
   }
   if (NODEFS.isWindows && !stat.blocks) {
    stat.blocks = (stat.size + stat.blksize - 1) / stat.blksize | 0;
   }
   return {
    dev: stat.dev,
    ino: stat.ino,
    mode: stat.mode,
    nlink: stat.nlink,
    uid: stat.uid,
    gid: stat.gid,
    rdev: stat.rdev,
    size: stat.size,
    atime: stat.atime,
    mtime: stat.mtime,
    ctime: stat.ctime,
    blksize: stat.blksize,
    blocks: stat.blocks
   };
  }),
  setattr: (function(node, attr) {
   var path = NODEFS.realPath(node);
   try {
    if (attr.mode !== undefined) {
     fs.chmodSync(path, attr.mode);
     node.mode = attr.mode;
    }
    if (attr.timestamp !== undefined) {
     var date = new Date(attr.timestamp);
     fs.utimesSync(path, date, date);
    }
    if (attr.size !== undefined) {
     fs.truncateSync(path, attr.size);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  lookup: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   var mode = NODEFS.getMode(path);
   return NODEFS.createNode(parent, name, mode);
  }),
  mknod: (function(parent, name, mode, dev) {
   var node = NODEFS.createNode(parent, name, mode, dev);
   var path = NODEFS.realPath(node);
   try {
    if (FS.isDir(node.mode)) {
     fs.mkdirSync(path, node.mode);
    } else {
     fs.writeFileSync(path, "", {
      mode: node.mode
     });
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
   return node;
  }),
  rename: (function(oldNode, newDir, newName) {
   var oldPath = NODEFS.realPath(oldNode);
   var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
   try {
    fs.renameSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  unlink: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.unlinkSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  rmdir: (function(parent, name) {
   var path = PATH.join2(NODEFS.realPath(parent), name);
   try {
    fs.rmdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  readdir: (function(node) {
   var path = NODEFS.realPath(node);
   try {
    return fs.readdirSync(path);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  symlink: (function(parent, newName, oldPath) {
   var newPath = PATH.join2(NODEFS.realPath(parent), newName);
   try {
    fs.symlinkSync(oldPath, newPath);
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  readlink: (function(node) {
   var path = NODEFS.realPath(node);
   try {
    path = fs.readlinkSync(path);
    path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
    return path;
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  })
 },
 stream_ops: {
  open: (function(stream) {
   var path = NODEFS.realPath(stream.node);
   try {
    if (FS.isFile(stream.node.mode)) {
     stream.nfd = fs.openSync(path, NODEFS.flagsForNode(stream.flags));
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  close: (function(stream) {
   try {
    if (FS.isFile(stream.node.mode) && stream.nfd) {
     fs.closeSync(stream.nfd);
    }
   } catch (e) {
    if (!e.code) throw e;
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  read: (function(stream, buffer, offset, length, position) {
   if (length === 0) return 0;
   try {
    return fs.readSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  write: (function(stream, buffer, offset, length, position) {
   try {
    return fs.writeSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
   } catch (e) {
    throw new FS.ErrnoError(ERRNO_CODES[e.code]);
   }
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     try {
      var stat = fs.fstatSync(stream.nfd);
      position += stat.size;
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES[e.code]);
     }
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  })
 }
};
var WORKERFS = {
 DIR_MODE: 16895,
 FILE_MODE: 33279,
 reader: null,
 mount: (function(mount) {
  assert(ENVIRONMENT_IS_WORKER);
  if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync;
  var root = WORKERFS.createNode(null, "/", WORKERFS.DIR_MODE, 0);
  var createdParents = {};
  function ensureParent(path) {
   var parts = path.split("/");
   var parent = root;
   for (var i = 0; i < parts.length - 1; i++) {
    var curr = parts.slice(0, i + 1).join("/");
    if (!createdParents[curr]) {
     createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
    }
    parent = createdParents[curr];
   }
   return parent;
  }
  function base(path) {
   var parts = path.split("/");
   return parts[parts.length - 1];
  }
  Array.prototype.forEach.call(mount.opts["files"] || [], (function(file) {
   WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
  }));
  (mount.opts["blobs"] || []).forEach((function(obj) {
   WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
  }));
  (mount.opts["packages"] || []).forEach((function(pack) {
   pack["metadata"].files.forEach((function(file) {
    var name = file.filename.substr(1);
    WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack["blob"].slice(file.start, file.end));
   }));
  }));
  return root;
 }),
 createNode: (function(parent, name, mode, dev, contents, mtime) {
  var node = FS.createNode(parent, name, mode);
  node.mode = mode;
  node.node_ops = WORKERFS.node_ops;
  node.stream_ops = WORKERFS.stream_ops;
  node.timestamp = (mtime || new Date).getTime();
  assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
  if (mode === WORKERFS.FILE_MODE) {
   node.size = contents.size;
   node.contents = contents;
  } else {
   node.size = 4096;
   node.contents = {};
  }
  if (parent) {
   parent.contents[name] = node;
  }
  return node;
 }),
 node_ops: {
  getattr: (function(node) {
   return {
    dev: 1,
    ino: undefined,
    mode: node.mode,
    nlink: 1,
    uid: 0,
    gid: 0,
    rdev: undefined,
    size: node.size,
    atime: new Date(node.timestamp),
    mtime: new Date(node.timestamp),
    ctime: new Date(node.timestamp),
    blksize: 4096,
    blocks: Math.ceil(node.size / 4096)
   };
  }),
  setattr: (function(node, attr) {
   if (attr.mode !== undefined) {
    node.mode = attr.mode;
   }
   if (attr.timestamp !== undefined) {
    node.timestamp = attr.timestamp;
   }
  }),
  lookup: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }),
  mknod: (function(parent, name, mode, dev) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  rename: (function(oldNode, newDir, newName) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  unlink: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  rmdir: (function(parent, name) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  readdir: (function(node) {
   var entries = [ ".", ".." ];
   for (var key in node.contents) {
    if (!node.contents.hasOwnProperty(key)) {
     continue;
    }
    entries.push(key);
   }
   return entries;
  }),
  symlink: (function(parent, newName, oldPath) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }),
  readlink: (function(node) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  })
 },
 stream_ops: {
  read: (function(stream, buffer, offset, length, position) {
   if (position >= stream.node.size) return 0;
   var chunk = stream.node.contents.slice(position, position + length);
   var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
   buffer.set(new Uint8Array(ab), offset);
   return chunk.size;
  }),
  write: (function(stream, buffer, offset, length, position) {
   throw new FS.ErrnoError(ERRNO_CODES.EIO);
  }),
  llseek: (function(stream, offset, whence) {
   var position = offset;
   if (whence === 1) {
    position += stream.position;
   } else if (whence === 2) {
    if (FS.isFile(stream.node.mode)) {
     position += stream.node.size;
    }
   }
   if (position < 0) {
    throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
   }
   return position;
  })
 }
};
STATICTOP += 16;
STATICTOP += 16;
STATICTOP += 16;
var FS = {
 root: null,
 mounts: [],
 devices: {},
 streams: [],
 nextInode: 1,
 nameTable: null,
 currentPath: "/",
 initialized: false,
 ignorePermissions: true,
 trackingDelegate: {},
 tracking: {
  openFlags: {
   READ: 1,
   WRITE: 2
  }
 },
 ErrnoError: null,
 genericErrors: {},
 filesystems: null,
 syncFSRequests: 0,
 handleFSError: (function(e) {
  if (!(e instanceof FS.ErrnoError)) throw e + " : " + stackTrace();
  return ___setErrNo(e.errno);
 }),
 lookupPath: (function(path, opts) {
  path = PATH.resolve(FS.cwd(), path);
  opts = opts || {};
  if (!path) return {
   path: "",
   node: null
  };
  var defaults = {
   follow_mount: true,
   recurse_count: 0
  };
  for (var key in defaults) {
   if (opts[key] === undefined) {
    opts[key] = defaults[key];
   }
  }
  if (opts.recurse_count > 8) {
   throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
  }
  var parts = PATH.normalizeArray(path.split("/").filter((function(p) {
   return !!p;
  })), false);
  var current = FS.root;
  var current_path = "/";
  for (var i = 0; i < parts.length; i++) {
   var islast = i === parts.length - 1;
   if (islast && opts.parent) {
    break;
   }
   current = FS.lookupNode(current, parts[i]);
   current_path = PATH.join2(current_path, parts[i]);
   if (FS.isMountpoint(current)) {
    if (!islast || islast && opts.follow_mount) {
     current = current.mounted.root;
    }
   }
   if (!islast || opts.follow) {
    var count = 0;
    while (FS.isLink(current.mode)) {
     var link = FS.readlink(current_path);
     current_path = PATH.resolve(PATH.dirname(current_path), link);
     var lookup = FS.lookupPath(current_path, {
      recurse_count: opts.recurse_count
     });
     current = lookup.node;
     if (count++ > 40) {
      throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
     }
    }
   }
  }
  return {
   path: current_path,
   node: current
  };
 }),
 getPath: (function(node) {
  var path;
  while (true) {
   if (FS.isRoot(node)) {
    var mount = node.mount.mountpoint;
    if (!path) return mount;
    return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
   }
   path = path ? node.name + "/" + path : node.name;
   node = node.parent;
  }
 }),
 hashName: (function(parentid, name) {
  var hash = 0;
  for (var i = 0; i < name.length; i++) {
   hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
  }
  return (parentid + hash >>> 0) % FS.nameTable.length;
 }),
 hashAddNode: (function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  node.name_next = FS.nameTable[hash];
  FS.nameTable[hash] = node;
 }),
 hashRemoveNode: (function(node) {
  var hash = FS.hashName(node.parent.id, node.name);
  if (FS.nameTable[hash] === node) {
   FS.nameTable[hash] = node.name_next;
  } else {
   var current = FS.nameTable[hash];
   while (current) {
    if (current.name_next === node) {
     current.name_next = node.name_next;
     break;
    }
    current = current.name_next;
   }
  }
 }),
 lookupNode: (function(parent, name) {
  var err = FS.mayLookup(parent);
  if (err) {
   throw new FS.ErrnoError(err, parent);
  }
  var hash = FS.hashName(parent.id, name);
  for (var node = FS.nameTable[hash]; node; node = node.name_next) {
   var nodeName = node.name;
   if (node.parent.id === parent.id && nodeName === name) {
    return node;
   }
  }
  return FS.lookup(parent, name);
 }),
 createNode: (function(parent, name, mode, rdev) {
  if (!FS.FSNode) {
   FS.FSNode = (function(parent, name, mode, rdev) {
    if (!parent) {
     parent = this;
    }
    this.parent = parent;
    this.mount = parent.mount;
    this.mounted = null;
    this.id = FS.nextInode++;
    this.name = name;
    this.mode = mode;
    this.node_ops = {};
    this.stream_ops = {};
    this.rdev = rdev;
   });
   FS.FSNode.prototype = {};
   var readMode = 292 | 73;
   var writeMode = 146;
   Object.defineProperties(FS.FSNode.prototype, {
    read: {
     get: (function() {
      return (this.mode & readMode) === readMode;
     }),
     set: (function(val) {
      val ? this.mode |= readMode : this.mode &= ~readMode;
     })
    },
    write: {
     get: (function() {
      return (this.mode & writeMode) === writeMode;
     }),
     set: (function(val) {
      val ? this.mode |= writeMode : this.mode &= ~writeMode;
     })
    },
    isFolder: {
     get: (function() {
      return FS.isDir(this.mode);
     })
    },
    isDevice: {
     get: (function() {
      return FS.isChrdev(this.mode);
     })
    }
   });
  }
  var node = new FS.FSNode(parent, name, mode, rdev);
  FS.hashAddNode(node);
  return node;
 }),
 destroyNode: (function(node) {
  FS.hashRemoveNode(node);
 }),
 isRoot: (function(node) {
  return node === node.parent;
 }),
 isMountpoint: (function(node) {
  return !!node.mounted;
 }),
 isFile: (function(mode) {
  return (mode & 61440) === 32768;
 }),
 isDir: (function(mode) {
  return (mode & 61440) === 16384;
 }),
 isLink: (function(mode) {
  return (mode & 61440) === 40960;
 }),
 isChrdev: (function(mode) {
  return (mode & 61440) === 8192;
 }),
 isBlkdev: (function(mode) {
  return (mode & 61440) === 24576;
 }),
 isFIFO: (function(mode) {
  return (mode & 61440) === 4096;
 }),
 isSocket: (function(mode) {
  return (mode & 49152) === 49152;
 }),
 flagModes: {
  "r": 0,
  "rs": 1052672,
  "r+": 2,
  "w": 577,
  "wx": 705,
  "xw": 705,
  "w+": 578,
  "wx+": 706,
  "xw+": 706,
  "a": 1089,
  "ax": 1217,
  "xa": 1217,
  "a+": 1090,
  "ax+": 1218,
  "xa+": 1218
 },
 modeStringToFlags: (function(str) {
  var flags = FS.flagModes[str];
  if (typeof flags === "undefined") {
   throw new Error("Unknown file open mode: " + str);
  }
  return flags;
 }),
 flagsToPermissionString: (function(flag) {
  var perms = [ "r", "w", "rw" ][flag & 3];
  if (flag & 512) {
   perms += "w";
  }
  return perms;
 }),
 nodePermissions: (function(node, perms) {
  if (FS.ignorePermissions) {
   return 0;
  }
  if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
   return ERRNO_CODES.EACCES;
  } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
   return ERRNO_CODES.EACCES;
  } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
   return ERRNO_CODES.EACCES;
  }
  return 0;
 }),
 mayLookup: (function(dir) {
  var err = FS.nodePermissions(dir, "x");
  if (err) return err;
  if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
  return 0;
 }),
 mayCreate: (function(dir, name) {
  try {
   var node = FS.lookupNode(dir, name);
   return ERRNO_CODES.EEXIST;
  } catch (e) {}
  return FS.nodePermissions(dir, "wx");
 }),
 mayDelete: (function(dir, name, isdir) {
  var node;
  try {
   node = FS.lookupNode(dir, name);
  } catch (e) {
   return e.errno;
  }
  var err = FS.nodePermissions(dir, "wx");
  if (err) {
   return err;
  }
  if (isdir) {
   if (!FS.isDir(node.mode)) {
    return ERRNO_CODES.ENOTDIR;
   }
   if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
    return ERRNO_CODES.EBUSY;
   }
  } else {
   if (FS.isDir(node.mode)) {
    return ERRNO_CODES.EISDIR;
   }
  }
  return 0;
 }),
 mayOpen: (function(node, flags) {
  if (!node) {
   return ERRNO_CODES.ENOENT;
  }
  if (FS.isLink(node.mode)) {
   return ERRNO_CODES.ELOOP;
  } else if (FS.isDir(node.mode)) {
   if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
    return ERRNO_CODES.EISDIR;
   }
  }
  return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
 }),
 MAX_OPEN_FDS: 4096,
 nextfd: (function(fd_start, fd_end) {
  fd_start = fd_start || 0;
  fd_end = fd_end || FS.MAX_OPEN_FDS;
  for (var fd = fd_start; fd <= fd_end; fd++) {
   if (!FS.streams[fd]) {
    return fd;
   }
  }
  throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
 }),
 getStream: (function(fd) {
  return FS.streams[fd];
 }),
 createStream: (function(stream, fd_start, fd_end) {
  if (!FS.FSStream) {
   FS.FSStream = (function() {});
   FS.FSStream.prototype = {};
   Object.defineProperties(FS.FSStream.prototype, {
    object: {
     get: (function() {
      return this.node;
     }),
     set: (function(val) {
      this.node = val;
     })
    },
    isRead: {
     get: (function() {
      return (this.flags & 2097155) !== 1;
     })
    },
    isWrite: {
     get: (function() {
      return (this.flags & 2097155) !== 0;
     })
    },
    isAppend: {
     get: (function() {
      return this.flags & 1024;
     })
    }
   });
  }
  var newStream = new FS.FSStream;
  for (var p in stream) {
   newStream[p] = stream[p];
  }
  stream = newStream;
  var fd = FS.nextfd(fd_start, fd_end);
  stream.fd = fd;
  FS.streams[fd] = stream;
  return stream;
 }),
 closeStream: (function(fd) {
  FS.streams[fd] = null;
 }),
 chrdev_stream_ops: {
  open: (function(stream) {
   var device = FS.getDevice(stream.node.rdev);
   stream.stream_ops = device.stream_ops;
   if (stream.stream_ops.open) {
    stream.stream_ops.open(stream);
   }
  }),
  llseek: (function() {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  })
 },
 major: (function(dev) {
  return dev >> 8;
 }),
 minor: (function(dev) {
  return dev & 255;
 }),
 makedev: (function(ma, mi) {
  return ma << 8 | mi;
 }),
 registerDevice: (function(dev, ops) {
  FS.devices[dev] = {
   stream_ops: ops
  };
 }),
 getDevice: (function(dev) {
  return FS.devices[dev];
 }),
 getMounts: (function(mount) {
  var mounts = [];
  var check = [ mount ];
  while (check.length) {
   var m = check.pop();
   mounts.push(m);
   check.push.apply(check, m.mounts);
  }
  return mounts;
 }),
 syncfs: (function(populate, callback) {
  if (typeof populate === "function") {
   callback = populate;
   populate = false;
  }
  FS.syncFSRequests++;
  if (FS.syncFSRequests > 1) {
   console.log("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
  }
  var mounts = FS.getMounts(FS.root.mount);
  var completed = 0;
  function doCallback(err) {
   assert(FS.syncFSRequests > 0);
   FS.syncFSRequests--;
   return callback(err);
  }
  function done(err) {
   if (err) {
    if (!done.errored) {
     done.errored = true;
     return doCallback(err);
    }
    return;
   }
   if (++completed >= mounts.length) {
    doCallback(null);
   }
  }
  mounts.forEach((function(mount) {
   if (!mount.type.syncfs) {
    return done(null);
   }
   mount.type.syncfs(mount, populate, done);
  }));
 }),
 mount: (function(type, opts, mountpoint) {
  var root = mountpoint === "/";
  var pseudo = !mountpoint;
  var node;
  if (root && FS.root) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  } else if (!root && !pseudo) {
   var lookup = FS.lookupPath(mountpoint, {
    follow_mount: false
   });
   mountpoint = lookup.path;
   node = lookup.node;
   if (FS.isMountpoint(node)) {
    throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
   }
   if (!FS.isDir(node.mode)) {
    throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
   }
  }
  var mount = {
   type: type,
   opts: opts,
   mountpoint: mountpoint,
   mounts: []
  };
  var mountRoot = type.mount(mount);
  mountRoot.mount = mount;
  mount.root = mountRoot;
  if (root) {
   FS.root = mountRoot;
  } else if (node) {
   node.mounted = mount;
   if (node.mount) {
    node.mount.mounts.push(mount);
   }
  }
  return mountRoot;
 }),
 unmount: (function(mountpoint) {
  var lookup = FS.lookupPath(mountpoint, {
   follow_mount: false
  });
  if (!FS.isMountpoint(lookup.node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node = lookup.node;
  var mount = node.mounted;
  var mounts = FS.getMounts(mount);
  Object.keys(FS.nameTable).forEach((function(hash) {
   var current = FS.nameTable[hash];
   while (current) {
    var next = current.name_next;
    if (mounts.indexOf(current.mount) !== -1) {
     FS.destroyNode(current);
    }
    current = next;
   }
  }));
  node.mounted = null;
  var idx = node.mount.mounts.indexOf(mount);
  assert(idx !== -1);
  node.mount.mounts.splice(idx, 1);
 }),
 lookup: (function(parent, name) {
  return parent.node_ops.lookup(parent, name);
 }),
 mknod: (function(path, mode, dev) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  if (!name || name === "." || name === "..") {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var err = FS.mayCreate(parent, name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.mknod) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return parent.node_ops.mknod(parent, name, mode, dev);
 }),
 create: (function(path, mode) {
  mode = mode !== undefined ? mode : 438;
  mode &= 4095;
  mode |= 32768;
  return FS.mknod(path, mode, 0);
 }),
 mkdir: (function(path, mode) {
  mode = mode !== undefined ? mode : 511;
  mode &= 511 | 512;
  mode |= 16384;
  return FS.mknod(path, mode, 0);
 }),
 mkdirTree: (function(path, mode) {
  var dirs = path.split("/");
  var d = "";
  for (var i = 0; i < dirs.length; ++i) {
   if (!dirs[i]) continue;
   d += "/" + dirs[i];
   try {
    FS.mkdir(d, mode);
   } catch (e) {
    if (e.errno != ERRNO_CODES.EEXIST) throw e;
   }
  }
 }),
 mkdev: (function(path, mode, dev) {
  if (typeof dev === "undefined") {
   dev = mode;
   mode = 438;
  }
  mode |= 8192;
  return FS.mknod(path, mode, dev);
 }),
 symlink: (function(oldpath, newpath) {
  if (!PATH.resolve(oldpath)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  var lookup = FS.lookupPath(newpath, {
   parent: true
  });
  var parent = lookup.node;
  if (!parent) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  var newname = PATH.basename(newpath);
  var err = FS.mayCreate(parent, newname);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.symlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return parent.node_ops.symlink(parent, newname, oldpath);
 }),
 rename: (function(old_path, new_path) {
  var old_dirname = PATH.dirname(old_path);
  var new_dirname = PATH.dirname(new_path);
  var old_name = PATH.basename(old_path);
  var new_name = PATH.basename(new_path);
  var lookup, old_dir, new_dir;
  try {
   lookup = FS.lookupPath(old_path, {
    parent: true
   });
   old_dir = lookup.node;
   lookup = FS.lookupPath(new_path, {
    parent: true
   });
   new_dir = lookup.node;
  } catch (e) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  if (old_dir.mount !== new_dir.mount) {
   throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
  }
  var old_node = FS.lookupNode(old_dir, old_name);
  var relative = PATH.relative(old_path, new_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  relative = PATH.relative(new_path, old_dirname);
  if (relative.charAt(0) !== ".") {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
  }
  var new_node;
  try {
   new_node = FS.lookupNode(new_dir, new_name);
  } catch (e) {}
  if (old_node === new_node) {
   return;
  }
  var isdir = FS.isDir(old_node.mode);
  var err = FS.mayDelete(old_dir, old_name, isdir);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  err = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!old_dir.node_ops.rename) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  if (new_dir !== old_dir) {
   err = FS.nodePermissions(old_dir, "w");
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  try {
   if (FS.trackingDelegate["willMovePath"]) {
    FS.trackingDelegate["willMovePath"](old_path, new_path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
  FS.hashRemoveNode(old_node);
  try {
   old_dir.node_ops.rename(old_node, new_dir, new_name);
  } catch (e) {
   throw e;
  } finally {
   FS.hashAddNode(old_node);
  }
  try {
   if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
  } catch (e) {
   console.log("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
  }
 }),
 rmdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, true);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.rmdir) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.rmdir(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 }),
 readdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  if (!node.node_ops.readdir) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  return node.node_ops.readdir(node);
 }),
 unlink: (function(path) {
  var lookup = FS.lookupPath(path, {
   parent: true
  });
  var parent = lookup.node;
  var name = PATH.basename(path);
  var node = FS.lookupNode(parent, name);
  var err = FS.mayDelete(parent, name, false);
  if (err) {
   throw new FS.ErrnoError(err);
  }
  if (!parent.node_ops.unlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isMountpoint(node)) {
   throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
  }
  try {
   if (FS.trackingDelegate["willDeletePath"]) {
    FS.trackingDelegate["willDeletePath"](path);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
  }
  parent.node_ops.unlink(parent, name);
  FS.destroyNode(node);
  try {
   if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
  } catch (e) {
   console.log("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
  }
 }),
 readlink: (function(path) {
  var lookup = FS.lookupPath(path);
  var link = lookup.node;
  if (!link) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!link.node_ops.readlink) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
 }),
 stat: (function(path, dontFollow) {
  var lookup = FS.lookupPath(path, {
   follow: !dontFollow
  });
  var node = lookup.node;
  if (!node) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!node.node_ops.getattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  return node.node_ops.getattr(node);
 }),
 lstat: (function(path) {
  return FS.stat(path, true);
 }),
 chmod: (function(path, mode, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  node.node_ops.setattr(node, {
   mode: mode & 4095 | node.mode & ~4095,
   timestamp: Date.now()
  });
 }),
 lchmod: (function(path, mode) {
  FS.chmod(path, mode, true);
 }),
 fchmod: (function(fd, mode) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  FS.chmod(stream.node, mode);
 }),
 chown: (function(path, uid, gid, dontFollow) {
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: !dontFollow
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  node.node_ops.setattr(node, {
   timestamp: Date.now()
  });
 }),
 lchown: (function(path, uid, gid) {
  FS.chown(path, uid, gid, true);
 }),
 fchown: (function(fd, uid, gid) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  FS.chown(stream.node, uid, gid);
 }),
 truncate: (function(path, len) {
  if (len < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var node;
  if (typeof path === "string") {
   var lookup = FS.lookupPath(path, {
    follow: true
   });
   node = lookup.node;
  } else {
   node = path;
  }
  if (!node.node_ops.setattr) {
   throw new FS.ErrnoError(ERRNO_CODES.EPERM);
  }
  if (FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!FS.isFile(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var err = FS.nodePermissions(node, "w");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  node.node_ops.setattr(node, {
   size: len,
   timestamp: Date.now()
  });
 }),
 ftruncate: (function(fd, len) {
  var stream = FS.getStream(fd);
  if (!stream) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  FS.truncate(stream.node, len);
 }),
 utime: (function(path, atime, mtime) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  var node = lookup.node;
  node.node_ops.setattr(node, {
   timestamp: Math.max(atime, mtime)
  });
 }),
 open: (function(path, flags, mode, fd_start, fd_end) {
  if (path === "") {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
  mode = typeof mode === "undefined" ? 438 : mode;
  if (flags & 64) {
   mode = mode & 4095 | 32768;
  } else {
   mode = 0;
  }
  var node;
  if (typeof path === "object") {
   node = path;
  } else {
   path = PATH.normalize(path);
   try {
    var lookup = FS.lookupPath(path, {
     follow: !(flags & 131072)
    });
    node = lookup.node;
   } catch (e) {}
  }
  var created = false;
  if (flags & 64) {
   if (node) {
    if (flags & 128) {
     throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
    }
   } else {
    node = FS.mknod(path, mode, 0);
    created = true;
   }
  }
  if (!node) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (FS.isChrdev(node.mode)) {
   flags &= ~512;
  }
  if (flags & 65536 && !FS.isDir(node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  if (!created) {
   var err = FS.mayOpen(node, flags);
   if (err) {
    throw new FS.ErrnoError(err);
   }
  }
  if (flags & 512) {
   FS.truncate(node, 0);
  }
  flags &= ~(128 | 512);
  var stream = FS.createStream({
   node: node,
   path: FS.getPath(node),
   flags: flags,
   seekable: true,
   position: 0,
   stream_ops: node.stream_ops,
   ungotten: [],
   error: false
  }, fd_start, fd_end);
  if (stream.stream_ops.open) {
   stream.stream_ops.open(stream);
  }
  if (Module["logReadFiles"] && !(flags & 1)) {
   if (!FS.readFiles) FS.readFiles = {};
   if (!(path in FS.readFiles)) {
    FS.readFiles[path] = 1;
    Module["printErr"]("read file: " + path);
   }
  }
  try {
   if (FS.trackingDelegate["onOpenFile"]) {
    var trackingFlags = 0;
    if ((flags & 2097155) !== 1) {
     trackingFlags |= FS.tracking.openFlags.READ;
    }
    if ((flags & 2097155) !== 0) {
     trackingFlags |= FS.tracking.openFlags.WRITE;
    }
    FS.trackingDelegate["onOpenFile"](path, trackingFlags);
   }
  } catch (e) {
   console.log("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
  }
  return stream;
 }),
 close: (function(stream) {
  if (stream.getdents) stream.getdents = null;
  try {
   if (stream.stream_ops.close) {
    stream.stream_ops.close(stream);
   }
  } catch (e) {
   throw e;
  } finally {
   FS.closeStream(stream.fd);
  }
 }),
 llseek: (function(stream, offset, whence) {
  if (!stream.seekable || !stream.stream_ops.llseek) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  stream.position = stream.stream_ops.llseek(stream, offset, whence);
  stream.ungotten = [];
  return stream.position;
 }),
 read: (function(stream, buffer, offset, length, position) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!stream.stream_ops.read) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  var seeking = typeof position !== "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
  if (!seeking) stream.position += bytesRead;
  return bytesRead;
 }),
 write: (function(stream, buffer, offset, length, position, canOwn) {
  if (length < 0 || position < 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
  }
  if (!stream.stream_ops.write) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if (stream.flags & 1024) {
   FS.llseek(stream, 0, 2);
  }
  var seeking = typeof position !== "undefined";
  if (!seeking) {
   position = stream.position;
  } else if (!stream.seekable) {
   throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
  }
  var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
  if (!seeking) stream.position += bytesWritten;
  try {
   if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
  } catch (e) {
   console.log("FS.trackingDelegate['onWriteToFile']('" + path + "') threw an exception: " + e.message);
  }
  return bytesWritten;
 }),
 allocate: (function(stream, offset, length) {
  if (offset < 0 || length <= 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
  }
  if ((stream.flags & 2097155) === 0) {
   throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  }
  if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
  }
  if (!stream.stream_ops.allocate) {
   throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
  }
  stream.stream_ops.allocate(stream, offset, length);
 }),
 mmap: (function(stream, buffer, offset, length, position, prot, flags) {
  if ((stream.flags & 2097155) === 1) {
   throw new FS.ErrnoError(ERRNO_CODES.EACCES);
  }
  if (!stream.stream_ops.mmap) {
   throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
  }
  return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
 }),
 msync: (function(stream, buffer, offset, length, mmapFlags) {
  if (!stream || !stream.stream_ops.msync) {
   return 0;
  }
  return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
 }),
 munmap: (function(stream) {
  return 0;
 }),
 ioctl: (function(stream, cmd, arg) {
  if (!stream.stream_ops.ioctl) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
  }
  return stream.stream_ops.ioctl(stream, cmd, arg);
 }),
 readFile: (function(path, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "r";
  opts.encoding = opts.encoding || "binary";
  if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
   throw new Error('Invalid encoding type "' + opts.encoding + '"');
  }
  var ret;
  var stream = FS.open(path, opts.flags);
  var stat = FS.stat(path);
  var length = stat.size;
  var buf = new Uint8Array(length);
  FS.read(stream, buf, 0, length, 0);
  if (opts.encoding === "utf8") {
   ret = UTF8ArrayToString(buf, 0);
  } else if (opts.encoding === "binary") {
   ret = buf;
  }
  FS.close(stream);
  return ret;
 }),
 writeFile: (function(path, data, opts) {
  opts = opts || {};
  opts.flags = opts.flags || "w";
  var stream = FS.open(path, opts.flags, opts.mode);
  if (typeof data === "string") {
   var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
   var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
   FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
  } else if (ArrayBuffer.isView(data)) {
   FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
  } else {
   throw new Error("Unsupported data type");
  }
  FS.close(stream);
 }),
 cwd: (function() {
  return FS.currentPath;
 }),
 chdir: (function(path) {
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  if (lookup.node === null) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
  }
  if (!FS.isDir(lookup.node.mode)) {
   throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
  }
  var err = FS.nodePermissions(lookup.node, "x");
  if (err) {
   throw new FS.ErrnoError(err);
  }
  FS.currentPath = lookup.path;
 }),
 createDefaultDirectories: (function() {
  FS.mkdir("/tmp");
  FS.mkdir("/home");
  FS.mkdir("/home/web_user");
 }),
 createDefaultDevices: (function() {
  FS.mkdir("/dev");
  FS.registerDevice(FS.makedev(1, 3), {
   read: (function() {
    return 0;
   }),
   write: (function(stream, buffer, offset, length, pos) {
    return length;
   })
  });
  FS.mkdev("/dev/null", FS.makedev(1, 3));
  TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
  TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
  FS.mkdev("/dev/tty", FS.makedev(5, 0));
  FS.mkdev("/dev/tty1", FS.makedev(6, 0));
  var random_device;
  if (typeof crypto !== "undefined") {
   var randomBuffer = new Uint8Array(1);
   random_device = (function() {
    crypto.getRandomValues(randomBuffer);
    return randomBuffer[0];
   });
  } else if (ENVIRONMENT_IS_NODE) {
   random_device = (function() {
    return require("crypto")["randomBytes"](1)[0];
   });
  } else {
   random_device = (function() {
    return Math.random() * 256 | 0;
   });
  }
  FS.createDevice("/dev", "random", random_device);
  FS.createDevice("/dev", "urandom", random_device);
  FS.mkdir("/dev/shm");
  FS.mkdir("/dev/shm/tmp");
 }),
 createSpecialDirectories: (function() {
  FS.mkdir("/proc");
  FS.mkdir("/proc/self");
  FS.mkdir("/proc/self/fd");
  FS.mount({
   mount: (function() {
    var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
    node.node_ops = {
     lookup: (function(parent, name) {
      var fd = +name;
      var stream = FS.getStream(fd);
      if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
      var ret = {
       parent: null,
       mount: {
        mountpoint: "fake"
       },
       node_ops: {
        readlink: (function() {
         return stream.path;
        })
       }
      };
      ret.parent = ret;
      return ret;
     })
    };
    return node;
   })
  }, {}, "/proc/self/fd");
 }),
 createStandardStreams: (function() {
  if (Module["stdin"]) {
   FS.createDevice("/dev", "stdin", Module["stdin"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdin");
  }
  if (Module["stdout"]) {
   FS.createDevice("/dev", "stdout", null, Module["stdout"]);
  } else {
   FS.symlink("/dev/tty", "/dev/stdout");
  }
  if (Module["stderr"]) {
   FS.createDevice("/dev", "stderr", null, Module["stderr"]);
  } else {
   FS.symlink("/dev/tty1", "/dev/stderr");
  }
  var stdin = FS.open("/dev/stdin", "r");
  assert(stdin.fd === 0, "invalid handle for stdin (" + stdin.fd + ")");
  var stdout = FS.open("/dev/stdout", "w");
  assert(stdout.fd === 1, "invalid handle for stdout (" + stdout.fd + ")");
  var stderr = FS.open("/dev/stderr", "w");
  assert(stderr.fd === 2, "invalid handle for stderr (" + stderr.fd + ")");
 }),
 ensureErrnoError: (function() {
  if (FS.ErrnoError) return;
  FS.ErrnoError = function ErrnoError(errno, node) {
   this.node = node;
   this.setErrno = (function(errno) {
    this.errno = errno;
    for (var key in ERRNO_CODES) {
     if (ERRNO_CODES[key] === errno) {
      this.code = key;
      break;
     }
    }
   });
   this.setErrno(errno);
   this.message = ERRNO_MESSAGES[errno];
   if (this.stack) Object.defineProperty(this, "stack", {
    value: (new Error).stack,
    writable: true
   });
  };
  FS.ErrnoError.prototype = new Error;
  FS.ErrnoError.prototype.constructor = FS.ErrnoError;
  [ ERRNO_CODES.ENOENT ].forEach((function(code) {
   FS.genericErrors[code] = new FS.ErrnoError(code);
   FS.genericErrors[code].stack = "<generic error, no stack>";
  }));
 }),
 staticInit: (function() {
  FS.ensureErrnoError();
  FS.nameTable = new Array(4096);
  FS.mount(MEMFS, {}, "/");
  FS.createDefaultDirectories();
  FS.createDefaultDevices();
  FS.createSpecialDirectories();
  FS.filesystems = {
   "MEMFS": MEMFS,
   "IDBFS": IDBFS,
   "NODEFS": NODEFS,
   "WORKERFS": WORKERFS
  };
 }),
 init: (function(input, output, error) {
  assert(!FS.init.initialized, "FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
  FS.init.initialized = true;
  FS.ensureErrnoError();
  Module["stdin"] = input || Module["stdin"];
  Module["stdout"] = output || Module["stdout"];
  Module["stderr"] = error || Module["stderr"];
  FS.createStandardStreams();
 }),
 quit: (function() {
  FS.init.initialized = false;
  var fflush = Module["_fflush"];
  if (fflush) fflush(0);
  for (var i = 0; i < FS.streams.length; i++) {
   var stream = FS.streams[i];
   if (!stream) {
    continue;
   }
   FS.close(stream);
  }
 }),
 getMode: (function(canRead, canWrite) {
  var mode = 0;
  if (canRead) mode |= 292 | 73;
  if (canWrite) mode |= 146;
  return mode;
 }),
 joinPath: (function(parts, forceRelative) {
  var path = PATH.join.apply(null, parts);
  if (forceRelative && path[0] == "/") path = path.substr(1);
  return path;
 }),
 absolutePath: (function(relative, base) {
  return PATH.resolve(base, relative);
 }),
 standardizePath: (function(path) {
  return PATH.normalize(path);
 }),
 findObject: (function(path, dontResolveLastLink) {
  var ret = FS.analyzePath(path, dontResolveLastLink);
  if (ret.exists) {
   return ret.object;
  } else {
   ___setErrNo(ret.error);
   return null;
  }
 }),
 analyzePath: (function(path, dontResolveLastLink) {
  try {
   var lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   path = lookup.path;
  } catch (e) {}
  var ret = {
   isRoot: false,
   exists: false,
   error: 0,
   name: null,
   path: null,
   object: null,
   parentExists: false,
   parentPath: null,
   parentObject: null
  };
  try {
   var lookup = FS.lookupPath(path, {
    parent: true
   });
   ret.parentExists = true;
   ret.parentPath = lookup.path;
   ret.parentObject = lookup.node;
   ret.name = PATH.basename(path);
   lookup = FS.lookupPath(path, {
    follow: !dontResolveLastLink
   });
   ret.exists = true;
   ret.path = lookup.path;
   ret.object = lookup.node;
   ret.name = lookup.node.name;
   ret.isRoot = lookup.path === "/";
  } catch (e) {
   ret.error = e.errno;
  }
  return ret;
 }),
 createFolder: (function(parent, name, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.mkdir(path, mode);
 }),
 createPath: (function(parent, path, canRead, canWrite) {
  parent = typeof parent === "string" ? parent : FS.getPath(parent);
  var parts = path.split("/").reverse();
  while (parts.length) {
   var part = parts.pop();
   if (!part) continue;
   var current = PATH.join2(parent, part);
   try {
    FS.mkdir(current);
   } catch (e) {}
   parent = current;
  }
  return current;
 }),
 createFile: (function(parent, name, properties, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(canRead, canWrite);
  return FS.create(path, mode);
 }),
 createDataFile: (function(parent, name, data, canRead, canWrite, canOwn) {
  var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
  var mode = FS.getMode(canRead, canWrite);
  var node = FS.create(path, mode);
  if (data) {
   if (typeof data === "string") {
    var arr = new Array(data.length);
    for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
    data = arr;
   }
   FS.chmod(node, mode | 146);
   var stream = FS.open(node, "w");
   FS.write(stream, data, 0, data.length, 0, canOwn);
   FS.close(stream);
   FS.chmod(node, mode);
  }
  return node;
 }),
 createDevice: (function(parent, name, input, output) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  var mode = FS.getMode(!!input, !!output);
  if (!FS.createDevice.major) FS.createDevice.major = 64;
  var dev = FS.makedev(FS.createDevice.major++, 0);
  FS.registerDevice(dev, {
   open: (function(stream) {
    stream.seekable = false;
   }),
   close: (function(stream) {
    if (output && output.buffer && output.buffer.length) {
     output(10);
    }
   }),
   read: (function(stream, buffer, offset, length, pos) {
    var bytesRead = 0;
    for (var i = 0; i < length; i++) {
     var result;
     try {
      result = input();
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
     }
     if (result === undefined && bytesRead === 0) {
      throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
     }
     if (result === null || result === undefined) break;
     bytesRead++;
     buffer[offset + i] = result;
    }
    if (bytesRead) {
     stream.node.timestamp = Date.now();
    }
    return bytesRead;
   }),
   write: (function(stream, buffer, offset, length, pos) {
    for (var i = 0; i < length; i++) {
     try {
      output(buffer[offset + i]);
     } catch (e) {
      throw new FS.ErrnoError(ERRNO_CODES.EIO);
     }
    }
    if (length) {
     stream.node.timestamp = Date.now();
    }
    return i;
   })
  });
  return FS.mkdev(path, mode, dev);
 }),
 createLink: (function(parent, name, target, canRead, canWrite) {
  var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
  return FS.symlink(target, path);
 }),
 forceLoadFile: (function(obj) {
  if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
  var success = true;
  if (typeof XMLHttpRequest !== "undefined") {
   throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
  } else if (Module["read"]) {
   try {
    obj.contents = intArrayFromString(Module["read"](obj.url), true);
    obj.usedBytes = obj.contents.length;
   } catch (e) {
    success = false;
   }
  } else {
   throw new Error("Cannot load without read() or XMLHttpRequest.");
  }
  if (!success) ___setErrNo(ERRNO_CODES.EIO);
  return success;
 }),
 createLazyFile: (function(parent, name, url, canRead, canWrite) {
  function LazyUint8Array() {
   this.lengthKnown = false;
   this.chunks = [];
  }
  LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
   if (idx > this.length - 1 || idx < 0) {
    return undefined;
   }
   var chunkOffset = idx % this.chunkSize;
   var chunkNum = idx / this.chunkSize | 0;
   return this.getter(chunkNum)[chunkOffset];
  };
  LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
   this.getter = getter;
  };
  LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
   var xhr = new XMLHttpRequest;
   xhr.open("HEAD", url, false);
   xhr.send(null);
   if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
   var datalength = Number(xhr.getResponseHeader("Content-length"));
   var header;
   var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
   var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
   var chunkSize = 1024 * 1024;
   if (!hasByteServing) chunkSize = datalength;
   var doXHR = (function(from, to) {
    if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
    if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
    var xhr = new XMLHttpRequest;
    xhr.open("GET", url, false);
    if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
    if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";
    if (xhr.overrideMimeType) {
     xhr.overrideMimeType("text/plain; charset=x-user-defined");
    }
    xhr.send(null);
    if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
    if (xhr.response !== undefined) {
     return new Uint8Array(xhr.response || []);
    } else {
     return intArrayFromString(xhr.responseText || "", true);
    }
   });
   var lazyArray = this;
   lazyArray.setDataGetter((function(chunkNum) {
    var start = chunkNum * chunkSize;
    var end = (chunkNum + 1) * chunkSize - 1;
    end = Math.min(end, datalength - 1);
    if (typeof lazyArray.chunks[chunkNum] === "undefined") {
     lazyArray.chunks[chunkNum] = doXHR(start, end);
    }
    if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");
    return lazyArray.chunks[chunkNum];
   }));
   if (usesGzip || !datalength) {
    chunkSize = datalength = 1;
    datalength = this.getter(0).length;
    chunkSize = datalength;
    console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
   }
   this._length = datalength;
   this._chunkSize = chunkSize;
   this.lengthKnown = true;
  };
  if (typeof XMLHttpRequest !== "undefined") {
   if (!ENVIRONMENT_IS_WORKER) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
   var lazyArray = new LazyUint8Array;
   Object.defineProperties(lazyArray, {
    length: {
     get: (function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._length;
     })
    },
    chunkSize: {
     get: (function() {
      if (!this.lengthKnown) {
       this.cacheLength();
      }
      return this._chunkSize;
     })
    }
   });
   var properties = {
    isDevice: false,
    contents: lazyArray
   };
  } else {
   var properties = {
    isDevice: false,
    url: url
   };
  }
  var node = FS.createFile(parent, name, properties, canRead, canWrite);
  if (properties.contents) {
   node.contents = properties.contents;
  } else if (properties.url) {
   node.contents = null;
   node.url = properties.url;
  }
  Object.defineProperties(node, {
   usedBytes: {
    get: (function() {
     return this.contents.length;
    })
   }
  });
  var stream_ops = {};
  var keys = Object.keys(node.stream_ops);
  keys.forEach((function(key) {
   var fn = node.stream_ops[key];
   stream_ops[key] = function forceLoadLazyFile() {
    if (!FS.forceLoadFile(node)) {
     throw new FS.ErrnoError(ERRNO_CODES.EIO);
    }
    return fn.apply(null, arguments);
   };
  }));
  stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
   if (!FS.forceLoadFile(node)) {
    throw new FS.ErrnoError(ERRNO_CODES.EIO);
   }
   var contents = stream.node.contents;
   if (position >= contents.length) return 0;
   var size = Math.min(contents.length - position, length);
   assert(size >= 0);
   if (contents.slice) {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents[position + i];
    }
   } else {
    for (var i = 0; i < size; i++) {
     buffer[offset + i] = contents.get(position + i);
    }
   }
   return size;
  };
  node.stream_ops = stream_ops;
  return node;
 }),
 createPreloadedFile: (function(parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
  Browser.init();
  var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
  var dep = getUniqueRunDependency("cp " + fullname);
  function processData(byteArray) {
   function finish(byteArray) {
    if (preFinish) preFinish();
    if (!dontCreateFile) {
     FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
    }
    if (onload) onload();
    removeRunDependency(dep);
   }
   var handled = false;
   Module["preloadPlugins"].forEach((function(plugin) {
    if (handled) return;
    if (plugin["canHandle"](fullname)) {
     plugin["handle"](byteArray, fullname, finish, (function() {
      if (onerror) onerror();
      removeRunDependency(dep);
     }));
     handled = true;
    }
   }));
   if (!handled) finish(byteArray);
  }
  addRunDependency(dep);
  if (typeof url == "string") {
   Browser.asyncLoad(url, (function(byteArray) {
    processData(byteArray);
   }), onerror);
  } else {
   processData(url);
  }
 }),
 indexedDB: (function() {
  return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
 }),
 DB_NAME: (function() {
  return "EM_FS_" + window.location.pathname;
 }),
 DB_VERSION: 20,
 DB_STORE_NAME: "FILE_DATA",
 saveFilesToDB: (function(paths, onload, onerror) {
  onload = onload || (function() {});
  onerror = onerror || (function() {});
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
   console.log("creating db");
   var db = openRequest.result;
   db.createObjectStore(FS.DB_STORE_NAME);
  };
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   var transaction = db.transaction([ FS.DB_STORE_NAME ], "readwrite");
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach((function(path) {
    var putRequest = files.put(FS.analyzePath(path).object.contents, path);
    putRequest.onsuccess = function putRequest_onsuccess() {
     ok++;
     if (ok + fail == total) finish();
    };
    putRequest.onerror = function putRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   }));
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 }),
 loadFilesFromDB: (function(paths, onload, onerror) {
  onload = onload || (function() {});
  onerror = onerror || (function() {});
  var indexedDB = FS.indexedDB();
  try {
   var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
  } catch (e) {
   return onerror(e);
  }
  openRequest.onupgradeneeded = onerror;
  openRequest.onsuccess = function openRequest_onsuccess() {
   var db = openRequest.result;
   try {
    var transaction = db.transaction([ FS.DB_STORE_NAME ], "readonly");
   } catch (e) {
    onerror(e);
    return;
   }
   var files = transaction.objectStore(FS.DB_STORE_NAME);
   var ok = 0, fail = 0, total = paths.length;
   function finish() {
    if (fail == 0) onload(); else onerror();
   }
   paths.forEach((function(path) {
    var getRequest = files.get(path);
    getRequest.onsuccess = function getRequest_onsuccess() {
     if (FS.analyzePath(path).exists) {
      FS.unlink(path);
     }
     FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
     ok++;
     if (ok + fail == total) finish();
    };
    getRequest.onerror = function getRequest_onerror() {
     fail++;
     if (ok + fail == total) finish();
    };
   }));
   transaction.onerror = onerror;
  };
  openRequest.onerror = onerror;
 })
};
var SYSCALLS = {
 DEFAULT_POLLMASK: 5,
 mappings: {},
 umask: 511,
 calculateAt: (function(dirfd, path) {
  if (path[0] !== "/") {
   var dir;
   if (dirfd === -100) {
    dir = FS.cwd();
   } else {
    var dirstream = FS.getStream(dirfd);
    if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
    dir = dirstream.path;
   }
   path = PATH.join2(dir, path);
  }
  return path;
 }),
 doStat: (function(func, path, buf) {
  try {
   var stat = func(path);
  } catch (e) {
   if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
    return -ERRNO_CODES.ENOTDIR;
   }
   throw e;
  }
  HEAP32[buf >> 2] = stat.dev;
  HEAP32[buf + 4 >> 2] = 0;
  HEAP32[buf + 8 >> 2] = stat.ino;
  HEAP32[buf + 12 >> 2] = stat.mode;
  HEAP32[buf + 16 >> 2] = stat.nlink;
  HEAP32[buf + 20 >> 2] = stat.uid;
  HEAP32[buf + 24 >> 2] = stat.gid;
  HEAP32[buf + 28 >> 2] = stat.rdev;
  HEAP32[buf + 32 >> 2] = 0;
  HEAP32[buf + 36 >> 2] = stat.size;
  HEAP32[buf + 40 >> 2] = 4096;
  HEAP32[buf + 44 >> 2] = stat.blocks;
  HEAP32[buf + 48 >> 2] = stat.atime.getTime() / 1e3 | 0;
  HEAP32[buf + 52 >> 2] = 0;
  HEAP32[buf + 56 >> 2] = stat.mtime.getTime() / 1e3 | 0;
  HEAP32[buf + 60 >> 2] = 0;
  HEAP32[buf + 64 >> 2] = stat.ctime.getTime() / 1e3 | 0;
  HEAP32[buf + 68 >> 2] = 0;
  HEAP32[buf + 72 >> 2] = stat.ino;
  return 0;
 }),
 doMsync: (function(addr, stream, len, flags) {
  var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
  FS.msync(stream, buffer, 0, len, flags);
 }),
 doMkdir: (function(path, mode) {
  path = PATH.normalize(path);
  if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
  FS.mkdir(path, mode, 0);
  return 0;
 }),
 doMknod: (function(path, mode, dev) {
  switch (mode & 61440) {
  case 32768:
  case 8192:
  case 24576:
  case 4096:
  case 49152:
   break;
  default:
   return -ERRNO_CODES.EINVAL;
  }
  FS.mknod(path, mode, dev);
  return 0;
 }),
 doReadlink: (function(path, buf, bufsize) {
  if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
  var ret = FS.readlink(path);
  var len = Math.min(bufsize, lengthBytesUTF8(ret));
  var endChar = HEAP8[buf + len];
  stringToUTF8(ret, buf, bufsize + 1);
  HEAP8[buf + len] = endChar;
  return len;
 }),
 doAccess: (function(path, amode) {
  if (amode & ~7) {
   return -ERRNO_CODES.EINVAL;
  }
  var node;
  var lookup = FS.lookupPath(path, {
   follow: true
  });
  node = lookup.node;
  var perms = "";
  if (amode & 4) perms += "r";
  if (amode & 2) perms += "w";
  if (amode & 1) perms += "x";
  if (perms && FS.nodePermissions(node, perms)) {
   return -ERRNO_CODES.EACCES;
  }
  return 0;
 }),
 doDup: (function(path, flags, suggestFD) {
  var suggest = FS.getStream(suggestFD);
  if (suggest) FS.close(suggest);
  return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
 }),
 doReadv: (function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.read(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
   if (curr < len) break;
  }
  return ret;
 }),
 doWritev: (function(stream, iov, iovcnt, offset) {
  var ret = 0;
  for (var i = 0; i < iovcnt; i++) {
   var ptr = HEAP32[iov + i * 8 >> 2];
   var len = HEAP32[iov + (i * 8 + 4) >> 2];
   var curr = FS.write(stream, HEAP8, ptr, len, offset);
   if (curr < 0) return -1;
   ret += curr;
  }
  return ret;
 }),
 varargs: 0,
 get: (function(varargs) {
  SYSCALLS.varargs += 4;
  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
  return ret;
 }),
 getStr: (function() {
  var ret = Pointer_stringify(SYSCALLS.get());
  return ret;
 }),
 getStreamFromFD: (function() {
  var stream = FS.getStream(SYSCALLS.get());
  if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return stream;
 }),
 getSocketFromFD: (function() {
  var socket = SOCKFS.getSocket(SYSCALLS.get());
  if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
  return socket;
 }),
 getSocketAddress: (function(allowNull) {
  var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
  if (allowNull && addrp === 0) return null;
  var info = __read_sockaddr(addrp, addrlen);
  if (info.errno) throw new FS.ErrnoError(info.errno);
  info.addr = DNS.lookup_addr(info.addr) || info.addr;
  return info;
 }),
 get64: (function() {
  var low = SYSCALLS.get(), high = SYSCALLS.get();
  if (low >= 0) assert(high === 0); else assert(high === -1);
  return low;
 }),
 getZero: (function() {
  assert(SYSCALLS.get() === 0);
 })
};
function ___syscall140(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
  var offset = offset_low;
  FS.llseek(stream, offset, whence);
  HEAP32[result >> 2] = stream.position;
  if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall145(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doReadv(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall146(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
  return SYSCALLS.doWritev(stream, iov, iovcnt);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
var PROCINFO = {
 ppid: 1,
 pid: 42,
 sid: 42,
 pgid: 42
};
function ___syscall20(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  return PROCINFO.pid;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall221(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
  switch (cmd) {
  case 0:
   {
    var arg = SYSCALLS.get();
    if (arg < 0) {
     return -ERRNO_CODES.EINVAL;
    }
    var newStream;
    newStream = FS.open(stream.path, stream.flags, 0, arg);
    return newStream.fd;
   }
  case 1:
  case 2:
   return 0;
  case 3:
   return stream.flags;
  case 4:
   {
    var arg = SYSCALLS.get();
    stream.flags |= arg;
    return 0;
   }
  case 12:
  case 12:
   {
    var arg = SYSCALLS.get();
    var offset = 0;
    HEAP16[arg + offset >> 1] = 2;
    return 0;
   }
  case 13:
  case 14:
  case 13:
  case 14:
   return 0;
  case 16:
  case 8:
   return -ERRNO_CODES.EINVAL;
  case 9:
   ___setErrNo(ERRNO_CODES.EINVAL);
   return -1;
  default:
   {
    return -ERRNO_CODES.EINVAL;
   }
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall3(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), buf = SYSCALLS.get(), count = SYSCALLS.get();
  return FS.read(stream, HEAP8, buf, count);
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall5(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get();
  var stream = FS.open(pathname, flags, mode);
  return stream.fd;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall54(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
  switch (op) {
  case 21509:
  case 21505:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  case 21510:
  case 21511:
  case 21512:
  case 21506:
  case 21507:
  case 21508:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  case 21519:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    var argp = SYSCALLS.get();
    HEAP32[argp >> 2] = 0;
    return 0;
   }
  case 21520:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return -ERRNO_CODES.EINVAL;
   }
  case 21531:
   {
    var argp = SYSCALLS.get();
    return FS.ioctl(stream, op, argp);
   }
  case 21523:
   {
    if (!stream.tty) return -ERRNO_CODES.ENOTTY;
    return 0;
   }
  default:
   abort("bad ioctl syscall " + op);
  }
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall6(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var stream = SYSCALLS.getStreamFromFD();
  FS.close(stream);
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
function ___syscall91(which, varargs) {
 SYSCALLS.varargs = varargs;
 try {
  var addr = SYSCALLS.get(), len = SYSCALLS.get();
  var info = SYSCALLS.mappings[addr];
  if (!info) return 0;
  if (len === info.len) {
   var stream = FS.getStream(info.fd);
   SYSCALLS.doMsync(addr, stream, len, info.flags);
   FS.munmap(stream);
   SYSCALLS.mappings[addr] = null;
   if (info.allocated) {
    _free(info.malloc);
   }
  }
  return 0;
 } catch (e) {
  if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
  return -e.errno;
 }
}
var cttz_i8 = allocate([ 8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0 ], "i8", ALLOC_STATIC);
function ___unlock() {}
function getShiftFromSize(size) {
 switch (size) {
 case 1:
  return 0;
 case 2:
  return 1;
 case 4:
  return 2;
 case 8:
  return 3;
 default:
  throw new TypeError("Unknown type size: " + size);
 }
}
function embind_init_charCodes() {
 var codes = new Array(256);
 for (var i = 0; i < 256; ++i) {
  codes[i] = String.fromCharCode(i);
 }
 embind_charCodes = codes;
}
var embind_charCodes = undefined;
function readLatin1String(ptr) {
 var ret = "";
 var c = ptr;
 while (HEAPU8[c]) {
  ret += embind_charCodes[HEAPU8[c++]];
 }
 return ret;
}
var awaitingDependencies = {};
var registeredTypes = {};
var typeDependencies = {};
var char_0 = 48;
var char_9 = 57;
function makeLegalFunctionName(name) {
 if (undefined === name) {
  return "_unknown";
 }
 name = name.replace(/[^a-zA-Z0-9_]/g, "$");
 var f = name.charCodeAt(0);
 if (f >= char_0 && f <= char_9) {
  return "_" + name;
 } else {
  return name;
 }
}
function createNamedFunction(name, body) {
 name = makeLegalFunctionName(name);
 return (new Function("body", "return function " + name + "() {\n" + '    "use strict";' + "    return body.apply(this, arguments);\n" + "};\n"))(body);
}
function extendError(baseErrorType, errorName) {
 var errorClass = createNamedFunction(errorName, (function(message) {
  this.name = errorName;
  this.message = message;
  var stack = (new Error(message)).stack;
  if (stack !== undefined) {
   this.stack = this.toString() + "\n" + stack.replace(/^Error(:[^\n]*)?\n/, "");
  }
 }));
 errorClass.prototype = Object.create(baseErrorType.prototype);
 errorClass.prototype.constructor = errorClass;
 errorClass.prototype.toString = (function() {
  if (this.message === undefined) {
   return this.name;
  } else {
   return this.name + ": " + this.message;
  }
 });
 return errorClass;
}
var BindingError = undefined;
function throwBindingError(message) {
 throw new BindingError(message);
}
var InternalError = undefined;
function throwInternalError(message) {
 throw new InternalError(message);
}
function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
 myTypes.forEach((function(type) {
  typeDependencies[type] = dependentTypes;
 }));
 function onComplete(typeConverters) {
  var myTypeConverters = getTypeConverters(typeConverters);
  if (myTypeConverters.length !== myTypes.length) {
   throwInternalError("Mismatched type converter count");
  }
  for (var i = 0; i < myTypes.length; ++i) {
   registerType(myTypes[i], myTypeConverters[i]);
  }
 }
 var typeConverters = new Array(dependentTypes.length);
 var unregisteredTypes = [];
 var registered = 0;
 dependentTypes.forEach((function(dt, i) {
  if (registeredTypes.hasOwnProperty(dt)) {
   typeConverters[i] = registeredTypes[dt];
  } else {
   unregisteredTypes.push(dt);
   if (!awaitingDependencies.hasOwnProperty(dt)) {
    awaitingDependencies[dt] = [];
   }
   awaitingDependencies[dt].push((function() {
    typeConverters[i] = registeredTypes[dt];
    ++registered;
    if (registered === unregisteredTypes.length) {
     onComplete(typeConverters);
    }
   }));
  }
 }));
 if (0 === unregisteredTypes.length) {
  onComplete(typeConverters);
 }
}
function registerType(rawType, registeredInstance, options) {
 options = options || {};
 if (!("argPackAdvance" in registeredInstance)) {
  throw new TypeError("registerType registeredInstance requires argPackAdvance");
 }
 var name = registeredInstance.name;
 if (!rawType) {
  throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
 }
 if (registeredTypes.hasOwnProperty(rawType)) {
  if (options.ignoreDuplicateRegistrations) {
   return;
  } else {
   throwBindingError("Cannot register type '" + name + "' twice");
  }
 }
 registeredTypes[rawType] = registeredInstance;
 delete typeDependencies[rawType];
 if (awaitingDependencies.hasOwnProperty(rawType)) {
  var callbacks = awaitingDependencies[rawType];
  delete awaitingDependencies[rawType];
  callbacks.forEach((function(cb) {
   cb();
  }));
 }
}
function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": (function(wt) {
   return !!wt;
  }),
  "toWireType": (function(destructors, o) {
   return o ? trueValue : falseValue;
  }),
  "argPackAdvance": 8,
  "readValueFromPointer": (function(pointer) {
   var heap;
   if (size === 1) {
    heap = HEAP8;
   } else if (size === 2) {
    heap = HEAP16;
   } else if (size === 4) {
    heap = HEAP32;
   } else {
    throw new TypeError("Unknown boolean type size: " + name);
   }
   return this["fromWireType"](heap[pointer >> shift]);
  }),
  destructorFunction: null
 });
}
function ClassHandle_isAliasOf(other) {
 if (!(this instanceof ClassHandle)) {
  return false;
 }
 if (!(other instanceof ClassHandle)) {
  return false;
 }
 var leftClass = this.$$.ptrType.registeredClass;
 var left = this.$$.ptr;
 var rightClass = other.$$.ptrType.registeredClass;
 var right = other.$$.ptr;
 while (leftClass.baseClass) {
  left = leftClass.upcast(left);
  leftClass = leftClass.baseClass;
 }
 while (rightClass.baseClass) {
  right = rightClass.upcast(right);
  rightClass = rightClass.baseClass;
 }
 return leftClass === rightClass && left === right;
}
function shallowCopyInternalPointer(o) {
 return {
  count: o.count,
  deleteScheduled: o.deleteScheduled,
  preservePointerOnDelete: o.preservePointerOnDelete,
  ptr: o.ptr,
  ptrType: o.ptrType,
  smartPtr: o.smartPtr,
  smartPtrType: o.smartPtrType
 };
}
function throwInstanceAlreadyDeleted(obj) {
 function getInstanceTypeName(handle) {
  return handle.$$.ptrType.registeredClass.name;
 }
 throwBindingError(getInstanceTypeName(obj) + " instance already deleted");
}
function ClassHandle_clone() {
 if (!this.$$.ptr) {
  throwInstanceAlreadyDeleted(this);
 }
 if (this.$$.preservePointerOnDelete) {
  this.$$.count.value += 1;
  return this;
 } else {
  var clone = Object.create(Object.getPrototypeOf(this), {
   $$: {
    value: shallowCopyInternalPointer(this.$$)
   }
  });
  clone.$$.count.value += 1;
  clone.$$.deleteScheduled = false;
  return clone;
 }
}
function runDestructor(handle) {
 var $$ = handle.$$;
 if ($$.smartPtr) {
  $$.smartPtrType.rawDestructor($$.smartPtr);
 } else {
  $$.ptrType.registeredClass.rawDestructor($$.ptr);
 }
}
function ClassHandle_delete() {
 if (!this.$$.ptr) {
  throwInstanceAlreadyDeleted(this);
 }
 if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
  throwBindingError("Object already scheduled for deletion");
 }
 this.$$.count.value -= 1;
 var toDelete = 0 === this.$$.count.value;
 if (toDelete) {
  runDestructor(this);
 }
 if (!this.$$.preservePointerOnDelete) {
  this.$$.smartPtr = undefined;
  this.$$.ptr = undefined;
 }
}
function ClassHandle_isDeleted() {
 return !this.$$.ptr;
}
var delayFunction = undefined;
var deletionQueue = [];
function flushPendingDeletes() {
 while (deletionQueue.length) {
  var obj = deletionQueue.pop();
  obj.$$.deleteScheduled = false;
  obj["delete"]();
 }
}
function ClassHandle_deleteLater() {
 if (!this.$$.ptr) {
  throwInstanceAlreadyDeleted(this);
 }
 if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
  throwBindingError("Object already scheduled for deletion");
 }
 deletionQueue.push(this);
 if (deletionQueue.length === 1 && delayFunction) {
  delayFunction(flushPendingDeletes);
 }
 this.$$.deleteScheduled = true;
 return this;
}
function init_ClassHandle() {
 ClassHandle.prototype["isAliasOf"] = ClassHandle_isAliasOf;
 ClassHandle.prototype["clone"] = ClassHandle_clone;
 ClassHandle.prototype["delete"] = ClassHandle_delete;
 ClassHandle.prototype["isDeleted"] = ClassHandle_isDeleted;
 ClassHandle.prototype["deleteLater"] = ClassHandle_deleteLater;
}
function ClassHandle() {}
var registeredPointers = {};
function ensureOverloadTable(proto, methodName, humanName) {
 if (undefined === proto[methodName].overloadTable) {
  var prevFunc = proto[methodName];
  proto[methodName] = (function() {
   if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
    throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
   }
   return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
  });
  proto[methodName].overloadTable = [];
  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
 }
}
function exposePublicSymbol(name, value, numArguments) {
 if (Module.hasOwnProperty(name)) {
  if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {
   throwBindingError("Cannot register public name '" + name + "' twice");
  }
  ensureOverloadTable(Module, name, name);
  if (Module.hasOwnProperty(numArguments)) {
   throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
  }
  Module[name].overloadTable[numArguments] = value;
 } else {
  Module[name] = value;
  if (undefined !== numArguments) {
   Module[name].numArguments = numArguments;
  }
 }
}
function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {
 this.name = name;
 this.constructor = constructor;
 this.instancePrototype = instancePrototype;
 this.rawDestructor = rawDestructor;
 this.baseClass = baseClass;
 this.getActualType = getActualType;
 this.upcast = upcast;
 this.downcast = downcast;
 this.pureVirtualFunctions = [];
}
function upcastPointer(ptr, ptrClass, desiredClass) {
 while (ptrClass !== desiredClass) {
  if (!ptrClass.upcast) {
   throwBindingError("Expected null or instance of " + desiredClass.name + ", got an instance of " + ptrClass.name);
  }
  ptr = ptrClass.upcast(ptr);
  ptrClass = ptrClass.baseClass;
 }
 return ptr;
}
function constNoSmartPtrRawPointerToWireType(destructors, handle) {
 if (handle === null) {
  if (this.isReference) {
   throwBindingError("null is not a valid " + this.name);
  }
  return 0;
 }
 if (!handle.$$) {
  throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
 }
 if (!handle.$$.ptr) {
  throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
 }
 var handleClass = handle.$$.ptrType.registeredClass;
 var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
 return ptr;
}
function genericPointerToWireType(destructors, handle) {
 var ptr;
 if (handle === null) {
  if (this.isReference) {
   throwBindingError("null is not a valid " + this.name);
  }
  if (this.isSmartPointer) {
   ptr = this.rawConstructor();
   if (destructors !== null) {
    destructors.push(this.rawDestructor, ptr);
   }
   return ptr;
  } else {
   return 0;
  }
 }
 if (!handle.$$) {
  throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
 }
 if (!handle.$$.ptr) {
  throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
 }
 if (!this.isConst && handle.$$.ptrType.isConst) {
  throwBindingError("Cannot convert argument of type " + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + " to parameter type " + this.name);
 }
 var handleClass = handle.$$.ptrType.registeredClass;
 ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
 if (this.isSmartPointer) {
  if (undefined === handle.$$.smartPtr) {
   throwBindingError("Passing raw pointer to smart pointer is illegal");
  }
  switch (this.sharingPolicy) {
  case 0:
   if (handle.$$.smartPtrType === this) {
    ptr = handle.$$.smartPtr;
   } else {
    throwBindingError("Cannot convert argument of type " + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + " to parameter type " + this.name);
   }
   break;
  case 1:
   ptr = handle.$$.smartPtr;
   break;
  case 2:
   if (handle.$$.smartPtrType === this) {
    ptr = handle.$$.smartPtr;
   } else {
    var clonedHandle = handle["clone"]();
    ptr = this.rawShare(ptr, __emval_register((function() {
     clonedHandle["delete"]();
    })));
    if (destructors !== null) {
     destructors.push(this.rawDestructor, ptr);
    }
   }
   break;
  default:
   throwBindingError("Unsupporting sharing policy");
  }
 }
 return ptr;
}
function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {
 if (handle === null) {
  if (this.isReference) {
   throwBindingError("null is not a valid " + this.name);
  }
  return 0;
 }
 if (!handle.$$) {
  throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
 }
 if (!handle.$$.ptr) {
  throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
 }
 if (handle.$$.ptrType.isConst) {
  throwBindingError("Cannot convert argument of type " + handle.$$.ptrType.name + " to parameter type " + this.name);
 }
 var handleClass = handle.$$.ptrType.registeredClass;
 var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
 return ptr;
}
function simpleReadValueFromPointer(pointer) {
 return this["fromWireType"](HEAPU32[pointer >> 2]);
}
function RegisteredPointer_getPointee(ptr) {
 if (this.rawGetPointee) {
  ptr = this.rawGetPointee(ptr);
 }
 return ptr;
}
function RegisteredPointer_destructor(ptr) {
 if (this.rawDestructor) {
  this.rawDestructor(ptr);
 }
}
function RegisteredPointer_deleteObject(handle) {
 if (handle !== null) {
  handle["delete"]();
 }
}
function downcastPointer(ptr, ptrClass, desiredClass) {
 if (ptrClass === desiredClass) {
  return ptr;
 }
 if (undefined === desiredClass.baseClass) {
  return null;
 }
 var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);
 if (rv === null) {
  return null;
 }
 return desiredClass.downcast(rv);
}
function getInheritedInstanceCount() {
 return Object.keys(registeredInstances).length;
}
function getLiveInheritedInstances() {
 var rv = [];
 for (var k in registeredInstances) {
  if (registeredInstances.hasOwnProperty(k)) {
   rv.push(registeredInstances[k]);
  }
 }
 return rv;
}
function setDelayFunction(fn) {
 delayFunction = fn;
 if (deletionQueue.length && delayFunction) {
  delayFunction(flushPendingDeletes);
 }
}
function init_embind() {
 Module["getInheritedInstanceCount"] = getInheritedInstanceCount;
 Module["getLiveInheritedInstances"] = getLiveInheritedInstances;
 Module["flushPendingDeletes"] = flushPendingDeletes;
 Module["setDelayFunction"] = setDelayFunction;
}
var registeredInstances = {};
function getBasestPointer(class_, ptr) {
 if (ptr === undefined) {
  throwBindingError("ptr should not be undefined");
 }
 while (class_.baseClass) {
  ptr = class_.upcast(ptr);
  class_ = class_.baseClass;
 }
 return ptr;
}
function getInheritedInstance(class_, ptr) {
 ptr = getBasestPointer(class_, ptr);
 return registeredInstances[ptr];
}
function makeClassHandle(prototype, record) {
 if (!record.ptrType || !record.ptr) {
  throwInternalError("makeClassHandle requires ptr and ptrType");
 }
 var hasSmartPtrType = !!record.smartPtrType;
 var hasSmartPtr = !!record.smartPtr;
 if (hasSmartPtrType !== hasSmartPtr) {
  throwInternalError("Both smartPtrType and smartPtr must be specified");
 }
 record.count = {
  value: 1
 };
 return Object.create(prototype, {
  $$: {
   value: record
  }
 });
}
function RegisteredPointer_fromWireType(ptr) {
 var rawPointer = this.getPointee(ptr);
 if (!rawPointer) {
  this.destructor(ptr);
  return null;
 }
 var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);
 if (undefined !== registeredInstance) {
  if (0 === registeredInstance.$$.count.value) {
   registeredInstance.$$.ptr = rawPointer;
   registeredInstance.$$.smartPtr = ptr;
   return registeredInstance["clone"]();
  } else {
   var rv = registeredInstance["clone"]();
   this.destructor(ptr);
   return rv;
  }
 }
 function makeDefaultHandle() {
  if (this.isSmartPointer) {
   return makeClassHandle(this.registeredClass.instancePrototype, {
    ptrType: this.pointeeType,
    ptr: rawPointer,
    smartPtrType: this,
    smartPtr: ptr
   });
  } else {
   return makeClassHandle(this.registeredClass.instancePrototype, {
    ptrType: this,
    ptr: ptr
   });
  }
 }
 var actualType = this.registeredClass.getActualType(rawPointer);
 var registeredPointerRecord = registeredPointers[actualType];
 if (!registeredPointerRecord) {
  return makeDefaultHandle.call(this);
 }
 var toType;
 if (this.isConst) {
  toType = registeredPointerRecord.constPointerType;
 } else {
  toType = registeredPointerRecord.pointerType;
 }
 var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);
 if (dp === null) {
  return makeDefaultHandle.call(this);
 }
 if (this.isSmartPointer) {
  return makeClassHandle(toType.registeredClass.instancePrototype, {
   ptrType: toType,
   ptr: dp,
   smartPtrType: this,
   smartPtr: ptr
  });
 } else {
  return makeClassHandle(toType.registeredClass.instancePrototype, {
   ptrType: toType,
   ptr: dp
  });
 }
}
function init_RegisteredPointer() {
 RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;
 RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;
 RegisteredPointer.prototype["argPackAdvance"] = 8;
 RegisteredPointer.prototype["readValueFromPointer"] = simpleReadValueFromPointer;
 RegisteredPointer.prototype["deleteObject"] = RegisteredPointer_deleteObject;
 RegisteredPointer.prototype["fromWireType"] = RegisteredPointer_fromWireType;
}
function RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {
 this.name = name;
 this.registeredClass = registeredClass;
 this.isReference = isReference;
 this.isConst = isConst;
 this.isSmartPointer = isSmartPointer;
 this.pointeeType = pointeeType;
 this.sharingPolicy = sharingPolicy;
 this.rawGetPointee = rawGetPointee;
 this.rawConstructor = rawConstructor;
 this.rawShare = rawShare;
 this.rawDestructor = rawDestructor;
 if (!isSmartPointer && registeredClass.baseClass === undefined) {
  if (isConst) {
   this["toWireType"] = constNoSmartPtrRawPointerToWireType;
   this.destructorFunction = null;
  } else {
   this["toWireType"] = nonConstNoSmartPtrRawPointerToWireType;
   this.destructorFunction = null;
  }
 } else {
  this["toWireType"] = genericPointerToWireType;
 }
}
function replacePublicSymbol(name, value, numArguments) {
 if (!Module.hasOwnProperty(name)) {
  throwInternalError("Replacing nonexistant public symbol");
 }
 if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
  Module[name].overloadTable[numArguments] = value;
 } else {
  Module[name] = value;
  Module[name].argCount = numArguments;
 }
}
function embind__requireFunction(signature, rawFunction) {
 signature = readLatin1String(signature);
 function makeDynCaller(dynCall) {
  var args = [];
  for (var i = 1; i < signature.length; ++i) {
   args.push("a" + i);
  }
  var name = "dynCall_" + signature + "_" + rawFunction;
  var body = "return function " + name + "(" + args.join(", ") + ") {\n";
  body += "    return dynCall(rawFunction" + (args.length ? ", " : "") + args.join(", ") + ");\n";
  body += "};\n";
  return (new Function("dynCall", "rawFunction", body))(dynCall, rawFunction);
 }
 var fp;
 if (Module["FUNCTION_TABLE_" + signature] !== undefined) {
  fp = Module["FUNCTION_TABLE_" + signature][rawFunction];
 } else if (typeof FUNCTION_TABLE !== "undefined") {
  fp = FUNCTION_TABLE[rawFunction];
 } else {
  var dc = Module["asm"]["dynCall_" + signature];
  if (dc === undefined) {
   dc = Module["asm"]["dynCall_" + signature.replace(/f/g, "d")];
   if (dc === undefined) {
    throwBindingError("No dynCall invoker for signature: " + signature);
   }
  }
  fp = makeDynCaller(dc);
 }
 if (typeof fp !== "function") {
  throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
 }
 return fp;
}
var UnboundTypeError = undefined;
function getTypeName(type) {
 var ptr = ___getTypeName(type);
 var rv = readLatin1String(ptr);
 _free(ptr);
 return rv;
}
function throwUnboundTypeError(message, types) {
 var unboundTypes = [];
 var seen = {};
 function visit(type) {
  if (seen[type]) {
   return;
  }
  if (registeredTypes[type]) {
   return;
  }
  if (typeDependencies[type]) {
   typeDependencies[type].forEach(visit);
   return;
  }
  unboundTypes.push(type);
  seen[type] = true;
 }
 types.forEach(visit);
 throw new UnboundTypeError(message + ": " + unboundTypes.map(getTypeName).join([ ", " ]));
}
function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {
 name = readLatin1String(name);
 getActualType = embind__requireFunction(getActualTypeSignature, getActualType);
 if (upcast) {
  upcast = embind__requireFunction(upcastSignature, upcast);
 }
 if (downcast) {
  downcast = embind__requireFunction(downcastSignature, downcast);
 }
 rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);
 var legalFunctionName = makeLegalFunctionName(name);
 exposePublicSymbol(legalFunctionName, (function() {
  throwUnboundTypeError("Cannot construct " + name + " due to unbound types", [ baseClassRawType ]);
 }));
 whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], (function(base) {
  base = base[0];
  var baseClass;
  var basePrototype;
  if (baseClassRawType) {
   baseClass = base.registeredClass;
   basePrototype = baseClass.instancePrototype;
  } else {
   basePrototype = ClassHandle.prototype;
  }
  var constructor = createNamedFunction(legalFunctionName, (function() {
   if (Object.getPrototypeOf(this) !== instancePrototype) {
    throw new BindingError("Use 'new' to construct " + name);
   }
   if (undefined === registeredClass.constructor_body) {
    throw new BindingError(name + " has no accessible constructor");
   }
   var body = registeredClass.constructor_body[arguments.length];
   if (undefined === body) {
    throw new BindingError("Tried to invoke ctor of " + name + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(registeredClass.constructor_body).toString() + ") parameters instead!");
   }
   return body.apply(this, arguments);
  }));
  var instancePrototype = Object.create(basePrototype, {
   constructor: {
    value: constructor
   }
  });
  constructor.prototype = instancePrototype;
  var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);
  var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);
  var pointerConverter = new RegisteredPointer(name + "*", registeredClass, false, false, false);
  var constPointerConverter = new RegisteredPointer(name + " const*", registeredClass, false, true, false);
  registeredPointers[rawType] = {
   pointerType: pointerConverter,
   constPointerType: constPointerConverter
  };
  replacePublicSymbol(legalFunctionName, constructor);
  return [ referenceConverter, pointerConverter, constPointerConverter ];
 }));
}
function heap32VectorToArray(count, firstElement) {
 var array = [];
 for (var i = 0; i < count; i++) {
  array.push(HEAP32[(firstElement >> 2) + i]);
 }
 return array;
}
function runDestructors(destructors) {
 while (destructors.length) {
  var ptr = destructors.pop();
  var del = destructors.pop();
  del(ptr);
 }
}
function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {
 var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 invoker = embind__requireFunction(invokerSignature, invoker);
 whenDependentTypesAreResolved([], [ rawClassType ], (function(classType) {
  classType = classType[0];
  var humanName = "constructor " + classType.name;
  if (undefined === classType.registeredClass.constructor_body) {
   classType.registeredClass.constructor_body = [];
  }
  if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {
   throw new BindingError("Cannot register multiple constructors with identical number of parameters (" + (argCount - 1) + ") for class '" + classType.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
  }
  classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {
   throwUnboundTypeError("Cannot construct " + classType.name + " due to unbound types", rawArgTypes);
  };
  whenDependentTypesAreResolved([], rawArgTypes, (function(argTypes) {
   classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {
    if (arguments.length !== argCount - 1) {
     throwBindingError(humanName + " called with " + arguments.length + " arguments, expected " + (argCount - 1));
    }
    var destructors = [];
    var args = new Array(argCount);
    args[0] = rawConstructor;
    for (var i = 1; i < argCount; ++i) {
     args[i] = argTypes[i]["toWireType"](destructors, arguments[i - 1]);
    }
    var ptr = invoker.apply(null, args);
    runDestructors(destructors);
    return argTypes[0]["fromWireType"](ptr);
   };
   return [];
  }));
  return [];
 }));
}
function new_(constructor, argumentList) {
 if (!(constructor instanceof Function)) {
  throw new TypeError("new_ called with constructor type " + typeof constructor + " which is not a function");
 }
 var dummy = createNamedFunction(constructor.name || "unknownFunctionName", (function() {}));
 dummy.prototype = constructor.prototype;
 var obj = new dummy;
 var r = constructor.apply(obj, argumentList);
 return r instanceof Object ? r : obj;
}
function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
 var argCount = argTypes.length;
 if (argCount < 2) {
  throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
 }
 var isClassMethodFunc = argTypes[1] !== null && classType !== null;
 var needsDestructorStack = false;
 for (var i = 1; i < argTypes.length; ++i) {
  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {
   needsDestructorStack = true;
   break;
  }
 }
 var returns = argTypes[0].name !== "void";
 var argsList = "";
 var argsListWired = "";
 for (var i = 0; i < argCount - 2; ++i) {
  argsList += (i !== 0 ? ", " : "") + "arg" + i;
  argsListWired += (i !== 0 ? ", " : "") + "arg" + i + "Wired";
 }
 var invokerFnBody = "return function " + makeLegalFunctionName(humanName) + "(" + argsList + ") {\n" + "if (arguments.length !== " + (argCount - 2) + ") {\n" + "throwBindingError('function " + humanName + " called with ' + arguments.length + ' arguments, expected " + (argCount - 2) + " args!');\n" + "}\n";
 if (needsDestructorStack) {
  invokerFnBody += "var destructors = [];\n";
 }
 var dtorStack = needsDestructorStack ? "destructors" : "null";
 var args1 = [ "throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam" ];
 var args2 = [ throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];
 if (isClassMethodFunc) {
  invokerFnBody += "var thisWired = classParam.toWireType(" + dtorStack + ", this);\n";
 }
 for (var i = 0; i < argCount - 2; ++i) {
  invokerFnBody += "var arg" + i + "Wired = argType" + i + ".toWireType(" + dtorStack + ", arg" + i + "); // " + argTypes[i + 2].name + "\n";
  args1.push("argType" + i);
  args2.push(argTypes[i + 2]);
 }
 if (isClassMethodFunc) {
  argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
 }
 invokerFnBody += (returns ? "var rv = " : "") + "invoker(fn" + (argsListWired.length > 0 ? ", " : "") + argsListWired + ");\n";
 if (needsDestructorStack) {
  invokerFnBody += "runDestructors(destructors);\n";
 } else {
  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {
   var paramName = i === 1 ? "thisWired" : "arg" + (i - 2) + "Wired";
   if (argTypes[i].destructorFunction !== null) {
    invokerFnBody += paramName + "_dtor(" + paramName + "); // " + argTypes[i].name + "\n";
    args1.push(paramName + "_dtor");
    args2.push(argTypes[i].destructorFunction);
   }
  }
 }
 if (returns) {
  invokerFnBody += "var ret = retType.fromWireType(rv);\n" + "return ret;\n";
 } else {}
 invokerFnBody += "}\n";
 args1.push(invokerFnBody);
 var invokerFunction = new_(Function, args1).apply(null, args2);
 return invokerFunction;
}
function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {
 var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 methodName = readLatin1String(methodName);
 rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);
 whenDependentTypesAreResolved([], [ rawClassType ], (function(classType) {
  classType = classType[0];
  var humanName = classType.name + "." + methodName;
  if (isPureVirtual) {
   classType.registeredClass.pureVirtualFunctions.push(methodName);
  }
  function unboundTypesHandler() {
   throwUnboundTypeError("Cannot call " + humanName + " due to unbound types", rawArgTypes);
  }
  var proto = classType.registeredClass.instancePrototype;
  var method = proto[methodName];
  if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {
   unboundTypesHandler.argCount = argCount - 2;
   unboundTypesHandler.className = classType.name;
   proto[methodName] = unboundTypesHandler;
  } else {
   ensureOverloadTable(proto, methodName, humanName);
   proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;
  }
  whenDependentTypesAreResolved([], rawArgTypes, (function(argTypes) {
   var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);
   if (undefined === proto[methodName].overloadTable) {
    memberFunction.argCount = argCount - 2;
    proto[methodName] = memberFunction;
   } else {
    proto[methodName].overloadTable[argCount - 2] = memberFunction;
   }
   return [];
  }));
  return [];
 }));
}
var emval_free_list = [];
var emval_handle_array = [ {}, {
 value: undefined
}, {
 value: null
}, {
 value: true
}, {
 value: false
} ];
function __emval_decref(handle) {
 if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
  emval_handle_array[handle] = undefined;
  emval_free_list.push(handle);
 }
}
function count_emval_handles() {
 var count = 0;
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   ++count;
  }
 }
 return count;
}
function get_first_emval() {
 for (var i = 5; i < emval_handle_array.length; ++i) {
  if (emval_handle_array[i] !== undefined) {
   return emval_handle_array[i];
  }
 }
 return null;
}
function init_emval() {
 Module["count_emval_handles"] = count_emval_handles;
 Module["get_first_emval"] = get_first_emval;
}
function __emval_register(value) {
 switch (value) {
 case undefined:
  {
   return 1;
  }
 case null:
  {
   return 2;
  }
 case true:
  {
   return 3;
  }
 case false:
  {
   return 4;
  }
 default:
  {
   var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;
   emval_handle_array[handle] = {
    refcount: 1,
    value: value
   };
   return handle;
  }
 }
}
function __embind_register_emval(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": (function(handle) {
   var rv = emval_handle_array[handle].value;
   __emval_decref(handle);
   return rv;
  }),
  "toWireType": (function(destructors, value) {
   return __emval_register(value);
  }),
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: null
 });
}
function _embind_repr(v) {
 if (v === null) {
  return "null";
 }
 var t = typeof v;
 if (t === "object" || t === "array" || t === "function") {
  return v.toString();
 } else {
  return "" + v;
 }
}
function floatReadValueFromPointer(name, shift) {
 switch (shift) {
 case 2:
  return (function(pointer) {
   return this["fromWireType"](HEAPF32[pointer >> 2]);
  });
 case 3:
  return (function(pointer) {
   return this["fromWireType"](HEAPF64[pointer >> 3]);
  });
 default:
  throw new TypeError("Unknown float type: " + name);
 }
}
function __embind_register_float(rawType, name, size) {
 var shift = getShiftFromSize(size);
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": (function(value) {
   return value;
  }),
  "toWireType": (function(destructors, value) {
   if (typeof value !== "number" && typeof value !== "boolean") {
    throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
   }
   return value;
  }),
  "argPackAdvance": 8,
  "readValueFromPointer": floatReadValueFromPointer(name, shift),
  destructorFunction: null
 });
}
function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {
 var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
 name = readLatin1String(name);
 rawInvoker = embind__requireFunction(signature, rawInvoker);
 exposePublicSymbol(name, (function() {
  throwUnboundTypeError("Cannot call " + name + " due to unbound types", argTypes);
 }), argCount - 1);
 whenDependentTypesAreResolved([], argTypes, (function(argTypes) {
  var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));
  replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);
  return [];
 }));
}
function integerReadValueFromPointer(name, shift, signed) {
 switch (shift) {
 case 0:
  return signed ? function readS8FromPointer(pointer) {
   return HEAP8[pointer];
  } : function readU8FromPointer(pointer) {
   return HEAPU8[pointer];
  };
 case 1:
  return signed ? function readS16FromPointer(pointer) {
   return HEAP16[pointer >> 1];
  } : function readU16FromPointer(pointer) {
   return HEAPU16[pointer >> 1];
  };
 case 2:
  return signed ? function readS32FromPointer(pointer) {
   return HEAP32[pointer >> 2];
  } : function readU32FromPointer(pointer) {
   return HEAPU32[pointer >> 2];
  };
 default:
  throw new TypeError("Unknown integer type: " + name);
 }
}
function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
 name = readLatin1String(name);
 if (maxRange === -1) {
  maxRange = 4294967295;
 }
 var shift = getShiftFromSize(size);
 var fromWireType = (function(value) {
  return value;
 });
 if (minRange === 0) {
  var bitshift = 32 - 8 * size;
  fromWireType = (function(value) {
   return value << bitshift >>> bitshift;
  });
 }
 var isUnsignedType = name.indexOf("unsigned") != -1;
 registerType(primitiveType, {
  name: name,
  "fromWireType": fromWireType,
  "toWireType": (function(destructors, value) {
   if (typeof value !== "number" && typeof value !== "boolean") {
    throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
   }
   if (value < minRange || value > maxRange) {
    throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ", " + maxRange + "]!");
   }
   return isUnsignedType ? value >>> 0 : value | 0;
  }),
  "argPackAdvance": 8,
  "readValueFromPointer": integerReadValueFromPointer(name, shift, minRange !== 0),
  destructorFunction: null
 });
}
function __embind_register_memory_view(rawType, dataTypeIndex, name) {
 var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];
 var TA = typeMapping[dataTypeIndex];
 function decodeMemoryView(handle) {
  handle = handle >> 2;
  var heap = HEAPU32;
  var size = heap[handle];
  var data = heap[handle + 1];
  return new TA(heap["buffer"], data, size);
 }
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": decodeMemoryView,
  "argPackAdvance": 8,
  "readValueFromPointer": decodeMemoryView
 }, {
  ignoreDuplicateRegistrations: true
 });
}
function __embind_register_std_string(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  name: name,
  "fromWireType": (function(value) {
   var length = HEAPU32[value >> 2];
   var a = new Array(length);
   for (var i = 0; i < length; ++i) {
    a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
   }
   _free(value);
   return a.join("");
  }),
  "toWireType": (function(destructors, value) {
   if (value instanceof ArrayBuffer) {
    value = new Uint8Array(value);
   }
   function getTAElement(ta, index) {
    return ta[index];
   }
   function getStringElement(string, index) {
    return string.charCodeAt(index);
   }
   var getElement;
   if (value instanceof Uint8Array) {
    getElement = getTAElement;
   } else if (value instanceof Uint8ClampedArray) {
    getElement = getTAElement;
   } else if (value instanceof Int8Array) {
    getElement = getTAElement;
   } else if (typeof value === "string") {
    getElement = getStringElement;
   } else {
    throwBindingError("Cannot pass non-string to std::string");
   }
   var length = value.length;
   var ptr = _malloc(4 + length);
   HEAPU32[ptr >> 2] = length;
   for (var i = 0; i < length; ++i) {
    var charCode = getElement(value, i);
    if (charCode > 255) {
     _free(ptr);
     throwBindingError("String has UTF-16 code units that do not fit in 8 bits");
    }
    HEAPU8[ptr + 4 + i] = charCode;
   }
   if (destructors !== null) {
    destructors.push(_free, ptr);
   }
   return ptr;
  }),
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: (function(ptr) {
   _free(ptr);
  })
 });
}
function __embind_register_std_wstring(rawType, charSize, name) {
 name = readLatin1String(name);
 var getHeap, shift;
 if (charSize === 2) {
  getHeap = (function() {
   return HEAPU16;
  });
  shift = 1;
 } else if (charSize === 4) {
  getHeap = (function() {
   return HEAPU32;
  });
  shift = 2;
 }
 registerType(rawType, {
  name: name,
  "fromWireType": (function(value) {
   var HEAP = getHeap();
   var length = HEAPU32[value >> 2];
   var a = new Array(length);
   var start = value + 4 >> shift;
   for (var i = 0; i < length; ++i) {
    a[i] = String.fromCharCode(HEAP[start + i]);
   }
   _free(value);
   return a.join("");
  }),
  "toWireType": (function(destructors, value) {
   var HEAP = getHeap();
   var length = value.length;
   var ptr = _malloc(4 + length * charSize);
   HEAPU32[ptr >> 2] = length;
   var start = ptr + 4 >> shift;
   for (var i = 0; i < length; ++i) {
    HEAP[start + i] = value.charCodeAt(i);
   }
   if (destructors !== null) {
    destructors.push(_free, ptr);
   }
   return ptr;
  }),
  "argPackAdvance": 8,
  "readValueFromPointer": simpleReadValueFromPointer,
  destructorFunction: (function(ptr) {
   _free(ptr);
  })
 });
}
function __embind_register_void(rawType, name) {
 name = readLatin1String(name);
 registerType(rawType, {
  isVoid: true,
  name: name,
  "argPackAdvance": 0,
  "fromWireType": (function() {
   return undefined;
  }),
  "toWireType": (function(destructors, o) {
   return undefined;
  })
 });
}
function _abort() {
 Module["abort"]();
}
var _environ = STATICTOP;
STATICTOP += 16;
function ___buildEnvironment(env) {
 var MAX_ENV_VALUES = 64;
 var TOTAL_ENV_SIZE = 1024;
 var poolPtr;
 var envPtr;
 if (!___buildEnvironment.called) {
  ___buildEnvironment.called = true;
  ENV["USER"] = ENV["LOGNAME"] = "web_user";
  ENV["PATH"] = "/";
  ENV["PWD"] = "/";
  ENV["HOME"] = "/home/web_user";
  ENV["LANG"] = "C.UTF-8";
  ENV["_"] = Module["thisProgram"];
  poolPtr = staticAlloc(TOTAL_ENV_SIZE);
  envPtr = staticAlloc(MAX_ENV_VALUES * 4);
  HEAP32[envPtr >> 2] = poolPtr;
  HEAP32[_environ >> 2] = envPtr;
 } else {
  envPtr = HEAP32[_environ >> 2];
  poolPtr = HEAP32[envPtr >> 2];
 }
 var strings = [];
 var totalSize = 0;
 for (var key in env) {
  if (typeof env[key] === "string") {
   var line = key + "=" + env[key];
   strings.push(line);
   totalSize += line.length;
  }
 }
 if (totalSize > TOTAL_ENV_SIZE) {
  throw new Error("Environment size exceeded TOTAL_ENV_SIZE!");
 }
 var ptrSize = 4;
 for (var i = 0; i < strings.length; i++) {
  var line = strings[i];
  writeAsciiToMemory(line, poolPtr);
  HEAP32[envPtr + i * ptrSize >> 2] = poolPtr;
  poolPtr += line.length + 1;
 }
 HEAP32[envPtr + strings.length * ptrSize >> 2] = 0;
}
var ENV = {};
function _getenv(name) {
 if (name === 0) return 0;
 name = Pointer_stringify(name);
 if (!ENV.hasOwnProperty(name)) return 0;
 if (_getenv.ret) _free(_getenv.ret);
 _getenv.ret = allocateUTF8(ENV[name]);
 return _getenv.ret;
}
var _llvm_fabs_f64 = Math_abs;
function _emscripten_memcpy_big(dest, src, num) {
 HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
 return dest;
}
function _pthread_cond_wait() {
 return 0;
}
var PTHREAD_SPECIFIC = {};
function _pthread_getspecific(key) {
 return PTHREAD_SPECIFIC[key] || 0;
}
var PTHREAD_SPECIFIC_NEXT_KEY = 1;
function _pthread_key_create(key, destructor) {
 if (key == 0) {
  return ERRNO_CODES.EINVAL;
 }
 HEAP32[key >> 2] = PTHREAD_SPECIFIC_NEXT_KEY;
 PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
 PTHREAD_SPECIFIC_NEXT_KEY++;
 return 0;
}
function _pthread_once(ptr, func) {
 if (!_pthread_once.seen) _pthread_once.seen = {};
 if (ptr in _pthread_once.seen) return;
 Module["dynCall_v"](func);
 _pthread_once.seen[ptr] = 1;
}
function _pthread_setspecific(key, value) {
 if (!(key in PTHREAD_SPECIFIC)) {
  return ERRNO_CODES.EINVAL;
 }
 PTHREAD_SPECIFIC[key] = value;
 return 0;
}
function __isLeapYear(year) {
 return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function __arraySum(array, index) {
 var sum = 0;
 for (var i = 0; i <= index; sum += array[i++]) ;
 return sum;
}
var __MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
var __MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];
function __addDays(date, days) {
 var newDate = new Date(date.getTime());
 while (days > 0) {
  var leap = __isLeapYear(newDate.getFullYear());
  var currentMonth = newDate.getMonth();
  var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  if (days > daysInCurrentMonth - newDate.getDate()) {
   days -= daysInCurrentMonth - newDate.getDate() + 1;
   newDate.setDate(1);
   if (currentMonth < 11) {
    newDate.setMonth(currentMonth + 1);
   } else {
    newDate.setMonth(0);
    newDate.setFullYear(newDate.getFullYear() + 1);
   }
  } else {
   newDate.setDate(newDate.getDate() + days);
   return newDate;
  }
 }
 return newDate;
}
function _strftime(s, maxsize, format, tm) {
 var tm_zone = HEAP32[tm + 40 >> 2];
 var date = {
  tm_sec: HEAP32[tm >> 2],
  tm_min: HEAP32[tm + 4 >> 2],
  tm_hour: HEAP32[tm + 8 >> 2],
  tm_mday: HEAP32[tm + 12 >> 2],
  tm_mon: HEAP32[tm + 16 >> 2],
  tm_year: HEAP32[tm + 20 >> 2],
  tm_wday: HEAP32[tm + 24 >> 2],
  tm_yday: HEAP32[tm + 28 >> 2],
  tm_isdst: HEAP32[tm + 32 >> 2],
  tm_gmtoff: HEAP32[tm + 36 >> 2],
  tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ""
 };
 var pattern = Pointer_stringify(format);
 var EXPANSION_RULES_1 = {
  "%c": "%a %b %d %H:%M:%S %Y",
  "%D": "%m/%d/%y",
  "%F": "%Y-%m-%d",
  "%h": "%b",
  "%r": "%I:%M:%S %p",
  "%R": "%H:%M",
  "%T": "%H:%M:%S",
  "%x": "%m/%d/%y",
  "%X": "%H:%M:%S"
 };
 for (var rule in EXPANSION_RULES_1) {
  pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
 }
 var WEEKDAYS = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ];
 var MONTHS = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];
 function leadingSomething(value, digits, character) {
  var str = typeof value === "number" ? value.toString() : value || "";
  while (str.length < digits) {
   str = character[0] + str;
  }
  return str;
 }
 function leadingNulls(value, digits) {
  return leadingSomething(value, digits, "0");
 }
 function compareByDay(date1, date2) {
  function sgn(value) {
   return value < 0 ? -1 : value > 0 ? 1 : 0;
  }
  var compare;
  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
    compare = sgn(date1.getDate() - date2.getDate());
   }
  }
  return compare;
 }
 function getFirstWeekStartDate(janFourth) {
  switch (janFourth.getDay()) {
  case 0:
   return new Date(janFourth.getFullYear() - 1, 11, 29);
  case 1:
   return janFourth;
  case 2:
   return new Date(janFourth.getFullYear(), 0, 3);
  case 3:
   return new Date(janFourth.getFullYear(), 0, 2);
  case 4:
   return new Date(janFourth.getFullYear(), 0, 1);
  case 5:
   return new Date(janFourth.getFullYear() - 1, 11, 31);
  case 6:
   return new Date(janFourth.getFullYear() - 1, 11, 30);
  }
 }
 function getWeekBasedYear(date) {
  var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
    return thisDate.getFullYear() + 1;
   } else {
    return thisDate.getFullYear();
   }
  } else {
   return thisDate.getFullYear() - 1;
  }
 }
 var EXPANSION_RULES_2 = {
  "%a": (function(date) {
   return WEEKDAYS[date.tm_wday].substring(0, 3);
  }),
  "%A": (function(date) {
   return WEEKDAYS[date.tm_wday];
  }),
  "%b": (function(date) {
   return MONTHS[date.tm_mon].substring(0, 3);
  }),
  "%B": (function(date) {
   return MONTHS[date.tm_mon];
  }),
  "%C": (function(date) {
   var year = date.tm_year + 1900;
   return leadingNulls(year / 100 | 0, 2);
  }),
  "%d": (function(date) {
   return leadingNulls(date.tm_mday, 2);
  }),
  "%e": (function(date) {
   return leadingSomething(date.tm_mday, 2, " ");
  }),
  "%g": (function(date) {
   return getWeekBasedYear(date).toString().substring(2);
  }),
  "%G": (function(date) {
   return getWeekBasedYear(date);
  }),
  "%H": (function(date) {
   return leadingNulls(date.tm_hour, 2);
  }),
  "%I": (function(date) {
   var twelveHour = date.tm_hour;
   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;
   return leadingNulls(twelveHour, 2);
  }),
  "%j": (function(date) {
   return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
  }),
  "%m": (function(date) {
   return leadingNulls(date.tm_mon + 1, 2);
  }),
  "%M": (function(date) {
   return leadingNulls(date.tm_min, 2);
  }),
  "%n": (function() {
   return "\n";
  }),
  "%p": (function(date) {
   if (date.tm_hour >= 0 && date.tm_hour < 12) {
    return "AM";
   } else {
    return "PM";
   }
  }),
  "%S": (function(date) {
   return leadingNulls(date.tm_sec, 2);
  }),
  "%t": (function() {
   return "\t";
  }),
  "%u": (function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay() || 7;
  }),
  "%U": (function(date) {
   var janFirst = new Date(date.tm_year + 1900, 0, 1);
   var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstSunday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();
    var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstSunday, janFirst) === 0 ? "01" : "00";
  }),
  "%V": (function(date) {
   var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);
   var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);
   var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
   var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
   var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);
   if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
    return "53";
   }
   if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
    return "01";
   }
   var daysDifference;
   if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {
    daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();
   } else {
    daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();
   }
   return leadingNulls(Math.ceil(daysDifference / 7), 2);
  }),
  "%w": (function(date) {
   var day = new Date(date.tm_year + 1900, date.tm_mon + 1, date.tm_mday, 0, 0, 0, 0);
   return day.getDay();
  }),
  "%W": (function(date) {
   var janFirst = new Date(date.tm_year, 0, 1);
   var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);
   var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);
   if (compareByDay(firstMonday, endDate) < 0) {
    var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
    var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();
    var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
    return leadingNulls(Math.ceil(days / 7), 2);
   }
   return compareByDay(firstMonday, janFirst) === 0 ? "01" : "00";
  }),
  "%y": (function(date) {
   return (date.tm_year + 1900).toString().substring(2);
  }),
  "%Y": (function(date) {
   return date.tm_year + 1900;
  }),
  "%z": (function(date) {
   var off = date.tm_gmtoff;
   var ahead = off >= 0;
   off = Math.abs(off) / 60;
   off = off / 60 * 100 + off % 60;
   return (ahead ? "+" : "-") + String("0000" + off).slice(-4);
  }),
  "%Z": (function(date) {
   return date.tm_zone;
  }),
  "%%": (function() {
   return "%";
  })
 };
 for (var rule in EXPANSION_RULES_2) {
  if (pattern.indexOf(rule) >= 0) {
   pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date));
  }
 }
 var bytes = intArrayFromString(pattern, false);
 if (bytes.length > maxsize) {
  return 0;
 }
 writeArrayToMemory(bytes, s);
 return bytes.length - 1;
}
function _strftime_l(s, maxsize, format, tm) {
 return _strftime(s, maxsize, format, tm);
}
function _time(ptr) {
 var ret = Date.now() / 1e3 | 0;
 if (ptr) {
  HEAP32[ptr >> 2] = ret;
 }
 return ret;
}
FS.staticInit();
__ATINIT__.unshift((function() {
 if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
}));
__ATMAIN__.push((function() {
 FS.ignorePermissions = false;
}));
__ATEXIT__.push((function() {
 FS.quit();
}));
__ATINIT__.unshift((function() {
 TTY.init();
}));
__ATEXIT__.push((function() {
 TTY.shutdown();
}));
if (ENVIRONMENT_IS_NODE) {
 var fs = require("fs");
 var NODEJS_PATH = require("path");
 NODEFS.staticInit();
}
embind_init_charCodes();
BindingError = Module["BindingError"] = extendError(Error, "BindingError");
InternalError = Module["InternalError"] = extendError(Error, "InternalError");
init_ClassHandle();
init_RegisteredPointer();
init_embind();
UnboundTypeError = Module["UnboundTypeError"] = extendError(Error, "UnboundTypeError");
init_emval();
___buildEnvironment(ENV);
DYNAMICTOP_PTR = staticAlloc(4);
STACK_BASE = STACKTOP = alignMemory(STATICTOP);
STACK_MAX = STACK_BASE + TOTAL_STACK;
DYNAMIC_BASE = alignMemory(STACK_MAX);
HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;
staticSealed = true;
var ASSERTIONS = false;
function intArrayFromString(stringy, dontAddNull, length) {
 var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
 var u8array = new Array(len);
 var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
 if (dontAddNull) u8array.length = numBytesWritten;
 return u8array;
}
function intArrayToString(array) {
 var ret = [];
 for (var i = 0; i < array.length; i++) {
  var chr = array[i];
  if (chr > 255) {
   if (ASSERTIONS) {
    assert(false, "Character code " + chr + " (" + String.fromCharCode(chr) + ")  at offset " + i + " not in 0x00-0xFF.");
   }
   chr &= 255;
  }
  ret.push(String.fromCharCode(chr));
 }
 return ret.join("");
}
var decodeBase64 = typeof atob === "function" ? atob : (function(input) {
 var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
 var output = "";
 var chr1, chr2, chr3;
 var enc1, enc2, enc3, enc4;
 var i = 0;
 input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
 do {
  enc1 = keyStr.indexOf(input.charAt(i++));
  enc2 = keyStr.indexOf(input.charAt(i++));
  enc3 = keyStr.indexOf(input.charAt(i++));
  enc4 = keyStr.indexOf(input.charAt(i++));
  chr1 = enc1 << 2 | enc2 >> 4;
  chr2 = (enc2 & 15) << 4 | enc3 >> 2;
  chr3 = (enc3 & 3) << 6 | enc4;
  output = output + String.fromCharCode(chr1);
  if (enc3 !== 64) {
   output = output + String.fromCharCode(chr2);
  }
  if (enc4 !== 64) {
   output = output + String.fromCharCode(chr3);
  }
 } while (i < input.length);
 return output;
});
function intArrayFromBase64(s) {
 if (typeof ENVIRONMENT_IS_NODE === "boolean" && ENVIRONMENT_IS_NODE) {
  var buf;
  try {
   buf = Buffer.from(s, "base64");
  } catch (_) {
   buf = new Buffer(s, "base64");
  }
  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
 }
 try {
  var decoded = decodeBase64(s);
  var bytes = new Uint8Array(decoded.length);
  for (var i = 0; i < decoded.length; ++i) {
   bytes[i] = decoded.charCodeAt(i);
  }
  return bytes;
 } catch (_) {
  throw new Error("Converting base64 string to bytes failed.");
 }
}
function tryParseAsDataURI(filename) {
 if (!isDataURI(filename)) {
  return;
 }
 return intArrayFromBase64(filename.slice(dataURIPrefix.length));
}
function invoke_ddd(index, a1, a2) {
 try {
  return Module["dynCall_ddd"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_didd(index, a1, a2, a3) {
 try {
  return Module["dynCall_didd"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_ii(index, a1) {
 try {
  return Module["dynCall_ii"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iii(index, a1, a2) {
 try {
  return Module["dynCall_iii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiii(index, a1, a2, a3) {
 try {
  return Module["dynCall_iiii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiii(index, a1, a2, a3, a4) {
 try {
  return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiiid(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_iiiiid"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiiii(index, a1, a2, a3, a4, a5) {
 try {
  return Module["dynCall_iiiiii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiiiid(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_iiiiiid"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
 try {
  return Module["dynCall_iiiiiii"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 try {
  return Module["dynCall_iiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 try {
  return Module["dynCall_iiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_v(index) {
 try {
  Module["dynCall_v"](index);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_vi(index, a1) {
 try {
  Module["dynCall_vi"](index, a1);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_vii(index, a1, a2) {
 try {
  Module["dynCall_vii"](index, a1, a2);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_viii(index, a1, a2, a3) {
 try {
  Module["dynCall_viii"](index, a1, a2, a3);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_viiii(index, a1, a2, a3, a4) {
 try {
  Module["dynCall_viiii"](index, a1, a2, a3, a4);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_viiiii(index, a1, a2, a3, a4, a5) {
 try {
  Module["dynCall_viiiii"](index, a1, a2, a3, a4, a5);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 try {
  Module["dynCall_viiiiii"](index, a1, a2, a3, a4, a5, a6);
 } catch (e) {
  if (typeof e !== "number" && e !== "longjmp") throw e;
  Module["setThrew"](1, 0);
 }
}
Module.asmGlobalArg = {
 "Math": Math,
 "Int8Array": Int8Array,
 "Int16Array": Int16Array,
 "Int32Array": Int32Array,
 "Uint8Array": Uint8Array,
 "Uint16Array": Uint16Array,
 "Uint32Array": Uint32Array,
 "Float32Array": Float32Array,
 "Float64Array": Float64Array,
 "NaN": NaN,
 "Infinity": Infinity
};
Module.asmLibraryArg = {
 "abort": abort,
 "assert": assert,
 "enlargeMemory": enlargeMemory,
 "getTotalMemory": getTotalMemory,
 "abortOnCannotGrowMemory": abortOnCannotGrowMemory,
 "invoke_ddd": invoke_ddd,
 "invoke_didd": invoke_didd,
 "invoke_ii": invoke_ii,
 "invoke_iii": invoke_iii,
 "invoke_iiii": invoke_iiii,
 "invoke_iiiii": invoke_iiiii,
 "invoke_iiiiid": invoke_iiiiid,
 "invoke_iiiiii": invoke_iiiiii,
 "invoke_iiiiiid": invoke_iiiiiid,
 "invoke_iiiiiii": invoke_iiiiiii,
 "invoke_iiiiiiii": invoke_iiiiiiii,
 "invoke_iiiiiiiii": invoke_iiiiiiiii,
 "invoke_v": invoke_v,
 "invoke_vi": invoke_vi,
 "invoke_vii": invoke_vii,
 "invoke_viii": invoke_viii,
 "invoke_viiii": invoke_viiii,
 "invoke_viiiii": invoke_viiiii,
 "invoke_viiiiii": invoke_viiiiii,
 "ClassHandle": ClassHandle,
 "ClassHandle_clone": ClassHandle_clone,
 "ClassHandle_delete": ClassHandle_delete,
 "ClassHandle_deleteLater": ClassHandle_deleteLater,
 "ClassHandle_isAliasOf": ClassHandle_isAliasOf,
 "ClassHandle_isDeleted": ClassHandle_isDeleted,
 "RegisteredClass": RegisteredClass,
 "RegisteredPointer": RegisteredPointer,
 "RegisteredPointer_deleteObject": RegisteredPointer_deleteObject,
 "RegisteredPointer_destructor": RegisteredPointer_destructor,
 "RegisteredPointer_fromWireType": RegisteredPointer_fromWireType,
 "RegisteredPointer_getPointee": RegisteredPointer_getPointee,
 "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv,
 "___buildEnvironment": ___buildEnvironment,
 "___cxa_begin_catch": ___cxa_begin_catch,
 "___cxa_find_matching_catch": ___cxa_find_matching_catch,
 "___gxx_personality_v0": ___gxx_personality_v0,
 "___lock": ___lock,
 "___map_file": ___map_file,
 "___resumeException": ___resumeException,
 "___setErrNo": ___setErrNo,
 "___syscall140": ___syscall140,
 "___syscall145": ___syscall145,
 "___syscall146": ___syscall146,
 "___syscall20": ___syscall20,
 "___syscall221": ___syscall221,
 "___syscall3": ___syscall3,
 "___syscall5": ___syscall5,
 "___syscall54": ___syscall54,
 "___syscall6": ___syscall6,
 "___syscall91": ___syscall91,
 "___unlock": ___unlock,
 "__addDays": __addDays,
 "__arraySum": __arraySum,
 "__embind_register_bool": __embind_register_bool,
 "__embind_register_class": __embind_register_class,
 "__embind_register_class_constructor": __embind_register_class_constructor,
 "__embind_register_class_function": __embind_register_class_function,
 "__embind_register_emval": __embind_register_emval,
 "__embind_register_float": __embind_register_float,
 "__embind_register_function": __embind_register_function,
 "__embind_register_integer": __embind_register_integer,
 "__embind_register_memory_view": __embind_register_memory_view,
 "__embind_register_std_string": __embind_register_std_string,
 "__embind_register_std_wstring": __embind_register_std_wstring,
 "__embind_register_void": __embind_register_void,
 "__emval_decref": __emval_decref,
 "__emval_register": __emval_register,
 "__isLeapYear": __isLeapYear,
 "_abort": _abort,
 "_embind_repr": _embind_repr,
 "_emscripten_memcpy_big": _emscripten_memcpy_big,
 "_getenv": _getenv,
 "_llvm_fabs_f64": _llvm_fabs_f64,
 "_pthread_cond_wait": _pthread_cond_wait,
 "_pthread_getspecific": _pthread_getspecific,
 "_pthread_key_create": _pthread_key_create,
 "_pthread_once": _pthread_once,
 "_pthread_setspecific": _pthread_setspecific,
 "_strftime": _strftime,
 "_strftime_l": _strftime_l,
 "_time": _time,
 "constNoSmartPtrRawPointerToWireType": constNoSmartPtrRawPointerToWireType,
 "count_emval_handles": count_emval_handles,
 "craftInvokerFunction": craftInvokerFunction,
 "createNamedFunction": createNamedFunction,
 "downcastPointer": downcastPointer,
 "embind__requireFunction": embind__requireFunction,
 "embind_init_charCodes": embind_init_charCodes,
 "ensureOverloadTable": ensureOverloadTable,
 "exposePublicSymbol": exposePublicSymbol,
 "extendError": extendError,
 "floatReadValueFromPointer": floatReadValueFromPointer,
 "flushPendingDeletes": flushPendingDeletes,
 "genericPointerToWireType": genericPointerToWireType,
 "getBasestPointer": getBasestPointer,
 "getInheritedInstance": getInheritedInstance,
 "getInheritedInstanceCount": getInheritedInstanceCount,
 "getLiveInheritedInstances": getLiveInheritedInstances,
 "getShiftFromSize": getShiftFromSize,
 "getTypeName": getTypeName,
 "get_first_emval": get_first_emval,
 "heap32VectorToArray": heap32VectorToArray,
 "init_ClassHandle": init_ClassHandle,
 "init_RegisteredPointer": init_RegisteredPointer,
 "init_embind": init_embind,
 "init_emval": init_emval,
 "integerReadValueFromPointer": integerReadValueFromPointer,
 "makeClassHandle": makeClassHandle,
 "makeLegalFunctionName": makeLegalFunctionName,
 "new_": new_,
 "nonConstNoSmartPtrRawPointerToWireType": nonConstNoSmartPtrRawPointerToWireType,
 "readLatin1String": readLatin1String,
 "registerType": registerType,
 "replacePublicSymbol": replacePublicSymbol,
 "runDestructor": runDestructor,
 "runDestructors": runDestructors,
 "setDelayFunction": setDelayFunction,
 "shallowCopyInternalPointer": shallowCopyInternalPointer,
 "simpleReadValueFromPointer": simpleReadValueFromPointer,
 "throwBindingError": throwBindingError,
 "throwInstanceAlreadyDeleted": throwInstanceAlreadyDeleted,
 "throwInternalError": throwInternalError,
 "throwUnboundTypeError": throwUnboundTypeError,
 "upcastPointer": upcastPointer,
 "whenDependentTypesAreResolved": whenDependentTypesAreResolved,
 "DYNAMICTOP_PTR": DYNAMICTOP_PTR,
 "tempDoublePtr": tempDoublePtr,
 "ABORT": ABORT,
 "STACKTOP": STACKTOP,
 "STACK_MAX": STACK_MAX,
 "cttz_i8": cttz_i8
};
// EMSCRIPTEN_START_ASM

var asm = (/** @suppress {uselessCode} */ function(global,env,buffer) {

 "use asm";
 var a = new global.Int8Array(buffer);
 var b = new global.Int16Array(buffer);
 var c = new global.Int32Array(buffer);
 var d = new global.Uint8Array(buffer);
 var e = new global.Uint16Array(buffer);
 var f = new global.Uint32Array(buffer);
 var g = new global.Float32Array(buffer);
 var h = new global.Float64Array(buffer);
 var i = env.DYNAMICTOP_PTR | 0;
 var j = env.tempDoublePtr | 0;
 var k = env.ABORT | 0;
 var l = env.STACKTOP | 0;
 var m = env.STACK_MAX | 0;
 var n = env.cttz_i8 | 0;
 var o = 0;
 var p = 0;
 var q = 0;
 var r = 0;
 var s = global.NaN, t = global.Infinity;
 var u = 0, v = 0, w = 0, x = 0, y = 0.0;
 var z = 0;
 var A = global.Math.floor;
 var B = global.Math.abs;
 var C = global.Math.sqrt;
 var D = global.Math.pow;
 var E = global.Math.cos;
 var F = global.Math.sin;
 var G = global.Math.tan;
 var H = global.Math.acos;
 var I = global.Math.asin;
 var J = global.Math.atan;
 var K = global.Math.atan2;
 var L = global.Math.exp;
 var M = global.Math.log;
 var N = global.Math.ceil;
 var O = global.Math.imul;
 var P = global.Math.min;
 var Q = global.Math.max;
 var R = global.Math.clz32;
 var S = env.abort;
 var T = env.assert;
 var U = env.enlargeMemory;
 var V = env.getTotalMemory;
 var W = env.abortOnCannotGrowMemory;
 var X = env.invoke_ddd;
 var Y = env.invoke_didd;
 var Z = env.invoke_ii;
 var _ = env.invoke_iii;
 var $ = env.invoke_iiii;
 var aa = env.invoke_iiiii;
 var ba = env.invoke_iiiiid;
 var ca = env.invoke_iiiiii;
 var da = env.invoke_iiiiiid;
 var ea = env.invoke_iiiiiii;
 var fa = env.invoke_iiiiiiii;
 var ga = env.invoke_iiiiiiiii;
 var ha = env.invoke_v;
 var ia = env.invoke_vi;
 var ja = env.invoke_vii;
 var ka = env.invoke_viii;
 var la = env.invoke_viiii;
 var ma = env.invoke_viiiii;
 var na = env.invoke_viiiiii;
 var oa = env.ClassHandle;
 var pa = env.ClassHandle_clone;
 var qa = env.ClassHandle_delete;
 var ra = env.ClassHandle_deleteLater;
 var sa = env.ClassHandle_isAliasOf;
 var ta = env.ClassHandle_isDeleted;
 var ua = env.RegisteredClass;
 var va = env.RegisteredPointer;
 var wa = env.RegisteredPointer_deleteObject;
 var xa = env.RegisteredPointer_destructor;
 var ya = env.RegisteredPointer_fromWireType;
 var za = env.RegisteredPointer_getPointee;
 var Aa = env.__ZSt18uncaught_exceptionv;
 var Ba = env.___buildEnvironment;
 var Ca = env.___cxa_begin_catch;
 var Da = env.___cxa_find_matching_catch;
 var Ea = env.___gxx_personality_v0;
 var Fa = env.___lock;
 var Ga = env.___map_file;
 var Ha = env.___resumeException;
 var Ia = env.___setErrNo;
 var Ja = env.___syscall140;
 var Ka = env.___syscall145;
 var La = env.___syscall146;
 var Ma = env.___syscall20;
 var Na = env.___syscall221;
 var Oa = env.___syscall3;
 var Pa = env.___syscall5;
 var Qa = env.___syscall54;
 var Ra = env.___syscall6;
 var Sa = env.___syscall91;
 var Ta = env.___unlock;
 var Ua = env.__addDays;
 var Va = env.__arraySum;
 var Wa = env.__embind_register_bool;
 var Xa = env.__embind_register_class;
 var Ya = env.__embind_register_class_constructor;
 var Za = env.__embind_register_class_function;
 var _a = env.__embind_register_emval;
 var $a = env.__embind_register_float;
 var ab = env.__embind_register_function;
 var bb = env.__embind_register_integer;
 var cb = env.__embind_register_memory_view;
 var db = env.__embind_register_std_string;
 var eb = env.__embind_register_std_wstring;
 var fb = env.__embind_register_void;
 var gb = env.__emval_decref;
 var hb = env.__emval_register;
 var ib = env.__isLeapYear;
 var jb = env._abort;
 var kb = env._embind_repr;
 var lb = env._emscripten_memcpy_big;
 var mb = env._getenv;
 var nb = env._llvm_fabs_f64;
 var ob = env._pthread_cond_wait;
 var pb = env._pthread_getspecific;
 var qb = env._pthread_key_create;
 var rb = env._pthread_once;
 var sb = env._pthread_setspecific;
 var tb = env._strftime;
 var ub = env._strftime_l;
 var vb = env._time;
 var wb = env.constNoSmartPtrRawPointerToWireType;
 var xb = env.count_emval_handles;
 var yb = env.craftInvokerFunction;
 var zb = env.createNamedFunction;
 var Ab = env.downcastPointer;
 var Bb = env.embind__requireFunction;
 var Cb = env.embind_init_charCodes;
 var Db = env.ensureOverloadTable;
 var Eb = env.exposePublicSymbol;
 var Fb = env.extendError;
 var Gb = env.floatReadValueFromPointer;
 var Hb = env.flushPendingDeletes;
 var Ib = env.genericPointerToWireType;
 var Jb = env.getBasestPointer;
 var Kb = env.getInheritedInstance;
 var Lb = env.getInheritedInstanceCount;
 var Mb = env.getLiveInheritedInstances;
 var Nb = env.getShiftFromSize;
 var Ob = env.getTypeName;
 var Pb = env.get_first_emval;
 var Qb = env.heap32VectorToArray;
 var Rb = env.init_ClassHandle;
 var Sb = env.init_RegisteredPointer;
 var Tb = env.init_embind;
 var Ub = env.init_emval;
 var Vb = env.integerReadValueFromPointer;
 var Wb = env.makeClassHandle;
 var Xb = env.makeLegalFunctionName;
 var Yb = env.new_;
 var Zb = env.nonConstNoSmartPtrRawPointerToWireType;
 var _b = env.readLatin1String;
 var $b = env.registerType;
 var ac = env.replacePublicSymbol;
 var bc = env.runDestructor;
 var cc = env.runDestructors;
 var dc = env.setDelayFunction;
 var ec = env.shallowCopyInternalPointer;
 var fc = env.simpleReadValueFromPointer;
 var gc = env.throwBindingError;
 var hc = env.throwInstanceAlreadyDeleted;
 var ic = env.throwInternalError;
 var jc = env.throwUnboundTypeError;
 var kc = env.upcastPointer;
 var lc = env.whenDependentTypesAreResolved;
 var mc = 0.0;
 
// EMSCRIPTEN_START_FUNCS

function kt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0, ka = 0, la = 0, ma = 0, na = 0, oa = 0, pa = 0, qa = 0, ra = 0, sa = 0;
 f = l;
 l = l + 208 | 0;
 g = f + 176 | 0;
 h = f + 112 | 0;
 i = f + 88 | 0;
 j = f + 64 | 0;
 k = f + 48 | 0;
 m = f + 160 | 0;
 n = f + 36 | 0;
 o = f + 148 | 0;
 p = f + 136 | 0;
 q = f + 124 | 0;
 r = f + 24 | 0;
 s = f + 12 | 0;
 t = f;
 u = d;
 v = u - b | 0;
 a : do if ((v | 0) > 1) {
  if ((v | 0) > 3) if ((a[b >> 0] | 0) == 103) {
   w = (a[b + 1 >> 0] | 0) == 115;
   x = w ? b + 2 | 0 : b;
   y = w;
  } else {
   x = b;
   y = 0;
  } else {
   x = b;
   y = 0;
  }
  do switch (a[x >> 0] | 0) {
  case 76:
   {
    z = nt(b, d, e) | 0;
    break a;
    break;
   }
  case 84:
   {
    z = Ys(b, d, e) | 0;
    break a;
    break;
   }
  case 102:
   {
    z = ot(b, d, e) | 0;
    break a;
    break;
   }
  case 97:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 97:
     {
      w = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(18910) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       B = h;
      } else {
       C = A + 16 & -16;
       D = Bs(C) | 0;
       c[h >> 2] = D;
       c[h + 8 >> 2] = C | -2147483648;
       c[h + 4 >> 2] = A;
       B = D;
      }
      sg(B, 18910, A) | 0;
      a[g >> 0] = 0;
      mh(B + A | 0, g);
      A = pt(w, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (w | 0) ? b : A;
      break a;
      break;
     }
    case 100:
     {
      A = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      w = lh(18928) | 0;
      if (w >>> 0 > 4294967279) _q(h);
      if (w >>> 0 < 11) {
       a[h + 11 >> 0] = w;
       E = h;
      } else {
       D = w + 16 & -16;
       C = Bs(D) | 0;
       c[h >> 2] = C;
       c[h + 8 >> 2] = D | -2147483648;
       c[h + 4 >> 2] = w;
       E = C;
      }
      sg(E, 18928, w) | 0;
      a[g >> 0] = 0;
      mh(E + w | 0, g);
      w = qt(A, d, h, e) | 0;
      Es(h);
      z = (w | 0) == (A | 0) ? b : w;
      break a;
      break;
     }
    case 110:
     {
      w = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(18928) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       F = h;
      } else {
       C = A + 16 & -16;
       D = Bs(C) | 0;
       c[h >> 2] = D;
       c[h + 8 >> 2] = C | -2147483648;
       c[h + 4 >> 2] = A;
       F = D;
      }
      sg(F, 18928, A) | 0;
      a[g >> 0] = 0;
      mh(F + A | 0, g);
      A = pt(w, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (w | 0) ? b : A;
      break a;
      break;
     }
    case 78:
     {
      A = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      w = lh(18971) | 0;
      if (w >>> 0 > 4294967279) _q(h);
      if (w >>> 0 < 11) {
       a[h + 11 >> 0] = w;
       G = h;
      } else {
       D = w + 16 & -16;
       C = Bs(D) | 0;
       c[h >> 2] = C;
       c[h + 8 >> 2] = D | -2147483648;
       c[h + 4 >> 2] = w;
       G = C;
      }
      sg(G, 18971, w) | 0;
      a[g >> 0] = 0;
      mh(G + w | 0, g);
      w = pt(A, d, h, e) | 0;
      Es(h);
      z = (w | 0) == (A | 0) ? b : w;
      break a;
      break;
     }
    case 83:
     {
      w = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(18974) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       H = h;
      } else {
       C = A + 16 & -16;
       D = Bs(C) | 0;
       c[h >> 2] = D;
       c[h + 8 >> 2] = C | -2147483648;
       c[h + 4 >> 2] = A;
       H = D;
      }
      sg(H, 18974, A) | 0;
      a[g >> 0] = 0;
      mh(H + A | 0, g);
      A = pt(w, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (w | 0) ? b : A;
      break a;
      break;
     }
    case 116:
     {
      z = rt(b, d, e) | 0;
      break a;
      break;
     }
    case 122:
     {
      z = st(b, d, e) | 0;
      break a;
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 99:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 99:
     {
      z = tt(b, d, e) | 0;
      break a;
      break;
     }
    case 108:
     {
      z = ut(b, d, e) | 0;
      break a;
      break;
     }
    case 109:
     {
      A = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      w = lh(18976) | 0;
      if (w >>> 0 > 4294967279) _q(h);
      if (w >>> 0 < 11) {
       a[h + 11 >> 0] = w;
       I = h;
      } else {
       D = w + 16 & -16;
       C = Bs(D) | 0;
       c[h >> 2] = C;
       c[h + 8 >> 2] = D | -2147483648;
       c[h + 4 >> 2] = w;
       I = C;
      }
      sg(I, 18976, w) | 0;
      a[g >> 0] = 0;
      mh(I + w | 0, g);
      w = pt(A, d, h, e) | 0;
      Es(h);
      z = (w | 0) == (A | 0) ? b : w;
      break a;
      break;
     }
    case 111:
     {
      w = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(18978) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       J = h;
      } else {
       C = A + 16 & -16;
       D = Bs(C) | 0;
       c[h >> 2] = D;
       c[h + 8 >> 2] = C | -2147483648;
       c[h + 4 >> 2] = A;
       J = D;
      }
      sg(J, 18978, A) | 0;
      a[g >> 0] = 0;
      mh(J + A | 0, g);
      A = qt(w, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (w | 0) ? b : A;
      break a;
      break;
     }
    case 118:
     {
      z = vt(b, d, e) | 0;
      break a;
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 100:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 97:
     {
      A = x + 2 | 0;
      w = kt(A, d, e) | 0;
      if ((w | 0) == (A | 0)) {
       z = b;
       break a;
      }
      A = e + 4 | 0;
      if ((c[e >> 2] | 0) == (c[A >> 2] | 0)) {
       z = b;
       break a;
      };
      c[j >> 2] = 0;
      c[j + 4 >> 2] = 0;
      c[j + 8 >> 2] = 0;
      b : do if (y) {
       D = lh(18980) | 0;
       if (D >>> 0 > 4294967279) _q(j);
       if (D >>> 0 < 11) {
        a[j + 11 >> 0] = D;
        K = j;
       } else {
        C = D + 16 & -16;
        L = Bs(C) | 0;
        c[j >> 2] = L;
        c[j + 8 >> 2] = C | -2147483648;
        c[j + 4 >> 2] = D;
        K = L;
       }
       sg(K, 18980, D) | 0;
       a[g >> 0] = 0;
       mh(K + D | 0, g);
      } else {
       D = 0;
       while (1) {
        if ((D | 0) == 3) break b;
        c[j + (D << 2) >> 2] = 0;
        D = D + 1 | 0;
       }
      } while (0);
      Ms(j, 18983) | 0;
      c[i >> 2] = c[j >> 2];
      c[i + 4 >> 2] = c[j + 4 >> 2];
      c[i + 8 >> 2] = c[j + 8 >> 2];
      D = 0;
      while (1) {
       if ((D | 0) == 3) break;
       c[j + (D << 2) >> 2] = 0;
       D = D + 1 | 0;
      }
      _s(k, (c[A >> 2] | 0) + -24 | 0);
      D = a[k + 11 >> 0] | 0;
      L = D << 24 >> 24 < 0;
      qs(i, L ? c[k >> 2] | 0 : k, L ? c[k + 4 >> 2] | 0 : D & 255) | 0;
      c[h >> 2] = c[i >> 2];
      c[h + 4 >> 2] = c[i + 4 >> 2];
      c[h + 8 >> 2] = c[i + 8 >> 2];
      D = 0;
      while (1) {
       if ((D | 0) == 3) break;
       c[i + (D << 2) >> 2] = 0;
       D = D + 1 | 0;
      }
      D = c[A >> 2] | 0;
      L = D + -24 | 0;
      C = L + 11 | 0;
      if ((a[C >> 0] | 0) < 0) {
       M = c[L >> 2] | 0;
       a[g >> 0] = 0;
       mh(M, g);
       c[D + -20 >> 2] = 0;
      } else {
       a[g >> 0] = 0;
       mh(L, g);
       a[C >> 0] = 0;
      }
      lt(L);
      c[L >> 2] = c[h >> 2];
      c[L + 4 >> 2] = c[h + 4 >> 2];
      c[L + 8 >> 2] = c[h + 8 >> 2];
      L = 0;
      while (1) {
       if ((L | 0) == 3) break;
       c[h + (L << 2) >> 2] = 0;
       L = L + 1 | 0;
      }
      Es(h);
      Es(k);
      Es(i);
      Es(j);
      z = w;
      break a;
      break;
     }
    case 99:
     {
      z = wt(b, d, e) | 0;
      break a;
      break;
     }
    case 101:
     {
      L = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(18926) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       N = h;
      } else {
       C = A + 16 & -16;
       D = Bs(C) | 0;
       c[h >> 2] = D;
       c[h + 8 >> 2] = C | -2147483648;
       c[h + 4 >> 2] = A;
       N = D;
      }
      sg(N, 18926, A) | 0;
      a[g >> 0] = 0;
      mh(N + A | 0, g);
      A = qt(L, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (L | 0) ? b : A;
      break a;
      break;
     }
    case 108:
     {
      A = x + 2 | 0;
      L = kt(A, d, e) | 0;
      if ((L | 0) == (A | 0)) {
       z = b;
       break a;
      }
      A = e + 4 | 0;
      if ((c[e >> 2] | 0) == (c[A >> 2] | 0)) {
       z = b;
       break a;
      };
      c[j >> 2] = 0;
      c[j + 4 >> 2] = 0;
      c[j + 8 >> 2] = 0;
      c : do if (y) {
       D = lh(18980) | 0;
       if (D >>> 0 > 4294967279) _q(j);
       if (D >>> 0 < 11) {
        a[j + 11 >> 0] = D;
        O = j;
       } else {
        C = D + 16 & -16;
        M = Bs(C) | 0;
        c[j >> 2] = M;
        c[j + 8 >> 2] = C | -2147483648;
        c[j + 4 >> 2] = D;
        O = M;
       }
       sg(O, 18980, D) | 0;
       a[g >> 0] = 0;
       mh(O + D | 0, g);
      } else {
       D = 0;
       while (1) {
        if ((D | 0) == 3) break c;
        c[j + (D << 2) >> 2] = 0;
        D = D + 1 | 0;
       }
      } while (0);
      Ms(j, 18993) | 0;
      c[i >> 2] = c[j >> 2];
      c[i + 4 >> 2] = c[j + 4 >> 2];
      c[i + 8 >> 2] = c[j + 8 >> 2];
      w = 0;
      while (1) {
       if ((w | 0) == 3) break;
       c[j + (w << 2) >> 2] = 0;
       w = w + 1 | 0;
      }
      _s(k, (c[A >> 2] | 0) + -24 | 0);
      w = a[k + 11 >> 0] | 0;
      D = w << 24 >> 24 < 0;
      qs(i, D ? c[k >> 2] | 0 : k, D ? c[k + 4 >> 2] | 0 : w & 255) | 0;
      c[h >> 2] = c[i >> 2];
      c[h + 4 >> 2] = c[i + 4 >> 2];
      c[h + 8 >> 2] = c[i + 8 >> 2];
      w = 0;
      while (1) {
       if ((w | 0) == 3) break;
       c[i + (w << 2) >> 2] = 0;
       w = w + 1 | 0;
      }
      w = c[A >> 2] | 0;
      D = w + -24 | 0;
      M = D + 11 | 0;
      if ((a[M >> 0] | 0) < 0) {
       C = c[D >> 2] | 0;
       a[g >> 0] = 0;
       mh(C, g);
       c[w + -20 >> 2] = 0;
      } else {
       a[g >> 0] = 0;
       mh(D, g);
       a[M >> 0] = 0;
      }
      lt(D);
      c[D >> 2] = c[h >> 2];
      c[D + 4 >> 2] = c[h + 4 >> 2];
      c[D + 8 >> 2] = c[h + 8 >> 2];
      D = 0;
      while (1) {
       if ((D | 0) == 3) break;
       c[h + (D << 2) >> 2] = 0;
       D = D + 1 | 0;
      }
      Es(h);
      Es(k);
      Es(i);
      Es(j);
      z = L;
      break a;
      break;
     }
    case 110:
     {
      z = xt(b, d, e) | 0;
      break a;
      break;
     }
    case 115:
     {
      z = yt(b, d, e) | 0;
      break a;
      break;
     }
    case 116:
     {
      z = zt(b, d, e) | 0;
      break a;
      break;
     }
    case 118:
     {
      D = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(19001) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       P = h;
      } else {
       M = A + 16 & -16;
       w = Bs(M) | 0;
       c[h >> 2] = w;
       c[h + 8 >> 2] = M | -2147483648;
       c[h + 4 >> 2] = A;
       P = w;
      }
      sg(P, 19001, A) | 0;
      a[g >> 0] = 0;
      mh(P + A | 0, g);
      A = pt(D, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (D | 0) ? b : A;
      break a;
      break;
     }
    case 86:
     {
      A = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      D = lh(19003) | 0;
      if (D >>> 0 > 4294967279) _q(h);
      if (D >>> 0 < 11) {
       a[h + 11 >> 0] = D;
       Q = h;
      } else {
       w = D + 16 & -16;
       M = Bs(w) | 0;
       c[h >> 2] = M;
       c[h + 8 >> 2] = w | -2147483648;
       c[h + 4 >> 2] = D;
       Q = M;
      }
      sg(Q, 19003, D) | 0;
      a[g >> 0] = 0;
      mh(Q + D | 0, g);
      D = pt(A, d, h, e) | 0;
      Es(h);
      z = (D | 0) == (A | 0) ? b : D;
      break a;
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 101:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 111:
     {
      D = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(19006) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       R = h;
      } else {
       M = A + 16 & -16;
       w = Bs(M) | 0;
       c[h >> 2] = w;
       c[h + 8 >> 2] = M | -2147483648;
       c[h + 4 >> 2] = A;
       R = w;
      }
      sg(R, 19006, A) | 0;
      a[g >> 0] = 0;
      mh(R + A | 0, g);
      A = pt(D, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (D | 0) ? b : A;
      break a;
      break;
     }
    case 79:
     {
      A = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      D = lh(19008) | 0;
      if (D >>> 0 > 4294967279) _q(h);
      if (D >>> 0 < 11) {
       a[h + 11 >> 0] = D;
       S = h;
      } else {
       w = D + 16 & -16;
       M = Bs(w) | 0;
       c[h >> 2] = M;
       c[h + 8 >> 2] = w | -2147483648;
       c[h + 4 >> 2] = D;
       S = M;
      }
      sg(S, 19008, D) | 0;
      a[g >> 0] = 0;
      mh(S + D | 0, g);
      D = pt(A, d, h, e) | 0;
      Es(h);
      z = (D | 0) == (A | 0) ? b : D;
      break a;
      break;
     }
    case 113:
     {
      D = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(19011) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       T = h;
      } else {
       M = A + 16 & -16;
       w = Bs(M) | 0;
       c[h >> 2] = w;
       c[h + 8 >> 2] = M | -2147483648;
       c[h + 4 >> 2] = A;
       T = w;
      }
      sg(T, 19011, A) | 0;
      a[g >> 0] = 0;
      mh(T + A | 0, g);
      A = pt(D, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (D | 0) ? b : A;
      break a;
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 103:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 101:
     {
      A = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      D = lh(19014) | 0;
      if (D >>> 0 > 4294967279) _q(h);
      if (D >>> 0 < 11) {
       a[h + 11 >> 0] = D;
       U = h;
      } else {
       w = D + 16 & -16;
       M = Bs(w) | 0;
       c[h >> 2] = M;
       c[h + 8 >> 2] = w | -2147483648;
       c[h + 4 >> 2] = D;
       U = M;
      }
      sg(U, 19014, D) | 0;
      a[g >> 0] = 0;
      mh(U + D | 0, g);
      D = pt(A, d, h, e) | 0;
      Es(h);
      z = (D | 0) == (A | 0) ? b : D;
      break a;
      break;
     }
    case 116:
     {
      D = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(18944) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       V = h;
      } else {
       M = A + 16 & -16;
       w = Bs(M) | 0;
       c[h >> 2] = w;
       c[h + 8 >> 2] = M | -2147483648;
       c[h + 4 >> 2] = A;
       V = w;
      }
      sg(V, 18944, A) | 0;
      a[g >> 0] = 0;
      mh(V + A | 0, g);
      A = pt(D, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (D | 0) ? b : A;
      break a;
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 105:
   {
    if ((a[x + 1 >> 0] | 0) != 120) {
     z = b;
     break a;
    }
    A = b + 2 | 0;
    D = kt(A, d, e) | 0;
    if ((D | 0) == (A | 0)) {
     z = b;
     break a;
    }
    A = kt(D, d, e) | 0;
    w = e + 4 | 0;
    if ((A | 0) == (D | 0)) {
     D = c[w >> 2] | 0;
     M = D + -24 | 0;
     C = D;
     while (1) {
      if ((C | 0) == (M | 0)) {
       z = b;
       break a;
      }
      D = C + -24 | 0;
      c[w >> 2] = D;
      ns(D);
      C = c[w >> 2] | 0;
     }
    }
    C = c[w >> 2] | 0;
    if (((C - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     z = b;
     break a;
    }
    _s(g, C + -24 | 0);
    C = c[w >> 2] | 0;
    M = C + -24 | 0;
    L = C;
    while (1) {
     if ((L | 0) == (M | 0)) break;
     D = L + -24 | 0;
     c[w >> 2] = D;
     ns(D);
     L = c[w >> 2] | 0;
    }
    _s(h, C + -48 | 0);
    mt(n, 18908, h);
    Ms(n, 19017) | 0;
    c[k >> 2] = c[n >> 2];
    c[k + 4 >> 2] = c[n + 4 >> 2];
    c[k + 8 >> 2] = c[n + 8 >> 2];
    L = 0;
    while (1) {
     if ((L | 0) == 3) break;
     c[n + (L << 2) >> 2] = 0;
     L = L + 1 | 0;
    }
    L = a[g + 11 >> 0] | 0;
    C = L << 24 >> 24 < 0;
    qs(k, C ? c[g >> 2] | 0 : g, C ? c[g + 4 >> 2] | 0 : L & 255) | 0;
    c[j >> 2] = c[k >> 2];
    c[j + 4 >> 2] = c[k + 4 >> 2];
    c[j + 8 >> 2] = c[k + 8 >> 2];
    L = 0;
    while (1) {
     if ((L | 0) == 3) break;
     c[k + (L << 2) >> 2] = 0;
     L = L + 1 | 0;
    }
    Ms(j, 18955) | 0;
    c[m >> 2] = c[j >> 2];
    c[m + 4 >> 2] = c[j + 4 >> 2];
    c[m + 8 >> 2] = c[j + 8 >> 2];
    L = 0;
    while (1) {
     if ((L | 0) == 3) break;
     c[j + (L << 2) >> 2] = 0;
     L = L + 1 | 0;
    }
    bt(i, m);
    ct((c[w >> 2] | 0) + -24 | 0, i);
    ns(i);
    Es(m);
    Es(j);
    Es(k);
    Es(n);
    Es(h);
    Es(g);
    z = A;
    break a;
    break;
   }
  case 108:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 101:
     {
      L = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      C = lh(19020) | 0;
      if (C >>> 0 > 4294967279) _q(h);
      if (C >>> 0 < 11) {
       a[h + 11 >> 0] = C;
       W = h;
      } else {
       M = C + 16 & -16;
       D = Bs(M) | 0;
       c[h >> 2] = D;
       c[h + 8 >> 2] = M | -2147483648;
       c[h + 4 >> 2] = C;
       W = D;
      }
      sg(W, 19020, C) | 0;
      a[g >> 0] = 0;
      mh(W + C | 0, g);
      C = pt(L, d, h, e) | 0;
      Es(h);
      z = (C | 0) == (L | 0) ? b : C;
      break a;
      break;
     }
    case 115:
     {
      C = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      L = lh(19023) | 0;
      if (L >>> 0 > 4294967279) _q(h);
      if (L >>> 0 < 11) {
       a[h + 11 >> 0] = L;
       X = h;
      } else {
       D = L + 16 & -16;
       M = Bs(D) | 0;
       c[h >> 2] = M;
       c[h + 8 >> 2] = D | -2147483648;
       c[h + 4 >> 2] = L;
       X = M;
      }
      sg(X, 19023, L) | 0;
      a[g >> 0] = 0;
      mh(X + L | 0, g);
      L = pt(C, d, h, e) | 0;
      Es(h);
      z = (L | 0) == (C | 0) ? b : L;
      break a;
      break;
     }
    case 83:
     {
      L = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      C = lh(19026) | 0;
      if (C >>> 0 > 4294967279) _q(h);
      if (C >>> 0 < 11) {
       a[h + 11 >> 0] = C;
       Y = h;
      } else {
       M = C + 16 & -16;
       D = Bs(M) | 0;
       c[h >> 2] = D;
       c[h + 8 >> 2] = M | -2147483648;
       c[h + 4 >> 2] = C;
       Y = D;
      }
      sg(Y, 19026, C) | 0;
      a[g >> 0] = 0;
      mh(Y + C | 0, g);
      C = pt(L, d, h, e) | 0;
      Es(h);
      z = (C | 0) == (L | 0) ? b : C;
      break a;
      break;
     }
    case 116:
     {
      C = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      L = lh(18942) | 0;
      if (L >>> 0 > 4294967279) _q(h);
      if (L >>> 0 < 11) {
       a[h + 11 >> 0] = L;
       Z = h;
      } else {
       D = L + 16 & -16;
       M = Bs(D) | 0;
       c[h >> 2] = M;
       c[h + 8 >> 2] = D | -2147483648;
       c[h + 4 >> 2] = L;
       Z = M;
      }
      sg(Z, 18942, L) | 0;
      a[g >> 0] = 0;
      mh(Z + L | 0, g);
      L = pt(C, d, h, e) | 0;
      Es(h);
      z = (L | 0) == (C | 0) ? b : L;
      break a;
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 109:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 105:
     {
      L = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      C = lh(19030) | 0;
      if (C >>> 0 > 4294967279) _q(h);
      if (C >>> 0 < 11) {
       a[h + 11 >> 0] = C;
       _ = h;
      } else {
       M = C + 16 & -16;
       D = Bs(M) | 0;
       c[h >> 2] = D;
       c[h + 8 >> 2] = M | -2147483648;
       c[h + 4 >> 2] = C;
       _ = D;
      }
      sg(_, 19030, C) | 0;
      a[g >> 0] = 0;
      mh(_ + C | 0, g);
      C = pt(L, d, h, e) | 0;
      Es(h);
      z = (C | 0) == (L | 0) ? b : C;
      break a;
      break;
     }
    case 73:
     {
      C = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      L = lh(19032) | 0;
      if (L >>> 0 > 4294967279) _q(h);
      if (L >>> 0 < 11) {
       a[h + 11 >> 0] = L;
       $ = h;
      } else {
       D = L + 16 & -16;
       M = Bs(D) | 0;
       c[h >> 2] = M;
       c[h + 8 >> 2] = D | -2147483648;
       c[h + 4 >> 2] = L;
       $ = M;
      }
      sg($, 19032, L) | 0;
      a[g >> 0] = 0;
      mh($ + L | 0, g);
      L = pt(C, d, h, e) | 0;
      Es(h);
      z = (L | 0) == (C | 0) ? b : L;
      break a;
      break;
     }
    case 108:
     {
      L = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      C = lh(18926) | 0;
      if (C >>> 0 > 4294967279) _q(h);
      if (C >>> 0 < 11) {
       a[h + 11 >> 0] = C;
       aa = h;
      } else {
       M = C + 16 & -16;
       D = Bs(M) | 0;
       c[h >> 2] = D;
       c[h + 8 >> 2] = M | -2147483648;
       c[h + 4 >> 2] = C;
       aa = D;
      }
      sg(aa, 18926, C) | 0;
      a[g >> 0] = 0;
      mh(aa + C | 0, g);
      C = pt(L, d, h, e) | 0;
      Es(h);
      z = (C | 0) == (L | 0) ? b : C;
      break a;
      break;
     }
    case 76:
     {
      C = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      L = lh(19035) | 0;
      if (L >>> 0 > 4294967279) _q(h);
      if (L >>> 0 < 11) {
       a[h + 11 >> 0] = L;
       ba = h;
      } else {
       D = L + 16 & -16;
       M = Bs(D) | 0;
       c[h >> 2] = M;
       c[h + 8 >> 2] = D | -2147483648;
       c[h + 4 >> 2] = L;
       ba = M;
      }
      sg(ba, 19035, L) | 0;
      a[g >> 0] = 0;
      mh(ba + L | 0, g);
      L = pt(C, d, h, e) | 0;
      Es(h);
      z = (L | 0) == (C | 0) ? b : L;
      break a;
      break;
     }
    case 109:
     {
      L = b + 2 | 0;
      if ((L | 0) != (d | 0)) if ((a[L >> 0] | 0) == 95) {
       C = b + 3 | 0;
       c[h >> 2] = 0;
       c[h + 4 >> 2] = 0;
       c[h + 8 >> 2] = 0;
       M = lh(19038) | 0;
       if (M >>> 0 > 4294967279) _q(h);
       if (M >>> 0 < 11) {
        a[h + 11 >> 0] = M;
        ca = h;
       } else {
        D = M + 16 & -16;
        da = Bs(D) | 0;
        c[h >> 2] = da;
        c[h + 8 >> 2] = D | -2147483648;
        c[h + 4 >> 2] = M;
        ca = da;
       }
       sg(ca, 19038, M) | 0;
       a[g >> 0] = 0;
       mh(ca + M | 0, g);
       M = qt(C, d, h, e) | 0;
       Es(h);
       z = (M | 0) == (C | 0) ? b : M;
       break a;
      }
      M = kt(L, d, e) | 0;
      if ((M | 0) == (L | 0)) {
       z = b;
       break a;
      }
      L = e + 4 | 0;
      C = c[L >> 2] | 0;
      if ((c[e >> 2] | 0) == (C | 0)) {
       z = b;
       break a;
      }
      _s(i, C + -24 | 0);
      Ls(i, 0, 18908) | 0;
      c[h >> 2] = c[i >> 2];
      c[h + 4 >> 2] = c[i + 4 >> 2];
      c[h + 8 >> 2] = c[i + 8 >> 2];
      C = 0;
      while (1) {
       if ((C | 0) == 3) break;
       c[i + (C << 2) >> 2] = 0;
       C = C + 1 | 0;
      }
      Ms(h, 19041) | 0;
      c[o >> 2] = c[h >> 2];
      c[o + 4 >> 2] = c[h + 4 >> 2];
      c[o + 8 >> 2] = c[h + 8 >> 2];
      C = 0;
      while (1) {
       if ((C | 0) == 3) break;
       c[h + (C << 2) >> 2] = 0;
       C = C + 1 | 0;
      }
      bt(g, o);
      ct((c[L >> 2] | 0) + -24 | 0, g);
      ns(g);
      Es(o);
      Es(h);
      Es(i);
      z = M;
      break a;
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 110:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 119:
    case 97:
     {
      z = At(b, d, e) | 0;
      break a;
      break;
     }
    case 101:
     {
      C = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(19045) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       ea = h;
      } else {
       w = A + 16 & -16;
       da = Bs(w) | 0;
       c[h >> 2] = da;
       c[h + 8 >> 2] = w | -2147483648;
       c[h + 4 >> 2] = A;
       ea = da;
      }
      sg(ea, 19045, A) | 0;
      a[g >> 0] = 0;
      mh(ea + A | 0, g);
      A = pt(C, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (C | 0) ? b : A;
      break a;
      break;
     }
    case 103:
     {
      A = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      C = lh(19030) | 0;
      if (C >>> 0 > 4294967279) _q(h);
      if (C >>> 0 < 11) {
       a[h + 11 >> 0] = C;
       fa = h;
      } else {
       da = C + 16 & -16;
       w = Bs(da) | 0;
       c[h >> 2] = w;
       c[h + 8 >> 2] = da | -2147483648;
       c[h + 4 >> 2] = C;
       fa = w;
      }
      sg(fa, 19030, C) | 0;
      a[g >> 0] = 0;
      mh(fa + C | 0, g);
      C = qt(A, d, h, e) | 0;
      Es(h);
      z = (C | 0) == (A | 0) ? b : C;
      break a;
      break;
     }
    case 116:
     {
      C = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(19048) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       ga = h;
      } else {
       w = A + 16 & -16;
       da = Bs(w) | 0;
       c[h >> 2] = da;
       c[h + 8 >> 2] = w | -2147483648;
       c[h + 4 >> 2] = A;
       ga = da;
      }
      sg(ga, 19048, A) | 0;
      a[g >> 0] = 0;
      mh(ga + A | 0, g);
      A = qt(C, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (C | 0) ? b : A;
      break a;
      break;
     }
    case 120:
     {
      A = b + 2 | 0;
      C = Bt(A, d, e) | 0;
      z = (C | 0) == (A | 0) ? b : C;
      break a;
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 111:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 110:
     {
      z = xt(b, d, e) | 0;
      break a;
      break;
     }
    case 111:
     {
      C = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(19050) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       ha = h;
      } else {
       da = A + 16 & -16;
       w = Bs(da) | 0;
       c[h >> 2] = w;
       c[h + 8 >> 2] = da | -2147483648;
       c[h + 4 >> 2] = A;
       ha = w;
      }
      sg(ha, 19050, A) | 0;
      a[g >> 0] = 0;
      mh(ha + A | 0, g);
      A = pt(C, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (C | 0) ? b : A;
      break a;
      break;
     }
    case 114:
     {
      A = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      C = lh(19053) | 0;
      if (C >>> 0 > 4294967279) _q(h);
      if (C >>> 0 < 11) {
       a[h + 11 >> 0] = C;
       ia = h;
      } else {
       w = C + 16 & -16;
       da = Bs(w) | 0;
       c[h >> 2] = da;
       c[h + 8 >> 2] = w | -2147483648;
       c[h + 4 >> 2] = C;
       ia = da;
      }
      sg(ia, 19053, C) | 0;
      a[g >> 0] = 0;
      mh(ia + C | 0, g);
      C = pt(A, d, h, e) | 0;
      Es(h);
      z = (C | 0) == (A | 0) ? b : C;
      break a;
      break;
     }
    case 82:
     {
      C = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(19055) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       ja = h;
      } else {
       da = A + 16 & -16;
       w = Bs(da) | 0;
       c[h >> 2] = w;
       c[h + 8 >> 2] = da | -2147483648;
       c[h + 4 >> 2] = A;
       ja = w;
      }
      sg(ja, 19055, A) | 0;
      a[g >> 0] = 0;
      mh(ja + A | 0, g);
      A = pt(C, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (C | 0) ? b : A;
      break a;
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 112:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 109:
     {
      A = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      C = lh(19058) | 0;
      if (C >>> 0 > 4294967279) _q(h);
      if (C >>> 0 < 11) {
       a[h + 11 >> 0] = C;
       ka = h;
      } else {
       w = C + 16 & -16;
       da = Bs(w) | 0;
       c[h >> 2] = da;
       c[h + 8 >> 2] = w | -2147483648;
       c[h + 4 >> 2] = C;
       ka = da;
      }
      sg(ka, 19058, C) | 0;
      a[g >> 0] = 0;
      mh(ka + C | 0, g);
      C = pt(A, d, h, e) | 0;
      Es(h);
      z = (C | 0) == (A | 0) ? b : C;
      break a;
      break;
     }
    case 108:
     {
      C = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      A = lh(19062) | 0;
      if (A >>> 0 > 4294967279) _q(h);
      if (A >>> 0 < 11) {
       a[h + 11 >> 0] = A;
       la = h;
      } else {
       da = A + 16 & -16;
       w = Bs(da) | 0;
       c[h >> 2] = w;
       c[h + 8 >> 2] = da | -2147483648;
       c[h + 4 >> 2] = A;
       la = w;
      }
      sg(la, 19062, A) | 0;
      a[g >> 0] = 0;
      mh(la + A | 0, g);
      A = pt(C, d, h, e) | 0;
      Es(h);
      z = (A | 0) == (C | 0) ? b : A;
      break a;
      break;
     }
    case 76:
     {
      A = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      C = lh(19064) | 0;
      if (C >>> 0 > 4294967279) _q(h);
      if (C >>> 0 < 11) {
       a[h + 11 >> 0] = C;
       ma = h;
      } else {
       w = C + 16 & -16;
       da = Bs(w) | 0;
       c[h >> 2] = da;
       c[h + 8 >> 2] = w | -2147483648;
       c[h + 4 >> 2] = C;
       ma = da;
      }
      sg(ma, 19064, C) | 0;
      a[g >> 0] = 0;
      mh(ma + C | 0, g);
      C = pt(A, d, h, e) | 0;
      Es(h);
      z = (C | 0) == (A | 0) ? b : C;
      break a;
      break;
     }
    case 112:
     {
      C = b + 2 | 0;
      if ((C | 0) != (d | 0)) if ((a[C >> 0] | 0) == 95) {
       A = b + 3 | 0;
       c[h >> 2] = 0;
       c[h + 4 >> 2] = 0;
       c[h + 8 >> 2] = 0;
       da = lh(19067) | 0;
       if (da >>> 0 > 4294967279) _q(h);
       if (da >>> 0 < 11) {
        a[h + 11 >> 0] = da;
        na = h;
       } else {
        w = da + 16 & -16;
        D = Bs(w) | 0;
        c[h >> 2] = D;
        c[h + 8 >> 2] = w | -2147483648;
        c[h + 4 >> 2] = da;
        na = D;
       }
       sg(na, 19067, da) | 0;
       a[g >> 0] = 0;
       mh(na + da | 0, g);
       da = qt(A, d, h, e) | 0;
       Es(h);
       z = (da | 0) == (A | 0) ? b : da;
       break a;
      }
      da = kt(C, d, e) | 0;
      if ((da | 0) == (C | 0)) {
       z = b;
       break a;
      }
      C = e + 4 | 0;
      A = c[C >> 2] | 0;
      if ((c[e >> 2] | 0) == (A | 0)) {
       z = b;
       break a;
      }
      _s(i, A + -24 | 0);
      Ls(i, 0, 18908) | 0;
      c[h >> 2] = c[i >> 2];
      c[h + 4 >> 2] = c[i + 4 >> 2];
      c[h + 8 >> 2] = c[i + 8 >> 2];
      A = 0;
      while (1) {
       if ((A | 0) == 3) break;
       c[i + (A << 2) >> 2] = 0;
       A = A + 1 | 0;
      }
      Ms(h, 19070) | 0;
      c[p >> 2] = c[h >> 2];
      c[p + 4 >> 2] = c[h + 4 >> 2];
      c[p + 8 >> 2] = c[h + 8 >> 2];
      A = 0;
      while (1) {
       if ((A | 0) == 3) break;
       c[h + (A << 2) >> 2] = 0;
       A = A + 1 | 0;
      }
      bt(g, p);
      ct((c[C >> 2] | 0) + -24 | 0, g);
      ns(g);
      Es(p);
      Es(h);
      Es(i);
      z = da;
      break a;
      break;
     }
    case 115:
     {
      A = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      M = lh(19062) | 0;
      if (M >>> 0 > 4294967279) _q(h);
      if (M >>> 0 < 11) {
       a[h + 11 >> 0] = M;
       oa = h;
      } else {
       L = M + 16 & -16;
       D = Bs(L) | 0;
       c[h >> 2] = D;
       c[h + 8 >> 2] = L | -2147483648;
       c[h + 4 >> 2] = M;
       oa = D;
      }
      sg(oa, 19062, M) | 0;
      a[g >> 0] = 0;
      mh(oa + M | 0, g);
      M = qt(A, d, h, e) | 0;
      Es(h);
      z = (M | 0) == (A | 0) ? b : M;
      break a;
      break;
     }
    case 116:
     {
      z = Ct(b, d, e) | 0;
      break a;
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 113:
   {
    if ((a[x + 1 >> 0] | 0) != 117) {
     z = b;
     break a;
    }
    M = b + 2 | 0;
    A = kt(M, d, e) | 0;
    if ((A | 0) == (M | 0)) {
     z = b;
     break a;
    }
    M = kt(A, d, e) | 0;
    if ((M | 0) == (A | 0)) {
     A = e + 4 | 0;
     D = c[A >> 2] | 0;
     L = D + -24 | 0;
     w = D;
     while (1) {
      if ((w | 0) == (L | 0)) {
       z = b;
       break a;
      }
      D = w + -24 | 0;
      c[A >> 2] = D;
      ns(D);
      w = c[A >> 2] | 0;
     }
    }
    A = kt(M, d, e) | 0;
    w = e + 4 | 0;
    if ((A | 0) == (M | 0)) {
     L = c[w >> 2] | 0;
     da = L + -24 | 0;
     C = L;
     while (1) {
      if ((C | 0) == (da | 0)) break;
      D = C + -24 | 0;
      c[w >> 2] = D;
      ns(D);
      C = c[w >> 2] | 0;
     }
     C = L + -48 | 0;
     M = da;
     while (1) {
      if ((M | 0) == (C | 0)) {
       z = b;
       break a;
      }
      D = M + -24 | 0;
      c[w >> 2] = D;
      ns(D);
      M = c[w >> 2] | 0;
     }
    }
    M = c[w >> 2] | 0;
    if (((M - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 3) {
     z = b;
     break a;
    }
    _s(g, M + -24 | 0);
    M = c[w >> 2] | 0;
    C = M + -24 | 0;
    da = M;
    while (1) {
     if ((da | 0) == (C | 0)) break;
     L = da + -24 | 0;
     c[w >> 2] = L;
     ns(L);
     da = c[w >> 2] | 0;
    }
    _s(h, M + -48 | 0);
    da = c[w >> 2] | 0;
    C = da + -24 | 0;
    L = da;
    while (1) {
     if ((L | 0) == (C | 0)) break;
     D = L + -24 | 0;
     c[w >> 2] = D;
     ns(D);
     L = c[w >> 2] | 0;
    }
    _s(i, da + -48 | 0);
    mt(t, 18908, i);
    Ms(t, 19074) | 0;
    c[s >> 2] = c[t >> 2];
    c[s + 4 >> 2] = c[t + 4 >> 2];
    c[s + 8 >> 2] = c[t + 8 >> 2];
    L = 0;
    while (1) {
     if ((L | 0) == 3) break;
     c[t + (L << 2) >> 2] = 0;
     L = L + 1 | 0;
    }
    L = a[h + 11 >> 0] | 0;
    da = L << 24 >> 24 < 0;
    qs(s, da ? c[h >> 2] | 0 : h, da ? c[h + 4 >> 2] | 0 : L & 255) | 0;
    c[r >> 2] = c[s >> 2];
    c[r + 4 >> 2] = c[s + 4 >> 2];
    c[r + 8 >> 2] = c[s + 8 >> 2];
    L = 0;
    while (1) {
     if ((L | 0) == 3) break;
     c[s + (L << 2) >> 2] = 0;
     L = L + 1 | 0;
    }
    Ms(r, 19080) | 0;
    c[n >> 2] = c[r >> 2];
    c[n + 4 >> 2] = c[r + 4 >> 2];
    c[n + 8 >> 2] = c[r + 8 >> 2];
    L = 0;
    while (1) {
     if ((L | 0) == 3) break;
     c[r + (L << 2) >> 2] = 0;
     L = L + 1 | 0;
    }
    L = a[g + 11 >> 0] | 0;
    da = L << 24 >> 24 < 0;
    qs(n, da ? c[g >> 2] | 0 : g, da ? c[g + 4 >> 2] | 0 : L & 255) | 0;
    c[k >> 2] = c[n >> 2];
    c[k + 4 >> 2] = c[n + 4 >> 2];
    c[k + 8 >> 2] = c[n + 8 >> 2];
    L = 0;
    while (1) {
     if ((L | 0) == 3) break;
     c[n + (L << 2) >> 2] = 0;
     L = L + 1 | 0;
    }
    Ms(k, 18906) | 0;
    c[q >> 2] = c[k >> 2];
    c[q + 4 >> 2] = c[k + 4 >> 2];
    c[q + 8 >> 2] = c[k + 8 >> 2];
    L = 0;
    while (1) {
     if ((L | 0) == 3) break;
     c[k + (L << 2) >> 2] = 0;
     L = L + 1 | 0;
    }
    bt(j, q);
    ct((c[w >> 2] | 0) + -24 | 0, j);
    ns(j);
    Es(q);
    Es(k);
    Es(n);
    Es(r);
    Es(s);
    Es(t);
    Es(i);
    Es(h);
    Es(g);
    z = A;
    break a;
    break;
   }
  case 114:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 99:
     {
      z = Dt(b, d, e) | 0;
      break a;
      break;
     }
    case 109:
     {
      L = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      da = lh(19086) | 0;
      if (da >>> 0 > 4294967279) _q(h);
      if (da >>> 0 < 11) {
       a[h + 11 >> 0] = da;
       pa = h;
      } else {
       C = da + 16 & -16;
       M = Bs(C) | 0;
       c[h >> 2] = M;
       c[h + 8 >> 2] = C | -2147483648;
       c[h + 4 >> 2] = da;
       pa = M;
      }
      sg(pa, 19086, da) | 0;
      a[g >> 0] = 0;
      mh(pa + da | 0, g);
      da = pt(L, d, h, e) | 0;
      Es(h);
      z = (da | 0) == (L | 0) ? b : da;
      break a;
      break;
     }
    case 77:
     {
      da = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      L = lh(19088) | 0;
      if (L >>> 0 > 4294967279) _q(h);
      if (L >>> 0 < 11) {
       a[h + 11 >> 0] = L;
       qa = h;
      } else {
       M = L + 16 & -16;
       C = Bs(M) | 0;
       c[h >> 2] = C;
       c[h + 8 >> 2] = M | -2147483648;
       c[h + 4 >> 2] = L;
       qa = C;
      }
      sg(qa, 19088, L) | 0;
      a[g >> 0] = 0;
      mh(qa + L | 0, g);
      L = pt(da, d, h, e) | 0;
      Es(h);
      z = (L | 0) == (da | 0) ? b : L;
      break a;
      break;
     }
    case 115:
     {
      L = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      da = lh(19091) | 0;
      if (da >>> 0 > 4294967279) _q(h);
      if (da >>> 0 < 11) {
       a[h + 11 >> 0] = da;
       ra = h;
      } else {
       C = da + 16 & -16;
       M = Bs(C) | 0;
       c[h >> 2] = M;
       c[h + 8 >> 2] = C | -2147483648;
       c[h + 4 >> 2] = da;
       ra = M;
      }
      sg(ra, 19091, da) | 0;
      a[g >> 0] = 0;
      mh(ra + da | 0, g);
      da = pt(L, d, h, e) | 0;
      Es(h);
      z = (da | 0) == (L | 0) ? b : da;
      break a;
      break;
     }
    case 83:
     {
      da = b + 2 | 0;
      c[h >> 2] = 0;
      c[h + 4 >> 2] = 0;
      c[h + 8 >> 2] = 0;
      L = lh(19094) | 0;
      if (L >>> 0 > 4294967279) _q(h);
      if (L >>> 0 < 11) {
       a[h + 11 >> 0] = L;
       sa = h;
      } else {
       M = L + 16 & -16;
       C = Bs(M) | 0;
       c[h >> 2] = C;
       c[h + 8 >> 2] = M | -2147483648;
       c[h + 4 >> 2] = L;
       sa = C;
      }
      sg(sa, 19094, L) | 0;
      a[g >> 0] = 0;
      mh(sa + L | 0, g);
      L = pt(da, d, h, e) | 0;
      Es(h);
      z = (L | 0) == (da | 0) ? b : L;
      break a;
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 115:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 99:
     {
      z = Et(b, d, e) | 0;
      break a;
      break;
     }
    case 112:
     {
      z = Ft(b, d, e) | 0;
      break a;
      break;
     }
    case 114:
     {
      z = xt(b, d, e) | 0;
      break a;
      break;
     }
    case 116:
     {
      z = Gt(b, d, e) | 0;
      break a;
      break;
     }
    case 122:
     {
      z = Ht(b, d, e) | 0;
      break a;
      break;
     }
    case 90:
     {
      if ((u - x | 0) <= 2) {
       z = b;
       break a;
      }
      switch (a[x + 2 >> 0] | 0) {
      case 84:
       {
        z = It(b, d, e) | 0;
        break a;
        break;
       }
      case 102:
       {
        z = Jt(b, d, e) | 0;
        break a;
        break;
       }
      default:
       {
        z = b;
        break a;
       }
      }
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 116:
   {
    switch (a[x + 1 >> 0] | 0) {
    case 105:
    case 101:
     {
      z = Kt(b, d, e) | 0;
      break a;
      break;
     }
    case 114:
     {
      Lt(g, 19098);
      L = e + 4 | 0;
      da = c[L >> 2] | 0;
      if (da >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
       dt(da, g);
       c[L >> 2] = (c[L >> 2] | 0) + 24;
      } else et(e, g);
      ns(g);
      z = b + 2 | 0;
      break a;
      break;
     }
    case 119:
     {
      z = Mt(b, d, e) | 0;
      break a;
      break;
     }
    default:
     {
      z = b;
      break a;
     }
    }
    break;
   }
  case 57:
  case 56:
  case 55:
  case 54:
  case 53:
  case 52:
  case 51:
  case 50:
  case 49:
   {
    z = xt(b, d, e) | 0;
    break a;
    break;
   }
  default:
   {
    z = b;
    break a;
   }
  } while (0);
 } else z = b; while (0);
 l = f;
 return z | 0;
}

function xd(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0, ka = 0, la = 0, ma = 0, na = 0, oa = 0, pa = 0, qa = 0, ra = 0, sa = 0, ta = 0, ua = 0, va = 0, wa = 0, xa = 0, ya = 0, za = 0, Aa = 0, Ba = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 do if (a >>> 0 < 245) {
  e = a >>> 0 < 11 ? 16 : a + 11 & -8;
  f = e >>> 3;
  g = c[5360] | 0;
  h = g >>> f;
  if (h & 3 | 0) {
   i = (h & 1 ^ 1) + f | 0;
   j = 21480 + (i << 1 << 2) | 0;
   k = j + 8 | 0;
   m = c[k >> 2] | 0;
   n = m + 8 | 0;
   o = c[n >> 2] | 0;
   do if ((o | 0) == (j | 0)) c[5360] = g & ~(1 << i); else {
    if ((c[5364] | 0) >>> 0 > o >>> 0) jb();
    p = o + 12 | 0;
    if ((c[p >> 2] | 0) == (m | 0)) {
     c[p >> 2] = j;
     c[k >> 2] = o;
     break;
    } else jb();
   } while (0);
   o = i << 3;
   c[m + 4 >> 2] = o | 3;
   k = m + o + 4 | 0;
   c[k >> 2] = c[k >> 2] | 1;
   q = n;
   l = b;
   return q | 0;
  }
  k = c[5362] | 0;
  if (e >>> 0 > k >>> 0) {
   if (h | 0) {
    o = 2 << f;
    j = h << f & (o | 0 - o);
    o = (j & 0 - j) + -1 | 0;
    j = o >>> 12 & 16;
    p = o >>> j;
    o = p >>> 5 & 8;
    r = p >>> o;
    p = r >>> 2 & 4;
    s = r >>> p;
    r = s >>> 1 & 2;
    t = s >>> r;
    s = t >>> 1 & 1;
    u = (o | j | p | r | s) + (t >>> s) | 0;
    s = 21480 + (u << 1 << 2) | 0;
    t = s + 8 | 0;
    r = c[t >> 2] | 0;
    p = r + 8 | 0;
    j = c[p >> 2] | 0;
    do if ((j | 0) == (s | 0)) {
     o = g & ~(1 << u);
     c[5360] = o;
     v = o;
    } else {
     if ((c[5364] | 0) >>> 0 > j >>> 0) jb();
     o = j + 12 | 0;
     if ((c[o >> 2] | 0) == (r | 0)) {
      c[o >> 2] = s;
      c[t >> 2] = j;
      v = g;
      break;
     } else jb();
    } while (0);
    j = u << 3;
    t = j - e | 0;
    c[r + 4 >> 2] = e | 3;
    s = r + e | 0;
    c[s + 4 >> 2] = t | 1;
    c[r + j >> 2] = t;
    if (k | 0) {
     j = c[5365] | 0;
     f = k >>> 3;
     h = 21480 + (f << 1 << 2) | 0;
     n = 1 << f;
     if (!(v & n)) {
      c[5360] = v | n;
      w = h;
      x = h + 8 | 0;
     } else {
      n = h + 8 | 0;
      f = c[n >> 2] | 0;
      if ((c[5364] | 0) >>> 0 > f >>> 0) jb(); else {
       w = f;
       x = n;
      }
     }
     c[x >> 2] = j;
     c[w + 12 >> 2] = j;
     c[j + 8 >> 2] = w;
     c[j + 12 >> 2] = h;
    }
    c[5362] = t;
    c[5365] = s;
    q = p;
    l = b;
    return q | 0;
   }
   s = c[5361] | 0;
   if (!s) y = e; else {
    t = (s & 0 - s) + -1 | 0;
    h = t >>> 12 & 16;
    j = t >>> h;
    t = j >>> 5 & 8;
    n = j >>> t;
    j = n >>> 2 & 4;
    f = n >>> j;
    n = f >>> 1 & 2;
    m = f >>> n;
    f = m >>> 1 & 1;
    i = c[21744 + ((t | h | j | n | f) + (m >>> f) << 2) >> 2] | 0;
    f = (c[i + 4 >> 2] & -8) - e | 0;
    m = c[i + 16 + (((c[i + 16 >> 2] | 0) == 0 & 1) << 2) >> 2] | 0;
    if (!m) {
     z = i;
     A = f;
    } else {
     n = i;
     i = f;
     f = m;
     while (1) {
      m = (c[f + 4 >> 2] & -8) - e | 0;
      j = m >>> 0 < i >>> 0;
      h = j ? m : i;
      m = j ? f : n;
      f = c[f + 16 + (((c[f + 16 >> 2] | 0) == 0 & 1) << 2) >> 2] | 0;
      if (!f) {
       z = m;
       A = h;
       break;
      } else {
       n = m;
       i = h;
      }
     }
    }
    i = c[5364] | 0;
    if (i >>> 0 > z >>> 0) jb();
    n = z + e | 0;
    if (n >>> 0 <= z >>> 0) jb();
    f = c[z + 24 >> 2] | 0;
    p = c[z + 12 >> 2] | 0;
    do if ((p | 0) == (z | 0)) {
     r = z + 20 | 0;
     u = c[r >> 2] | 0;
     if (!u) {
      h = z + 16 | 0;
      m = c[h >> 2] | 0;
      if (!m) {
       B = 0;
       break;
      } else {
       C = m;
       D = h;
      }
     } else {
      C = u;
      D = r;
     }
     while (1) {
      r = C + 20 | 0;
      u = c[r >> 2] | 0;
      if (u | 0) {
       C = u;
       D = r;
       continue;
      }
      r = C + 16 | 0;
      u = c[r >> 2] | 0;
      if (!u) break; else {
       C = u;
       D = r;
      }
     }
     if (i >>> 0 > D >>> 0) jb(); else {
      c[D >> 2] = 0;
      B = C;
      break;
     }
    } else {
     r = c[z + 8 >> 2] | 0;
     if (i >>> 0 > r >>> 0) jb();
     u = r + 12 | 0;
     if ((c[u >> 2] | 0) != (z | 0)) jb();
     h = p + 8 | 0;
     if ((c[h >> 2] | 0) == (z | 0)) {
      c[u >> 2] = p;
      c[h >> 2] = r;
      B = p;
      break;
     } else jb();
    } while (0);
    a : do if (f | 0) {
     p = c[z + 28 >> 2] | 0;
     i = 21744 + (p << 2) | 0;
     do if ((z | 0) == (c[i >> 2] | 0)) {
      c[i >> 2] = B;
      if (!B) {
       c[5361] = s & ~(1 << p);
       break a;
      }
     } else if ((c[5364] | 0) >>> 0 > f >>> 0) jb(); else {
      c[f + 16 + (((c[f + 16 >> 2] | 0) != (z | 0) & 1) << 2) >> 2] = B;
      if (!B) break a; else break;
     } while (0);
     p = c[5364] | 0;
     if (p >>> 0 > B >>> 0) jb();
     c[B + 24 >> 2] = f;
     i = c[z + 16 >> 2] | 0;
     do if (i | 0) if (p >>> 0 > i >>> 0) jb(); else {
      c[B + 16 >> 2] = i;
      c[i + 24 >> 2] = B;
      break;
     } while (0);
     i = c[z + 20 >> 2] | 0;
     if (i | 0) if ((c[5364] | 0) >>> 0 > i >>> 0) jb(); else {
      c[B + 20 >> 2] = i;
      c[i + 24 >> 2] = B;
      break;
     }
    } while (0);
    if (A >>> 0 < 16) {
     f = A + e | 0;
     c[z + 4 >> 2] = f | 3;
     s = z + f + 4 | 0;
     c[s >> 2] = c[s >> 2] | 1;
    } else {
     c[z + 4 >> 2] = e | 3;
     c[n + 4 >> 2] = A | 1;
     c[n + A >> 2] = A;
     if (k | 0) {
      s = c[5365] | 0;
      f = k >>> 3;
      i = 21480 + (f << 1 << 2) | 0;
      p = 1 << f;
      if (!(g & p)) {
       c[5360] = g | p;
       E = i;
       F = i + 8 | 0;
      } else {
       p = i + 8 | 0;
       f = c[p >> 2] | 0;
       if ((c[5364] | 0) >>> 0 > f >>> 0) jb(); else {
        E = f;
        F = p;
       }
      }
      c[F >> 2] = s;
      c[E + 12 >> 2] = s;
      c[s + 8 >> 2] = E;
      c[s + 12 >> 2] = i;
     }
     c[5362] = A;
     c[5365] = n;
    }
    q = z + 8 | 0;
    l = b;
    return q | 0;
   }
  } else y = e;
 } else if (a >>> 0 > 4294967231) y = -1; else {
  i = a + 11 | 0;
  s = i & -8;
  p = c[5361] | 0;
  if (!p) y = s; else {
   f = 0 - s | 0;
   r = i >>> 8;
   if (!r) G = 0; else if (s >>> 0 > 16777215) G = 31; else {
    i = (r + 1048320 | 0) >>> 16 & 8;
    h = r << i;
    r = (h + 520192 | 0) >>> 16 & 4;
    u = h << r;
    h = (u + 245760 | 0) >>> 16 & 2;
    m = 14 - (r | i | h) + (u << h >>> 15) | 0;
    G = s >>> (m + 7 | 0) & 1 | m << 1;
   }
   m = c[21744 + (G << 2) >> 2] | 0;
   b : do if (!m) {
    H = 0;
    I = 0;
    J = f;
    K = 81;
   } else {
    h = 0;
    u = f;
    i = m;
    r = s << ((G | 0) == 31 ? 0 : 25 - (G >>> 1) | 0);
    j = 0;
    while (1) {
     t = (c[i + 4 >> 2] & -8) - s | 0;
     if (t >>> 0 < u >>> 0) if (!t) {
      L = i;
      M = 0;
      N = i;
      K = 85;
      break b;
     } else {
      O = i;
      P = t;
     } else {
      O = h;
      P = u;
     }
     t = c[i + 20 >> 2] | 0;
     i = c[i + 16 + (r >>> 31 << 2) >> 2] | 0;
     o = (t | 0) == 0 | (t | 0) == (i | 0) ? j : t;
     t = (i | 0) == 0;
     if (t) {
      H = o;
      I = O;
      J = P;
      K = 81;
      break;
     } else {
      h = O;
      u = P;
      r = r << ((t ^ 1) & 1);
      j = o;
     }
    }
   } while (0);
   if ((K | 0) == 81) {
    if ((H | 0) == 0 & (I | 0) == 0) {
     m = 2 << G;
     f = p & (m | 0 - m);
     if (!f) {
      y = s;
      break;
     }
     m = (f & 0 - f) + -1 | 0;
     f = m >>> 12 & 16;
     e = m >>> f;
     m = e >>> 5 & 8;
     n = e >>> m;
     e = n >>> 2 & 4;
     g = n >>> e;
     n = g >>> 1 & 2;
     k = g >>> n;
     g = k >>> 1 & 1;
     Q = 0;
     R = c[21744 + ((m | f | e | n | g) + (k >>> g) << 2) >> 2] | 0;
    } else {
     Q = I;
     R = H;
    }
    if (!R) {
     S = Q;
     T = J;
    } else {
     L = Q;
     M = J;
     N = R;
     K = 85;
    }
   }
   if ((K | 0) == 85) while (1) {
    K = 0;
    g = (c[N + 4 >> 2] & -8) - s | 0;
    k = g >>> 0 < M >>> 0;
    n = k ? g : M;
    g = k ? N : L;
    N = c[N + 16 + (((c[N + 16 >> 2] | 0) == 0 & 1) << 2) >> 2] | 0;
    if (!N) {
     S = g;
     T = n;
     break;
    } else {
     L = g;
     M = n;
     K = 85;
    }
   }
   if (!S) y = s; else if (T >>> 0 < ((c[5362] | 0) - s | 0) >>> 0) {
    n = c[5364] | 0;
    if (n >>> 0 > S >>> 0) jb();
    g = S + s | 0;
    if (g >>> 0 <= S >>> 0) jb();
    k = c[S + 24 >> 2] | 0;
    e = c[S + 12 >> 2] | 0;
    do if ((e | 0) == (S | 0)) {
     f = S + 20 | 0;
     m = c[f >> 2] | 0;
     if (!m) {
      j = S + 16 | 0;
      r = c[j >> 2] | 0;
      if (!r) {
       U = 0;
       break;
      } else {
       V = r;
       W = j;
      }
     } else {
      V = m;
      W = f;
     }
     while (1) {
      f = V + 20 | 0;
      m = c[f >> 2] | 0;
      if (m | 0) {
       V = m;
       W = f;
       continue;
      }
      f = V + 16 | 0;
      m = c[f >> 2] | 0;
      if (!m) break; else {
       V = m;
       W = f;
      }
     }
     if (n >>> 0 > W >>> 0) jb(); else {
      c[W >> 2] = 0;
      U = V;
      break;
     }
    } else {
     f = c[S + 8 >> 2] | 0;
     if (n >>> 0 > f >>> 0) jb();
     m = f + 12 | 0;
     if ((c[m >> 2] | 0) != (S | 0)) jb();
     j = e + 8 | 0;
     if ((c[j >> 2] | 0) == (S | 0)) {
      c[m >> 2] = e;
      c[j >> 2] = f;
      U = e;
      break;
     } else jb();
    } while (0);
    c : do if (!k) X = p; else {
     e = c[S + 28 >> 2] | 0;
     n = 21744 + (e << 2) | 0;
     do if ((S | 0) == (c[n >> 2] | 0)) {
      c[n >> 2] = U;
      if (!U) {
       f = p & ~(1 << e);
       c[5361] = f;
       X = f;
       break c;
      }
     } else if ((c[5364] | 0) >>> 0 > k >>> 0) jb(); else {
      c[k + 16 + (((c[k + 16 >> 2] | 0) != (S | 0) & 1) << 2) >> 2] = U;
      if (!U) {
       X = p;
       break c;
      } else break;
     } while (0);
     e = c[5364] | 0;
     if (e >>> 0 > U >>> 0) jb();
     c[U + 24 >> 2] = k;
     n = c[S + 16 >> 2] | 0;
     do if (n | 0) if (e >>> 0 > n >>> 0) jb(); else {
      c[U + 16 >> 2] = n;
      c[n + 24 >> 2] = U;
      break;
     } while (0);
     n = c[S + 20 >> 2] | 0;
     if (!n) X = p; else if ((c[5364] | 0) >>> 0 > n >>> 0) jb(); else {
      c[U + 20 >> 2] = n;
      c[n + 24 >> 2] = U;
      X = p;
      break;
     }
    } while (0);
    do if (T >>> 0 < 16) {
     p = T + s | 0;
     c[S + 4 >> 2] = p | 3;
     k = S + p + 4 | 0;
     c[k >> 2] = c[k >> 2] | 1;
    } else {
     c[S + 4 >> 2] = s | 3;
     c[g + 4 >> 2] = T | 1;
     c[g + T >> 2] = T;
     k = T >>> 3;
     if (T >>> 0 < 256) {
      p = 21480 + (k << 1 << 2) | 0;
      n = c[5360] | 0;
      e = 1 << k;
      if (!(n & e)) {
       c[5360] = n | e;
       Y = p;
       Z = p + 8 | 0;
      } else {
       e = p + 8 | 0;
       n = c[e >> 2] | 0;
       if ((c[5364] | 0) >>> 0 > n >>> 0) jb(); else {
        Y = n;
        Z = e;
       }
      }
      c[Z >> 2] = g;
      c[Y + 12 >> 2] = g;
      c[g + 8 >> 2] = Y;
      c[g + 12 >> 2] = p;
      break;
     }
     p = T >>> 8;
     if (!p) _ = 0; else if (T >>> 0 > 16777215) _ = 31; else {
      e = (p + 1048320 | 0) >>> 16 & 8;
      n = p << e;
      p = (n + 520192 | 0) >>> 16 & 4;
      k = n << p;
      n = (k + 245760 | 0) >>> 16 & 2;
      f = 14 - (p | e | n) + (k << n >>> 15) | 0;
      _ = T >>> (f + 7 | 0) & 1 | f << 1;
     }
     f = 21744 + (_ << 2) | 0;
     c[g + 28 >> 2] = _;
     n = g + 16 | 0;
     c[n + 4 >> 2] = 0;
     c[n >> 2] = 0;
     n = 1 << _;
     if (!(X & n)) {
      c[5361] = X | n;
      c[f >> 2] = g;
      c[g + 24 >> 2] = f;
      c[g + 12 >> 2] = g;
      c[g + 8 >> 2] = g;
      break;
     }
     n = T << ((_ | 0) == 31 ? 0 : 25 - (_ >>> 1) | 0);
     k = c[f >> 2] | 0;
     while (1) {
      if ((c[k + 4 >> 2] & -8 | 0) == (T | 0)) {
       K = 139;
       break;
      }
      $ = k + 16 + (n >>> 31 << 2) | 0;
      f = c[$ >> 2] | 0;
      if (!f) {
       K = 136;
       break;
      } else {
       n = n << 1;
       k = f;
      }
     }
     if ((K | 0) == 136) if ((c[5364] | 0) >>> 0 > $ >>> 0) jb(); else {
      c[$ >> 2] = g;
      c[g + 24 >> 2] = k;
      c[g + 12 >> 2] = g;
      c[g + 8 >> 2] = g;
      break;
     } else if ((K | 0) == 139) {
      n = k + 8 | 0;
      f = c[n >> 2] | 0;
      e = c[5364] | 0;
      if (e >>> 0 <= f >>> 0 & e >>> 0 <= k >>> 0) {
       c[f + 12 >> 2] = g;
       c[n >> 2] = g;
       c[g + 8 >> 2] = f;
       c[g + 12 >> 2] = k;
       c[g + 24 >> 2] = 0;
       break;
      } else jb();
     }
    } while (0);
    q = S + 8 | 0;
    l = b;
    return q | 0;
   } else y = s;
  }
 } while (0);
 S = c[5362] | 0;
 if (S >>> 0 >= y >>> 0) {
  $ = S - y | 0;
  T = c[5365] | 0;
  if ($ >>> 0 > 15) {
   _ = T + y | 0;
   c[5365] = _;
   c[5362] = $;
   c[_ + 4 >> 2] = $ | 1;
   c[T + S >> 2] = $;
   c[T + 4 >> 2] = y | 3;
  } else {
   c[5362] = 0;
   c[5365] = 0;
   c[T + 4 >> 2] = S | 3;
   $ = T + S + 4 | 0;
   c[$ >> 2] = c[$ >> 2] | 1;
  }
  q = T + 8 | 0;
  l = b;
  return q | 0;
 }
 T = c[5363] | 0;
 if (T >>> 0 > y >>> 0) {
  $ = T - y | 0;
  c[5363] = $;
  S = c[5366] | 0;
  _ = S + y | 0;
  c[5366] = _;
  c[_ + 4 >> 2] = $ | 1;
  c[S + 4 >> 2] = y | 3;
  q = S + 8 | 0;
  l = b;
  return q | 0;
 }
 if (!(c[5478] | 0)) {
  c[5480] = 4096;
  c[5479] = 4096;
  c[5481] = -1;
  c[5482] = -1;
  c[5483] = 0;
  c[5471] = 0;
  c[5478] = d & -16 ^ 1431655768;
  aa = 4096;
 } else aa = c[5480] | 0;
 d = y + 48 | 0;
 S = y + 47 | 0;
 $ = aa + S | 0;
 _ = 0 - aa | 0;
 aa = $ & _;
 if (aa >>> 0 <= y >>> 0) {
  q = 0;
  l = b;
  return q | 0;
 }
 X = c[5470] | 0;
 if (X | 0) {
  Y = c[5468] | 0;
  Z = Y + aa | 0;
  if (Z >>> 0 <= Y >>> 0 | Z >>> 0 > X >>> 0) {
   q = 0;
   l = b;
   return q | 0;
  }
 }
 d : do if (!(c[5471] & 4)) {
  X = c[5366] | 0;
  e : do if (!X) K = 163; else {
   Z = 21888;
   while (1) {
    Y = c[Z >> 2] | 0;
    if (Y >>> 0 <= X >>> 0) {
     ba = Z + 4 | 0;
     if ((Y + (c[ba >> 2] | 0) | 0) >>> 0 > X >>> 0) break;
    }
    Y = c[Z + 8 >> 2] | 0;
    if (!Y) {
     K = 163;
     break e;
    } else Z = Y;
   }
   k = $ - T & _;
   if (k >>> 0 < 2147483647) {
    Y = Fv(k | 0) | 0;
    if ((Y | 0) == ((c[Z >> 2] | 0) + (c[ba >> 2] | 0) | 0)) if ((Y | 0) == (-1 | 0)) ca = k; else {
     da = k;
     ea = Y;
     K = 180;
     break d;
    } else {
     fa = Y;
     ga = k;
     K = 171;
    }
   } else ca = 0;
  } while (0);
  do if ((K | 0) == 163) {
   X = Fv(0) | 0;
   if ((X | 0) == (-1 | 0)) ca = 0; else {
    s = X;
    k = c[5479] | 0;
    Y = k + -1 | 0;
    U = ((Y & s | 0) == 0 ? 0 : (Y + s & 0 - k) - s | 0) + aa | 0;
    s = c[5468] | 0;
    k = U + s | 0;
    if (U >>> 0 > y >>> 0 & U >>> 0 < 2147483647) {
     Y = c[5470] | 0;
     if (Y | 0) if (k >>> 0 <= s >>> 0 | k >>> 0 > Y >>> 0) {
      ca = 0;
      break;
     }
     Y = Fv(U | 0) | 0;
     if ((Y | 0) == (X | 0)) {
      da = U;
      ea = X;
      K = 180;
      break d;
     } else {
      fa = Y;
      ga = U;
      K = 171;
     }
    } else ca = 0;
   }
  } while (0);
  do if ((K | 0) == 171) {
   U = 0 - ga | 0;
   if (!(d >>> 0 > ga >>> 0 & (ga >>> 0 < 2147483647 & (fa | 0) != (-1 | 0)))) if ((fa | 0) == (-1 | 0)) {
    ca = 0;
    break;
   } else {
    da = ga;
    ea = fa;
    K = 180;
    break d;
   }
   Y = c[5480] | 0;
   X = S - ga + Y & 0 - Y;
   if (X >>> 0 >= 2147483647) {
    da = ga;
    ea = fa;
    K = 180;
    break d;
   }
   if ((Fv(X | 0) | 0) == (-1 | 0)) {
    Fv(U | 0) | 0;
    ca = 0;
    break;
   } else {
    da = X + ga | 0;
    ea = fa;
    K = 180;
    break d;
   }
  } while (0);
  c[5471] = c[5471] | 4;
  ha = ca;
  K = 178;
 } else {
  ha = 0;
  K = 178;
 } while (0);
 if ((K | 0) == 178) if (aa >>> 0 < 2147483647) {
  ca = Fv(aa | 0) | 0;
  aa = Fv(0) | 0;
  fa = aa - ca | 0;
  ga = fa >>> 0 > (y + 40 | 0) >>> 0;
  if (!((ca | 0) == (-1 | 0) | ga ^ 1 | ca >>> 0 < aa >>> 0 & ((ca | 0) != (-1 | 0) & (aa | 0) != (-1 | 0)) ^ 1)) {
   da = ga ? fa : ha;
   ea = ca;
   K = 180;
  }
 }
 if ((K | 0) == 180) {
  ca = (c[5468] | 0) + da | 0;
  c[5468] = ca;
  if (ca >>> 0 > (c[5469] | 0) >>> 0) c[5469] = ca;
  ca = c[5366] | 0;
  do if (!ca) {
   ha = c[5364] | 0;
   if ((ha | 0) == 0 | ea >>> 0 < ha >>> 0) c[5364] = ea;
   c[5472] = ea;
   c[5473] = da;
   c[5475] = 0;
   c[5369] = c[5478];
   c[5368] = -1;
   c[5373] = 21480;
   c[5372] = 21480;
   c[5375] = 21488;
   c[5374] = 21488;
   c[5377] = 21496;
   c[5376] = 21496;
   c[5379] = 21504;
   c[5378] = 21504;
   c[5381] = 21512;
   c[5380] = 21512;
   c[5383] = 21520;
   c[5382] = 21520;
   c[5385] = 21528;
   c[5384] = 21528;
   c[5387] = 21536;
   c[5386] = 21536;
   c[5389] = 21544;
   c[5388] = 21544;
   c[5391] = 21552;
   c[5390] = 21552;
   c[5393] = 21560;
   c[5392] = 21560;
   c[5395] = 21568;
   c[5394] = 21568;
   c[5397] = 21576;
   c[5396] = 21576;
   c[5399] = 21584;
   c[5398] = 21584;
   c[5401] = 21592;
   c[5400] = 21592;
   c[5403] = 21600;
   c[5402] = 21600;
   c[5405] = 21608;
   c[5404] = 21608;
   c[5407] = 21616;
   c[5406] = 21616;
   c[5409] = 21624;
   c[5408] = 21624;
   c[5411] = 21632;
   c[5410] = 21632;
   c[5413] = 21640;
   c[5412] = 21640;
   c[5415] = 21648;
   c[5414] = 21648;
   c[5417] = 21656;
   c[5416] = 21656;
   c[5419] = 21664;
   c[5418] = 21664;
   c[5421] = 21672;
   c[5420] = 21672;
   c[5423] = 21680;
   c[5422] = 21680;
   c[5425] = 21688;
   c[5424] = 21688;
   c[5427] = 21696;
   c[5426] = 21696;
   c[5429] = 21704;
   c[5428] = 21704;
   c[5431] = 21712;
   c[5430] = 21712;
   c[5433] = 21720;
   c[5432] = 21720;
   c[5435] = 21728;
   c[5434] = 21728;
   ha = da + -40 | 0;
   fa = ea + 8 | 0;
   ga = (fa & 7 | 0) == 0 ? 0 : 0 - fa & 7;
   fa = ea + ga | 0;
   aa = ha - ga | 0;
   c[5366] = fa;
   c[5363] = aa;
   c[fa + 4 >> 2] = aa | 1;
   c[ea + ha + 4 >> 2] = 40;
   c[5367] = c[5482];
  } else {
   ha = 21888;
   while (1) {
    ia = c[ha >> 2] | 0;
    ja = ha + 4 | 0;
    ka = c[ja >> 2] | 0;
    if ((ea | 0) == (ia + ka | 0)) {
     K = 188;
     break;
    }
    aa = c[ha + 8 >> 2] | 0;
    if (!aa) break; else ha = aa;
   }
   if ((K | 0) == 188) if (!(c[ha + 12 >> 2] & 8)) if (ea >>> 0 > ca >>> 0 & ia >>> 0 <= ca >>> 0) {
    c[ja >> 2] = ka + da;
    aa = (c[5363] | 0) + da | 0;
    fa = ca + 8 | 0;
    ga = (fa & 7 | 0) == 0 ? 0 : 0 - fa & 7;
    fa = ca + ga | 0;
    S = aa - ga | 0;
    c[5366] = fa;
    c[5363] = S;
    c[fa + 4 >> 2] = S | 1;
    c[ca + aa + 4 >> 2] = 40;
    c[5367] = c[5482];
    break;
   }
   aa = c[5364] | 0;
   if (ea >>> 0 < aa >>> 0) {
    c[5364] = ea;
    la = ea;
   } else la = aa;
   aa = ea + da | 0;
   S = 21888;
   while (1) {
    if ((c[S >> 2] | 0) == (aa | 0)) {
     K = 196;
     break;
    }
    fa = c[S + 8 >> 2] | 0;
    if (!fa) {
     ma = 21888;
     break;
    } else S = fa;
   }
   if ((K | 0) == 196) if (!(c[S + 12 >> 2] & 8)) {
    c[S >> 2] = ea;
    ha = S + 4 | 0;
    c[ha >> 2] = (c[ha >> 2] | 0) + da;
    ha = ea + 8 | 0;
    fa = ea + ((ha & 7 | 0) == 0 ? 0 : 0 - ha & 7) | 0;
    ha = aa + 8 | 0;
    ga = aa + ((ha & 7 | 0) == 0 ? 0 : 0 - ha & 7) | 0;
    ha = fa + y | 0;
    d = ga - fa - y | 0;
    c[fa + 4 >> 2] = y | 3;
    do if ((ca | 0) == (ga | 0)) {
     ba = (c[5363] | 0) + d | 0;
     c[5363] = ba;
     c[5366] = ha;
     c[ha + 4 >> 2] = ba | 1;
    } else {
     if ((c[5365] | 0) == (ga | 0)) {
      ba = (c[5362] | 0) + d | 0;
      c[5362] = ba;
      c[5365] = ha;
      c[ha + 4 >> 2] = ba | 1;
      c[ha + ba >> 2] = ba;
      break;
     }
     ba = c[ga + 4 >> 2] | 0;
     if ((ba & 3 | 0) == 1) {
      _ = ba & -8;
      T = ba >>> 3;
      f : do if (ba >>> 0 < 256) {
       $ = c[ga + 8 >> 2] | 0;
       X = c[ga + 12 >> 2] | 0;
       U = 21480 + (T << 1 << 2) | 0;
       do if (($ | 0) != (U | 0)) {
        if (la >>> 0 > $ >>> 0) jb();
        if ((c[$ + 12 >> 2] | 0) == (ga | 0)) break;
        jb();
       } while (0);
       if ((X | 0) == ($ | 0)) {
        c[5360] = c[5360] & ~(1 << T);
        break;
       }
       do if ((X | 0) == (U | 0)) na = X + 8 | 0; else {
        if (la >>> 0 > X >>> 0) jb();
        Y = X + 8 | 0;
        if ((c[Y >> 2] | 0) == (ga | 0)) {
         na = Y;
         break;
        }
        jb();
       } while (0);
       c[$ + 12 >> 2] = X;
       c[na >> 2] = $;
      } else {
       U = c[ga + 24 >> 2] | 0;
       Y = c[ga + 12 >> 2] | 0;
       do if ((Y | 0) == (ga | 0)) {
        k = ga + 16 | 0;
        s = k + 4 | 0;
        V = c[s >> 2] | 0;
        if (!V) {
         W = c[k >> 2] | 0;
         if (!W) {
          oa = 0;
          break;
         } else {
          pa = W;
          qa = k;
         }
        } else {
         pa = V;
         qa = s;
        }
        while (1) {
         s = pa + 20 | 0;
         V = c[s >> 2] | 0;
         if (V | 0) {
          pa = V;
          qa = s;
          continue;
         }
         s = pa + 16 | 0;
         V = c[s >> 2] | 0;
         if (!V) break; else {
          pa = V;
          qa = s;
         }
        }
        if (la >>> 0 > qa >>> 0) jb(); else {
         c[qa >> 2] = 0;
         oa = pa;
         break;
        }
       } else {
        s = c[ga + 8 >> 2] | 0;
        if (la >>> 0 > s >>> 0) jb();
        V = s + 12 | 0;
        if ((c[V >> 2] | 0) != (ga | 0)) jb();
        k = Y + 8 | 0;
        if ((c[k >> 2] | 0) == (ga | 0)) {
         c[V >> 2] = Y;
         c[k >> 2] = s;
         oa = Y;
         break;
        } else jb();
       } while (0);
       if (!U) break;
       Y = c[ga + 28 >> 2] | 0;
       $ = 21744 + (Y << 2) | 0;
       do if ((c[$ >> 2] | 0) == (ga | 0)) {
        c[$ >> 2] = oa;
        if (oa | 0) break;
        c[5361] = c[5361] & ~(1 << Y);
        break f;
       } else if ((c[5364] | 0) >>> 0 > U >>> 0) jb(); else {
        c[U + 16 + (((c[U + 16 >> 2] | 0) != (ga | 0) & 1) << 2) >> 2] = oa;
        if (!oa) break f; else break;
       } while (0);
       Y = c[5364] | 0;
       if (Y >>> 0 > oa >>> 0) jb();
       c[oa + 24 >> 2] = U;
       $ = ga + 16 | 0;
       X = c[$ >> 2] | 0;
       do if (X | 0) if (Y >>> 0 > X >>> 0) jb(); else {
        c[oa + 16 >> 2] = X;
        c[X + 24 >> 2] = oa;
        break;
       } while (0);
       X = c[$ + 4 >> 2] | 0;
       if (!X) break;
       if ((c[5364] | 0) >>> 0 > X >>> 0) jb(); else {
        c[oa + 20 >> 2] = X;
        c[X + 24 >> 2] = oa;
        break;
       }
      } while (0);
      ra = ga + _ | 0;
      sa = _ + d | 0;
     } else {
      ra = ga;
      sa = d;
     }
     T = ra + 4 | 0;
     c[T >> 2] = c[T >> 2] & -2;
     c[ha + 4 >> 2] = sa | 1;
     c[ha + sa >> 2] = sa;
     T = sa >>> 3;
     if (sa >>> 0 < 256) {
      ba = 21480 + (T << 1 << 2) | 0;
      Z = c[5360] | 0;
      X = 1 << T;
      do if (!(Z & X)) {
       c[5360] = Z | X;
       ta = ba;
       ua = ba + 8 | 0;
      } else {
       T = ba + 8 | 0;
       Y = c[T >> 2] | 0;
       if ((c[5364] | 0) >>> 0 <= Y >>> 0) {
        ta = Y;
        ua = T;
        break;
       }
       jb();
      } while (0);
      c[ua >> 2] = ha;
      c[ta + 12 >> 2] = ha;
      c[ha + 8 >> 2] = ta;
      c[ha + 12 >> 2] = ba;
      break;
     }
     X = sa >>> 8;
     do if (!X) va = 0; else {
      if (sa >>> 0 > 16777215) {
       va = 31;
       break;
      }
      Z = (X + 1048320 | 0) >>> 16 & 8;
      _ = X << Z;
      T = (_ + 520192 | 0) >>> 16 & 4;
      Y = _ << T;
      _ = (Y + 245760 | 0) >>> 16 & 2;
      U = 14 - (T | Z | _) + (Y << _ >>> 15) | 0;
      va = sa >>> (U + 7 | 0) & 1 | U << 1;
     } while (0);
     X = 21744 + (va << 2) | 0;
     c[ha + 28 >> 2] = va;
     ba = ha + 16 | 0;
     c[ba + 4 >> 2] = 0;
     c[ba >> 2] = 0;
     ba = c[5361] | 0;
     U = 1 << va;
     if (!(ba & U)) {
      c[5361] = ba | U;
      c[X >> 2] = ha;
      c[ha + 24 >> 2] = X;
      c[ha + 12 >> 2] = ha;
      c[ha + 8 >> 2] = ha;
      break;
     }
     U = sa << ((va | 0) == 31 ? 0 : 25 - (va >>> 1) | 0);
     ba = c[X >> 2] | 0;
     while (1) {
      if ((c[ba + 4 >> 2] & -8 | 0) == (sa | 0)) {
       K = 263;
       break;
      }
      wa = ba + 16 + (U >>> 31 << 2) | 0;
      X = c[wa >> 2] | 0;
      if (!X) {
       K = 260;
       break;
      } else {
       U = U << 1;
       ba = X;
      }
     }
     if ((K | 0) == 260) if ((c[5364] | 0) >>> 0 > wa >>> 0) jb(); else {
      c[wa >> 2] = ha;
      c[ha + 24 >> 2] = ba;
      c[ha + 12 >> 2] = ha;
      c[ha + 8 >> 2] = ha;
      break;
     } else if ((K | 0) == 263) {
      U = ba + 8 | 0;
      X = c[U >> 2] | 0;
      _ = c[5364] | 0;
      if (_ >>> 0 <= X >>> 0 & _ >>> 0 <= ba >>> 0) {
       c[X + 12 >> 2] = ha;
       c[U >> 2] = ha;
       c[ha + 8 >> 2] = X;
       c[ha + 12 >> 2] = ba;
       c[ha + 24 >> 2] = 0;
       break;
      } else jb();
     }
    } while (0);
    q = fa + 8 | 0;
    l = b;
    return q | 0;
   } else ma = 21888;
   while (1) {
    ha = c[ma >> 2] | 0;
    if (ha >>> 0 <= ca >>> 0) {
     xa = ha + (c[ma + 4 >> 2] | 0) | 0;
     if (xa >>> 0 > ca >>> 0) break;
    }
    ma = c[ma + 8 >> 2] | 0;
   }
   fa = xa + -47 | 0;
   ha = fa + 8 | 0;
   d = fa + ((ha & 7 | 0) == 0 ? 0 : 0 - ha & 7) | 0;
   ha = ca + 16 | 0;
   fa = d >>> 0 < ha >>> 0 ? ca : d;
   d = fa + 8 | 0;
   ga = da + -40 | 0;
   aa = ea + 8 | 0;
   S = (aa & 7 | 0) == 0 ? 0 : 0 - aa & 7;
   aa = ea + S | 0;
   X = ga - S | 0;
   c[5366] = aa;
   c[5363] = X;
   c[aa + 4 >> 2] = X | 1;
   c[ea + ga + 4 >> 2] = 40;
   c[5367] = c[5482];
   ga = fa + 4 | 0;
   c[ga >> 2] = 27;
   c[d >> 2] = c[5472];
   c[d + 4 >> 2] = c[5473];
   c[d + 8 >> 2] = c[5474];
   c[d + 12 >> 2] = c[5475];
   c[5472] = ea;
   c[5473] = da;
   c[5475] = 0;
   c[5474] = d;
   d = fa + 24 | 0;
   do {
    X = d;
    d = d + 4 | 0;
    c[d >> 2] = 7;
   } while ((X + 8 | 0) >>> 0 < xa >>> 0);
   if ((fa | 0) != (ca | 0)) {
    d = fa - ca | 0;
    c[ga >> 2] = c[ga >> 2] & -2;
    c[ca + 4 >> 2] = d | 1;
    c[fa >> 2] = d;
    X = d >>> 3;
    if (d >>> 0 < 256) {
     aa = 21480 + (X << 1 << 2) | 0;
     S = c[5360] | 0;
     U = 1 << X;
     if (!(S & U)) {
      c[5360] = S | U;
      ya = aa;
      za = aa + 8 | 0;
     } else {
      U = aa + 8 | 0;
      S = c[U >> 2] | 0;
      if ((c[5364] | 0) >>> 0 > S >>> 0) jb(); else {
       ya = S;
       za = U;
      }
     }
     c[za >> 2] = ca;
     c[ya + 12 >> 2] = ca;
     c[ca + 8 >> 2] = ya;
     c[ca + 12 >> 2] = aa;
     break;
    }
    aa = d >>> 8;
    if (!aa) Aa = 0; else if (d >>> 0 > 16777215) Aa = 31; else {
     U = (aa + 1048320 | 0) >>> 16 & 8;
     S = aa << U;
     aa = (S + 520192 | 0) >>> 16 & 4;
     X = S << aa;
     S = (X + 245760 | 0) >>> 16 & 2;
     _ = 14 - (aa | U | S) + (X << S >>> 15) | 0;
     Aa = d >>> (_ + 7 | 0) & 1 | _ << 1;
    }
    _ = 21744 + (Aa << 2) | 0;
    c[ca + 28 >> 2] = Aa;
    c[ca + 20 >> 2] = 0;
    c[ha >> 2] = 0;
    S = c[5361] | 0;
    X = 1 << Aa;
    if (!(S & X)) {
     c[5361] = S | X;
     c[_ >> 2] = ca;
     c[ca + 24 >> 2] = _;
     c[ca + 12 >> 2] = ca;
     c[ca + 8 >> 2] = ca;
     break;
    }
    X = d << ((Aa | 0) == 31 ? 0 : 25 - (Aa >>> 1) | 0);
    S = c[_ >> 2] | 0;
    while (1) {
     if ((c[S + 4 >> 2] & -8 | 0) == (d | 0)) {
      K = 289;
      break;
     }
     Ba = S + 16 + (X >>> 31 << 2) | 0;
     _ = c[Ba >> 2] | 0;
     if (!_) {
      K = 286;
      break;
     } else {
      X = X << 1;
      S = _;
     }
    }
    if ((K | 0) == 286) if ((c[5364] | 0) >>> 0 > Ba >>> 0) jb(); else {
     c[Ba >> 2] = ca;
     c[ca + 24 >> 2] = S;
     c[ca + 12 >> 2] = ca;
     c[ca + 8 >> 2] = ca;
     break;
    } else if ((K | 0) == 289) {
     X = S + 8 | 0;
     d = c[X >> 2] | 0;
     ha = c[5364] | 0;
     if (ha >>> 0 <= d >>> 0 & ha >>> 0 <= S >>> 0) {
      c[d + 12 >> 2] = ca;
      c[X >> 2] = ca;
      c[ca + 8 >> 2] = d;
      c[ca + 12 >> 2] = S;
      c[ca + 24 >> 2] = 0;
      break;
     } else jb();
    }
   }
  } while (0);
  ca = c[5363] | 0;
  if (ca >>> 0 > y >>> 0) {
   K = ca - y | 0;
   c[5363] = K;
   ca = c[5366] | 0;
   Ba = ca + y | 0;
   c[5366] = Ba;
   c[Ba + 4 >> 2] = K | 1;
   c[ca + 4 >> 2] = y | 3;
   q = ca + 8 | 0;
   l = b;
   return q | 0;
  }
 }
 c[(Gd() | 0) >> 2] = 12;
 q = 0;
 l = b;
 return q | 0;
}

function Is(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0;
 f = l;
 l = l + 144 | 0;
 g = f + 128 | 0;
 h = f + 104 | 0;
 i = f + 40 | 0;
 j = f + 88 | 0;
 k = f + 24 | 0;
 m = f + 76 | 0;
 n = f + 12 | 0;
 o = f;
 p = f + 64 | 0;
 a : do if ((b | 0) == (d | 0)) q = b; else {
  switch (a[b >> 0] | 0) {
  case 75:
  case 86:
  case 114:
   {
    c[g >> 2] = 0;
    r = Js(b, d, g) | 0;
    b : do if ((r | 0) == (b | 0)) s = b; else {
     t = (a[r >> 0] | 0) == 70;
     u = e + 4 | 0;
     v = ((c[u >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
     w = Is(r, d, e) | 0;
     x = ((c[u >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
     if ((w | 0) == (r | 0)) s = b; else {
      u = e + 20 | 0;
      y = c[u >> 2] | 0;
      c : do if (t) {
       z = y + -16 | 0;
       A = y;
       while (1) {
        if ((A | 0) == (z | 0)) {
         B = z;
         break c;
        }
        C = A + -16 | 0;
        c[u >> 2] = C;
        os(C);
        A = c[u >> 2] | 0;
       }
      } else B = y; while (0);
      c[h >> 2] = c[e + 12 >> 2];
      if (B >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
       c[B >> 2] = 0;
       c[B + 4 >> 2] = 0;
       y = c[h >> 2] | 0;
       c[B + 8 >> 2] = 0;
       c[B + 12 >> 2] = y;
       c[u >> 2] = (c[u >> 2] | 0) + 16;
      } else Ks(e + 16 | 0, h);
      y = c[g >> 2] | 0;
      A = (y & 1 | 0) == 0;
      z = (y & 2 | 0) == 0;
      C = (y & 4 | 0) == 0;
      y = v;
      while (1) {
       if (y >>> 0 >= x >>> 0) {
        s = w;
        break b;
       }
       if (t) {
        D = c[e >> 2] | 0;
        E = D + (y * 24 | 0) + 12 | 0;
        F = a[E + 11 >> 0] | 0;
        G = F << 24 >> 24 < 0;
        if (G) {
         H = c[D + (y * 24 | 0) + 16 >> 2] | 0;
         I = c[E >> 2] | 0;
        } else {
         H = F & 255;
         I = E;
        }
        J = H + -2 | 0;
        if ((a[I + J >> 0] | 0) == 38) K = H + -3 | 0; else {
         if (G) {
          L = c[E >> 2] | 0;
          M = c[D + (y * 24 | 0) + 16 >> 2] | 0;
         } else {
          L = E;
          M = F & 255;
         }
         K = (a[L + M + -1 >> 0] | 0) == 38 ? J : H;
        }
        if (A) N = K; else {
         Ls(E, K, 18853) | 0;
         N = K + 6 | 0;
        }
        if (z) O = N; else {
         Ls((c[e >> 2] | 0) + (y * 24 | 0) + 12 | 0, N, 18860) | 0;
         O = N + 9 | 0;
        }
        if (!C) Ls((c[e >> 2] | 0) + (y * 24 | 0) + 12 | 0, O, 18870) | 0;
       } else {
        if (!A) Ms((c[e >> 2] | 0) + (y * 24 | 0) | 0, 18853) | 0;
        if (!z) Ms((c[e >> 2] | 0) + (y * 24 | 0) | 0, 18860) | 0;
        if (!C) Ms((c[e >> 2] | 0) + (y * 24 | 0) | 0, 18870) | 0;
       }
       E = c[u >> 2] | 0;
       J = (c[e >> 2] | 0) + (y * 24 | 0) | 0;
       F = E + -12 | 0;
       D = c[F >> 2] | 0;
       if ((D | 0) == (c[E + -8 >> 2] | 0)) Os(E + -16 | 0, J); else {
        Ns(D, J);
        c[F >> 2] = (c[F >> 2] | 0) + 24;
       }
       y = y + 1 | 0;
      }
     }
    } while (0);
    q = s;
    break a;
    break;
   }
  default:
   {}
  }
  r = Ps(b, d, e) | 0;
  if ((r | 0) == (b | 0)) {
   d : do switch (a[b >> 0] | 0) {
   case 65:
    {
     y = Qs(b, d, e) | 0;
     if ((y | 0) == (b | 0)) {
      q = b;
      break a;
     }
     u = c[e + 4 >> 2] | 0;
     if ((c[e >> 2] | 0) == (u | 0)) {
      q = b;
      break a;
     }
     c[h >> 2] = c[e + 12 >> 2];
     Rs(g, u + -24 | 0, h);
     u = e + 20 | 0;
     C = c[u >> 2] | 0;
     if (C >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
      c[C >> 2] = 0;
      z = C + 4 | 0;
      c[z >> 2] = 0;
      A = c[g + 12 >> 2] | 0;
      c[C + 8 >> 2] = 0;
      c[C + 12 >> 2] = A;
      c[C >> 2] = c[g >> 2];
      A = g + 4 | 0;
      c[z >> 2] = c[A >> 2];
      z = g + 8 | 0;
      c[C + 8 >> 2] = c[z >> 2];
      c[z >> 2] = 0;
      c[A >> 2] = 0;
      c[g >> 2] = 0;
      c[u >> 2] = (c[u >> 2] | 0) + 16;
     } else Ss(e + 16 | 0, g);
     os(g);
     q = y;
     break a;
     break;
    }
   case 67:
    {
     y = b + 1 | 0;
     u = Is(y, d, e) | 0;
     if ((u | 0) == (y | 0)) {
      q = b;
      break a;
     }
     y = e + 4 | 0;
     A = c[y >> 2] | 0;
     if ((c[e >> 2] | 0) == (A | 0)) {
      q = b;
      break a;
     }
     Ms(A + -24 | 0, 18880) | 0;
     A = (c[y >> 2] | 0) + -24 | 0;
     c[h >> 2] = c[e + 12 >> 2];
     Rs(g, A, h);
     A = e + 20 | 0;
     y = c[A >> 2] | 0;
     if (y >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
      c[y >> 2] = 0;
      z = y + 4 | 0;
      c[z >> 2] = 0;
      C = c[g + 12 >> 2] | 0;
      c[y + 8 >> 2] = 0;
      c[y + 12 >> 2] = C;
      c[y >> 2] = c[g >> 2];
      C = g + 4 | 0;
      c[z >> 2] = c[C >> 2];
      z = g + 8 | 0;
      c[y + 8 >> 2] = c[z >> 2];
      c[z >> 2] = 0;
      c[C >> 2] = 0;
      c[g >> 2] = 0;
      c[A >> 2] = (c[A >> 2] | 0) + 16;
     } else Ss(e + 16 | 0, g);
     os(g);
     q = u;
     break a;
     break;
    }
   case 70:
    {
     u = Ts(b, d, e) | 0;
     if ((u | 0) == (b | 0)) {
      q = b;
      break a;
     }
     A = c[e + 4 >> 2] | 0;
     if ((c[e >> 2] | 0) == (A | 0)) {
      q = b;
      break a;
     }
     c[h >> 2] = c[e + 12 >> 2];
     Rs(g, A + -24 | 0, h);
     A = e + 20 | 0;
     C = c[A >> 2] | 0;
     if (C >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
      c[C >> 2] = 0;
      z = C + 4 | 0;
      c[z >> 2] = 0;
      y = c[g + 12 >> 2] | 0;
      c[C + 8 >> 2] = 0;
      c[C + 12 >> 2] = y;
      c[C >> 2] = c[g >> 2];
      y = g + 4 | 0;
      c[z >> 2] = c[y >> 2];
      z = g + 8 | 0;
      c[C + 8 >> 2] = c[z >> 2];
      c[z >> 2] = 0;
      c[y >> 2] = 0;
      c[g >> 2] = 0;
      c[A >> 2] = (c[A >> 2] | 0) + 16;
     } else Ss(e + 16 | 0, g);
     os(g);
     q = u;
     break a;
     break;
    }
   case 71:
    {
     u = b + 1 | 0;
     A = Is(u, d, e) | 0;
     if ((A | 0) == (u | 0)) {
      q = b;
      break a;
     }
     u = e + 4 | 0;
     y = c[u >> 2] | 0;
     if ((c[e >> 2] | 0) == (y | 0)) {
      q = b;
      break a;
     }
     Ms(y + -24 | 0, 18889) | 0;
     y = (c[u >> 2] | 0) + -24 | 0;
     c[h >> 2] = c[e + 12 >> 2];
     Rs(g, y, h);
     y = e + 20 | 0;
     u = c[y >> 2] | 0;
     if (u >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
      c[u >> 2] = 0;
      z = u + 4 | 0;
      c[z >> 2] = 0;
      C = c[g + 12 >> 2] | 0;
      c[u + 8 >> 2] = 0;
      c[u + 12 >> 2] = C;
      c[u >> 2] = c[g >> 2];
      C = g + 4 | 0;
      c[z >> 2] = c[C >> 2];
      z = g + 8 | 0;
      c[u + 8 >> 2] = c[z >> 2];
      c[z >> 2] = 0;
      c[C >> 2] = 0;
      c[g >> 2] = 0;
      c[y >> 2] = (c[y >> 2] | 0) + 16;
     } else Ss(e + 16 | 0, g);
     os(g);
     q = A;
     break a;
     break;
    }
   case 77:
    {
     A = Us(b, d, e) | 0;
     if ((A | 0) == (b | 0)) {
      q = b;
      break a;
     }
     y = c[e + 4 >> 2] | 0;
     if ((c[e >> 2] | 0) == (y | 0)) {
      q = b;
      break a;
     }
     c[h >> 2] = c[e + 12 >> 2];
     Rs(g, y + -24 | 0, h);
     y = e + 20 | 0;
     C = c[y >> 2] | 0;
     if (C >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
      c[C >> 2] = 0;
      z = C + 4 | 0;
      c[z >> 2] = 0;
      u = c[g + 12 >> 2] | 0;
      c[C + 8 >> 2] = 0;
      c[C + 12 >> 2] = u;
      c[C >> 2] = c[g >> 2];
      u = g + 4 | 0;
      c[z >> 2] = c[u >> 2];
      z = g + 8 | 0;
      c[C + 8 >> 2] = c[z >> 2];
      c[z >> 2] = 0;
      c[u >> 2] = 0;
      c[g >> 2] = 0;
      c[y >> 2] = (c[y >> 2] | 0) + 16;
     } else Ss(e + 16 | 0, g);
     os(g);
     q = A;
     break a;
     break;
    }
   case 79:
    {
     A = e + 4 | 0;
     y = ((c[A >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
     u = b + 1 | 0;
     z = Is(u, d, e) | 0;
     C = ((c[A >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
     if ((z | 0) == (u | 0)) {
      q = b;
      break a;
     }
     u = c[e + 12 >> 2] | 0;
     c[g >> 2] = u;
     A = e + 20 | 0;
     t = c[A >> 2] | 0;
     if (t >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
      c[t >> 2] = 0;
      c[t + 4 >> 2] = 0;
      c[t + 8 >> 2] = 0;
      c[t + 12 >> 2] = u;
      c[A >> 2] = (c[A >> 2] | 0) + 16;
     } else Ks(e + 16 | 0, g);
     u = g + 11 | 0;
     t = g + 4 | 0;
     w = y;
     while (1) {
      if (w >>> 0 >= C >>> 0) {
       q = z;
       break a;
      }
      Vs(g, (c[e >> 2] | 0) + (w * 24 | 0) + 12 | 0, 2);
      y = lh(18900) | 0;
      x = a[u >> 0] | 0;
      if ((y | 0) == ((x << 24 >> 24 < 0 ? c[t >> 2] | 0 : x & 255) | 0)) P = (Ws(g, 18900, y) | 0) == 0; else P = 0;
      Es(g);
      y = c[e >> 2] | 0;
      if (P) {
       Ms(y + (w * 24 | 0) | 0, 18903) | 0;
       Ls((c[e >> 2] | 0) + (w * 24 | 0) + 12 | 0, 0, 18906) | 0;
      } else {
       x = y + (w * 24 | 0) + 12 | 0;
       if ((a[x + 11 >> 0] | 0) < 0) Q = c[x >> 2] | 0; else Q = x;
       if ((a[Q >> 0] | 0) == 40) {
        Ms(y + (w * 24 | 0) | 0, 18908) | 0;
        Ls((c[e >> 2] | 0) + (w * 24 | 0) + 12 | 0, 0, 18906) | 0;
       }
      }
      Ms((c[e >> 2] | 0) + (w * 24 | 0) | 0, 18910) | 0;
      y = c[A >> 2] | 0;
      x = (c[e >> 2] | 0) + (w * 24 | 0) | 0;
      v = y + -12 | 0;
      F = c[v >> 2] | 0;
      if ((F | 0) == (c[y + -8 >> 2] | 0)) Os(y + -16 | 0, x); else {
       Ns(F, x);
       c[v >> 2] = (c[v >> 2] | 0) + 24;
      }
      w = w + 1 | 0;
     }
     break;
    }
   case 80:
    {
     w = e + 4 | 0;
     A = ((c[w >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
     t = b + 1 | 0;
     u = Is(t, d, e) | 0;
     z = ((c[w >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
     if ((u | 0) == (t | 0)) {
      q = b;
      break a;
     }
     w = c[e + 12 >> 2] | 0;
     c[g >> 2] = w;
     C = e + 20 | 0;
     v = c[C >> 2] | 0;
     if (v >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
      c[v >> 2] = 0;
      c[v + 4 >> 2] = 0;
      c[v + 8 >> 2] = 0;
      c[v + 12 >> 2] = w;
      c[C >> 2] = (c[C >> 2] | 0) + 16;
     } else Ks(e + 16 | 0, g);
     w = g + 11 | 0;
     v = g + 4 | 0;
     x = g + 11 | 0;
     F = g + 4 | 0;
     y = A;
     while (1) {
      if (y >>> 0 >= z >>> 0) {
       q = u;
       break a;
      }
      Vs(g, (c[e >> 2] | 0) + (y * 24 | 0) + 12 | 0, 2);
      A = lh(18900) | 0;
      J = a[w >> 0] | 0;
      if ((A | 0) == ((J << 24 >> 24 < 0 ? c[v >> 2] | 0 : J & 255) | 0)) R = (Ws(g, 18900, A) | 0) == 0; else R = 0;
      Es(g);
      A = c[e >> 2] | 0;
      if (R) {
       Ms(A + (y * 24 | 0) | 0, 18903) | 0;
       Ls((c[e >> 2] | 0) + (y * 24 | 0) + 12 | 0, 0, 18906) | 0;
      } else {
       J = A + (y * 24 | 0) + 12 | 0;
       if ((a[J + 11 >> 0] | 0) < 0) S = c[J >> 2] | 0; else S = J;
       if ((a[S >> 0] | 0) == 40) {
        Ms(A + (y * 24 | 0) | 0, 18908) | 0;
        Ls((c[e >> 2] | 0) + (y * 24 | 0) + 12 | 0, 0, 18906) | 0;
       }
      }
      if ((a[t >> 0] | 0) == 85) {
       Vs(g, (c[e >> 2] | 0) + (y * 24 | 0) | 0, 12);
       A = lh(18913) | 0;
       J = a[x >> 0] | 0;
       if ((A | 0) == ((J << 24 >> 24 < 0 ? c[F >> 2] | 0 : J & 255) | 0)) T = (Ws(g, 18913, A) | 0) != 0; else T = 1;
       Es(g);
       A = (c[e >> 2] | 0) + (y * 24 | 0) | 0;
       if (T) {
        U = A;
        V = 112;
       } else Xs(A);
      } else {
       U = (c[e >> 2] | 0) + (y * 24 | 0) | 0;
       V = 112;
      }
      if ((V | 0) == 112) {
       V = 0;
       Ms(U, 18926) | 0;
      }
      A = c[C >> 2] | 0;
      J = (c[e >> 2] | 0) + (y * 24 | 0) | 0;
      D = A + -12 | 0;
      E = c[D >> 2] | 0;
      if ((E | 0) == (c[A + -8 >> 2] | 0)) Os(A + -16 | 0, J); else {
       Ns(E, J);
       c[D >> 2] = (c[D >> 2] | 0) + 24;
      }
      y = y + 1 | 0;
     }
     break;
    }
   case 82:
    {
     y = e + 4 | 0;
     C = ((c[y >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
     F = b + 1 | 0;
     x = Is(F, d, e) | 0;
     t = ((c[y >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
     if ((x | 0) == (F | 0)) {
      q = b;
      break a;
     }
     F = c[e + 12 >> 2] | 0;
     c[g >> 2] = F;
     y = e + 20 | 0;
     v = c[y >> 2] | 0;
     if (v >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
      c[v >> 2] = 0;
      c[v + 4 >> 2] = 0;
      c[v + 8 >> 2] = 0;
      c[v + 12 >> 2] = F;
      c[y >> 2] = (c[y >> 2] | 0) + 16;
     } else Ks(e + 16 | 0, g);
     F = g + 11 | 0;
     v = g + 4 | 0;
     w = C;
     while (1) {
      if (w >>> 0 >= t >>> 0) {
       q = x;
       break a;
      }
      Vs(g, (c[e >> 2] | 0) + (w * 24 | 0) + 12 | 0, 2);
      C = lh(18900) | 0;
      u = a[F >> 0] | 0;
      if ((C | 0) == ((u << 24 >> 24 < 0 ? c[v >> 2] | 0 : u & 255) | 0)) W = (Ws(g, 18900, C) | 0) == 0; else W = 0;
      Es(g);
      C = c[e >> 2] | 0;
      if (W) {
       Ms(C + (w * 24 | 0) | 0, 18903) | 0;
       Ls((c[e >> 2] | 0) + (w * 24 | 0) + 12 | 0, 0, 18906) | 0;
      } else {
       u = C + (w * 24 | 0) + 12 | 0;
       if ((a[u + 11 >> 0] | 0) < 0) X = c[u >> 2] | 0; else X = u;
       if ((a[X >> 0] | 0) == 40) {
        Ms(C + (w * 24 | 0) | 0, 18908) | 0;
        Ls((c[e >> 2] | 0) + (w * 24 | 0) + 12 | 0, 0, 18906) | 0;
       }
      }
      Ms((c[e >> 2] | 0) + (w * 24 | 0) | 0, 18928) | 0;
      C = c[y >> 2] | 0;
      u = (c[e >> 2] | 0) + (w * 24 | 0) | 0;
      z = C + -12 | 0;
      D = c[z >> 2] | 0;
      if ((D | 0) == (c[C + -8 >> 2] | 0)) Os(C + -16 | 0, u); else {
       Ns(D, u);
       c[z >> 2] = (c[z >> 2] | 0) + 24;
      }
      w = w + 1 | 0;
     }
     break;
    }
   case 84:
    {
     w = e + 4 | 0;
     y = ((c[w >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
     v = Ys(b, d, e) | 0;
     F = ((c[w >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
     if ((v | 0) == (b | 0)) {
      q = b;
      break a;
     }
     x = e + 16 | 0;
     t = e + 12 | 0;
     z = c[t >> 2] | 0;
     c[g >> 2] = z;
     u = e + 20 | 0;
     D = c[u >> 2] | 0;
     C = e + 24 | 0;
     if (D >>> 0 < (c[C >> 2] | 0) >>> 0) {
      c[D >> 2] = 0;
      c[D + 4 >> 2] = 0;
      c[D + 8 >> 2] = 0;
      c[D + 12 >> 2] = z;
      c[u >> 2] = (c[u >> 2] | 0) + 16;
     } else Ks(x, g);
     z = y;
     while (1) {
      if (z >>> 0 >= F >>> 0) break;
      D = c[u >> 2] | 0;
      J = (c[e >> 2] | 0) + (z * 24 | 0) | 0;
      E = D + -12 | 0;
      A = c[E >> 2] | 0;
      if ((A | 0) == (c[D + -8 >> 2] | 0)) Os(D + -16 | 0, J); else {
       Ns(A, J);
       c[E >> 2] = (c[E >> 2] | 0) + 24;
      }
      z = z + 1 | 0;
     }
     if (!((F | 0) == (y + 1 | 0) & (a[e + 63 >> 0] | 0) != 0)) {
      q = v;
      break a;
     }
     z = Zs(v, d, e) | 0;
     if ((z | 0) == (v | 0)) {
      q = v;
      break a;
     }
     _s(g, (c[w >> 2] | 0) + -24 | 0);
     E = c[w >> 2] | 0;
     J = E + -24 | 0;
     A = E;
     while (1) {
      if ((A | 0) == (J | 0)) break;
      D = A + -24 | 0;
      c[w >> 2] = D;
      ns(D);
      A = c[w >> 2] | 0;
     }
     A = a[g + 11 >> 0] | 0;
     J = A << 24 >> 24 < 0;
     qs(E + -48 | 0, J ? c[g >> 2] | 0 : g, J ? c[g + 4 >> 2] | 0 : A & 255) | 0;
     A = (c[w >> 2] | 0) + -24 | 0;
     c[i >> 2] = c[t >> 2];
     Rs(h, A, i);
     A = c[u >> 2] | 0;
     if (A >>> 0 < (c[C >> 2] | 0) >>> 0) {
      c[A >> 2] = 0;
      J = A + 4 | 0;
      c[J >> 2] = 0;
      v = c[h + 12 >> 2] | 0;
      c[A + 8 >> 2] = 0;
      c[A + 12 >> 2] = v;
      c[A >> 2] = c[h >> 2];
      v = h + 4 | 0;
      c[J >> 2] = c[v >> 2];
      J = h + 8 | 0;
      c[A + 8 >> 2] = c[J >> 2];
      c[J >> 2] = 0;
      c[v >> 2] = 0;
      c[h >> 2] = 0;
      c[u >> 2] = (c[u >> 2] | 0) + 16;
     } else Ss(x, h);
     os(h);
     Es(g);
     q = z;
     break a;
     break;
    }
   case 85:
    {
     v = b + 1 | 0;
     if ((v | 0) == (d | 0)) {
      q = b;
      break a;
     }
     J = $s(v, d, e) | 0;
     if ((J | 0) == (v | 0)) {
      q = b;
      break a;
     }
     v = Is(J, d, e) | 0;
     if ((v | 0) == (J | 0)) {
      q = b;
      break a;
     }
     J = e + 4 | 0;
     A = c[J >> 2] | 0;
     if (((A - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      q = b;
      break a;
     }
     _s(g, A + -24 | 0);
     A = c[J >> 2] | 0;
     y = A + -24 | 0;
     F = A;
     while (1) {
      if ((F | 0) == (y | 0)) break;
      D = F + -24 | 0;
      c[J >> 2] = D;
      ns(D);
      F = c[J >> 2] | 0;
     }
     Vs(h, A + -48 | 0, 9);
     F = lh(18930) | 0;
     y = a[h + 11 >> 0] | 0;
     if ((F | 0) == ((y << 24 >> 24 < 0 ? c[h + 4 >> 2] | 0 : y & 255) | 0)) {
      y = (Ws(h, 18930, F) | 0) == 0;
      Es(h);
      if (y) {
       _s(h, (c[J >> 2] | 0) + -24 | 0);
       y = c[J >> 2] | 0;
       F = y + -24 | 0;
       z = y;
       while (1) {
        if ((z | 0) == (F | 0)) break;
        y = z + -24 | 0;
        c[J >> 2] = y;
        ns(y);
        z = c[J >> 2] | 0;
       }
       z = h + 11 | 0;
       F = a[z >> 0] | 0;
       A = F << 24 >> 24 < 0;
       y = c[h >> 2] | 0;
       x = h + 4 | 0;
       u = $s(A ? y + 9 | 0 : h + 9 | 0, (A ? y : h) + (A ? c[x >> 2] | 0 : F & 255) | 0, e) | 0;
       if ((u | 0) == (((a[z >> 0] | 0) < 0 ? c[h >> 2] | 0 : h) + 9 | 0)) {
        at(k, g, 18940);
        u = a[z >> 0] | 0;
        z = u << 24 >> 24 < 0;
        qs(k, z ? c[h >> 2] | 0 : h, z ? c[x >> 2] | 0 : u & 255) | 0;
        c[p >> 2] = c[k >> 2];
        c[p + 4 >> 2] = c[k + 4 >> 2];
        c[p + 8 >> 2] = c[k + 8 >> 2];
        u = 0;
        while (1) {
         if ((u | 0) == 3) break;
         c[k + (u << 2) >> 2] = 0;
         u = u + 1 | 0;
        }
        bt(i, p);
        u = c[J >> 2] | 0;
        if (u >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
         dt(u, i);
         c[J >> 2] = (c[J >> 2] | 0) + 24;
        } else et(e, i);
        ns(i);
        Es(p);
        Es(k);
       } else {
        at(n, g, 18942);
        _s(o, (c[J >> 2] | 0) + -24 | 0);
        u = a[o + 11 >> 0] | 0;
        x = u << 24 >> 24 < 0;
        qs(n, x ? c[o >> 2] | 0 : o, x ? c[o + 4 >> 2] | 0 : u & 255) | 0;
        c[k >> 2] = c[n >> 2];
        c[k + 4 >> 2] = c[n + 4 >> 2];
        c[k + 8 >> 2] = c[n + 8 >> 2];
        u = 0;
        while (1) {
         if ((u | 0) == 3) break;
         c[n + (u << 2) >> 2] = 0;
         u = u + 1 | 0;
        }
        Ms(k, 18944) | 0;
        c[m >> 2] = c[k >> 2];
        c[m + 4 >> 2] = c[k + 4 >> 2];
        c[m + 8 >> 2] = c[k + 8 >> 2];
        u = 0;
        while (1) {
         if ((u | 0) == 3) break;
         c[k + (u << 2) >> 2] = 0;
         u = u + 1 | 0;
        }
        bt(i, m);
        ct((c[J >> 2] | 0) + -24 | 0, i);
        ns(i);
        Es(m);
        Es(k);
        Es(o);
        Es(n);
       }
       Es(h);
      } else V = 166;
     } else {
      Es(h);
      V = 166;
     }
     if ((V | 0) == 166) {
      at(i, g, 18940);
      _s(k, (c[J >> 2] | 0) + -24 | 0);
      u = a[k + 11 >> 0] | 0;
      x = u << 24 >> 24 < 0;
      qs(i, x ? c[k >> 2] | 0 : k, x ? c[k + 4 >> 2] | 0 : u & 255) | 0;
      c[j >> 2] = c[i >> 2];
      c[j + 4 >> 2] = c[i + 4 >> 2];
      c[j + 8 >> 2] = c[i + 8 >> 2];
      u = 0;
      while (1) {
       if ((u | 0) == 3) break;
       c[i + (u << 2) >> 2] = 0;
       u = u + 1 | 0;
      }
      bt(h, j);
      ct((c[J >> 2] | 0) + -24 | 0, h);
      ns(h);
      Es(j);
      Es(k);
      Es(i);
     }
     u = (c[J >> 2] | 0) + -24 | 0;
     c[i >> 2] = c[e + 12 >> 2];
     Rs(h, u, i);
     u = e + 20 | 0;
     x = c[u >> 2] | 0;
     if (x >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
      c[x >> 2] = 0;
      z = x + 4 | 0;
      c[z >> 2] = 0;
      F = c[h + 12 >> 2] | 0;
      c[x + 8 >> 2] = 0;
      c[x + 12 >> 2] = F;
      c[x >> 2] = c[h >> 2];
      F = h + 4 | 0;
      c[z >> 2] = c[F >> 2];
      z = h + 8 | 0;
      c[x + 8 >> 2] = c[z >> 2];
      c[z >> 2] = 0;
      c[F >> 2] = 0;
      c[h >> 2] = 0;
      c[u >> 2] = (c[u >> 2] | 0) + 16;
     } else Ss(e + 16 | 0, h);
     os(h);
     Es(g);
     q = v;
     break a;
     break;
    }
   case 83:
    {
     u = b + 1 | 0;
     if ((u | 0) != (d | 0)) if ((a[u >> 0] | 0) == 116) {
      u = ft(b, d, e) | 0;
      if ((u | 0) == (b | 0)) {
       q = b;
       break a;
      }
      F = c[e + 4 >> 2] | 0;
      if ((c[e >> 2] | 0) == (F | 0)) {
       q = b;
       break a;
      }
      c[h >> 2] = c[e + 12 >> 2];
      Rs(g, F + -24 | 0, h);
      F = e + 20 | 0;
      z = c[F >> 2] | 0;
      if (z >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
       c[z >> 2] = 0;
       x = z + 4 | 0;
       c[x >> 2] = 0;
       A = c[g + 12 >> 2] | 0;
       c[z + 8 >> 2] = 0;
       c[z + 12 >> 2] = A;
       c[z >> 2] = c[g >> 2];
       A = g + 4 | 0;
       c[x >> 2] = c[A >> 2];
       x = g + 8 | 0;
       c[z + 8 >> 2] = c[x >> 2];
       c[x >> 2] = 0;
       c[A >> 2] = 0;
       c[g >> 2] = 0;
       c[F >> 2] = (c[F >> 2] | 0) + 16;
      } else Ss(e + 16 | 0, g);
      os(g);
      q = u;
      break a;
     }
     u = gt(b, d, e) | 0;
     if ((u | 0) == (b | 0)) {
      q = b;
      break a;
     }
     F = Zs(u, d, e) | 0;
     if ((F | 0) == (u | 0)) {
      q = u;
      break a;
     }
     A = e + 4 | 0;
     x = c[A >> 2] | 0;
     if (((x - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      q = u;
      break a;
     }
     _s(g, x + -24 | 0);
     x = c[A >> 2] | 0;
     u = x + -24 | 0;
     z = x;
     while (1) {
      if ((z | 0) == (u | 0)) break;
      y = z + -24 | 0;
      c[A >> 2] = y;
      ns(y);
      z = c[A >> 2] | 0;
     }
     z = a[g + 11 >> 0] | 0;
     u = z << 24 >> 24 < 0;
     qs(x + -48 | 0, u ? c[g >> 2] | 0 : g, u ? c[g + 4 >> 2] | 0 : z & 255) | 0;
     z = (c[A >> 2] | 0) + -24 | 0;
     c[i >> 2] = c[e + 12 >> 2];
     Rs(h, z, i);
     z = e + 20 | 0;
     u = c[z >> 2] | 0;
     if (u >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
      c[u >> 2] = 0;
      v = u + 4 | 0;
      c[v >> 2] = 0;
      J = c[h + 12 >> 2] | 0;
      c[u + 8 >> 2] = 0;
      c[u + 12 >> 2] = J;
      c[u >> 2] = c[h >> 2];
      J = h + 4 | 0;
      c[v >> 2] = c[J >> 2];
      v = h + 8 | 0;
      c[u + 8 >> 2] = c[v >> 2];
      c[v >> 2] = 0;
      c[J >> 2] = 0;
      c[h >> 2] = 0;
      c[z >> 2] = (c[z >> 2] | 0) + 16;
     } else Ss(e + 16 | 0, h);
     os(h);
     Es(g);
     q = F;
     break a;
     break;
    }
   case 68:
    {
     z = b + 1 | 0;
     if ((z | 0) != (d | 0)) switch (a[z >> 0] | 0) {
     case 112:
      {
       z = e + 4 | 0;
       J = ((c[z >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
       v = b + 2 | 0;
       u = Is(v, d, e) | 0;
       y = ((c[z >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
       if ((u | 0) == (v | 0)) break d;
       v = c[e + 12 >> 2] | 0;
       c[g >> 2] = v;
       z = e + 20 | 0;
       C = c[z >> 2] | 0;
       if (C >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
        c[C >> 2] = 0;
        c[C + 4 >> 2] = 0;
        c[C + 8 >> 2] = 0;
        c[C + 12 >> 2] = v;
        c[z >> 2] = (c[z >> 2] | 0) + 16;
       } else Ks(e + 16 | 0, g);
       v = J;
       while (1) {
        if (v >>> 0 >= y >>> 0) {
         q = u;
         break a;
        }
        J = c[z >> 2] | 0;
        C = (c[e >> 2] | 0) + (v * 24 | 0) | 0;
        t = J + -12 | 0;
        w = c[t >> 2] | 0;
        if ((w | 0) == (c[J + -8 >> 2] | 0)) Os(J + -16 | 0, C); else {
         Ns(w, C);
         c[t >> 2] = (c[t >> 2] | 0) + 24;
        }
        v = v + 1 | 0;
       }
       break;
      }
     case 84:
     case 116:
      {
       v = ht(b, d, e) | 0;
       if ((v | 0) == (b | 0)) break d;
       z = c[e + 4 >> 2] | 0;
       if ((c[e >> 2] | 0) == (z | 0)) {
        q = b;
        break a;
       }
       c[h >> 2] = c[e + 12 >> 2];
       Rs(g, z + -24 | 0, h);
       z = e + 20 | 0;
       u = c[z >> 2] | 0;
       if (u >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
        c[u >> 2] = 0;
        y = u + 4 | 0;
        c[y >> 2] = 0;
        F = c[g + 12 >> 2] | 0;
        c[u + 8 >> 2] = 0;
        c[u + 12 >> 2] = F;
        c[u >> 2] = c[g >> 2];
        F = g + 4 | 0;
        c[y >> 2] = c[F >> 2];
        y = g + 8 | 0;
        c[u + 8 >> 2] = c[y >> 2];
        c[y >> 2] = 0;
        c[F >> 2] = 0;
        c[g >> 2] = 0;
        c[z >> 2] = (c[z >> 2] | 0) + 16;
       } else Ss(e + 16 | 0, g);
       os(g);
       q = v;
       break a;
       break;
      }
     case 118:
      {
       v = it(b, d, e) | 0;
       if ((v | 0) == (b | 0)) break d;
       z = c[e + 4 >> 2] | 0;
       if ((c[e >> 2] | 0) == (z | 0)) {
        q = b;
        break a;
       }
       c[h >> 2] = c[e + 12 >> 2];
       Rs(g, z + -24 | 0, h);
       z = e + 20 | 0;
       F = c[z >> 2] | 0;
       if (F >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
        c[F >> 2] = 0;
        y = F + 4 | 0;
        c[y >> 2] = 0;
        u = c[g + 12 >> 2] | 0;
        c[F + 8 >> 2] = 0;
        c[F + 12 >> 2] = u;
        c[F >> 2] = c[g >> 2];
        u = g + 4 | 0;
        c[y >> 2] = c[u >> 2];
        y = g + 8 | 0;
        c[F + 8 >> 2] = c[y >> 2];
        c[y >> 2] = 0;
        c[u >> 2] = 0;
        c[g >> 2] = 0;
        c[z >> 2] = (c[z >> 2] | 0) + 16;
       } else Ss(e + 16 | 0, g);
       os(g);
       q = v;
       break a;
       break;
      }
     default:
      break d;
     }
     break;
    }
   default:
    {}
   } while (0);
   v = Ps(b, d, e) | 0;
   if ((v | 0) == (b | 0)) {
    z = ft(b, d, e) | 0;
    if ((z | 0) == (b | 0)) q = b; else {
     u = c[e + 4 >> 2] | 0;
     if ((c[e >> 2] | 0) == (u | 0)) q = b; else {
      c[h >> 2] = c[e + 12 >> 2];
      Rs(g, u + -24 | 0, h);
      u = e + 20 | 0;
      y = c[u >> 2] | 0;
      if (y >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
       c[y >> 2] = 0;
       F = y + 4 | 0;
       c[F >> 2] = 0;
       A = c[g + 12 >> 2] | 0;
       c[y + 8 >> 2] = 0;
       c[y + 12 >> 2] = A;
       c[y >> 2] = c[g >> 2];
       A = g + 4 | 0;
       c[F >> 2] = c[A >> 2];
       F = g + 8 | 0;
       c[y + 8 >> 2] = c[F >> 2];
       c[F >> 2] = 0;
       c[A >> 2] = 0;
       c[g >> 2] = 0;
       c[u >> 2] = (c[u >> 2] | 0) + 16;
      } else Ss(e + 16 | 0, g);
      os(g);
      q = z;
     }
    }
   } else q = v;
  } else q = r;
 } while (0);
 l = f;
 return q | 0;
}

function Vm(e, f, g, h, i, j, k, m, n, o, p) {
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 m = m | 0;
 n = n | 0;
 o = o | 0;
 p = p | 0;
 var q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0, ka = 0, la = 0, ma = 0, na = 0, oa = 0, pa = 0, qa = 0, ra = 0, sa = 0, ta = 0, ua = 0, va = 0, wa = 0, xa = 0, ya = 0, za = 0, Aa = 0, Ba = 0, Ca = 0, Da = 0, Ea = 0, Fa = 0, Ga = 0, Ha = 0, Ia = 0, Ja = 0, Ka = 0, La = 0, Ma = 0, Na = 0, Oa = 0, Pa = 0, Qa = 0, Ra = 0, Sa = 0, Ta = 0, Ua = 0, Va = 0, Wa = 0, Xa = 0, Ya = 0, Za = 0, _a = 0, $a = 0, ab = 0, bb = 0, cb = 0, db = 0, eb = 0, fb = 0, gb = 0, hb = 0, ib = 0, jb = 0, kb = 0, lb = 0, mb = 0, nb = 0, ob = 0, pb = 0;
 q = l;
 l = l + 512 | 0;
 r = q + 88 | 0;
 s = q + 96 | 0;
 t = q + 80 | 0;
 u = q + 72 | 0;
 v = q + 68 | 0;
 w = q + 500 | 0;
 x = q + 497 | 0;
 y = q + 496 | 0;
 z = q + 56 | 0;
 A = q + 44 | 0;
 B = q + 32 | 0;
 C = q + 20 | 0;
 D = q + 8 | 0;
 E = q + 4 | 0;
 F = q;
 c[r >> 2] = p;
 c[t >> 2] = s;
 p = t + 4 | 0;
 c[p >> 2] = 115;
 c[u >> 2] = s;
 c[v >> 2] = s + 400;
 c[z >> 2] = 0;
 c[z + 4 >> 2] = 0;
 c[z + 8 >> 2] = 0;
 s = 0;
 while (1) {
  if ((s | 0) == 3) break;
  c[z + (s << 2) >> 2] = 0;
  s = s + 1 | 0;
 }
 c[A >> 2] = 0;
 c[A + 4 >> 2] = 0;
 c[A + 8 >> 2] = 0;
 s = 0;
 while (1) {
  if ((s | 0) == 3) break;
  c[A + (s << 2) >> 2] = 0;
  s = s + 1 | 0;
 }
 c[B >> 2] = 0;
 c[B + 4 >> 2] = 0;
 c[B + 8 >> 2] = 0;
 s = 0;
 while (1) {
  if ((s | 0) == 3) break;
  c[B + (s << 2) >> 2] = 0;
  s = s + 1 | 0;
 }
 c[C >> 2] = 0;
 c[C + 4 >> 2] = 0;
 c[C + 8 >> 2] = 0;
 s = 0;
 while (1) {
  if ((s | 0) == 3) break;
  c[C + (s << 2) >> 2] = 0;
  s = s + 1 | 0;
 }
 c[D >> 2] = 0;
 c[D + 4 >> 2] = 0;
 c[D + 8 >> 2] = 0;
 s = 0;
 while (1) {
  if ((s | 0) == 3) break;
  c[D + (s << 2) >> 2] = 0;
  s = s + 1 | 0;
 }
 Ym(g, h, w, x, y, z, A, B, C, E);
 c[o >> 2] = c[n >> 2];
 h = m + 8 | 0;
 m = B + 11 | 0;
 g = B + 4 | 0;
 s = C + 11 | 0;
 G = C + 4 | 0;
 H = (i & 512 | 0) != 0;
 i = A + 11 | 0;
 I = A + 4 | 0;
 J = D + 11 | 0;
 K = D + 4 | 0;
 L = w + 3 | 0;
 M = z + 11 | 0;
 N = z + 4 | 0;
 O = 0;
 P = 0;
 a : while (1) {
  if (P >>> 0 >= 4) {
   Q = 234;
   break;
  }
  R = c[e >> 2] | 0;
  do if (!R) S = 1; else {
   T = c[R + 12 >> 2] | 0;
   if ((T | 0) == (c[R + 16 >> 2] | 0)) U = pc[c[(c[R >> 2] | 0) + 36 >> 2] & 63](R) | 0; else U = rg(a[T >> 0] | 0) | 0;
   if (ph(U, qg() | 0) | 0) {
    c[e >> 2] = 0;
    S = 1;
    break;
   } else {
    S = (c[e >> 2] | 0) == 0;
    break;
   }
  } while (0);
  R = c[f >> 2] | 0;
  do if (!R) Q = 31; else {
   T = c[R + 12 >> 2] | 0;
   if ((T | 0) == (c[R + 16 >> 2] | 0)) V = pc[c[(c[R >> 2] | 0) + 36 >> 2] & 63](R) | 0; else V = rg(a[T >> 0] | 0) | 0;
   if (ph(V, qg() | 0) | 0) {
    c[f >> 2] = 0;
    Q = 31;
    break;
   } else if (S) {
    W = R;
    break;
   } else {
    Q = 234;
    break a;
   }
  } while (0);
  if ((Q | 0) == 31) {
   Q = 0;
   if (S) {
    Q = 234;
    break;
   } else W = 0;
  }
  b : do switch (a[w + P >> 0] | 0) {
  case 1:
   {
    if ((P | 0) == 3) X = O; else {
     R = c[e >> 2] | 0;
     T = c[R + 12 >> 2] | 0;
     if ((T | 0) == (c[R + 16 >> 2] | 0)) Y = pc[c[(c[R >> 2] | 0) + 36 >> 2] & 63](R) | 0; else Y = rg(a[T >> 0] | 0) | 0;
     if ((Y & 255) << 24 >> 24 <= -1) {
      Q = 44;
      break a;
     }
     if (!(b[(c[h >> 2] | 0) + (Y << 24 >> 24 << 1) >> 1] & 8192)) {
      Q = 44;
      break a;
     }
     T = c[e >> 2] | 0;
     R = T + 12 | 0;
     Z = c[R >> 2] | 0;
     if ((Z | 0) == (c[T + 16 >> 2] | 0)) _ = pc[c[(c[T >> 2] | 0) + 40 >> 2] & 63](T) | 0; else {
      c[R >> 2] = Z + 1;
      _ = rg(a[Z >> 0] | 0) | 0;
     }
     mr(D, _ & 255);
     $ = W;
     aa = W;
     Q = 46;
    }
    break;
   }
  case 0:
   {
    if ((P | 0) == 3) X = O; else {
     $ = W;
     aa = W;
     Q = 46;
    }
    break;
   }
  case 3:
   {
    Z = a[m >> 0] | 0;
    R = Z << 24 >> 24 < 0 ? c[g >> 2] | 0 : Z & 255;
    Z = a[s >> 0] | 0;
    T = Z << 24 >> 24 < 0 ? c[G >> 2] | 0 : Z & 255;
    if ((R | 0) == (0 - T | 0)) X = O; else {
     Z = (R | 0) == 0;
     R = c[e >> 2] | 0;
     ba = c[R + 12 >> 2] | 0;
     ca = (ba | 0) == (c[R + 16 >> 2] | 0);
     if (Z | (T | 0) == 0) {
      if (ca) da = pc[c[(c[R >> 2] | 0) + 36 >> 2] & 63](R) | 0; else da = rg(a[ba >> 0] | 0) | 0;
      T = da & 255;
      if (Z) {
       if ((a[((a[s >> 0] | 0) < 0 ? c[C >> 2] | 0 : C) >> 0] | 0) != T << 24 >> 24) {
        X = O;
        break b;
       }
       Z = c[e >> 2] | 0;
       ea = Z + 12 | 0;
       fa = c[ea >> 2] | 0;
       if ((fa | 0) == (c[Z + 16 >> 2] | 0)) pc[c[(c[Z >> 2] | 0) + 40 >> 2] & 63](Z) | 0; else {
        c[ea >> 2] = fa + 1;
        rg(a[fa >> 0] | 0) | 0;
       }
       a[k >> 0] = 1;
       fa = a[s >> 0] | 0;
       X = (fa << 24 >> 24 < 0 ? c[G >> 2] | 0 : fa & 255) >>> 0 > 1 ? C : O;
       break b;
      }
      if ((a[((a[m >> 0] | 0) < 0 ? c[B >> 2] | 0 : B) >> 0] | 0) != T << 24 >> 24) {
       a[k >> 0] = 1;
       X = O;
       break b;
      }
      T = c[e >> 2] | 0;
      fa = T + 12 | 0;
      ea = c[fa >> 2] | 0;
      if ((ea | 0) == (c[T + 16 >> 2] | 0)) pc[c[(c[T >> 2] | 0) + 40 >> 2] & 63](T) | 0; else {
       c[fa >> 2] = ea + 1;
       rg(a[ea >> 0] | 0) | 0;
      }
      ea = a[m >> 0] | 0;
      X = (ea << 24 >> 24 < 0 ? c[g >> 2] | 0 : ea & 255) >>> 0 > 1 ? B : O;
      break b;
     }
     if (ca) ga = pc[c[(c[R >> 2] | 0) + 36 >> 2] & 63](R) | 0; else ga = rg(a[ba >> 0] | 0) | 0;
     ba = c[e >> 2] | 0;
     R = ba + 12 | 0;
     ca = c[R >> 2] | 0;
     ea = (ca | 0) == (c[ba + 16 >> 2] | 0);
     if ((a[((a[m >> 0] | 0) < 0 ? c[B >> 2] | 0 : B) >> 0] | 0) == (ga & 255) << 24 >> 24) {
      if (ea) pc[c[(c[ba >> 2] | 0) + 40 >> 2] & 63](ba) | 0; else {
       c[R >> 2] = ca + 1;
       rg(a[ca >> 0] | 0) | 0;
      }
      R = a[m >> 0] | 0;
      X = (R << 24 >> 24 < 0 ? c[g >> 2] | 0 : R & 255) >>> 0 > 1 ? B : O;
      break b;
     }
     if (ea) ha = pc[c[(c[ba >> 2] | 0) + 36 >> 2] & 63](ba) | 0; else ha = rg(a[ca >> 0] | 0) | 0;
     if ((a[((a[s >> 0] | 0) < 0 ? c[C >> 2] | 0 : C) >> 0] | 0) != (ha & 255) << 24 >> 24) {
      Q = 103;
      break a;
     }
     ca = c[e >> 2] | 0;
     ba = ca + 12 | 0;
     ea = c[ba >> 2] | 0;
     if ((ea | 0) == (c[ca + 16 >> 2] | 0)) pc[c[(c[ca >> 2] | 0) + 40 >> 2] & 63](ca) | 0; else {
      c[ba >> 2] = ea + 1;
      rg(a[ea >> 0] | 0) | 0;
     }
     a[k >> 0] = 1;
     ea = a[s >> 0] | 0;
     X = (ea << 24 >> 24 < 0 ? c[G >> 2] | 0 : ea & 255) >>> 0 > 1 ? C : O;
    }
    break;
   }
  case 2:
   {
    if (!(P >>> 0 < 2 | (O | 0) != 0)) if (!(H | (P | 0) == 2 & (a[L >> 0] | 0) != 0)) {
     X = 0;
     break b;
    }
    ea = a[i >> 0] | 0;
    ba = ea << 24 >> 24 < 0;
    ca = c[A >> 2] | 0;
    R = ba ? ca : A;
    fa = R;
    c : do if (!P) {
     ia = W;
     ja = fa;
     ka = ea;
     la = ca;
     ma = W;
    } else if ((d[w + (P + -1) >> 0] | 0) < 2) {
     T = R + (ba ? c[I >> 2] | 0 : ea & 255) | 0;
     Z = fa;
     while (1) {
      na = Z;
      if ((T | 0) == (na | 0)) break;
      oa = a[na >> 0] | 0;
      if (oa << 24 >> 24 <= -1) break;
      if (!(b[(c[h >> 2] | 0) + (oa << 24 >> 24 << 1) >> 1] & 8192)) break;
      Z = na + 1 | 0;
     }
     T = Z - fa | 0;
     na = a[J >> 0] | 0;
     oa = na << 24 >> 24 < 0;
     pa = c[K >> 2] | 0;
     qa = na & 255;
     if (T >>> 0 > (oa ? pa : qa) >>> 0) {
      ia = W;
      ja = fa;
      ka = ea;
      la = ca;
      ma = W;
     } else {
      na = c[D >> 2] | 0;
      ra = (oa ? na : D) + (oa ? pa : qa) | 0;
      sa = R;
      ta = (oa ? na + pa | 0 : D + qa | 0) + (0 - T) | 0;
      while (1) {
       if ((ta | 0) == (ra | 0)) {
        ia = W;
        ja = Z;
        ka = ea;
        la = ca;
        ma = W;
        break c;
       }
       if ((a[ta >> 0] | 0) != (a[sa >> 0] | 0)) {
        ia = W;
        ja = fa;
        ka = ea;
        la = ca;
        ma = W;
        break c;
       }
       sa = sa + 1 | 0;
       ta = ta + 1 | 0;
      }
     }
    } else {
     ia = W;
     ja = fa;
     ka = ea;
     la = ca;
     ma = W;
    } while (0);
    d : while (1) {
     ca = ka << 24 >> 24 < 0;
     ea = (ca ? la : A) + (ca ? c[I >> 2] | 0 : ka & 255) | 0;
     ca = ja;
     if ((ea | 0) == (ca | 0)) {
      ua = ea;
      break;
     }
     ea = c[e >> 2] | 0;
     do if (!ea) va = 1; else {
      fa = c[ea + 12 >> 2] | 0;
      if ((fa | 0) == (c[ea + 16 >> 2] | 0)) wa = pc[c[(c[ea >> 2] | 0) + 36 >> 2] & 63](ea) | 0; else wa = rg(a[fa >> 0] | 0) | 0;
      if (ph(wa, qg() | 0) | 0) {
       c[e >> 2] = 0;
       va = 1;
       break;
      } else {
       va = (c[e >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!ma) {
      xa = ia;
      Q = 132;
     } else {
      ea = c[ma + 12 >> 2] | 0;
      if ((ea | 0) == (c[ma + 16 >> 2] | 0)) ya = pc[c[(c[ma >> 2] | 0) + 36 >> 2] & 63](ma) | 0; else ya = rg(a[ea >> 0] | 0) | 0;
      if (ph(ya, qg() | 0) | 0) {
       c[f >> 2] = 0;
       xa = 0;
       Q = 132;
       break;
      } else if (va ^ (ia | 0) == 0) {
       za = ia;
       Aa = ia;
       break;
      } else {
       ua = ca;
       break d;
      }
     } while (0);
     if ((Q | 0) == 132) {
      Q = 0;
      if (va) {
       ua = ca;
       break;
      } else {
       za = xa;
       Aa = 0;
      }
     }
     ea = c[e >> 2] | 0;
     fa = c[ea + 12 >> 2] | 0;
     if ((fa | 0) == (c[ea + 16 >> 2] | 0)) Ba = pc[c[(c[ea >> 2] | 0) + 36 >> 2] & 63](ea) | 0; else Ba = rg(a[fa >> 0] | 0) | 0;
     if ((a[ca >> 0] | 0) != (Ba & 255) << 24 >> 24) {
      ua = ca;
      break;
     }
     fa = c[e >> 2] | 0;
     ea = fa + 12 | 0;
     R = c[ea >> 2] | 0;
     if ((R | 0) == (c[fa + 16 >> 2] | 0)) pc[c[(c[fa >> 2] | 0) + 40 >> 2] & 63](fa) | 0; else {
      c[ea >> 2] = R + 1;
      rg(a[R >> 0] | 0) | 0;
     }
     ia = za;
     ja = ca + 1 | 0;
     ka = a[i >> 0] | 0;
     la = c[A >> 2] | 0;
     ma = Aa;
    }
    if (H) {
     R = a[i >> 0] | 0;
     ea = R << 24 >> 24 < 0;
     if (((ea ? c[A >> 2] | 0 : A) + (ea ? c[I >> 2] | 0 : R & 255) | 0) == (ua | 0)) X = O; else {
      Q = 144;
      break a;
     }
    } else X = O;
    break;
   }
  case 4:
   {
    R = 0;
    ea = W;
    fa = W;
    e : while (1) {
     ba = c[e >> 2] | 0;
     do if (!ba) Ca = 1; else {
      ta = c[ba + 12 >> 2] | 0;
      if ((ta | 0) == (c[ba + 16 >> 2] | 0)) Da = pc[c[(c[ba >> 2] | 0) + 36 >> 2] & 63](ba) | 0; else Da = rg(a[ta >> 0] | 0) | 0;
      if (ph(Da, qg() | 0) | 0) {
       c[e >> 2] = 0;
       Ca = 1;
       break;
      } else {
       Ca = (c[e >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!fa) {
      Ea = ea;
      Q = 158;
     } else {
      ba = c[fa + 12 >> 2] | 0;
      if ((ba | 0) == (c[fa + 16 >> 2] | 0)) Fa = pc[c[(c[fa >> 2] | 0) + 36 >> 2] & 63](fa) | 0; else Fa = rg(a[ba >> 0] | 0) | 0;
      if (ph(Fa, qg() | 0) | 0) {
       c[f >> 2] = 0;
       Ea = 0;
       Q = 158;
       break;
      } else if (Ca ^ (ea | 0) == 0) {
       Ga = ea;
       Ha = ea;
       break;
      } else {
       Ia = ea;
       break e;
      }
     } while (0);
     if ((Q | 0) == 158) {
      Q = 0;
      if (Ca) {
       Ia = Ea;
       break;
      } else {
       Ga = Ea;
       Ha = 0;
      }
     }
     ba = c[e >> 2] | 0;
     ca = c[ba + 12 >> 2] | 0;
     if ((ca | 0) == (c[ba + 16 >> 2] | 0)) Ja = pc[c[(c[ba >> 2] | 0) + 36 >> 2] & 63](ba) | 0; else Ja = rg(a[ca >> 0] | 0) | 0;
     ca = Ja & 255;
     if (ca << 24 >> 24 > -1) if (!(b[(c[h >> 2] | 0) + (Ja << 24 >> 24 << 1) >> 1] & 2048)) Q = 168; else {
      ba = c[o >> 2] | 0;
      if ((ba | 0) == (c[r >> 2] | 0)) {
       Zm(n, o, r);
       Ka = c[o >> 2] | 0;
      } else Ka = ba;
      c[o >> 2] = Ka + 1;
      a[Ka >> 0] = ca;
      La = R + 1 | 0;
     } else Q = 168;
     if ((Q | 0) == 168) {
      Q = 0;
      ba = a[M >> 0] | 0;
      if (!((a[y >> 0] | 0) == ca << 24 >> 24 & (R | 0 ? ((ba << 24 >> 24 < 0 ? c[N >> 2] | 0 : ba & 255) | 0) != 0 : 0))) {
       Ia = Ga;
       break;
      }
      ba = c[u >> 2] | 0;
      if ((ba | 0) == (c[v >> 2] | 0)) {
       _m(t, u, v);
       Ma = c[u >> 2] | 0;
      } else Ma = ba;
      c[u >> 2] = Ma + 4;
      c[Ma >> 2] = R;
      La = 0;
     }
     ba = c[e >> 2] | 0;
     ca = ba + 12 | 0;
     ta = c[ca >> 2] | 0;
     if ((ta | 0) == (c[ba + 16 >> 2] | 0)) {
      pc[c[(c[ba >> 2] | 0) + 40 >> 2] & 63](ba) | 0;
      R = La;
      ea = Ga;
      fa = Ha;
      continue;
     } else {
      c[ca >> 2] = ta + 1;
      rg(a[ta >> 0] | 0) | 0;
      R = La;
      ea = Ga;
      fa = Ha;
      continue;
     }
    }
    fa = c[u >> 2] | 0;
    if (R | 0 ? (c[t >> 2] | 0) != (fa | 0) : 0) {
     if ((fa | 0) == (c[v >> 2] | 0)) {
      _m(t, u, v);
      Na = c[u >> 2] | 0;
     } else Na = fa;
     c[u >> 2] = Na + 4;
     c[Na >> 2] = R;
    }
    f : do if ((c[E >> 2] | 0) > 0) {
     fa = c[e >> 2] | 0;
     do if (!fa) Oa = 1; else {
      ea = c[fa + 12 >> 2] | 0;
      if ((ea | 0) == (c[fa + 16 >> 2] | 0)) Pa = pc[c[(c[fa >> 2] | 0) + 36 >> 2] & 63](fa) | 0; else Pa = rg(a[ea >> 0] | 0) | 0;
      if (ph(Pa, qg() | 0) | 0) {
       c[e >> 2] = 0;
       Oa = 1;
       break;
      } else {
       Oa = (c[e >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!Ia) Q = 193; else {
      fa = c[Ia + 12 >> 2] | 0;
      if ((fa | 0) == (c[Ia + 16 >> 2] | 0)) Qa = pc[c[(c[Ia >> 2] | 0) + 36 >> 2] & 63](Ia) | 0; else Qa = rg(a[fa >> 0] | 0) | 0;
      if (ph(Qa, qg() | 0) | 0) {
       c[f >> 2] = 0;
       Q = 193;
       break;
      } else if (Oa) {
       Ra = Ia;
       break;
      } else {
       Q = 232;
       break a;
      }
     } while (0);
     if ((Q | 0) == 193) {
      Q = 0;
      if (Oa) {
       Q = 232;
       break a;
      } else Ra = 0;
     }
     fa = c[e >> 2] | 0;
     ea = c[fa + 12 >> 2] | 0;
     if ((ea | 0) == (c[fa + 16 >> 2] | 0)) Sa = pc[c[(c[fa >> 2] | 0) + 36 >> 2] & 63](fa) | 0; else Sa = rg(a[ea >> 0] | 0) | 0;
     if ((a[x >> 0] | 0) != (Sa & 255) << 24 >> 24) {
      Q = 232;
      break a;
     }
     ea = c[e >> 2] | 0;
     fa = ea + 12 | 0;
     ta = c[fa >> 2] | 0;
     if ((ta | 0) == (c[ea + 16 >> 2] | 0)) {
      pc[c[(c[ea >> 2] | 0) + 40 >> 2] & 63](ea) | 0;
      Ta = Ra;
      Ua = Ra;
     } else {
      c[fa >> 2] = ta + 1;
      rg(a[ta >> 0] | 0) | 0;
      Ta = Ra;
      Ua = Ra;
     }
     while (1) {
      if ((c[E >> 2] | 0) <= 0) break f;
      ta = c[e >> 2] | 0;
      do if (!ta) Va = 1; else {
       fa = c[ta + 12 >> 2] | 0;
       if ((fa | 0) == (c[ta + 16 >> 2] | 0)) Wa = pc[c[(c[ta >> 2] | 0) + 36 >> 2] & 63](ta) | 0; else Wa = rg(a[fa >> 0] | 0) | 0;
       if (ph(Wa, qg() | 0) | 0) {
        c[e >> 2] = 0;
        Va = 1;
        break;
       } else {
        Va = (c[e >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!Ua) {
       Xa = Ta;
       Q = 216;
      } else {
       ta = c[Ua + 12 >> 2] | 0;
       if ((ta | 0) == (c[Ua + 16 >> 2] | 0)) Ya = pc[c[(c[Ua >> 2] | 0) + 36 >> 2] & 63](Ua) | 0; else Ya = rg(a[ta >> 0] | 0) | 0;
       if (ph(Ya, qg() | 0) | 0) {
        c[f >> 2] = 0;
        Xa = 0;
        Q = 216;
        break;
       } else if (Va ^ (Ta | 0) == 0) {
        Za = Ta;
        _a = Ta;
        break;
       } else {
        Q = 232;
        break a;
       }
      } while (0);
      if ((Q | 0) == 216) {
       Q = 0;
       if (Va) {
        Q = 232;
        break a;
       } else {
        Za = Xa;
        _a = 0;
       }
      }
      ta = c[e >> 2] | 0;
      fa = c[ta + 12 >> 2] | 0;
      if ((fa | 0) == (c[ta + 16 >> 2] | 0)) $a = pc[c[(c[ta >> 2] | 0) + 36 >> 2] & 63](ta) | 0; else $a = rg(a[fa >> 0] | 0) | 0;
      if (($a & 255) << 24 >> 24 <= -1) {
       Q = 232;
       break a;
      }
      if (!(b[(c[h >> 2] | 0) + ($a << 24 >> 24 << 1) >> 1] & 2048)) {
       Q = 232;
       break a;
      }
      if ((c[o >> 2] | 0) == (c[r >> 2] | 0)) Zm(n, o, r);
      fa = c[e >> 2] | 0;
      ta = c[fa + 12 >> 2] | 0;
      if ((ta | 0) == (c[fa + 16 >> 2] | 0)) ab = pc[c[(c[fa >> 2] | 0) + 36 >> 2] & 63](fa) | 0; else ab = rg(a[ta >> 0] | 0) | 0;
      ta = c[o >> 2] | 0;
      c[o >> 2] = ta + 1;
      a[ta >> 0] = ab;
      c[E >> 2] = (c[E >> 2] | 0) + -1;
      ta = c[e >> 2] | 0;
      fa = ta + 12 | 0;
      ea = c[fa >> 2] | 0;
      if ((ea | 0) == (c[ta + 16 >> 2] | 0)) {
       pc[c[(c[ta >> 2] | 0) + 40 >> 2] & 63](ta) | 0;
       Ta = Za;
       Ua = _a;
       continue;
      } else {
       c[fa >> 2] = ea + 1;
       rg(a[ea >> 0] | 0) | 0;
       Ta = Za;
       Ua = _a;
       continue;
      }
     }
    } while (0);
    if ((c[o >> 2] | 0) == (c[n >> 2] | 0)) {
     Q = 232;
     break a;
    } else X = O;
    break;
   }
  default:
   X = O;
  } while (0);
  g : do if ((Q | 0) == 46) while (1) {
   Q = 0;
   R = c[e >> 2] | 0;
   do if (!R) bb = 1; else {
    ea = c[R + 12 >> 2] | 0;
    if ((ea | 0) == (c[R + 16 >> 2] | 0)) cb = pc[c[(c[R >> 2] | 0) + 36 >> 2] & 63](R) | 0; else cb = rg(a[ea >> 0] | 0) | 0;
    if (ph(cb, qg() | 0) | 0) {
     c[e >> 2] = 0;
     bb = 1;
     break;
    } else {
     bb = (c[e >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!aa) {
    db = $;
    Q = 59;
   } else {
    R = c[aa + 12 >> 2] | 0;
    if ((R | 0) == (c[aa + 16 >> 2] | 0)) eb = pc[c[(c[aa >> 2] | 0) + 36 >> 2] & 63](aa) | 0; else eb = rg(a[R >> 0] | 0) | 0;
    if (ph(eb, qg() | 0) | 0) {
     c[f >> 2] = 0;
     db = 0;
     Q = 59;
     break;
    } else if (bb ^ ($ | 0) == 0) {
     fb = $;
     gb = $;
     break;
    } else {
     X = O;
     break g;
    }
   } while (0);
   if ((Q | 0) == 59) {
    Q = 0;
    if (bb) {
     X = O;
     break g;
    } else {
     fb = db;
     gb = 0;
    }
   }
   R = c[e >> 2] | 0;
   ea = c[R + 12 >> 2] | 0;
   if ((ea | 0) == (c[R + 16 >> 2] | 0)) hb = pc[c[(c[R >> 2] | 0) + 36 >> 2] & 63](R) | 0; else hb = rg(a[ea >> 0] | 0) | 0;
   if ((hb & 255) << 24 >> 24 <= -1) {
    X = O;
    break g;
   }
   if (!(b[(c[h >> 2] | 0) + (hb << 24 >> 24 << 1) >> 1] & 8192)) {
    X = O;
    break g;
   }
   ea = c[e >> 2] | 0;
   R = ea + 12 | 0;
   fa = c[R >> 2] | 0;
   if ((fa | 0) == (c[ea + 16 >> 2] | 0)) ib = pc[c[(c[ea >> 2] | 0) + 40 >> 2] & 63](ea) | 0; else {
    c[R >> 2] = fa + 1;
    ib = rg(a[fa >> 0] | 0) | 0;
   }
   mr(D, ib & 255);
   $ = fb;
   aa = gb;
   Q = 46;
  } while (0);
  O = X;
  P = P + 1 | 0;
 }
 h : do if ((Q | 0) == 44) {
  c[j >> 2] = c[j >> 2] | 4;
  jb = 0;
 } else if ((Q | 0) == 103) {
  c[j >> 2] = c[j >> 2] | 4;
  jb = 0;
 } else if ((Q | 0) == 144) {
  c[j >> 2] = c[j >> 2] | 4;
  jb = 0;
 } else if ((Q | 0) == 232) {
  c[j >> 2] = c[j >> 2] | 4;
  jb = 0;
 } else if ((Q | 0) == 234) {
  i : do if (O | 0) {
   P = O + 11 | 0;
   X = O + 4 | 0;
   gb = 1;
   j : while (1) {
    aa = a[P >> 0] | 0;
    if (aa << 24 >> 24 < 0) kb = c[X >> 2] | 0; else kb = aa & 255;
    if (gb >>> 0 >= kb >>> 0) break i;
    aa = c[e >> 2] | 0;
    do if (!aa) lb = 1; else {
     fb = c[aa + 12 >> 2] | 0;
     if ((fb | 0) == (c[aa + 16 >> 2] | 0)) mb = pc[c[(c[aa >> 2] | 0) + 36 >> 2] & 63](aa) | 0; else mb = rg(a[fb >> 0] | 0) | 0;
     if (ph(mb, qg() | 0) | 0) {
      c[e >> 2] = 0;
      lb = 1;
      break;
     } else {
      lb = (c[e >> 2] | 0) == 0;
      break;
     }
    } while (0);
    aa = c[f >> 2] | 0;
    do if (!aa) Q = 253; else {
     fb = c[aa + 12 >> 2] | 0;
     if ((fb | 0) == (c[aa + 16 >> 2] | 0)) nb = pc[c[(c[aa >> 2] | 0) + 36 >> 2] & 63](aa) | 0; else nb = rg(a[fb >> 0] | 0) | 0;
     if (ph(nb, qg() | 0) | 0) {
      c[f >> 2] = 0;
      Q = 253;
      break;
     } else if (lb) break; else break j;
    } while (0);
    if ((Q | 0) == 253) {
     Q = 0;
     if (lb) break;
    }
    aa = c[e >> 2] | 0;
    fb = c[aa + 12 >> 2] | 0;
    if ((fb | 0) == (c[aa + 16 >> 2] | 0)) ob = pc[c[(c[aa >> 2] | 0) + 36 >> 2] & 63](aa) | 0; else ob = rg(a[fb >> 0] | 0) | 0;
    if ((a[P >> 0] | 0) < 0) pb = c[O >> 2] | 0; else pb = O;
    if ((a[pb + gb >> 0] | 0) != (ob & 255) << 24 >> 24) break;
    fb = gb + 1 | 0;
    aa = c[e >> 2] | 0;
    $ = aa + 12 | 0;
    ib = c[$ >> 2] | 0;
    if ((ib | 0) == (c[aa + 16 >> 2] | 0)) {
     pc[c[(c[aa >> 2] | 0) + 40 >> 2] & 63](aa) | 0;
     gb = fb;
     continue;
    } else {
     c[$ >> 2] = ib + 1;
     rg(a[ib >> 0] | 0) | 0;
     gb = fb;
     continue;
    }
   }
   c[j >> 2] = c[j >> 2] | 4;
   jb = 0;
   break h;
  } while (0);
  gb = c[t >> 2] | 0;
  P = c[u >> 2] | 0;
  if ((gb | 0) == (P | 0)) jb = 1; else {
   c[F >> 2] = 0;
   Yi(z, gb, P, F);
   if (!(c[F >> 2] | 0)) {
    jb = 1;
    break;
   } else {
    c[j >> 2] = c[j >> 2] | 4;
    jb = 0;
    break;
   }
  }
 } while (0);
 br(D);
 br(C);
 br(B);
 br(A);
 br(z);
 z = c[t >> 2] | 0;
 c[t >> 2] = 0;
 if (z | 0) Ac[c[p >> 2] & 127](z);
 l = q;
 return jb | 0;
}

function dn(b, e, f, g, h, i, j, k, m, n, o) {
 b = b | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 m = m | 0;
 n = n | 0;
 o = o | 0;
 var p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0, ka = 0, la = 0, ma = 0, na = 0, oa = 0, pa = 0, qa = 0, ra = 0, sa = 0, ta = 0, ua = 0, va = 0, wa = 0, xa = 0, ya = 0, za = 0, Aa = 0, Ba = 0, Ca = 0, Da = 0, Ea = 0, Fa = 0, Ga = 0, Ha = 0, Ia = 0, Ja = 0, Ka = 0, La = 0, Ma = 0, Na = 0, Oa = 0, Pa = 0, Qa = 0, Ra = 0, Sa = 0, Ta = 0, Ua = 0, Va = 0, Wa = 0, Xa = 0, Ya = 0, Za = 0, _a = 0, $a = 0, ab = 0, bb = 0, cb = 0, db = 0, eb = 0, fb = 0, gb = 0, hb = 0, ib = 0, jb = 0, kb = 0, lb = 0, mb = 0, nb = 0, ob = 0, pb = 0;
 p = l;
 l = l + 512 | 0;
 q = p + 96 | 0;
 r = p + 104 | 0;
 s = p + 88 | 0;
 t = p + 80 | 0;
 u = p + 76 | 0;
 v = p + 504 | 0;
 w = p + 72 | 0;
 x = p + 68 | 0;
 y = p + 56 | 0;
 z = p + 44 | 0;
 A = p + 32 | 0;
 B = p + 20 | 0;
 C = p + 8 | 0;
 D = p + 4 | 0;
 E = p;
 c[q >> 2] = o;
 c[s >> 2] = r;
 o = s + 4 | 0;
 c[o >> 2] = 115;
 c[t >> 2] = r;
 c[u >> 2] = r + 400;
 c[y >> 2] = 0;
 c[y + 4 >> 2] = 0;
 c[y + 8 >> 2] = 0;
 r = 0;
 while (1) {
  if ((r | 0) == 3) break;
  c[y + (r << 2) >> 2] = 0;
  r = r + 1 | 0;
 }
 c[z >> 2] = 0;
 c[z + 4 >> 2] = 0;
 c[z + 8 >> 2] = 0;
 r = 0;
 while (1) {
  if ((r | 0) == 3) break;
  c[z + (r << 2) >> 2] = 0;
  r = r + 1 | 0;
 }
 c[A >> 2] = 0;
 c[A + 4 >> 2] = 0;
 c[A + 8 >> 2] = 0;
 r = 0;
 while (1) {
  if ((r | 0) == 3) break;
  c[A + (r << 2) >> 2] = 0;
  r = r + 1 | 0;
 }
 c[B >> 2] = 0;
 c[B + 4 >> 2] = 0;
 c[B + 8 >> 2] = 0;
 r = 0;
 while (1) {
  if ((r | 0) == 3) break;
  c[B + (r << 2) >> 2] = 0;
  r = r + 1 | 0;
 }
 c[C >> 2] = 0;
 c[C + 4 >> 2] = 0;
 c[C + 8 >> 2] = 0;
 r = 0;
 while (1) {
  if ((r | 0) == 3) break;
  c[C + (r << 2) >> 2] = 0;
  r = r + 1 | 0;
 }
 gn(f, g, v, w, x, y, z, A, B, D);
 c[n >> 2] = c[m >> 2];
 g = A + 8 + 3 | 0;
 f = A + 4 | 0;
 r = B + 8 + 3 | 0;
 F = B + 4 | 0;
 G = (h & 512 | 0) != 0;
 h = z + 8 + 3 | 0;
 H = z + 4 | 0;
 I = C + 8 + 3 | 0;
 J = C + 4 | 0;
 K = v + 3 | 0;
 L = y + 11 | 0;
 M = y + 4 | 0;
 N = 0;
 O = 0;
 a : while (1) {
  if (O >>> 0 >= 4) {
   P = 229;
   break;
  }
  Q = c[b >> 2] | 0;
  do if (!Q) R = 1; else {
   S = c[Q + 12 >> 2] | 0;
   if ((S | 0) == (c[Q + 16 >> 2] | 0)) T = pc[c[(c[Q >> 2] | 0) + 36 >> 2] & 63](Q) | 0; else T = Jg(c[S >> 2] | 0) | 0;
   if (rh(T, Ig() | 0) | 0) {
    c[b >> 2] = 0;
    R = 1;
    break;
   } else {
    R = (c[b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  Q = c[e >> 2] | 0;
  do if (!Q) P = 31; else {
   S = c[Q + 12 >> 2] | 0;
   if ((S | 0) == (c[Q + 16 >> 2] | 0)) U = pc[c[(c[Q >> 2] | 0) + 36 >> 2] & 63](Q) | 0; else U = Jg(c[S >> 2] | 0) | 0;
   if (rh(U, Ig() | 0) | 0) {
    c[e >> 2] = 0;
    P = 31;
    break;
   } else if (R) {
    V = Q;
    break;
   } else {
    P = 229;
    break a;
   }
  } while (0);
  if ((P | 0) == 31) {
   P = 0;
   if (R) {
    P = 229;
    break;
   } else V = 0;
  }
  b : do switch (a[v + O >> 0] | 0) {
  case 1:
   {
    if ((O | 0) == 3) W = N; else {
     Q = c[b >> 2] | 0;
     S = c[Q + 12 >> 2] | 0;
     if ((S | 0) == (c[Q + 16 >> 2] | 0)) X = pc[c[(c[Q >> 2] | 0) + 36 >> 2] & 63](Q) | 0; else X = Jg(c[S >> 2] | 0) | 0;
     if (!(rc[c[(c[k >> 2] | 0) + 12 >> 2] & 31](k, 8192, X) | 0)) {
      P = 43;
      break a;
     }
     S = c[b >> 2] | 0;
     Q = S + 12 | 0;
     Y = c[Q >> 2] | 0;
     if ((Y | 0) == (c[S + 16 >> 2] | 0)) Z = pc[c[(c[S >> 2] | 0) + 40 >> 2] & 63](S) | 0; else {
      c[Q >> 2] = Y + 4;
      Z = Jg(c[Y >> 2] | 0) | 0;
     }
     vr(C, Z);
     _ = V;
     $ = V;
     P = 45;
    }
    break;
   }
  case 0:
   {
    if ((O | 0) == 3) W = N; else {
     _ = V;
     $ = V;
     P = 45;
    }
    break;
   }
  case 3:
   {
    Y = a[g >> 0] | 0;
    Q = Y << 24 >> 24 < 0 ? c[f >> 2] | 0 : Y & 255;
    Y = a[r >> 0] | 0;
    S = Y << 24 >> 24 < 0 ? c[F >> 2] | 0 : Y & 255;
    if ((Q | 0) == (0 - S | 0)) W = N; else {
     Y = (Q | 0) == 0;
     Q = c[b >> 2] | 0;
     aa = c[Q + 12 >> 2] | 0;
     ba = (aa | 0) == (c[Q + 16 >> 2] | 0);
     if (Y | (S | 0) == 0) {
      if (ba) ca = pc[c[(c[Q >> 2] | 0) + 36 >> 2] & 63](Q) | 0; else ca = Jg(c[aa >> 2] | 0) | 0;
      if (Y) {
       if ((ca | 0) != (c[((a[r >> 0] | 0) < 0 ? c[B >> 2] | 0 : B) >> 2] | 0)) {
        W = N;
        break b;
       }
       Y = c[b >> 2] | 0;
       S = Y + 12 | 0;
       da = c[S >> 2] | 0;
       if ((da | 0) == (c[Y + 16 >> 2] | 0)) pc[c[(c[Y >> 2] | 0) + 40 >> 2] & 63](Y) | 0; else {
        c[S >> 2] = da + 4;
        Jg(c[da >> 2] | 0) | 0;
       }
       a[j >> 0] = 1;
       da = a[r >> 0] | 0;
       W = (da << 24 >> 24 < 0 ? c[F >> 2] | 0 : da & 255) >>> 0 > 1 ? B : N;
       break b;
      }
      if ((ca | 0) != (c[((a[g >> 0] | 0) < 0 ? c[A >> 2] | 0 : A) >> 2] | 0)) {
       a[j >> 0] = 1;
       W = N;
       break b;
      }
      da = c[b >> 2] | 0;
      S = da + 12 | 0;
      Y = c[S >> 2] | 0;
      if ((Y | 0) == (c[da + 16 >> 2] | 0)) pc[c[(c[da >> 2] | 0) + 40 >> 2] & 63](da) | 0; else {
       c[S >> 2] = Y + 4;
       Jg(c[Y >> 2] | 0) | 0;
      }
      Y = a[g >> 0] | 0;
      W = (Y << 24 >> 24 < 0 ? c[f >> 2] | 0 : Y & 255) >>> 0 > 1 ? A : N;
      break b;
     }
     if (ba) ea = pc[c[(c[Q >> 2] | 0) + 36 >> 2] & 63](Q) | 0; else ea = Jg(c[aa >> 2] | 0) | 0;
     aa = c[b >> 2] | 0;
     Q = aa + 12 | 0;
     ba = c[Q >> 2] | 0;
     Y = (ba | 0) == (c[aa + 16 >> 2] | 0);
     if ((ea | 0) == (c[((a[g >> 0] | 0) < 0 ? c[A >> 2] | 0 : A) >> 2] | 0)) {
      if (Y) pc[c[(c[aa >> 2] | 0) + 40 >> 2] & 63](aa) | 0; else {
       c[Q >> 2] = ba + 4;
       Jg(c[ba >> 2] | 0) | 0;
      }
      Q = a[g >> 0] | 0;
      W = (Q << 24 >> 24 < 0 ? c[f >> 2] | 0 : Q & 255) >>> 0 > 1 ? A : N;
      break b;
     }
     if (Y) fa = pc[c[(c[aa >> 2] | 0) + 36 >> 2] & 63](aa) | 0; else fa = Jg(c[ba >> 2] | 0) | 0;
     if ((fa | 0) != (c[((a[r >> 0] | 0) < 0 ? c[B >> 2] | 0 : B) >> 2] | 0)) {
      P = 101;
      break a;
     }
     ba = c[b >> 2] | 0;
     aa = ba + 12 | 0;
     Y = c[aa >> 2] | 0;
     if ((Y | 0) == (c[ba + 16 >> 2] | 0)) pc[c[(c[ba >> 2] | 0) + 40 >> 2] & 63](ba) | 0; else {
      c[aa >> 2] = Y + 4;
      Jg(c[Y >> 2] | 0) | 0;
     }
     a[j >> 0] = 1;
     Y = a[r >> 0] | 0;
     W = (Y << 24 >> 24 < 0 ? c[F >> 2] | 0 : Y & 255) >>> 0 > 1 ? B : N;
    }
    break;
   }
  case 2:
   {
    if (!(O >>> 0 < 2 | (N | 0) != 0)) if (!(G | (O | 0) == 2 & (a[K >> 0] | 0) != 0)) {
     W = 0;
     break b;
    }
    Y = a[h >> 0] | 0;
    aa = c[z >> 2] | 0;
    ba = Y << 24 >> 24 < 0 ? aa : z;
    c : do if (!O) {
     ga = V;
     ha = ba;
     ia = Y;
     ja = aa;
     ka = V;
    } else if ((d[v + (O + -1) >> 0] | 0) < 2) {
     Q = ba;
     S = Y;
     da = aa;
     while (1) {
      la = S << 24 >> 24 < 0;
      ma = Q;
      if (((la ? da : z) + ((la ? c[H >> 2] | 0 : S & 255) << 2) | 0) == (ma | 0)) {
       na = S;
       oa = da;
       break;
      }
      if (!(rc[c[(c[k >> 2] | 0) + 12 >> 2] & 31](k, 8192, c[ma >> 2] | 0) | 0)) {
       P = 108;
       break;
      }
      Q = ma + 4 | 0;
      S = a[h >> 0] | 0;
      da = c[z >> 2] | 0;
     }
     if ((P | 0) == 108) {
      P = 0;
      na = a[h >> 0] | 0;
      oa = c[z >> 2] | 0;
     }
     da = na << 24 >> 24 < 0 ? oa : z;
     S = da;
     ma = Q - S >> 2;
     la = a[I >> 0] | 0;
     pa = la << 24 >> 24 < 0;
     qa = c[J >> 2] | 0;
     ra = la & 255;
     if (ma >>> 0 > (pa ? qa : ra) >>> 0) {
      ga = V;
      ha = S;
      ia = na;
      ja = oa;
      ka = V;
     } else {
      la = c[C >> 2] | 0;
      sa = (pa ? la : C) + ((pa ? qa : ra) << 2) | 0;
      ta = da;
      da = (pa ? la + (qa << 2) | 0 : C + (ra << 2) | 0) + (0 - ma << 2) | 0;
      while (1) {
       if ((da | 0) == (sa | 0)) {
        ga = V;
        ha = Q;
        ia = na;
        ja = oa;
        ka = V;
        break c;
       }
       if ((c[da >> 2] | 0) != (c[ta >> 2] | 0)) {
        ga = V;
        ha = S;
        ia = na;
        ja = oa;
        ka = V;
        break c;
       }
       ta = ta + 4 | 0;
       da = da + 4 | 0;
      }
     }
    } else {
     ga = V;
     ha = ba;
     ia = Y;
     ja = aa;
     ka = V;
    } while (0);
    d : while (1) {
     aa = ia << 24 >> 24 < 0;
     Y = (aa ? ja : z) + ((aa ? c[H >> 2] | 0 : ia & 255) << 2) | 0;
     aa = ha;
     if ((Y | 0) == (aa | 0)) {
      ua = Y;
      break;
     }
     Y = c[b >> 2] | 0;
     do if (!Y) va = 1; else {
      ba = c[Y + 12 >> 2] | 0;
      if ((ba | 0) == (c[Y + 16 >> 2] | 0)) wa = pc[c[(c[Y >> 2] | 0) + 36 >> 2] & 63](Y) | 0; else wa = Jg(c[ba >> 2] | 0) | 0;
      if (rh(wa, Ig() | 0) | 0) {
       c[b >> 2] = 0;
       va = 1;
       break;
      } else {
       va = (c[b >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!ka) {
      xa = ga;
      P = 129;
     } else {
      Y = c[ka + 12 >> 2] | 0;
      if ((Y | 0) == (c[ka + 16 >> 2] | 0)) ya = pc[c[(c[ka >> 2] | 0) + 36 >> 2] & 63](ka) | 0; else ya = Jg(c[Y >> 2] | 0) | 0;
      if (rh(ya, Ig() | 0) | 0) {
       c[e >> 2] = 0;
       xa = 0;
       P = 129;
       break;
      } else if (va ^ (ga | 0) == 0) {
       za = ga;
       Aa = ga;
       break;
      } else {
       ua = aa;
       break d;
      }
     } while (0);
     if ((P | 0) == 129) {
      P = 0;
      if (va) {
       ua = aa;
       break;
      } else {
       za = xa;
       Aa = 0;
      }
     }
     Y = c[b >> 2] | 0;
     ba = c[Y + 12 >> 2] | 0;
     if ((ba | 0) == (c[Y + 16 >> 2] | 0)) Ba = pc[c[(c[Y >> 2] | 0) + 36 >> 2] & 63](Y) | 0; else Ba = Jg(c[ba >> 2] | 0) | 0;
     if ((Ba | 0) != (c[aa >> 2] | 0)) {
      ua = aa;
      break;
     }
     ba = c[b >> 2] | 0;
     Y = ba + 12 | 0;
     da = c[Y >> 2] | 0;
     if ((da | 0) == (c[ba + 16 >> 2] | 0)) pc[c[(c[ba >> 2] | 0) + 40 >> 2] & 63](ba) | 0; else {
      c[Y >> 2] = da + 4;
      Jg(c[da >> 2] | 0) | 0;
     }
     ga = za;
     ha = aa + 4 | 0;
     ia = a[h >> 0] | 0;
     ja = c[z >> 2] | 0;
     ka = Aa;
    }
    if (G) {
     da = a[h >> 0] | 0;
     Y = da << 24 >> 24 < 0;
     if (((Y ? c[z >> 2] | 0 : z) + ((Y ? c[H >> 2] | 0 : da & 255) << 2) | 0) == (ua | 0)) W = N; else {
      P = 141;
      break a;
     }
    } else W = N;
    break;
   }
  case 4:
   {
    da = 0;
    Y = V;
    ba = V;
    e : while (1) {
     ta = c[b >> 2] | 0;
     do if (!ta) Ca = 1; else {
      S = c[ta + 12 >> 2] | 0;
      if ((S | 0) == (c[ta + 16 >> 2] | 0)) Da = pc[c[(c[ta >> 2] | 0) + 36 >> 2] & 63](ta) | 0; else Da = Jg(c[S >> 2] | 0) | 0;
      if (rh(Da, Ig() | 0) | 0) {
       c[b >> 2] = 0;
       Ca = 1;
       break;
      } else {
       Ca = (c[b >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!ba) {
      Ea = Y;
      P = 155;
     } else {
      ta = c[ba + 12 >> 2] | 0;
      if ((ta | 0) == (c[ba + 16 >> 2] | 0)) Fa = pc[c[(c[ba >> 2] | 0) + 36 >> 2] & 63](ba) | 0; else Fa = Jg(c[ta >> 2] | 0) | 0;
      if (rh(Fa, Ig() | 0) | 0) {
       c[e >> 2] = 0;
       Ea = 0;
       P = 155;
       break;
      } else if (Ca ^ (Y | 0) == 0) {
       Ga = Y;
       Ha = Y;
       break;
      } else {
       Ia = Y;
       break e;
      }
     } while (0);
     if ((P | 0) == 155) {
      P = 0;
      if (Ca) {
       Ia = Ea;
       break;
      } else {
       Ga = Ea;
       Ha = 0;
      }
     }
     ta = c[b >> 2] | 0;
     aa = c[ta + 12 >> 2] | 0;
     if ((aa | 0) == (c[ta + 16 >> 2] | 0)) Ja = pc[c[(c[ta >> 2] | 0) + 36 >> 2] & 63](ta) | 0; else Ja = Jg(c[aa >> 2] | 0) | 0;
     if (rc[c[(c[k >> 2] | 0) + 12 >> 2] & 31](k, 2048, Ja) | 0) {
      aa = c[n >> 2] | 0;
      if ((aa | 0) == (c[q >> 2] | 0)) {
       hn(m, n, q);
       Ka = c[n >> 2] | 0;
      } else Ka = aa;
      c[n >> 2] = Ka + 4;
      c[Ka >> 2] = Ja;
      La = da + 1 | 0;
     } else {
      aa = a[L >> 0] | 0;
      if (!((Ja | 0) == (c[x >> 2] | 0) & (da | 0 ? ((aa << 24 >> 24 < 0 ? c[M >> 2] | 0 : aa & 255) | 0) != 0 : 0))) {
       Ia = Ga;
       break;
      }
      aa = c[t >> 2] | 0;
      if ((aa | 0) == (c[u >> 2] | 0)) {
       _m(s, t, u);
       Ma = c[t >> 2] | 0;
      } else Ma = aa;
      c[t >> 2] = Ma + 4;
      c[Ma >> 2] = da;
      La = 0;
     }
     aa = c[b >> 2] | 0;
     ta = aa + 12 | 0;
     S = c[ta >> 2] | 0;
     if ((S | 0) == (c[aa + 16 >> 2] | 0)) {
      pc[c[(c[aa >> 2] | 0) + 40 >> 2] & 63](aa) | 0;
      da = La;
      Y = Ga;
      ba = Ha;
      continue;
     } else {
      c[ta >> 2] = S + 4;
      Jg(c[S >> 2] | 0) | 0;
      da = La;
      Y = Ga;
      ba = Ha;
      continue;
     }
    }
    ba = c[t >> 2] | 0;
    if (da | 0 ? (c[s >> 2] | 0) != (ba | 0) : 0) {
     if ((ba | 0) == (c[u >> 2] | 0)) {
      _m(s, t, u);
      Na = c[t >> 2] | 0;
     } else Na = ba;
     c[t >> 2] = Na + 4;
     c[Na >> 2] = da;
    }
    f : do if ((c[D >> 2] | 0) > 0) {
     ba = c[b >> 2] | 0;
     do if (!ba) Oa = 1; else {
      Y = c[ba + 12 >> 2] | 0;
      if ((Y | 0) == (c[ba + 16 >> 2] | 0)) Pa = pc[c[(c[ba >> 2] | 0) + 36 >> 2] & 63](ba) | 0; else Pa = Jg(c[Y >> 2] | 0) | 0;
      if (rh(Pa, Ig() | 0) | 0) {
       c[b >> 2] = 0;
       Oa = 1;
       break;
      } else {
       Oa = (c[b >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!Ia) P = 189; else {
      ba = c[Ia + 12 >> 2] | 0;
      if ((ba | 0) == (c[Ia + 16 >> 2] | 0)) Qa = pc[c[(c[Ia >> 2] | 0) + 36 >> 2] & 63](Ia) | 0; else Qa = Jg(c[ba >> 2] | 0) | 0;
      if (rh(Qa, Ig() | 0) | 0) {
       c[e >> 2] = 0;
       P = 189;
       break;
      } else if (Oa) {
       Ra = Ia;
       break;
      } else {
       P = 227;
       break a;
      }
     } while (0);
     if ((P | 0) == 189) {
      P = 0;
      if (Oa) {
       P = 227;
       break a;
      } else Ra = 0;
     }
     ba = c[b >> 2] | 0;
     Y = c[ba + 12 >> 2] | 0;
     if ((Y | 0) == (c[ba + 16 >> 2] | 0)) Sa = pc[c[(c[ba >> 2] | 0) + 36 >> 2] & 63](ba) | 0; else Sa = Jg(c[Y >> 2] | 0) | 0;
     if ((Sa | 0) != (c[w >> 2] | 0)) {
      P = 227;
      break a;
     }
     Y = c[b >> 2] | 0;
     ba = Y + 12 | 0;
     S = c[ba >> 2] | 0;
     if ((S | 0) == (c[Y + 16 >> 2] | 0)) {
      pc[c[(c[Y >> 2] | 0) + 40 >> 2] & 63](Y) | 0;
      Ta = Ra;
      Ua = Ra;
     } else {
      c[ba >> 2] = S + 4;
      Jg(c[S >> 2] | 0) | 0;
      Ta = Ra;
      Ua = Ra;
     }
     while (1) {
      if ((c[D >> 2] | 0) <= 0) break f;
      S = c[b >> 2] | 0;
      do if (!S) Va = 1; else {
       ba = c[S + 12 >> 2] | 0;
       if ((ba | 0) == (c[S + 16 >> 2] | 0)) Wa = pc[c[(c[S >> 2] | 0) + 36 >> 2] & 63](S) | 0; else Wa = Jg(c[ba >> 2] | 0) | 0;
       if (rh(Wa, Ig() | 0) | 0) {
        c[b >> 2] = 0;
        Va = 1;
        break;
       } else {
        Va = (c[b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!Ua) {
       Xa = Ta;
       P = 212;
      } else {
       S = c[Ua + 12 >> 2] | 0;
       if ((S | 0) == (c[Ua + 16 >> 2] | 0)) Ya = pc[c[(c[Ua >> 2] | 0) + 36 >> 2] & 63](Ua) | 0; else Ya = Jg(c[S >> 2] | 0) | 0;
       if (rh(Ya, Ig() | 0) | 0) {
        c[e >> 2] = 0;
        Xa = 0;
        P = 212;
        break;
       } else if (Va ^ (Ta | 0) == 0) {
        Za = Ta;
        _a = Ta;
        break;
       } else {
        P = 227;
        break a;
       }
      } while (0);
      if ((P | 0) == 212) {
       P = 0;
       if (Va) {
        P = 227;
        break a;
       } else {
        Za = Xa;
        _a = 0;
       }
      }
      S = c[b >> 2] | 0;
      ba = c[S + 12 >> 2] | 0;
      if ((ba | 0) == (c[S + 16 >> 2] | 0)) $a = pc[c[(c[S >> 2] | 0) + 36 >> 2] & 63](S) | 0; else $a = Jg(c[ba >> 2] | 0) | 0;
      if (!(rc[c[(c[k >> 2] | 0) + 12 >> 2] & 31](k, 2048, $a) | 0)) {
       P = 227;
       break a;
      }
      if ((c[n >> 2] | 0) == (c[q >> 2] | 0)) hn(m, n, q);
      ba = c[b >> 2] | 0;
      S = c[ba + 12 >> 2] | 0;
      if ((S | 0) == (c[ba + 16 >> 2] | 0)) ab = pc[c[(c[ba >> 2] | 0) + 36 >> 2] & 63](ba) | 0; else ab = Jg(c[S >> 2] | 0) | 0;
      S = c[n >> 2] | 0;
      c[n >> 2] = S + 4;
      c[S >> 2] = ab;
      c[D >> 2] = (c[D >> 2] | 0) + -1;
      S = c[b >> 2] | 0;
      ba = S + 12 | 0;
      Y = c[ba >> 2] | 0;
      if ((Y | 0) == (c[S + 16 >> 2] | 0)) {
       pc[c[(c[S >> 2] | 0) + 40 >> 2] & 63](S) | 0;
       Ta = Za;
       Ua = _a;
       continue;
      } else {
       c[ba >> 2] = Y + 4;
       Jg(c[Y >> 2] | 0) | 0;
       Ta = Za;
       Ua = _a;
       continue;
      }
     }
    } while (0);
    if ((c[n >> 2] | 0) == (c[m >> 2] | 0)) {
     P = 227;
     break a;
    } else W = N;
    break;
   }
  default:
   W = N;
  } while (0);
  g : do if ((P | 0) == 45) while (1) {
   P = 0;
   da = c[b >> 2] | 0;
   do if (!da) bb = 1; else {
    Y = c[da + 12 >> 2] | 0;
    if ((Y | 0) == (c[da + 16 >> 2] | 0)) cb = pc[c[(c[da >> 2] | 0) + 36 >> 2] & 63](da) | 0; else cb = Jg(c[Y >> 2] | 0) | 0;
    if (rh(cb, Ig() | 0) | 0) {
     c[b >> 2] = 0;
     bb = 1;
     break;
    } else {
     bb = (c[b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!$) {
    db = _;
    P = 58;
   } else {
    da = c[$ + 12 >> 2] | 0;
    if ((da | 0) == (c[$ + 16 >> 2] | 0)) eb = pc[c[(c[$ >> 2] | 0) + 36 >> 2] & 63]($) | 0; else eb = Jg(c[da >> 2] | 0) | 0;
    if (rh(eb, Ig() | 0) | 0) {
     c[e >> 2] = 0;
     db = 0;
     P = 58;
     break;
    } else if (bb ^ (_ | 0) == 0) {
     fb = _;
     gb = _;
     break;
    } else {
     W = N;
     break g;
    }
   } while (0);
   if ((P | 0) == 58) {
    P = 0;
    if (bb) {
     W = N;
     break g;
    } else {
     fb = db;
     gb = 0;
    }
   }
   da = c[b >> 2] | 0;
   Y = c[da + 12 >> 2] | 0;
   if ((Y | 0) == (c[da + 16 >> 2] | 0)) hb = pc[c[(c[da >> 2] | 0) + 36 >> 2] & 63](da) | 0; else hb = Jg(c[Y >> 2] | 0) | 0;
   if (!(rc[c[(c[k >> 2] | 0) + 12 >> 2] & 31](k, 8192, hb) | 0)) {
    W = N;
    break g;
   }
   Y = c[b >> 2] | 0;
   da = Y + 12 | 0;
   ba = c[da >> 2] | 0;
   if ((ba | 0) == (c[Y + 16 >> 2] | 0)) ib = pc[c[(c[Y >> 2] | 0) + 40 >> 2] & 63](Y) | 0; else {
    c[da >> 2] = ba + 4;
    ib = Jg(c[ba >> 2] | 0) | 0;
   }
   vr(C, ib);
   _ = fb;
   $ = gb;
   P = 45;
  } while (0);
  N = W;
  O = O + 1 | 0;
 }
 h : do if ((P | 0) == 43) {
  c[i >> 2] = c[i >> 2] | 4;
  jb = 0;
 } else if ((P | 0) == 101) {
  c[i >> 2] = c[i >> 2] | 4;
  jb = 0;
 } else if ((P | 0) == 141) {
  c[i >> 2] = c[i >> 2] | 4;
  jb = 0;
 } else if ((P | 0) == 227) {
  c[i >> 2] = c[i >> 2] | 4;
  jb = 0;
 } else if ((P | 0) == 229) {
  i : do if (N | 0) {
   O = N + 8 + 3 | 0;
   W = N + 4 | 0;
   gb = 1;
   j : while (1) {
    $ = a[O >> 0] | 0;
    if ($ << 24 >> 24 < 0) kb = c[W >> 2] | 0; else kb = $ & 255;
    if (gb >>> 0 >= kb >>> 0) break i;
    $ = c[b >> 2] | 0;
    do if (!$) lb = 1; else {
     fb = c[$ + 12 >> 2] | 0;
     if ((fb | 0) == (c[$ + 16 >> 2] | 0)) mb = pc[c[(c[$ >> 2] | 0) + 36 >> 2] & 63]($) | 0; else mb = Jg(c[fb >> 2] | 0) | 0;
     if (rh(mb, Ig() | 0) | 0) {
      c[b >> 2] = 0;
      lb = 1;
      break;
     } else {
      lb = (c[b >> 2] | 0) == 0;
      break;
     }
    } while (0);
    $ = c[e >> 2] | 0;
    do if (!$) P = 248; else {
     fb = c[$ + 12 >> 2] | 0;
     if ((fb | 0) == (c[$ + 16 >> 2] | 0)) nb = pc[c[(c[$ >> 2] | 0) + 36 >> 2] & 63]($) | 0; else nb = Jg(c[fb >> 2] | 0) | 0;
     if (rh(nb, Ig() | 0) | 0) {
      c[e >> 2] = 0;
      P = 248;
      break;
     } else if (lb) break; else break j;
    } while (0);
    if ((P | 0) == 248) {
     P = 0;
     if (lb) break;
    }
    $ = c[b >> 2] | 0;
    fb = c[$ + 12 >> 2] | 0;
    if ((fb | 0) == (c[$ + 16 >> 2] | 0)) ob = pc[c[(c[$ >> 2] | 0) + 36 >> 2] & 63]($) | 0; else ob = Jg(c[fb >> 2] | 0) | 0;
    if ((a[O >> 0] | 0) < 0) pb = c[N >> 2] | 0; else pb = N;
    if ((ob | 0) != (c[pb + (gb << 2) >> 2] | 0)) break;
    fb = gb + 1 | 0;
    $ = c[b >> 2] | 0;
    _ = $ + 12 | 0;
    ib = c[_ >> 2] | 0;
    if ((ib | 0) == (c[$ + 16 >> 2] | 0)) {
     pc[c[(c[$ >> 2] | 0) + 40 >> 2] & 63]($) | 0;
     gb = fb;
     continue;
    } else {
     c[_ >> 2] = ib + 4;
     Jg(c[ib >> 2] | 0) | 0;
     gb = fb;
     continue;
    }
   }
   c[i >> 2] = c[i >> 2] | 4;
   jb = 0;
   break h;
  } while (0);
  gb = c[s >> 2] | 0;
  O = c[t >> 2] | 0;
  if ((gb | 0) == (O | 0)) jb = 1; else {
   c[E >> 2] = 0;
   Yi(y, gb, O, E);
   if (!(c[E >> 2] | 0)) {
    jb = 1;
    break;
   } else {
    c[i >> 2] = c[i >> 2] | 4;
    jb = 0;
    break;
   }
  }
 } while (0);
 nr(C);
 nr(B);
 nr(A);
 nr(z);
 br(y);
 y = c[s >> 2] | 0;
 c[s >> 2] = 0;
 if (y | 0) Ac[c[o >> 2] & 127](y);
 l = p;
 return jb | 0;
}

function ue(b, e, f) {
 b = b | 0;
 e = e | 0;
 f = f | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0, ka = 0, la = 0, ma = 0, na = 0, oa = 0, pa = 0, qa = 0, ra = 0, sa = 0, ta = 0, ua = 0, va = 0, wa = 0, xa = 0, ya = 0, za = 0, Aa = 0, Ba = 0, Ca = 0, Da = 0, Ea = 0, Fa = 0, Ga = 0, Ha = 0, Ia = 0, Ja = 0, Ka = 0, La = 0, Ma = 0, Na = 0, Oa = 0, Pa = 0, Qa = 0, Ra = 0, Sa = 0, Ta = 0, Ua = 0.0, Va = 0, Wa = 0, Xa = 0, Ya = 0, Za = 0, _a = 0, $a = 0, ab = 0, bb = 0, cb = 0;
 i = l;
 l = l + 288 | 0;
 j = i + 8 | 0;
 k = i + 17 | 0;
 m = i;
 n = i + 16 | 0;
 if ((c[b + 76 >> 2] | 0) > -1) o = Nd(b) | 0; else o = 0;
 p = a[e >> 0] | 0;
 a : do if (!(p << 24 >> 24)) q = 0; else {
  r = b + 4 | 0;
  s = b + 100 | 0;
  t = b + 108 | 0;
  u = b + 8 | 0;
  v = k + 10 | 0;
  w = k + 33 | 0;
  x = j + 4 | 0;
  y = k + 1 | 0;
  A = k + 1 | 0;
  B = e;
  C = 0;
  D = 0;
  E = 0;
  F = 0;
  G = p;
  b : while (1) {
   c : do if (!(ve(G & 255) | 0)) {
    H = G << 24 >> 24 == 37;
    d : do if (H) {
     I = B + 1 | 0;
     J = a[I >> 0] | 0;
     e : do switch (J << 24 >> 24) {
     case 37:
      {
       break d;
       break;
      }
     case 42:
      {
       K = 0;
       L = B + 2 | 0;
       break;
      }
     default:
      {
       M = (J & 255) + -48 | 0;
       if (M >>> 0 < 10) if ((a[B + 2 >> 0] | 0) == 36) {
        K = ye(f, M) | 0;
        L = B + 3 | 0;
        break e;
       }
       M = (c[f >> 2] | 0) + (4 - 1) & ~(4 - 1);
       N = c[M >> 2] | 0;
       c[f >> 2] = M + 4;
       K = N;
       L = I;
      }
     } while (0);
     I = a[L >> 0] | 0;
     J = I & 255;
     if ((J + -48 | 0) >>> 0 < 10) {
      N = 0;
      M = L;
      O = J;
      while (1) {
       J = (N * 10 | 0) + -48 + O | 0;
       P = M + 1 | 0;
       Q = a[P >> 0] | 0;
       O = Q & 255;
       if ((O + -48 | 0) >>> 0 >= 10) {
        R = J;
        S = P;
        T = Q;
        break;
       } else {
        N = J;
        M = P;
       }
      }
     } else {
      R = 0;
      S = L;
      T = I;
     }
     M = T << 24 >> 24 == 109;
     N = (K | 0) != 0;
     O = M ? 0 : E;
     P = M ? 0 : F;
     J = M ? S + 1 | 0 : S;
     U = N & M;
     M = J + 1 | 0;
     switch (a[J >> 0] | 0) {
     case 104:
      {
       Q = (a[M >> 0] | 0) == 104;
       V = Q ? -2 : -1;
       W = Q ? J + 2 | 0 : M;
       break;
      }
     case 108:
      {
       Q = (a[M >> 0] | 0) == 108;
       V = Q ? 3 : 1;
       W = Q ? J + 2 | 0 : M;
       break;
      }
     case 106:
      {
       V = 3;
       W = M;
       break;
      }
     case 116:
     case 122:
      {
       V = 1;
       W = M;
       break;
      }
     case 76:
      {
       V = 2;
       W = M;
       break;
      }
     case 110:
     case 112:
     case 67:
     case 83:
     case 91:
     case 99:
     case 115:
     case 88:
     case 71:
     case 70:
     case 69:
     case 65:
     case 103:
     case 102:
     case 101:
     case 97:
     case 120:
     case 117:
     case 111:
     case 105:
     case 100:
      {
       V = 0;
       W = J;
       break;
      }
     default:
      {
       X = O;
       Y = P;
       Z = U;
       _ = 135;
       break b;
      }
     }
     J = d[W >> 0] | 0;
     M = (J & 47 | 0) == 3;
     Q = M ? J | 32 : J;
     J = M ? 1 : V;
     M = Q & 255;
     switch (M << 24 >> 24) {
     case 99:
      {
       $ = (R | 0) > 1 ? R : 1;
       aa = C;
       break;
      }
     case 91:
      {
       $ = R;
       aa = C;
       break;
      }
     case 110:
      {
       ze(K, J, C, ((C | 0) < 0) << 31 >> 31);
       ba = W;
       ca = D;
       da = C;
       ea = O;
       fa = P;
       break c;
       break;
      }
     default:
      {
       we(b, 0);
       do {
        ga = c[r >> 2] | 0;
        if (ga >>> 0 < (c[s >> 2] | 0) >>> 0) {
         c[r >> 2] = ga + 1;
         ha = d[ga >> 0] | 0;
        } else ha = xe(b) | 0;
       } while ((ve(ha) | 0) != 0);
       if (!(c[s >> 2] | 0)) ia = c[r >> 2] | 0; else {
        I = (c[r >> 2] | 0) + -1 | 0;
        c[r >> 2] = I;
        ia = I;
       }
       $ = R;
       aa = (c[t >> 2] | 0) + C + ia - (c[u >> 2] | 0) | 0;
      }
     }
     we(b, $);
     I = c[r >> 2] | 0;
     ga = c[s >> 2] | 0;
     if (I >>> 0 < ga >>> 0) {
      c[r >> 2] = I + 1;
      ja = ga;
     } else {
      if ((xe(b) | 0) < 0) {
       X = O;
       Y = P;
       Z = U;
       _ = 135;
       break b;
      }
      ja = c[s >> 2] | 0;
     }
     if (ja | 0) c[r >> 2] = (c[r >> 2] | 0) + -1;
     f : do switch (M << 24 >> 24) {
     case 91:
     case 99:
     case 115:
      {
       ga = (Q | 0) == 99;
       g : do if ((Q | 16 | 0) == 115) {
        Bv(y | 0, -1, 256) | 0;
        a[k >> 0] = 0;
        if ((Q | 0) == 115) {
         a[w >> 0] = 0;
         a[v >> 0] = 0;
         a[v + 1 >> 0] = 0;
         a[v + 2 >> 0] = 0;
         a[v + 3 >> 0] = 0;
         a[v + 4 >> 0] = 0;
         ka = W;
        } else ka = W;
       } else {
        I = W + 1 | 0;
        la = (a[I >> 0] | 0) == 94;
        ma = la & 1;
        na = la ? W + 2 | 0 : I;
        Bv(A | 0, la & 1 | 0, 256) | 0;
        a[k >> 0] = 0;
        la = a[na >> 0] | 0;
        switch (la << 24 >> 24) {
        case 45:
         {
          oa = na;
          pa = 46;
          _ = 63;
          break;
         }
        case 93:
         {
          oa = na;
          pa = 94;
          _ = 63;
          break;
         }
        default:
         {
          qa = na;
          ra = la;
         }
        }
        while (1) {
         if ((_ | 0) == 63) {
          _ = 0;
          a[k + pa >> 0] = ma ^ 1;
          la = oa + 1 | 0;
          qa = la;
          ra = a[la >> 0] | 0;
         }
         h : do switch (ra << 24 >> 24) {
         case 0:
          {
           X = O;
           Y = P;
           Z = U;
           _ = 135;
           break b;
           break;
          }
         case 93:
          {
           ka = qa;
           break g;
           break;
          }
         case 45:
          {
           la = qa + 1 | 0;
           na = a[la >> 0] | 0;
           switch (na << 24 >> 24) {
           case 93:
           case 0:
            {
             sa = qa;
             ta = 45;
             break h;
             break;
            }
           default:
            {}
           }
           I = a[qa + -1 >> 0] | 0;
           if ((I & 255) < (na & 255)) {
            ua = (ma ^ 1) & 255;
            va = I & 255;
            do {
             va = va + 1 | 0;
             a[k + va >> 0] = ua;
             I = a[la >> 0] | 0;
            } while ((va | 0) < (I & 255 | 0));
            sa = la;
            ta = I;
           } else {
            sa = la;
            ta = na;
           }
           break;
          }
         default:
          {
           sa = qa;
           ta = ra;
          }
         } while (0);
         oa = sa;
         pa = (ta & 255) + 1 | 0;
         _ = 63;
        }
       } while (0);
       ma = ga ? $ + 1 | 0 : 31;
       va = (J | 0) == 1;
       i : do if (va) {
        if (U) {
         ua = xd(ma << 2) | 0;
         if (!ua) {
          X = 0;
          Y = 0;
          Z = 1;
          _ = 135;
          break b;
         } else wa = ua;
        } else wa = K;
        c[j >> 2] = 0;
        c[x >> 2] = 0;
        ua = ma;
        I = 0;
        xa = wa;
        j : while (1) {
         ya = (xa | 0) == 0;
         za = I;
         while (1) {
          k : while (1) {
           Aa = c[r >> 2] | 0;
           if (Aa >>> 0 < (c[s >> 2] | 0) >>> 0) {
            c[r >> 2] = Aa + 1;
            Ba = d[Aa >> 0] | 0;
           } else Ba = xe(b) | 0;
           if (!(a[k + (Ba + 1) >> 0] | 0)) break j;
           a[n >> 0] = Ba;
           switch (Ae(m, n, 1, j) | 0) {
           case -1:
            {
             X = 0;
             Y = xa;
             Z = U;
             _ = 135;
             break b;
             break;
            }
           case -2:
            break;
           default:
            break k;
           }
          }
          if (ya) Ca = za; else {
           c[xa + (za << 2) >> 2] = c[m >> 2];
           Ca = za + 1 | 0;
          }
          if (U & (Ca | 0) == (ua | 0)) break; else za = Ca;
         }
         ya = ua << 1 | 1;
         na = zd(xa, ya << 2) | 0;
         if (!na) {
          X = 0;
          Y = xa;
          Z = 1;
          _ = 135;
          break b;
         } else {
          la = ua;
          ua = ya;
          xa = na;
          I = la;
         }
        }
        if (!(Be(j) | 0)) {
         X = 0;
         Y = xa;
         Z = U;
         _ = 135;
         break b;
        } else {
         Da = za;
         Ea = 0;
         Fa = xa;
         Ga = xa;
        }
       } else {
        if (U) {
         I = xd(ma) | 0;
         if (!I) {
          X = 0;
          Y = 0;
          Z = 1;
          _ = 135;
          break b;
         } else {
          Ha = ma;
          Ia = 0;
          Ja = I;
         }
         while (1) {
          I = Ia;
          do {
           ua = c[r >> 2] | 0;
           if (ua >>> 0 < (c[s >> 2] | 0) >>> 0) {
            c[r >> 2] = ua + 1;
            Ka = d[ua >> 0] | 0;
           } else Ka = xe(b) | 0;
           if (!(a[k + (Ka + 1) >> 0] | 0)) {
            Da = I;
            Ea = Ja;
            Fa = 0;
            Ga = 0;
            break i;
           }
           a[Ja + I >> 0] = Ka;
           I = I + 1 | 0;
          } while ((I | 0) != (Ha | 0));
          I = Ha << 1 | 1;
          ua = zd(Ja, I) | 0;
          if (!ua) {
           X = Ja;
           Y = 0;
           Z = 1;
           _ = 135;
           break b;
          } else {
           la = Ha;
           Ha = I;
           Ja = ua;
           Ia = la;
          }
         }
        }
        if (!K) {
         xa = ja;
         while (1) {
          la = c[r >> 2] | 0;
          if (la >>> 0 < xa >>> 0) {
           c[r >> 2] = la + 1;
           La = d[la >> 0] | 0;
          } else La = xe(b) | 0;
          if (!(a[k + (La + 1) >> 0] | 0)) {
           Da = 0;
           Ea = 0;
           Fa = 0;
           Ga = 0;
           break i;
          }
          xa = c[s >> 2] | 0;
         }
        } else {
         xa = 0;
         la = ja;
         while (1) {
          ua = c[r >> 2] | 0;
          if (ua >>> 0 < la >>> 0) {
           c[r >> 2] = ua + 1;
           Ma = d[ua >> 0] | 0;
          } else Ma = xe(b) | 0;
          if (!(a[k + (Ma + 1) >> 0] | 0)) {
           Da = xa;
           Ea = K;
           Fa = 0;
           Ga = 0;
           break i;
          }
          a[K + xa >> 0] = Ma;
          xa = xa + 1 | 0;
          la = c[s >> 2] | 0;
         }
        }
       } while (0);
       if (!(c[s >> 2] | 0)) Na = c[r >> 2] | 0; else {
        ma = (c[r >> 2] | 0) + -1 | 0;
        c[r >> 2] = ma;
        Na = ma;
       }
       ma = Na - (c[u >> 2] | 0) + (c[t >> 2] | 0) | 0;
       if (!ma) {
        Oa = Ea;
        Pa = Ga;
        _ = 137;
        break b;
       }
       if (!((ma | 0) == ($ | 0) | ga ^ 1)) {
        Oa = Ea;
        Pa = Ga;
        _ = 137;
        break b;
       }
       do if (U) if (va) {
        c[K >> 2] = Fa;
        break;
       } else {
        c[K >> 2] = Ea;
        break;
       } while (0);
       if (ga) {
        Qa = ka;
        Ra = Ea;
        Sa = Ga;
       } else {
        if (Fa | 0) c[Fa + (Da << 2) >> 2] = 0;
        if (!Ea) {
         Qa = ka;
         Ra = 0;
         Sa = Ga;
         break f;
        }
        a[Ea + Da >> 0] = 0;
        Qa = ka;
        Ra = Ea;
        Sa = Ga;
       }
       break;
      }
     case 120:
     case 88:
     case 112:
      {
       Ta = 16;
       _ = 123;
       break;
      }
     case 111:
      {
       Ta = 8;
       _ = 123;
       break;
      }
     case 117:
     case 100:
      {
       Ta = 10;
       _ = 123;
       break;
      }
     case 105:
      {
       Ta = 0;
       _ = 123;
       break;
      }
     case 71:
     case 103:
     case 70:
     case 102:
     case 69:
     case 101:
     case 65:
     case 97:
      {
       Ua = +De(b, J, 0);
       if ((c[t >> 2] | 0) == ((c[u >> 2] | 0) - (c[r >> 2] | 0) | 0)) {
        Oa = O;
        Pa = P;
        _ = 137;
        break b;
       }
       if (!K) {
        Qa = W;
        Ra = O;
        Sa = P;
       } else switch (J | 0) {
       case 0:
        {
         g[K >> 2] = Ua;
         Qa = W;
         Ra = O;
         Sa = P;
         break f;
         break;
        }
       case 1:
        {
         h[K >> 3] = Ua;
         Qa = W;
         Ra = O;
         Sa = P;
         break f;
         break;
        }
       case 2:
        {
         h[K >> 3] = Ua;
         Qa = W;
         Ra = O;
         Sa = P;
         break f;
         break;
        }
       default:
        {
         Qa = W;
         Ra = O;
         Sa = P;
         break f;
        }
       }
       break;
      }
     default:
      {
       Qa = W;
       Ra = O;
       Sa = P;
      }
     } while (0);
     do if ((_ | 0) == 123) {
      _ = 0;
      M = Ce(b, Ta, 0, -1, -1) | 0;
      if ((c[t >> 2] | 0) == ((c[u >> 2] | 0) - (c[r >> 2] | 0) | 0)) {
       Oa = O;
       Pa = P;
       _ = 137;
       break b;
      }
      if (N & (Q | 0) == 112) {
       c[K >> 2] = M;
       Qa = W;
       Ra = O;
       Sa = P;
       break;
      } else {
       ze(K, J, M, z);
       Qa = W;
       Ra = O;
       Sa = P;
       break;
      }
     } while (0);
     ba = Qa;
     ca = D + (N & 1) | 0;
     da = (c[t >> 2] | 0) + aa + (c[r >> 2] | 0) - (c[u >> 2] | 0) | 0;
     ea = Ra;
     fa = Sa;
     break c;
    } while (0);
    P = B + (H & 1) | 0;
    we(b, 0);
    O = c[r >> 2] | 0;
    if (O >>> 0 < (c[s >> 2] | 0) >>> 0) {
     c[r >> 2] = O + 1;
     Va = d[O >> 0] | 0;
    } else Va = xe(b) | 0;
    if ((Va | 0) != (d[P >> 0] | 0)) {
     _ = 22;
     break b;
    }
    ba = P;
    ca = D;
    da = C + 1 | 0;
    ea = E;
    fa = F;
   } else {
    P = B;
    while (1) {
     O = P + 1 | 0;
     if (!(ve(d[O >> 0] | 0) | 0)) break; else P = O;
    }
    we(b, 0);
    do {
     H = c[r >> 2] | 0;
     if (H >>> 0 < (c[s >> 2] | 0) >>> 0) {
      c[r >> 2] = H + 1;
      Wa = d[H >> 0] | 0;
     } else Wa = xe(b) | 0;
    } while ((ve(Wa) | 0) != 0);
    if (!(c[s >> 2] | 0)) Xa = c[r >> 2] | 0; else {
     H = (c[r >> 2] | 0) + -1 | 0;
     c[r >> 2] = H;
     Xa = H;
    }
    ba = P;
    ca = D;
    da = (c[t >> 2] | 0) + C + Xa - (c[u >> 2] | 0) | 0;
    ea = E;
    fa = F;
   } while (0);
   B = ba + 1 | 0;
   G = a[B >> 0] | 0;
   if (!(G << 24 >> 24)) {
    q = ca;
    break a;
   } else {
    C = da;
    D = ca;
    E = ea;
    F = fa;
   }
  }
  if ((_ | 0) == 22) {
   if (c[s >> 2] | 0) c[r >> 2] = (c[r >> 2] | 0) + -1;
   if ((D | 0) != 0 | (Va | 0) > -1) {
    q = D;
    break;
   } else {
    Ya = 0;
    Za = E;
    _a = F;
    _ = 136;
   }
  } else if ((_ | 0) == 135) {
   C = Z & 1;
   if (!D) {
    Ya = C;
    Za = X;
    _a = Y;
    _ = 136;
   } else {
    $a = C;
    ab = D;
    bb = X;
    cb = Y;
   }
  } else if ((_ | 0) == 137) {
   $a = U & 1;
   ab = D;
   bb = Oa;
   cb = Pa;
  }
  if ((_ | 0) == 136) {
   $a = Ya;
   ab = -1;
   bb = Za;
   cb = _a;
  }
  if (!$a) q = ab; else {
   yd(bb);
   yd(cb);
   q = ab;
  }
 } while (0);
 if (o | 0) Od(b);
 l = i;
 return q | 0;
}

function Wt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 f = l;
 l = l + 32 | 0;
 g = f;
 a : do if ((d - b | 0) > 1) do switch (a[b >> 0] | 0) {
 case 97:
  {
   switch (a[b + 1 >> 0] | 0) {
   case 97:
    {
     Xt(g, 19208);
     h = e + 4 | 0;
     i = c[h >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[h >> 2] = (c[h >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 110:
   case 100:
    {
     Yt(g, 19219);
     h = e + 4 | 0;
     i = c[h >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[h >> 2] = (c[h >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 78:
    {
     Xt(g, 19229);
     h = e + 4 | 0;
     i = c[h >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[h >> 2] = (c[h >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 83:
    {
     Yt(g, 19240);
     h = e + 4 | 0;
     i = c[h >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[h >> 2] = (c[h >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   default:
    {
     j = b;
     break a;
    }
   }
   break;
  }
 case 99:
  {
   switch (a[b + 1 >> 0] | 0) {
   case 108:
    {
     Xt(g, 19250);
     h = e + 4 | 0;
     i = c[h >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[h >> 2] = (c[h >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 109:
    {
     Yt(g, 19261);
     h = e + 4 | 0;
     i = c[h >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[h >> 2] = (c[h >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 111:
    {
     Yt(g, 19271);
     h = e + 4 | 0;
     i = c[h >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[h >> 2] = (c[h >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 118:
    {
     h = e + 63 | 0;
     i = a[h >> 0] | 0;
     a[h >> 0] = 0;
     k = b + 2 | 0;
     m = Is(k, d, e) | 0;
     a[h >> 0] = i;
     if ((m | 0) == (k | 0)) {
      j = b;
      break a;
     }
     k = c[e + 4 >> 2] | 0;
     if ((c[e >> 2] | 0) == (k | 0)) {
      j = b;
      break a;
     }
     Ls(k + -24 | 0, 0, 19281) | 0;
     a[e + 60 >> 0] = 1;
     j = m;
     break a;
     break;
    }
   default:
    {
     j = b;
     break a;
    }
   }
   break;
  }
 case 100:
  {
   switch (a[b + 1 >> 0] | 0) {
   case 97:
    {
     Zt(g, 19291);
     m = e + 4 | 0;
     k = c[m >> 2] | 0;
     if (k >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(k, g);
      c[m >> 2] = (c[m >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 101:
    {
     Yt(g, 19309);
     m = e + 4 | 0;
     k = c[m >> 2] | 0;
     if (k >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(k, g);
      c[m >> 2] = (c[m >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 108:
    {
     _t(g);
     m = e + 4 | 0;
     k = c[m >> 2] | 0;
     if (k >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(k, g);
      c[m >> 2] = (c[m >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 118:
    {
     Yt(g, 19319);
     m = e + 4 | 0;
     k = c[m >> 2] | 0;
     if (k >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(k, g);
      c[m >> 2] = (c[m >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 86:
    {
     Xt(g, 19329);
     m = e + 4 | 0;
     k = c[m >> 2] | 0;
     if (k >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(k, g);
      c[m >> 2] = (c[m >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   default:
    {
     j = b;
     break a;
    }
   }
   break;
  }
 case 101:
  {
   switch (a[b + 1 >> 0] | 0) {
   case 111:
    {
     Yt(g, 19340);
     m = e + 4 | 0;
     k = c[m >> 2] | 0;
     if (k >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(k, g);
      c[m >> 2] = (c[m >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 79:
    {
     Xt(g, 19350);
     m = e + 4 | 0;
     k = c[m >> 2] | 0;
     if (k >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(k, g);
      c[m >> 2] = (c[m >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 113:
    {
     Xt(g, 19361);
     m = e + 4 | 0;
     k = c[m >> 2] | 0;
     if (k >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(k, g);
      c[m >> 2] = (c[m >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   default:
    {
     j = b;
     break a;
    }
   }
   break;
  }
 case 103:
  {
   switch (a[b + 1 >> 0] | 0) {
   case 101:
    {
     Xt(g, 19372);
     m = e + 4 | 0;
     k = c[m >> 2] | 0;
     if (k >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(k, g);
      c[m >> 2] = (c[m >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 116:
    {
     Yt(g, 19383);
     m = e + 4 | 0;
     k = c[m >> 2] | 0;
     if (k >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(k, g);
      c[m >> 2] = (c[m >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   default:
    {
     j = b;
     break a;
    }
   }
   break;
  }
 case 105:
  {
   if ((a[b + 1 >> 0] | 0) != 120) {
    j = b;
    break a;
   }
   Xt(g, 19393);
   m = e + 4 | 0;
   k = c[m >> 2] | 0;
   if (k >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(k, g);
    c[m >> 2] = (c[m >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   j = b + 2 | 0;
   break a;
   break;
  }
 case 108:
  {
   switch (a[b + 1 >> 0] | 0) {
   case 101:
    {
     Xt(g, 19404);
     m = e + 4 | 0;
     k = c[m >> 2] | 0;
     if (k >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(k, g);
      c[m >> 2] = (c[m >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 105:
    {
     m = b + 2 | 0;
     k = $s(m, d, e) | 0;
     if ((k | 0) == (m | 0)) {
      j = b;
      break a;
     }
     m = c[e + 4 >> 2] | 0;
     if ((c[e >> 2] | 0) == (m | 0)) {
      j = b;
      break a;
     }
     Ls(m + -24 | 0, 0, 19415) | 0;
     j = k;
     break a;
     break;
    }
   case 115:
    {
     Xt(g, 19427);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 83:
    {
     $t(g, 19438);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 116:
    {
     Yt(g, 19450);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   default:
    {
     j = b;
     break a;
    }
   }
   break;
  }
 case 109:
  {
   switch (a[b + 1 >> 0] | 0) {
   case 105:
    {
     Yt(g, 19460);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 73:
    {
     Xt(g, 19470);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 108:
    {
     Yt(g, 19309);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 76:
    {
     Xt(g, 19481);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 109:
    {
     Xt(g, 19492);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   default:
    {
     j = b;
     break a;
    }
   }
   break;
  }
 case 110:
  {
   switch (a[b + 1 >> 0] | 0) {
   case 97:
    {
     au(g, 19503);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 101:
    {
     Xt(g, 19518);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 103:
    {
     Yt(g, 19460);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 116:
    {
     Yt(g, 19529);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 119:
    {
     bu(g, 19539);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   default:
    {
     j = b;
     break a;
    }
   }
   break;
  }
 case 111:
  {
   switch (a[b + 1 >> 0] | 0) {
   case 111:
    {
     Xt(g, 19552);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 114:
    {
     Yt(g, 19563);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 82:
    {
     Xt(g, 19573);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   default:
    {
     j = b;
     break a;
    }
   }
   break;
  }
 case 112:
  {
   switch (a[b + 1 >> 0] | 0) {
   case 109:
    {
     $t(g, 19584);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 108:
    {
     Yt(g, 19596);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 76:
    {
     Xt(g, 19606);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 112:
    {
     Xt(g, 19617);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 115:
    {
     Yt(g, 19596);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 116:
    {
     Xt(g, 19628);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   default:
    {
     j = b;
     break a;
    }
   }
   break;
  }
 case 113:
  {
   if ((a[b + 1 >> 0] | 0) != 117) {
    j = b;
    break a;
   }
   Yt(g, 19639);
   k = e + 4 | 0;
   m = c[k >> 2] | 0;
   if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(m, g);
    c[k >> 2] = (c[k >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   j = b + 2 | 0;
   break a;
   break;
  }
 case 114:
  {
   switch (a[b + 1 >> 0] | 0) {
   case 109:
    {
     Yt(g, 19649);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 77:
    {
     Xt(g, 19659);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 115:
    {
     Xt(g, 19670);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   case 83:
    {
     $t(g, 19681);
     k = e + 4 | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     j = b + 2 | 0;
     break a;
     break;
    }
   default:
    {
     j = b;
     break a;
    }
   }
   break;
  }
 case 118:
  {
   if (((a[b + 1 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
    j = b;
    break a;
   }
   k = b + 2 | 0;
   m = $s(k, d, e) | 0;
   if ((m | 0) == (k | 0)) {
    j = b;
    break a;
   }
   k = c[e + 4 >> 2] | 0;
   if ((c[e >> 2] | 0) == (k | 0)) {
    j = b;
    break a;
   }
   Ls(k + -24 | 0, 0, 19281) | 0;
   j = m;
   break a;
   break;
  }
 default:
  {
   j = b;
   break a;
  }
 } while (0); else j = b; while (0);
 l = f;
 return j | 0;
}

function Fe(a, b, e, f, g, h) {
 a = a | 0;
 b = b | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, A = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0, ka = 0, la = 0, ma = 0, na = 0, oa = 0, pa = 0, qa = 0, ra = 0, sa = 0, ta = 0, ua = 0, va = 0, wa = 0, xa = 0, ya = 0, za = 0, Aa = 0.0, Ba = 0, Ca = 0, Da = 0, Ea = 0, Fa = 0, Ga = 0, Ha = 0, Ia = 0, Ja = 0, Ka = 0, La = 0, Ma = 0, Na = 0, Oa = 0, Pa = 0, Qa = 0, Ra = 0, Sa = 0, Ta = 0, Ua = 0, Va = 0, Wa = 0, Xa = 0, Ya = 0, Za = 0, _a = 0, $a = 0, ab = 0, bb = 0.0, cb = 0, db = 0, eb = 0, fb = 0, gb = 0, hb = 0, ib = 0, jb = 0.0, kb = 0.0, lb = 0.0, mb = 0.0, nb = 0.0, ob = 0.0, pb = 0.0, qb = 0.0, rb = 0.0, sb = 0.0, tb = 0;
 i = l;
 l = l + 512 | 0;
 j = i;
 k = f + e | 0;
 m = 0 - k | 0;
 n = a + 4 | 0;
 o = a + 100 | 0;
 p = b;
 b = 0;
 a : while (1) {
  switch (p | 0) {
  case 46:
   {
    q = 6;
    break a;
    break;
   }
  case 48:
   break;
  default:
   {
    r = 0;
    s = p;
    t = b;
    u = 0;
    v = 0;
    break a;
   }
  }
  w = c[n >> 2] | 0;
  if (w >>> 0 < (c[o >> 2] | 0) >>> 0) {
   c[n >> 2] = w + 1;
   p = d[w >> 0] | 0;
   b = 1;
   continue;
  } else {
   p = xe(a) | 0;
   b = 1;
   continue;
  }
 }
 if ((q | 0) == 6) {
  p = c[n >> 2] | 0;
  if (p >>> 0 < (c[o >> 2] | 0) >>> 0) {
   c[n >> 2] = p + 1;
   x = d[p >> 0] | 0;
  } else x = xe(a) | 0;
  if ((x | 0) == 48) {
   p = 0;
   w = 0;
   while (1) {
    y = qv(p | 0, w | 0, -1, -1) | 0;
    A = z;
    C = c[n >> 2] | 0;
    if (C >>> 0 < (c[o >> 2] | 0) >>> 0) {
     c[n >> 2] = C + 1;
     D = d[C >> 0] | 0;
    } else D = xe(a) | 0;
    if ((D | 0) == 48) {
     p = y;
     w = A;
    } else {
     r = 1;
     s = D;
     t = 1;
     u = y;
     v = A;
     break;
    }
   }
  } else {
   r = 1;
   s = x;
   t = b;
   u = 0;
   v = 0;
  }
 }
 c[j >> 2] = 0;
 b = s + -48 | 0;
 x = (s | 0) == 46;
 b : do if (x | b >>> 0 < 10) {
  D = j + 496 | 0;
  w = 0;
  p = 0;
  A = 0;
  y = r;
  C = t;
  E = s;
  F = x;
  G = b;
  H = u;
  I = v;
  J = 0;
  K = 0;
  c : while (1) {
   do if (F) if (!y) {
    L = w;
    M = p;
    N = 1;
    P = A;
    Q = C;
    R = J;
    S = K;
    T = J;
    U = K;
   } else break c; else {
    V = qv(J | 0, K | 0, 1, 0) | 0;
    W = z;
    X = (E | 0) != 48;
    if ((p | 0) >= 125) {
     if (!X) {
      L = w;
      M = p;
      N = y;
      P = A;
      Q = C;
      R = H;
      S = I;
      T = V;
      U = W;
      break;
     }
     c[D >> 2] = c[D >> 2] | 1;
     L = w;
     M = p;
     N = y;
     P = A;
     Q = C;
     R = H;
     S = I;
     T = V;
     U = W;
     break;
    }
    Y = j + (p << 2) | 0;
    if (!w) Z = G; else Z = E + -48 + ((c[Y >> 2] | 0) * 10 | 0) | 0;
    c[Y >> 2] = Z;
    Y = w + 1 | 0;
    _ = (Y | 0) == 9;
    L = _ ? 0 : Y;
    M = p + (_ & 1) | 0;
    N = y;
    P = X ? V : A;
    Q = 1;
    R = H;
    S = I;
    T = V;
    U = W;
   } while (0);
   W = c[n >> 2] | 0;
   if (W >>> 0 < (c[o >> 2] | 0) >>> 0) {
    c[n >> 2] = W + 1;
    $ = d[W >> 0] | 0;
   } else $ = xe(a) | 0;
   G = $ + -48 | 0;
   F = ($ | 0) == 46;
   if (!(F | G >>> 0 < 10)) {
    aa = L;
    ba = M;
    ca = P;
    da = N;
    ea = $;
    fa = Q;
    ga = T;
    ha = R;
    ia = U;
    ja = S;
    q = 29;
    break b;
   } else {
    w = L;
    p = M;
    A = P;
    y = N;
    C = Q;
    E = $;
    H = R;
    I = S;
    J = T;
    K = U;
   }
  }
  ka = w;
  la = p;
  ma = A;
  na = J;
  oa = K;
  pa = H;
  qa = I;
  ra = (C | 0) != 0;
  q = 37;
 } else {
  aa = 0;
  ba = 0;
  ca = 0;
  da = r;
  ea = s;
  fa = t;
  ga = 0;
  ha = u;
  ia = 0;
  ja = v;
  q = 29;
 } while (0);
 do if ((q | 0) == 29) {
  v = (da | 0) == 0;
  u = v ? ga : ha;
  t = v ? ia : ja;
  v = (fa | 0) != 0;
  if (!(v & (ea | 32 | 0) == 101)) if ((ea | 0) > -1) {
   ka = aa;
   la = ba;
   ma = ca;
   na = ga;
   oa = ia;
   pa = u;
   qa = t;
   ra = v;
   q = 37;
   break;
  } else {
   sa = aa;
   ta = ba;
   ua = ca;
   va = ga;
   wa = ia;
   xa = v;
   ya = u;
   za = t;
   q = 39;
   break;
  }
  v = Ge(a, h) | 0;
  s = z;
  if ((v | 0) == 0 & (s | 0) == -2147483648) {
   if (!h) {
    we(a, 0);
    Aa = 0.0;
    break;
   }
   if (!(c[o >> 2] | 0)) {
    Ba = 0;
    Ca = 0;
   } else {
    c[n >> 2] = (c[n >> 2] | 0) + -1;
    Ba = 0;
    Ca = 0;
   }
  } else {
   Ba = v;
   Ca = s;
  }
  s = qv(Ba | 0, Ca | 0, u | 0, t | 0) | 0;
  Da = aa;
  Ea = ba;
  Fa = ca;
  Ga = s;
  Ha = ga;
  Ia = z;
  Ja = ia;
  q = 41;
 } while (0);
 if ((q | 0) == 37) if (!(c[o >> 2] | 0)) {
  sa = ka;
  ta = la;
  ua = ma;
  va = na;
  wa = oa;
  xa = ra;
  ya = pa;
  za = qa;
  q = 39;
 } else {
  c[n >> 2] = (c[n >> 2] | 0) + -1;
  if (ra) {
   Da = ka;
   Ea = la;
   Fa = ma;
   Ga = pa;
   Ha = na;
   Ia = qa;
   Ja = oa;
   q = 41;
  } else q = 40;
 }
 if ((q | 0) == 39) if (xa) {
  Da = sa;
  Ea = ta;
  Fa = ua;
  Ga = ya;
  Ha = va;
  Ia = za;
  Ja = wa;
  q = 41;
 } else q = 40;
 do if ((q | 0) == 40) {
  c[(Gd() | 0) >> 2] = 22;
  we(a, 0);
  Aa = 0.0;
 } else if ((q | 0) == 41) {
  wa = c[j >> 2] | 0;
  if (!wa) {
   Aa = +(g | 0) * 0.0;
   break;
  }
  if (((Ja | 0) < 0 | (Ja | 0) == 0 & Ha >>> 0 < 10) & ((Ga | 0) == (Ha | 0) & (Ia | 0) == (Ja | 0))) if ((e | 0) > 30 | (wa >>> e | 0) == 0) {
   Aa = +(g | 0) * +(wa >>> 0);
   break;
  }
  wa = (f | 0) / -2 | 0;
  za = ((wa | 0) < 0) << 31 >> 31;
  if ((Ia | 0) > (za | 0) | (Ia | 0) == (za | 0) & Ga >>> 0 > wa >>> 0) {
   c[(Gd() | 0) >> 2] = 34;
   Aa = +(g | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
   break;
  }
  wa = f + -106 | 0;
  za = ((wa | 0) < 0) << 31 >> 31;
  if ((Ia | 0) < (za | 0) | (Ia | 0) == (za | 0) & Ga >>> 0 < wa >>> 0) {
   c[(Gd() | 0) >> 2] = 34;
   Aa = +(g | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
   break;
  }
  if (!Da) Ka = Ea; else {
   if ((Da | 0) < 9) {
    wa = j + (Ea << 2) | 0;
    za = Da;
    va = c[wa >> 2] | 0;
    while (1) {
     va = va * 10 | 0;
     if ((za | 0) >= 8) break; else za = za + 1 | 0;
    }
    c[wa >> 2] = va;
   }
   Ka = Ea + 1 | 0;
  }
  if ((Fa | 0) < 9) if ((Fa | 0) <= (Ga | 0) & (Ga | 0) < 18) {
   if ((Ga | 0) == 9) {
    Aa = +(g | 0) * +((c[j >> 2] | 0) >>> 0);
    break;
   }
   if ((Ga | 0) < 9) {
    Aa = +(g | 0) * +((c[j >> 2] | 0) >>> 0) / +(c[3372 + (8 - Ga << 2) >> 2] | 0);
    break;
   }
   za = e + 27 + (O(Ga, -3) | 0) | 0;
   C = c[j >> 2] | 0;
   if ((za | 0) > 30 | (C >>> za | 0) == 0) {
    Aa = +(g | 0) * +(C >>> 0) * +(c[3372 + (Ga + -10 << 2) >> 2] | 0);
    break;
   }
  }
  C = (Ga | 0) % 9 | 0;
  if (!C) {
   La = 0;
   Ma = Ka;
   Na = 0;
   Oa = Ga;
  } else {
   za = (Ga | 0) > -1 ? C : C + 9 | 0;
   C = c[3372 + (8 - za << 2) >> 2] | 0;
   if (!Ka) {
    Pa = 0;
    Qa = 0;
    Ra = Ga;
   } else {
    I = 1e9 / (C | 0) | 0;
    H = 0;
    K = 0;
    J = Ga;
    A = 0;
    do {
     p = j + (A << 2) | 0;
     w = c[p >> 2] | 0;
     ya = ((w >>> 0) / (C >>> 0) | 0) + H | 0;
     c[p >> 2] = ya;
     H = O(I, (w >>> 0) % (C >>> 0) | 0) | 0;
     w = (A | 0) == (K | 0) & (ya | 0) == 0;
     J = w ? J + -9 | 0 : J;
     K = w ? K + 1 & 127 : K;
     A = A + 1 | 0;
    } while ((A | 0) != (Ka | 0));
    if (!H) {
     Pa = K;
     Qa = Ka;
     Ra = J;
    } else {
     c[j + (Ka << 2) >> 2] = H;
     Pa = K;
     Qa = Ka + 1 | 0;
     Ra = J;
    }
   }
   La = 0;
   Ma = Qa;
   Na = Pa;
   Oa = 9 - za + Ra | 0;
  }
  d : while (1) {
   A = (Oa | 0) < 18;
   C = (Oa | 0) == 18;
   I = j + (Na << 2) | 0;
   va = La;
   wa = Ma;
   while (1) {
    if (!A) {
     if (!C) {
      Sa = va;
      Ta = Na;
      Ua = Oa;
      Va = wa;
      break d;
     }
     if ((c[I >> 2] | 0) >>> 0 >= 9007199) {
      Sa = va;
      Ta = Na;
      Ua = 18;
      Va = wa;
      break d;
     }
    }
    w = 0;
    Wa = wa;
    ya = wa + 127 | 0;
    while (1) {
     p = ya & 127;
     ua = j + (p << 2) | 0;
     ta = xv(c[ua >> 2] | 0, 0, 29) | 0;
     sa = qv(ta | 0, z | 0, w | 0, 0) | 0;
     ta = z;
     if (ta >>> 0 > 0 | (ta | 0) == 0 & sa >>> 0 > 1e9) {
      xa = uv(sa | 0, ta | 0, 1e9, 0) | 0;
      oa = vv(sa | 0, ta | 0, 1e9, 0) | 0;
      Xa = xa;
      Ya = oa;
     } else {
      Xa = 0;
      Ya = sa;
     }
     c[ua >> 2] = Ya;
     ua = (p | 0) == (Na | 0);
     Wa = (Ya | 0) == 0 & (((p | 0) != (Wa + 127 & 127 | 0) | ua) ^ 1) ? p : Wa;
     if (ua) break; else {
      w = Xa;
      ya = p + -1 | 0;
     }
    }
    va = va + -29 | 0;
    if (Xa | 0) break; else wa = Wa;
   }
   wa = Na + 127 & 127;
   I = Wa + 127 & 127;
   C = j + ((Wa + 126 & 127) << 2) | 0;
   if ((wa | 0) == (Wa | 0)) {
    c[C >> 2] = c[C >> 2] | c[j + (I << 2) >> 2];
    Za = I;
   } else Za = Wa;
   c[j + (wa << 2) >> 2] = Xa;
   La = va;
   Ma = Za;
   Na = wa;
   Oa = Oa + 9 | 0;
  }
  e : while (1) {
   za = Va + 1 & 127;
   J = j + ((Va + 127 & 127) << 2) | 0;
   K = Sa;
   H = Ta;
   wa = Ua;
   while (1) {
    I = (wa | 0) == 18;
    C = (wa | 0) > 27 ? 9 : 1;
    _a = K;
    $a = H;
    while (1) {
     A = 0;
     while (1) {
      ya = A + $a & 127;
      if ((ya | 0) == (Va | 0)) {
       ab = 2;
       q = 88;
       break;
      }
      w = c[j + (ya << 2) >> 2] | 0;
      ya = c[3404 + (A << 2) >> 2] | 0;
      if (w >>> 0 < ya >>> 0) {
       ab = 2;
       q = 88;
       break;
      }
      if (w >>> 0 > ya >>> 0) break;
      ya = A + 1 | 0;
      if ((A | 0) < 1) A = ya; else {
       ab = ya;
       q = 88;
       break;
      }
     }
     if ((q | 0) == 88) {
      q = 0;
      if (I & (ab | 0) == 2) {
       bb = 0.0;
       cb = 0;
       db = Va;
       break e;
      }
     }
     eb = C + _a | 0;
     if (($a | 0) == (Va | 0)) {
      _a = eb;
      $a = Va;
     } else break;
    }
    I = (1 << C) + -1 | 0;
    A = 1e9 >>> C;
    fb = 0;
    gb = $a;
    hb = wa;
    ya = $a;
    do {
     w = j + (ya << 2) | 0;
     p = c[w >> 2] | 0;
     ua = (p >>> C) + fb | 0;
     c[w >> 2] = ua;
     fb = O(p & I, A) | 0;
     p = (ya | 0) == (gb | 0) & (ua | 0) == 0;
     hb = p ? hb + -9 | 0 : hb;
     gb = p ? gb + 1 & 127 : gb;
     ya = ya + 1 & 127;
    } while ((ya | 0) != (Va | 0));
    if (!fb) {
     K = eb;
     H = gb;
     wa = hb;
     continue;
    }
    if ((za | 0) != (gb | 0)) break;
    c[J >> 2] = c[J >> 2] | 1;
    K = eb;
    H = gb;
    wa = hb;
   }
   c[j + (Va << 2) >> 2] = fb;
   Sa = eb;
   Ta = gb;
   Ua = hb;
   Va = za;
  }
  while (1) {
   wa = cb + $a & 127;
   H = db + 1 & 127;
   if ((wa | 0) == (db | 0)) {
    c[j + (H + -1 << 2) >> 2] = 0;
    ib = H;
   } else ib = db;
   bb = bb * 1.0e9 + +((c[j + (wa << 2) >> 2] | 0) >>> 0);
   cb = cb + 1 | 0;
   if ((cb | 0) == 2) break; else db = ib;
  }
  jb = +(g | 0);
  kb = bb * jb;
  wa = _a + 53 | 0;
  H = wa - f | 0;
  K = (H | 0) < (e | 0);
  J = K ? ((H | 0) > 0 ? H : 0) : e;
  if ((J | 0) < 53) {
   lb = +Ie(+He(1.0, 105 - J | 0), kb);
   mb = +Je(kb, +He(1.0, 53 - J | 0));
   nb = lb;
   ob = mb;
   pb = lb + (kb - mb);
  } else {
   nb = 0.0;
   ob = 0.0;
   pb = kb;
  }
  va = $a + 2 & 127;
  if ((va | 0) == (ib | 0)) qb = ob; else {
   ya = c[j + (va << 2) >> 2] | 0;
   do if (ya >>> 0 < 5e8) {
    if (!ya) if (($a + 3 & 127 | 0) == (ib | 0)) {
     rb = ob;
     break;
    }
    rb = jb * .25 + ob;
   } else {
    if ((ya | 0) != 5e8) {
     rb = jb * .75 + ob;
     break;
    }
    if (($a + 3 & 127 | 0) == (ib | 0)) {
     rb = jb * .5 + ob;
     break;
    } else {
     rb = jb * .75 + ob;
     break;
    }
   } while (0);
   if ((53 - J | 0) > 1) if (+Je(rb, 1.0) != 0.0) qb = rb; else qb = rb + 1.0; else qb = rb;
  }
  jb = pb + qb - nb;
  do if ((wa & 2147483647 | 0) > (-2 - k | 0)) {
   ya = !(+B(+jb) >= 9007199254740992.0);
   va = _a + ((ya ^ 1) & 1) | 0;
   kb = ya ? jb : jb * .5;
   if ((va + 50 | 0) <= (m | 0)) if (!(qb != 0.0 & (K & ((J | 0) != (H | 0) | ya)))) {
    sb = kb;
    tb = va;
    break;
   }
   c[(Gd() | 0) >> 2] = 34;
   sb = kb;
   tb = va;
  } else {
   sb = jb;
   tb = _a;
  } while (0);
  Aa = +Ke(sb, tb);
 } while (0);
 l = i;
 return +Aa;
}

function nt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0;
 f = l;
 l = l + 112 | 0;
 g = f + 88 | 0;
 h = f + 48 | 0;
 i = f + 72 | 0;
 j = f + 36 | 0;
 k = f + 24 | 0;
 m = f + 12 | 0;
 n = f;
 a : do if ((d - b | 0) > 3) if ((a[b >> 0] | 0) == 76) {
  o = b + 1 | 0;
  do switch (a[o >> 0] | 0) {
  case 84:
   {
    p = b;
    break a;
    break;
   }
  case 119:
   {
    q = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    r = lh(20100) | 0;
    if (r >>> 0 > 4294967279) _q(h);
    if (r >>> 0 < 11) {
     a[h + 11 >> 0] = r;
     s = h;
    } else {
     t = r + 16 & -16;
     u = Bs(t) | 0;
     c[h >> 2] = u;
     c[h + 8 >> 2] = t | -2147483648;
     c[h + 4 >> 2] = r;
     s = u;
    }
    sg(s, 20100, r) | 0;
    a[g >> 0] = 0;
    mh(s + r | 0, g);
    r = ru(q, d, h, e) | 0;
    Es(h);
    p = (r | 0) == (q | 0) ? b : r;
    break a;
    break;
   }
  case 98:
   {
    if ((a[b + 3 >> 0] | 0) != 69) {
     p = b;
     break a;
    }
    switch (a[b + 2 >> 0] | 0) {
    case 48:
     {
      Lt(g, 20108);
      r = e + 4 | 0;
      q = c[r >> 2] | 0;
      if (q >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
       dt(q, g);
       c[r >> 2] = (c[r >> 2] | 0) + 24;
      } else et(e, g);
      ns(g);
      p = b + 4 | 0;
      break a;
      break;
     }
    case 49:
     {
      su(g, 20114);
      r = e + 4 | 0;
      q = c[r >> 2] | 0;
      if (q >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
       dt(q, g);
       c[r >> 2] = (c[r >> 2] | 0) + 24;
      } else et(e, g);
      ns(g);
      p = b + 4 | 0;
      break a;
      break;
     }
    default:
     {
      p = b;
      break a;
     }
    }
    break;
   }
  case 99:
   {
    r = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    q = lh(20119) | 0;
    if (q >>> 0 > 4294967279) _q(h);
    if (q >>> 0 < 11) {
     a[h + 11 >> 0] = q;
     v = h;
    } else {
     u = q + 16 & -16;
     t = Bs(u) | 0;
     c[h >> 2] = t;
     c[h + 8 >> 2] = u | -2147483648;
     c[h + 4 >> 2] = q;
     v = t;
    }
    sg(v, 20119, q) | 0;
    a[g >> 0] = 0;
    mh(v + q | 0, g);
    q = ru(r, d, h, e) | 0;
    Es(h);
    p = (q | 0) == (r | 0) ? b : q;
    break a;
    break;
   }
  case 97:
   {
    q = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    r = lh(20124) | 0;
    if (r >>> 0 > 4294967279) _q(h);
    if (r >>> 0 < 11) {
     a[h + 11 >> 0] = r;
     w = h;
    } else {
     t = r + 16 & -16;
     u = Bs(t) | 0;
     c[h >> 2] = u;
     c[h + 8 >> 2] = t | -2147483648;
     c[h + 4 >> 2] = r;
     w = u;
    }
    sg(w, 20124, r) | 0;
    a[g >> 0] = 0;
    mh(w + r | 0, g);
    r = ru(q, d, h, e) | 0;
    Es(h);
    p = (r | 0) == (q | 0) ? b : r;
    break a;
    break;
   }
  case 104:
   {
    r = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    q = lh(20136) | 0;
    if (q >>> 0 > 4294967279) _q(h);
    if (q >>> 0 < 11) {
     a[h + 11 >> 0] = q;
     x = h;
    } else {
     u = q + 16 & -16;
     t = Bs(u) | 0;
     c[h >> 2] = t;
     c[h + 8 >> 2] = u | -2147483648;
     c[h + 4 >> 2] = q;
     x = t;
    }
    sg(x, 20136, q) | 0;
    a[g >> 0] = 0;
    mh(x + q | 0, g);
    q = ru(r, d, h, e) | 0;
    Es(h);
    p = (q | 0) == (r | 0) ? b : q;
    break a;
    break;
   }
  case 115:
   {
    q = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    r = lh(20150) | 0;
    if (r >>> 0 > 4294967279) _q(h);
    if (r >>> 0 < 11) {
     a[h + 11 >> 0] = r;
     y = h;
    } else {
     t = r + 16 & -16;
     u = Bs(t) | 0;
     c[h >> 2] = u;
     c[h + 8 >> 2] = t | -2147483648;
     c[h + 4 >> 2] = r;
     y = u;
    }
    sg(y, 20150, r) | 0;
    a[g >> 0] = 0;
    mh(y + r | 0, g);
    r = ru(q, d, h, e) | 0;
    Es(h);
    p = (r | 0) == (q | 0) ? b : r;
    break a;
    break;
   }
  case 116:
   {
    r = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    q = lh(20156) | 0;
    if (q >>> 0 > 4294967279) _q(h);
    if (q >>> 0 < 11) {
     a[h + 11 >> 0] = q;
     z = h;
    } else {
     u = q + 16 & -16;
     t = Bs(u) | 0;
     c[h >> 2] = t;
     c[h + 8 >> 2] = u | -2147483648;
     c[h + 4 >> 2] = q;
     z = t;
    }
    sg(z, 20156, q) | 0;
    a[g >> 0] = 0;
    mh(z + q | 0, g);
    q = ru(r, d, h, e) | 0;
    Es(h);
    p = (q | 0) == (r | 0) ? b : q;
    break a;
    break;
   }
  case 105:
   {
    q = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    r = lh(27108) | 0;
    if (r >>> 0 > 4294967279) _q(h);
    if (r >>> 0 < 11) {
     a[h + 11 >> 0] = r;
     A = h;
    } else {
     t = r + 16 & -16;
     u = Bs(t) | 0;
     c[h >> 2] = u;
     c[h + 8 >> 2] = t | -2147483648;
     c[h + 4 >> 2] = r;
     A = u;
    }
    sg(A, 27108, r) | 0;
    a[g >> 0] = 0;
    mh(A + r | 0, g);
    r = ru(q, d, h, e) | 0;
    Es(h);
    p = (r | 0) == (q | 0) ? b : r;
    break a;
    break;
   }
  case 106:
   {
    r = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    q = lh(20171) | 0;
    if (q >>> 0 > 4294967279) _q(h);
    if (q >>> 0 < 11) {
     a[h + 11 >> 0] = q;
     B = h;
    } else {
     u = q + 16 & -16;
     t = Bs(u) | 0;
     c[h >> 2] = t;
     c[h + 8 >> 2] = u | -2147483648;
     c[h + 4 >> 2] = q;
     B = t;
    }
    sg(B, 20171, q) | 0;
    a[g >> 0] = 0;
    mh(B + q | 0, g);
    q = ru(r, d, h, e) | 0;
    Es(h);
    p = (q | 0) == (r | 0) ? b : q;
    break a;
    break;
   }
  case 108:
   {
    q = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    r = lh(20173) | 0;
    if (r >>> 0 > 4294967279) _q(h);
    if (r >>> 0 < 11) {
     a[h + 11 >> 0] = r;
     C = h;
    } else {
     t = r + 16 & -16;
     u = Bs(t) | 0;
     c[h >> 2] = u;
     c[h + 8 >> 2] = t | -2147483648;
     c[h + 4 >> 2] = r;
     C = u;
    }
    sg(C, 20173, r) | 0;
    a[g >> 0] = 0;
    mh(C + r | 0, g);
    r = ru(q, d, h, e) | 0;
    Es(h);
    p = (r | 0) == (q | 0) ? b : r;
    break a;
    break;
   }
  case 109:
   {
    r = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    q = lh(20175) | 0;
    if (q >>> 0 > 4294967279) _q(h);
    if (q >>> 0 < 11) {
     a[h + 11 >> 0] = q;
     D = h;
    } else {
     u = q + 16 & -16;
     t = Bs(u) | 0;
     c[h >> 2] = t;
     c[h + 8 >> 2] = u | -2147483648;
     c[h + 4 >> 2] = q;
     D = t;
    }
    sg(D, 20175, q) | 0;
    a[g >> 0] = 0;
    mh(D + q | 0, g);
    q = ru(r, d, h, e) | 0;
    Es(h);
    p = (q | 0) == (r | 0) ? b : q;
    break a;
    break;
   }
  case 120:
   {
    q = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    r = lh(20178) | 0;
    if (r >>> 0 > 4294967279) _q(h);
    if (r >>> 0 < 11) {
     a[h + 11 >> 0] = r;
     E = h;
    } else {
     t = r + 16 & -16;
     u = Bs(t) | 0;
     c[h >> 2] = u;
     c[h + 8 >> 2] = t | -2147483648;
     c[h + 4 >> 2] = r;
     E = u;
    }
    sg(E, 20178, r) | 0;
    a[g >> 0] = 0;
    mh(E + r | 0, g);
    r = ru(q, d, h, e) | 0;
    Es(h);
    p = (r | 0) == (q | 0) ? b : r;
    break a;
    break;
   }
  case 121:
   {
    r = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    q = lh(20181) | 0;
    if (q >>> 0 > 4294967279) _q(h);
    if (q >>> 0 < 11) {
     a[h + 11 >> 0] = q;
     F = h;
    } else {
     u = q + 16 & -16;
     t = Bs(u) | 0;
     c[h >> 2] = t;
     c[h + 8 >> 2] = u | -2147483648;
     c[h + 4 >> 2] = q;
     F = t;
    }
    sg(F, 20181, q) | 0;
    a[g >> 0] = 0;
    mh(F + q | 0, g);
    q = ru(r, d, h, e) | 0;
    Es(h);
    p = (q | 0) == (r | 0) ? b : q;
    break a;
    break;
   }
  case 110:
   {
    q = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    r = lh(20185) | 0;
    if (r >>> 0 > 4294967279) _q(h);
    if (r >>> 0 < 11) {
     a[h + 11 >> 0] = r;
     G = h;
    } else {
     t = r + 16 & -16;
     u = Bs(t) | 0;
     c[h >> 2] = u;
     c[h + 8 >> 2] = t | -2147483648;
     c[h + 4 >> 2] = r;
     G = u;
    }
    sg(G, 20185, r) | 0;
    a[g >> 0] = 0;
    mh(G + r | 0, g);
    r = ru(q, d, h, e) | 0;
    Es(h);
    p = (r | 0) == (q | 0) ? b : r;
    break a;
    break;
   }
  case 111:
   {
    r = b + 2 | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    q = lh(20194) | 0;
    if (q >>> 0 > 4294967279) _q(h);
    if (q >>> 0 < 11) {
     a[h + 11 >> 0] = q;
     H = h;
    } else {
     u = q + 16 & -16;
     t = Bs(u) | 0;
     c[h >> 2] = t;
     c[h + 8 >> 2] = u | -2147483648;
     c[h + 4 >> 2] = q;
     H = t;
    }
    sg(H, 20194, q) | 0;
    a[g >> 0] = 0;
    mh(H + q | 0, g);
    q = ru(r, d, h, e) | 0;
    Es(h);
    p = (q | 0) == (r | 0) ? b : q;
    break a;
    break;
   }
  case 102:
   {
    q = b + 2 | 0;
    r = tu(q, d, e) | 0;
    p = (r | 0) == (q | 0) ? b : r;
    break a;
    break;
   }
  case 100:
   {
    r = b + 2 | 0;
    q = uu(r, d, e) | 0;
    p = (q | 0) == (r | 0) ? b : q;
    break a;
    break;
   }
  case 101:
   {
    q = b + 2 | 0;
    r = vu(q, d, e) | 0;
    p = (r | 0) == (q | 0) ? b : r;
    break a;
    break;
   }
  case 95:
   {
    if ((a[b + 2 >> 0] | 0) != 90) {
     p = b;
     break a;
    }
    r = b + 3 | 0;
    q = Fs(r, d, e) | 0;
    if ((q | 0) == (r | 0) | (q | 0) == (d | 0)) {
     p = b;
     break a;
    }
    p = (a[q >> 0] | 0) == 69 ? q + 1 | 0 : b;
    break a;
    break;
   }
  default:
   {
    q = Is(o, d, e) | 0;
    if ((q | 0) == (o | 0) | (q | 0) == (d | 0)) {
     p = b;
     break a;
    }
    if ((a[q >> 0] | 0) == 69) {
     p = q + 1 | 0;
     break a;
    } else I = q;
    while (1) {
     if ((I | 0) == (d | 0)) {
      p = b;
      break a;
     }
     J = a[I >> 0] | 0;
     if (((J << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
     I = I + 1 | 0;
    }
    if (!((I | 0) != (q | 0) & J << 24 >> 24 == 69)) {
     p = b;
     break a;
    }
    r = e + 4 | 0;
    t = c[r >> 2] | 0;
    if ((c[e >> 2] | 0) == (t | 0)) {
     p = b;
     break a;
    }
    _s(m, t + -24 | 0);
    Ls(m, 0, 18908) | 0;
    c[k >> 2] = c[m >> 2];
    c[k + 4 >> 2] = c[m + 4 >> 2];
    c[k + 8 >> 2] = c[m + 8 >> 2];
    t = 0;
    while (1) {
     if ((t | 0) == 3) break;
     c[m + (t << 2) >> 2] = 0;
     t = t + 1 | 0;
    }
    Ms(k, 18906) | 0;
    c[j >> 2] = c[k >> 2];
    c[j + 4 >> 2] = c[k + 4 >> 2];
    c[j + 8 >> 2] = c[k + 8 >> 2];
    t = 0;
    while (1) {
     if ((t | 0) == 3) break;
     c[k + (t << 2) >> 2] = 0;
     t = t + 1 | 0;
    }
    c[n >> 2] = 0;
    c[n + 4 >> 2] = 0;
    c[n + 8 >> 2] = 0;
    t = I - q | 0;
    if (t >>> 0 > 4294967279) _q(n);
    if (t >>> 0 < 11) {
     a[n + 11 >> 0] = t;
     K = n;
    } else {
     u = t + 16 & -16;
     L = Bs(u) | 0;
     c[n >> 2] = L;
     c[n + 8 >> 2] = u | -2147483648;
     c[n + 4 >> 2] = t;
     K = L;
    }
    L = q;
    u = K;
    while (1) {
     if ((L | 0) == (I | 0)) break;
     mh(u, L);
     L = L + 1 | 0;
     u = u + 1 | 0;
    }
    a[g >> 0] = 0;
    mh(K + t | 0, g);
    u = a[n + 11 >> 0] | 0;
    L = u << 24 >> 24 < 0;
    qs(j, L ? c[n >> 2] | 0 : n, L ? c[n + 4 >> 2] | 0 : u & 255) | 0;
    c[i >> 2] = c[j >> 2];
    c[i + 4 >> 2] = c[j + 4 >> 2];
    c[i + 8 >> 2] = c[j + 8 >> 2];
    u = 0;
    while (1) {
     if ((u | 0) == 3) break;
     c[j + (u << 2) >> 2] = 0;
     u = u + 1 | 0;
    }
    bt(h, i);
    ct((c[r >> 2] | 0) + -24 | 0, h);
    ns(h);
    Es(i);
    Es(n);
    Es(j);
    Es(k);
    Es(m);
    p = I + 1 | 0;
    break a;
   }
  } while (0);
 } else p = b; else p = b; while (0);
 l = f;
 return p | 0;
}

function Zd(b, e, f, g, h, i) {
 b = b | 0;
 e = +e;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0.0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, A = 0, B = 0, C = 0.0, D = 0.0, E = 0, F = 0, G = 0, H = 0, I = 0.0, J = 0, K = 0, L = 0, M = 0, N = 0, P = 0, Q = 0.0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0.0, ka = 0.0, la = 0, ma = 0, na = 0, oa = 0, pa = 0, qa = 0, ra = 0, sa = 0, ta = 0, ua = 0, va = 0, wa = 0, xa = 0, ya = 0, za = 0, Aa = 0, Ba = 0, Ca = 0, Da = 0, Ea = 0, Fa = 0, Ga = 0;
 j = l;
 l = l + 560 | 0;
 k = j + 8 | 0;
 m = j;
 n = j + 524 | 0;
 o = n;
 p = j + 512 | 0;
 c[m >> 2] = 0;
 q = p + 12 | 0;
 _d(e) | 0;
 if ((z | 0) < 0) {
  r = -e;
  s = 1;
  t = 13005;
 } else {
  r = e;
  s = (h & 2049 | 0) != 0 & 1;
  t = (h & 2048 | 0) == 0 ? ((h & 1 | 0) == 0 ? 13006 : 13011) : 13008;
 }
 _d(r) | 0;
 do if (0 == 0 & (z & 2146435072 | 0) == 2146435072) {
  u = (i & 32 | 0) != 0;
  v = s + 3 | 0;
  Xd(b, 32, f, v, h & -65537);
  Pd(b, t, s);
  Pd(b, r != r | 0.0 != 0.0 ? (u ? 14953 : 13032) : u ? 13024 : 13028, 3);
  Xd(b, 32, f, v, h ^ 8192);
  w = v;
 } else {
  e = +$d(r, m) * 2.0;
  v = e != 0.0;
  if (v) c[m >> 2] = (c[m >> 2] | 0) + -1;
  u = i | 32;
  if ((u | 0) == 97) {
   x = i & 32;
   y = (x | 0) == 0 ? t : t + 9 | 0;
   A = s | 2;
   B = 12 - g | 0;
   do if (g >>> 0 > 11 | (B | 0) == 0) C = e; else {
    D = 8.0;
    E = B;
    do {
     E = E + -1 | 0;
     D = D * 16.0;
    } while ((E | 0) != 0);
    if ((a[y >> 0] | 0) == 45) {
     C = -(D + (-e - D));
     break;
    } else {
     C = e + D - D;
     break;
    }
   } while (0);
   B = c[m >> 2] | 0;
   E = (B | 0) < 0 ? 0 - B | 0 : B;
   F = Ud(E, ((E | 0) < 0) << 31 >> 31, q) | 0;
   if ((F | 0) == (q | 0)) {
    E = p + 11 | 0;
    a[E >> 0] = 48;
    G = E;
   } else G = F;
   a[G + -1 >> 0] = (B >> 31 & 2) + 43;
   B = G + -2 | 0;
   a[B >> 0] = i + 15;
   F = (g | 0) < 1;
   E = (h & 8 | 0) == 0;
   H = n;
   I = C;
   while (1) {
    J = ~~I;
    K = H + 1 | 0;
    a[H >> 0] = x | d[13036 + J >> 0];
    I = (I - +(J | 0)) * 16.0;
    if ((K - o | 0) == 1) if (E & (F & I == 0.0)) L = K; else {
     a[K >> 0] = 46;
     L = H + 2 | 0;
    } else L = K;
    if (!(I != 0.0)) break; else H = L;
   }
   H = L;
   if (!g) M = 24; else if ((-2 - o + H | 0) < (g | 0)) {
    N = H - o | 0;
    P = g + 2 | 0;
   } else M = 24;
   if ((M | 0) == 24) {
    F = H - o | 0;
    N = F;
    P = F;
   }
   F = q - B | 0;
   H = F + A + P | 0;
   Xd(b, 32, f, H, h);
   Pd(b, y, A);
   Xd(b, 48, f, H, h ^ 65536);
   Pd(b, n, N);
   Xd(b, 48, P - N | 0, 0, 0);
   Pd(b, B, F);
   Xd(b, 32, f, H, h ^ 8192);
   w = H;
   break;
  }
  H = (g | 0) < 0 ? 6 : g;
  if (v) {
   F = (c[m >> 2] | 0) + -28 | 0;
   c[m >> 2] = F;
   Q = e * 268435456.0;
   R = F;
  } else {
   Q = e;
   R = c[m >> 2] | 0;
  }
  F = (R | 0) < 0 ? k : k + 288 | 0;
  E = F;
  I = Q;
  do {
   x = ~~I >>> 0;
   c[E >> 2] = x;
   E = E + 4 | 0;
   I = (I - +(x >>> 0)) * 1.0e9;
  } while (I != 0.0);
  if ((R | 0) > 0) {
   v = F;
   B = E;
   A = R;
   while (1) {
    y = (A | 0) < 29 ? A : 29;
    x = B + -4 | 0;
    if (x >>> 0 < v >>> 0) S = v; else {
     K = x;
     x = 0;
     do {
      J = xv(c[K >> 2] | 0, 0, y | 0) | 0;
      T = qv(J | 0, z | 0, x | 0, 0) | 0;
      J = z;
      U = vv(T | 0, J | 0, 1e9, 0) | 0;
      c[K >> 2] = U;
      x = uv(T | 0, J | 0, 1e9, 0) | 0;
      K = K + -4 | 0;
     } while (K >>> 0 >= v >>> 0);
     if (!x) S = v; else {
      K = v + -4 | 0;
      c[K >> 2] = x;
      S = K;
     }
    }
    K = B;
    while (1) {
     if (K >>> 0 <= S >>> 0) break;
     J = K + -4 | 0;
     if (!(c[J >> 2] | 0)) K = J; else break;
    }
    x = (c[m >> 2] | 0) - y | 0;
    c[m >> 2] = x;
    if ((x | 0) > 0) {
     v = S;
     B = K;
     A = x;
    } else {
     V = S;
     W = K;
     X = x;
     break;
    }
   }
  } else {
   V = F;
   W = E;
   X = R;
  }
  if ((X | 0) < 0) {
   A = ((H + 25 | 0) / 9 | 0) + 1 | 0;
   B = (u | 0) == 102;
   v = V;
   x = W;
   J = X;
   while (1) {
    T = 0 - J | 0;
    U = (T | 0) < 9 ? T : 9;
    if (v >>> 0 < x >>> 0) {
     T = (1 << U) + -1 | 0;
     Y = 1e9 >>> U;
     Z = 0;
     _ = v;
     do {
      $ = c[_ >> 2] | 0;
      c[_ >> 2] = ($ >>> U) + Z;
      Z = O($ & T, Y) | 0;
      _ = _ + 4 | 0;
     } while (_ >>> 0 < x >>> 0);
     _ = (c[v >> 2] | 0) == 0 ? v + 4 | 0 : v;
     if (!Z) {
      aa = _;
      ba = x;
     } else {
      c[x >> 2] = Z;
      aa = _;
      ba = x + 4 | 0;
     }
    } else {
     aa = (c[v >> 2] | 0) == 0 ? v + 4 | 0 : v;
     ba = x;
    }
    _ = B ? F : aa;
    Y = (ba - _ >> 2 | 0) > (A | 0) ? _ + (A << 2) | 0 : ba;
    J = (c[m >> 2] | 0) + U | 0;
    c[m >> 2] = J;
    if ((J | 0) >= 0) {
     ca = aa;
     da = Y;
     break;
    } else {
     v = aa;
     x = Y;
    }
   }
  } else {
   ca = V;
   da = W;
  }
  x = F;
  if (ca >>> 0 < da >>> 0) {
   v = (x - ca >> 2) * 9 | 0;
   J = c[ca >> 2] | 0;
   if (J >>> 0 < 10) ea = v; else {
    A = v;
    v = 10;
    while (1) {
     v = v * 10 | 0;
     B = A + 1 | 0;
     if (J >>> 0 < v >>> 0) {
      ea = B;
      break;
     } else A = B;
    }
   }
  } else ea = 0;
  A = (u | 0) == 103;
  v = (H | 0) != 0;
  J = H - ((u | 0) != 102 ? ea : 0) + ((v & A) << 31 >> 31) | 0;
  if ((J | 0) < (((da - x >> 2) * 9 | 0) + -9 | 0)) {
   B = J + 9216 | 0;
   J = F + 4 + (((B | 0) / 9 | 0) + -1024 << 2) | 0;
   E = (B | 0) % 9 | 0;
   if ((E | 0) < 8) {
    B = E;
    E = 10;
    while (1) {
     Y = E * 10 | 0;
     if ((B | 0) < 7) {
      B = B + 1 | 0;
      E = Y;
     } else {
      fa = Y;
      break;
     }
    }
   } else fa = 10;
   E = c[J >> 2] | 0;
   B = (E >>> 0) % (fa >>> 0) | 0;
   u = (J + 4 | 0) == (da | 0);
   if (u & (B | 0) == 0) {
    ga = J;
    ha = ea;
    ia = ca;
   } else {
    D = (((E >>> 0) / (fa >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
    Y = (fa | 0) / 2 | 0;
    I = B >>> 0 < Y >>> 0 ? .5 : u & (B | 0) == (Y | 0) ? 1.0 : 1.5;
    if (!s) {
     ja = I;
     ka = D;
    } else {
     Y = (a[t >> 0] | 0) == 45;
     ja = Y ? -I : I;
     ka = Y ? -D : D;
    }
    Y = E - B | 0;
    c[J >> 2] = Y;
    if (ka + ja != ka) {
     B = Y + fa | 0;
     c[J >> 2] = B;
     if (B >>> 0 > 999999999) {
      B = ca;
      Y = J;
      while (1) {
       E = Y + -4 | 0;
       c[Y >> 2] = 0;
       if (E >>> 0 < B >>> 0) {
        u = B + -4 | 0;
        c[u >> 2] = 0;
        la = u;
       } else la = B;
       u = (c[E >> 2] | 0) + 1 | 0;
       c[E >> 2] = u;
       if (u >>> 0 > 999999999) {
        B = la;
        Y = E;
       } else {
        ma = la;
        na = E;
        break;
       }
      }
     } else {
      ma = ca;
      na = J;
     }
     Y = (x - ma >> 2) * 9 | 0;
     B = c[ma >> 2] | 0;
     if (B >>> 0 < 10) {
      ga = na;
      ha = Y;
      ia = ma;
     } else {
      E = Y;
      Y = 10;
      while (1) {
       Y = Y * 10 | 0;
       u = E + 1 | 0;
       if (B >>> 0 < Y >>> 0) {
        ga = na;
        ha = u;
        ia = ma;
        break;
       } else E = u;
      }
     }
    } else {
     ga = J;
     ha = ea;
     ia = ca;
    }
   }
   E = ga + 4 | 0;
   oa = ha;
   pa = da >>> 0 > E >>> 0 ? E : da;
   qa = ia;
  } else {
   oa = ea;
   pa = da;
   qa = ca;
  }
  E = pa;
  while (1) {
   if (E >>> 0 <= qa >>> 0) {
    ra = 0;
    break;
   }
   Y = E + -4 | 0;
   if (!(c[Y >> 2] | 0)) E = Y; else {
    ra = 1;
    break;
   }
  }
  J = 0 - oa | 0;
  do if (A) {
   Y = H + ((v ^ 1) & 1) | 0;
   if ((Y | 0) > (oa | 0) & (oa | 0) > -5) {
    sa = i + -1 | 0;
    ta = Y + -1 - oa | 0;
   } else {
    sa = i + -2 | 0;
    ta = Y + -1 | 0;
   }
   Y = h & 8;
   if (!Y) {
    if (ra) {
     B = c[E + -4 >> 2] | 0;
     if (!B) ua = 9; else if (!((B >>> 0) % 10 | 0)) {
      u = 0;
      _ = 10;
      while (1) {
       _ = _ * 10 | 0;
       T = u + 1 | 0;
       if ((B >>> 0) % (_ >>> 0) | 0 | 0) {
        ua = T;
        break;
       } else u = T;
      }
     } else ua = 0;
    } else ua = 9;
    u = ((E - x >> 2) * 9 | 0) + -9 | 0;
    if ((sa | 32 | 0) == 102) {
     _ = u - ua | 0;
     B = (_ | 0) > 0 ? _ : 0;
     va = sa;
     wa = (ta | 0) < (B | 0) ? ta : B;
     xa = 0;
     break;
    } else {
     B = u + oa - ua | 0;
     u = (B | 0) > 0 ? B : 0;
     va = sa;
     wa = (ta | 0) < (u | 0) ? ta : u;
     xa = 0;
     break;
    }
   } else {
    va = sa;
    wa = ta;
    xa = Y;
   }
  } else {
   va = i;
   wa = H;
   xa = h & 8;
  } while (0);
  H = wa | xa;
  x = (H | 0) != 0 & 1;
  v = (va | 32 | 0) == 102;
  if (v) {
   ya = 0;
   za = (oa | 0) > 0 ? oa : 0;
  } else {
   A = (oa | 0) < 0 ? J : oa;
   u = Ud(A, ((A | 0) < 0) << 31 >> 31, q) | 0;
   A = q;
   if ((A - u | 0) < 2) {
    B = u;
    while (1) {
     _ = B + -1 | 0;
     a[_ >> 0] = 48;
     if ((A - _ | 0) < 2) B = _; else {
      Aa = _;
      break;
     }
    }
   } else Aa = u;
   a[Aa + -1 >> 0] = (oa >> 31 & 2) + 43;
   B = Aa + -2 | 0;
   a[B >> 0] = va;
   ya = B;
   za = A - B | 0;
  }
  B = s + 1 + wa + x + za | 0;
  Xd(b, 32, f, B, h);
  Pd(b, t, s);
  Xd(b, 48, f, B, h ^ 65536);
  if (v) {
   J = qa >>> 0 > F >>> 0 ? F : qa;
   _ = n + 9 | 0;
   U = _;
   Z = n + 8 | 0;
   T = J;
   do {
    K = Ud(c[T >> 2] | 0, 0, _) | 0;
    if ((T | 0) == (J | 0)) if ((K | 0) == (_ | 0)) {
     a[Z >> 0] = 48;
     Ba = Z;
    } else Ba = K; else if (K >>> 0 > n >>> 0) {
     Bv(n | 0, 48, K - o | 0) | 0;
     y = K;
     while (1) {
      $ = y + -1 | 0;
      if ($ >>> 0 > n >>> 0) y = $; else {
       Ba = $;
       break;
      }
     }
    } else Ba = K;
    Pd(b, Ba, U - Ba | 0);
    T = T + 4 | 0;
   } while (T >>> 0 <= F >>> 0);
   if (H | 0) Pd(b, 19197, 1);
   if (T >>> 0 < E >>> 0 & (wa | 0) > 0) {
    F = wa;
    U = T;
    while (1) {
     Z = Ud(c[U >> 2] | 0, 0, _) | 0;
     if (Z >>> 0 > n >>> 0) {
      Bv(n | 0, 48, Z - o | 0) | 0;
      J = Z;
      while (1) {
       v = J + -1 | 0;
       if (v >>> 0 > n >>> 0) J = v; else {
        Ca = v;
        break;
       }
      }
     } else Ca = Z;
     Pd(b, Ca, (F | 0) < 9 ? F : 9);
     U = U + 4 | 0;
     J = F + -9 | 0;
     if (!(U >>> 0 < E >>> 0 & (F | 0) > 9)) {
      Da = J;
      break;
     } else F = J;
    }
   } else Da = wa;
   Xd(b, 48, Da + 9 | 0, 9, 0);
  } else {
   F = ra ? E : qa + 4 | 0;
   if ((wa | 0) > -1) {
    U = n + 9 | 0;
    _ = (xa | 0) == 0;
    T = U;
    H = 0 - o | 0;
    J = n + 8 | 0;
    K = wa;
    v = qa;
    while (1) {
     x = Ud(c[v >> 2] | 0, 0, U) | 0;
     if ((x | 0) == (U | 0)) {
      a[J >> 0] = 48;
      Ea = J;
     } else Ea = x;
     do if ((v | 0) == (qa | 0)) {
      x = Ea + 1 | 0;
      Pd(b, Ea, 1);
      if (_ & (K | 0) < 1) {
       Fa = x;
       break;
      }
      Pd(b, 19197, 1);
      Fa = x;
     } else {
      if (Ea >>> 0 <= n >>> 0) {
       Fa = Ea;
       break;
      }
      Bv(n | 0, 48, Ea + H | 0) | 0;
      x = Ea;
      while (1) {
       A = x + -1 | 0;
       if (A >>> 0 > n >>> 0) x = A; else {
        Fa = A;
        break;
       }
      }
     } while (0);
     Z = T - Fa | 0;
     Pd(b, Fa, (K | 0) > (Z | 0) ? Z : K);
     x = K - Z | 0;
     v = v + 4 | 0;
     if (!(v >>> 0 < F >>> 0 & (x | 0) > -1)) {
      Ga = x;
      break;
     } else K = x;
    }
   } else Ga = wa;
   Xd(b, 48, Ga + 18 | 0, 18, 0);
   Pd(b, ya, q - ya | 0);
  }
  Xd(b, 32, f, B, h ^ 8192);
  w = B;
 } while (0);
 l = j;
 return ((w | 0) < (f | 0) ? f : w) | 0;
}

function Md(d, e, f, g, i) {
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0, ka = 0, la = 0, ma = 0, na = 0, oa = 0, pa = 0, qa = 0, ra = 0, sa = 0, ta = 0, ua = 0, va = 0, wa = 0, xa = 0, ya = 0, za = 0, Aa = 0, Ba = 0, Ca = 0, Da = 0, Ea = 0, Fa = 0, Ga = 0, Ha = 0, Ia = 0;
 j = l;
 l = l + 64 | 0;
 k = j + 16 | 0;
 m = j;
 n = j + 24 | 0;
 o = j + 8 | 0;
 p = j + 20 | 0;
 c[k >> 2] = e;
 q = (d | 0) != 0;
 r = n + 40 | 0;
 s = r;
 t = n + 39 | 0;
 n = o + 4 | 0;
 u = 0;
 v = 0;
 w = 0;
 x = e;
 a : while (1) {
  do if ((v | 0) > -1) if ((u | 0) > (2147483647 - v | 0)) {
   c[(Gd() | 0) >> 2] = 75;
   y = -1;
   break;
  } else {
   y = u + v | 0;
   break;
  } else y = v; while (0);
  e = a[x >> 0] | 0;
  if (!(e << 24 >> 24)) {
   A = 86;
   break;
  } else {
   B = e;
   C = x;
  }
  b : while (1) {
   switch (B << 24 >> 24) {
   case 37:
    {
     D = C;
     E = C;
     A = 9;
     break b;
     break;
    }
   case 0:
    {
     F = C;
     G = C;
     break b;
     break;
    }
   default:
    {}
   }
   e = C + 1 | 0;
   c[k >> 2] = e;
   B = a[e >> 0] | 0;
   C = e;
  }
  c : do if ((A | 0) == 9) while (1) {
   A = 0;
   if ((a[E + 1 >> 0] | 0) != 37) {
    F = D;
    G = E;
    break c;
   }
   e = D + 1 | 0;
   H = E + 2 | 0;
   c[k >> 2] = H;
   if ((a[H >> 0] | 0) == 37) {
    D = e;
    E = H;
    A = 9;
   } else {
    F = e;
    G = H;
    break;
   }
  } while (0);
  H = F - x | 0;
  if (q) Pd(d, x, H);
  if (H | 0) {
   u = H;
   v = y;
   x = G;
   continue;
  }
  H = G + 1 | 0;
  e = (a[H >> 0] | 0) + -48 | 0;
  if (e >>> 0 < 10) {
   I = (a[G + 2 >> 0] | 0) == 36;
   J = I ? e : -1;
   K = I ? 1 : w;
   L = I ? G + 3 | 0 : H;
  } else {
   J = -1;
   K = w;
   L = H;
  }
  c[k >> 2] = L;
  H = a[L >> 0] | 0;
  I = (H << 24 >> 24) + -32 | 0;
  if (I >>> 0 > 31 | (1 << I & 75913 | 0) == 0) {
   M = 0;
   N = H;
   O = L;
  } else {
   I = 0;
   e = H;
   H = L;
   while (1) {
    P = 1 << (e << 24 >> 24) + -32 | I;
    Q = H + 1 | 0;
    c[k >> 2] = Q;
    R = a[Q >> 0] | 0;
    S = (R << 24 >> 24) + -32 | 0;
    if (S >>> 0 > 31 | (1 << S & 75913 | 0) == 0) {
     M = P;
     N = R;
     O = Q;
     break;
    } else {
     I = P;
     e = R;
     H = Q;
    }
   }
  }
  if (N << 24 >> 24 == 42) {
   H = O + 1 | 0;
   e = (a[H >> 0] | 0) + -48 | 0;
   if (e >>> 0 < 10) if ((a[O + 2 >> 0] | 0) == 36) {
    c[i + (e << 2) >> 2] = 10;
    T = c[g + ((a[H >> 0] | 0) + -48 << 3) >> 2] | 0;
    U = 1;
    V = O + 3 | 0;
   } else A = 22; else A = 22;
   if ((A | 0) == 22) {
    A = 0;
    if (K | 0) {
     W = -1;
     break;
    }
    if (q) {
     e = (c[f >> 2] | 0) + (4 - 1) & ~(4 - 1);
     I = c[e >> 2] | 0;
     c[f >> 2] = e + 4;
     T = I;
     U = 0;
     V = H;
    } else {
     T = 0;
     U = 0;
     V = H;
    }
   }
   c[k >> 2] = V;
   H = (T | 0) < 0;
   X = H ? 0 - T | 0 : T;
   Y = H ? M | 8192 : M;
   Z = U;
   _ = V;
  } else {
   H = Qd(k) | 0;
   if ((H | 0) < 0) {
    W = -1;
    break;
   }
   X = H;
   Y = M;
   Z = K;
   _ = c[k >> 2] | 0;
  }
  do if ((a[_ >> 0] | 0) == 46) {
   if ((a[_ + 1 >> 0] | 0) != 42) {
    c[k >> 2] = _ + 1;
    H = Qd(k) | 0;
    $ = H;
    aa = c[k >> 2] | 0;
    break;
   }
   H = _ + 2 | 0;
   I = (a[H >> 0] | 0) + -48 | 0;
   if (I >>> 0 < 10) if ((a[_ + 3 >> 0] | 0) == 36) {
    c[i + (I << 2) >> 2] = 10;
    I = c[g + ((a[H >> 0] | 0) + -48 << 3) >> 2] | 0;
    e = _ + 4 | 0;
    c[k >> 2] = e;
    $ = I;
    aa = e;
    break;
   }
   if (Z | 0) {
    W = -1;
    break a;
   }
   if (q) {
    e = (c[f >> 2] | 0) + (4 - 1) & ~(4 - 1);
    I = c[e >> 2] | 0;
    c[f >> 2] = e + 4;
    ba = I;
   } else ba = 0;
   c[k >> 2] = H;
   $ = ba;
   aa = H;
  } else {
   $ = -1;
   aa = _;
  } while (0);
  H = 0;
  I = aa;
  while (1) {
   if (((a[I >> 0] | 0) + -65 | 0) >>> 0 > 57) {
    W = -1;
    break a;
   }
   ca = I + 1 | 0;
   c[k >> 2] = ca;
   da = a[(a[I >> 0] | 0) + -65 + (12524 + (H * 58 | 0)) >> 0] | 0;
   ea = da & 255;
   if ((ea + -1 | 0) >>> 0 < 8) {
    H = ea;
    I = ca;
   } else break;
  }
  if (!(da << 24 >> 24)) {
   W = -1;
   break;
  }
  e = (J | 0) > -1;
  do if (da << 24 >> 24 == 19) if (e) {
   W = -1;
   break a;
  } else A = 48; else {
   if (e) {
    c[i + (J << 2) >> 2] = ea;
    Q = g + (J << 3) | 0;
    R = c[Q + 4 >> 2] | 0;
    P = m;
    c[P >> 2] = c[Q >> 2];
    c[P + 4 >> 2] = R;
    A = 48;
    break;
   }
   if (!q) {
    W = 0;
    break a;
   }
   Rd(m, ea, f);
  } while (0);
  if ((A | 0) == 48) {
   A = 0;
   if (!q) {
    u = 0;
    v = y;
    w = Z;
    x = ca;
    continue;
   }
  }
  e = a[I >> 0] | 0;
  R = (H | 0) != 0 & (e & 15 | 0) == 3 ? e & -33 : e;
  e = Y & -65537;
  P = (Y & 8192 | 0) == 0 ? Y : e;
  d : do switch (R | 0) {
  case 110:
   {
    switch ((H & 255) << 24 >> 24) {
    case 0:
     {
      c[c[m >> 2] >> 2] = y;
      u = 0;
      v = y;
      w = Z;
      x = ca;
      continue a;
      break;
     }
    case 1:
     {
      c[c[m >> 2] >> 2] = y;
      u = 0;
      v = y;
      w = Z;
      x = ca;
      continue a;
      break;
     }
    case 2:
     {
      Q = c[m >> 2] | 0;
      c[Q >> 2] = y;
      c[Q + 4 >> 2] = ((y | 0) < 0) << 31 >> 31;
      u = 0;
      v = y;
      w = Z;
      x = ca;
      continue a;
      break;
     }
    case 3:
     {
      b[c[m >> 2] >> 1] = y;
      u = 0;
      v = y;
      w = Z;
      x = ca;
      continue a;
      break;
     }
    case 4:
     {
      a[c[m >> 2] >> 0] = y;
      u = 0;
      v = y;
      w = Z;
      x = ca;
      continue a;
      break;
     }
    case 6:
     {
      c[c[m >> 2] >> 2] = y;
      u = 0;
      v = y;
      w = Z;
      x = ca;
      continue a;
      break;
     }
    case 7:
     {
      Q = c[m >> 2] | 0;
      c[Q >> 2] = y;
      c[Q + 4 >> 2] = ((y | 0) < 0) << 31 >> 31;
      u = 0;
      v = y;
      w = Z;
      x = ca;
      continue a;
      break;
     }
    default:
     {
      u = 0;
      v = y;
      w = Z;
      x = ca;
      continue a;
     }
    }
    break;
   }
  case 112:
   {
    fa = 120;
    ga = $ >>> 0 > 8 ? $ : 8;
    ha = P | 8;
    A = 60;
    break;
   }
  case 88:
  case 120:
   {
    fa = R;
    ga = $;
    ha = P;
    A = 60;
    break;
   }
  case 111:
   {
    Q = m;
    S = c[Q >> 2] | 0;
    ia = c[Q + 4 >> 2] | 0;
    Q = Td(S, ia, r) | 0;
    ja = s - Q | 0;
    ka = Q;
    la = 0;
    ma = 12988;
    na = (P & 8 | 0) == 0 | ($ | 0) > (ja | 0) ? $ : ja + 1 | 0;
    oa = P;
    pa = S;
    qa = ia;
    A = 66;
    break;
   }
  case 105:
  case 100:
   {
    ia = m;
    S = c[ia >> 2] | 0;
    ja = c[ia + 4 >> 2] | 0;
    if ((ja | 0) < 0) {
     ia = rv(0, 0, S | 0, ja | 0) | 0;
     Q = z;
     ra = m;
     c[ra >> 2] = ia;
     c[ra + 4 >> 2] = Q;
     sa = 1;
     ta = 12988;
     ua = ia;
     va = Q;
     A = 65;
     break d;
    } else {
     sa = (P & 2049 | 0) != 0 & 1;
     ta = (P & 2048 | 0) == 0 ? ((P & 1 | 0) == 0 ? 12988 : 12990) : 12989;
     ua = S;
     va = ja;
     A = 65;
     break d;
    }
    break;
   }
  case 117:
   {
    ja = m;
    sa = 0;
    ta = 12988;
    ua = c[ja >> 2] | 0;
    va = c[ja + 4 >> 2] | 0;
    A = 65;
    break;
   }
  case 99:
   {
    a[t >> 0] = c[m >> 2];
    wa = t;
    xa = 0;
    ya = 12988;
    za = r;
    Aa = 1;
    Ba = e;
    break;
   }
  case 109:
   {
    Ca = Vd(c[(Gd() | 0) >> 2] | 0) | 0;
    A = 70;
    break;
   }
  case 115:
   {
    ja = c[m >> 2] | 0;
    Ca = ja | 0 ? ja : 12998;
    A = 70;
    break;
   }
  case 67:
   {
    c[o >> 2] = c[m >> 2];
    c[n >> 2] = 0;
    c[m >> 2] = o;
    Da = -1;
    Ea = o;
    A = 74;
    break;
   }
  case 83:
   {
    ja = c[m >> 2] | 0;
    if (!$) {
     Xd(d, 32, X, 0, P);
     Fa = 0;
     A = 83;
    } else {
     Da = $;
     Ea = ja;
     A = 74;
    }
    break;
   }
  case 65:
  case 71:
  case 70:
  case 69:
  case 97:
  case 103:
  case 102:
  case 101:
   {
    u = Zd(d, +h[m >> 3], X, $, P, R) | 0;
    v = y;
    w = Z;
    x = ca;
    continue a;
    break;
   }
  default:
   {
    wa = x;
    xa = 0;
    ya = 12988;
    za = r;
    Aa = $;
    Ba = P;
   }
  } while (0);
  e : do if ((A | 0) == 60) {
   A = 0;
   R = m;
   H = c[R >> 2] | 0;
   I = c[R + 4 >> 2] | 0;
   R = Sd(H, I, r, fa & 32) | 0;
   ja = (ha & 8 | 0) == 0 | (H | 0) == 0 & (I | 0) == 0;
   ka = R;
   la = ja ? 0 : 2;
   ma = ja ? 12988 : 12988 + (fa >> 4) | 0;
   na = ga;
   oa = ha;
   pa = H;
   qa = I;
   A = 66;
  } else if ((A | 0) == 65) {
   A = 0;
   ka = Ud(ua, va, r) | 0;
   la = sa;
   ma = ta;
   na = $;
   oa = P;
   pa = ua;
   qa = va;
   A = 66;
  } else if ((A | 0) == 70) {
   A = 0;
   I = Wd(Ca, 0, $) | 0;
   H = (I | 0) == 0;
   wa = Ca;
   xa = 0;
   ya = 12988;
   za = H ? Ca + $ | 0 : I;
   Aa = H ? $ : I - Ca | 0;
   Ba = e;
  } else if ((A | 0) == 74) {
   A = 0;
   I = Ea;
   H = 0;
   ja = 0;
   while (1) {
    R = c[I >> 2] | 0;
    if (!R) {
     Ga = H;
     Ha = ja;
     break;
    }
    S = Yd(p, R) | 0;
    if ((S | 0) < 0 | S >>> 0 > (Da - H | 0) >>> 0) {
     Ga = H;
     Ha = S;
     break;
    }
    R = S + H | 0;
    if (Da >>> 0 > R >>> 0) {
     I = I + 4 | 0;
     H = R;
     ja = S;
    } else {
     Ga = R;
     Ha = S;
     break;
    }
   }
   if ((Ha | 0) < 0) {
    W = -1;
    break a;
   }
   Xd(d, 32, X, Ga, P);
   if (!Ga) {
    Fa = 0;
    A = 83;
   } else {
    ja = Ea;
    H = 0;
    while (1) {
     I = c[ja >> 2] | 0;
     if (!I) {
      Fa = Ga;
      A = 83;
      break e;
     }
     S = Yd(p, I) | 0;
     H = S + H | 0;
     if ((H | 0) > (Ga | 0)) {
      Fa = Ga;
      A = 83;
      break e;
     }
     Pd(d, p, S);
     if (H >>> 0 >= Ga >>> 0) {
      Fa = Ga;
      A = 83;
      break;
     } else ja = ja + 4 | 0;
    }
   }
  } while (0);
  if ((A | 0) == 66) {
   A = 0;
   e = (pa | 0) != 0 | (qa | 0) != 0;
   ja = (na | 0) != 0 | e;
   H = s - ka + ((e ^ 1) & 1) | 0;
   wa = ja ? ka : r;
   xa = la;
   ya = ma;
   za = r;
   Aa = ja ? ((na | 0) > (H | 0) ? na : H) : na;
   Ba = (na | 0) > -1 ? oa & -65537 : oa;
  } else if ((A | 0) == 83) {
   A = 0;
   Xd(d, 32, X, Fa, P ^ 8192);
   u = (X | 0) > (Fa | 0) ? X : Fa;
   v = y;
   w = Z;
   x = ca;
   continue;
  }
  H = za - wa | 0;
  ja = (Aa | 0) < (H | 0) ? H : Aa;
  e = ja + xa | 0;
  S = (X | 0) < (e | 0) ? e : X;
  Xd(d, 32, S, e, Ba);
  Pd(d, ya, xa);
  Xd(d, 48, S, e, Ba ^ 65536);
  Xd(d, 48, ja, H, 0);
  Pd(d, wa, H);
  Xd(d, 32, S, e, Ba ^ 8192);
  u = S;
  v = y;
  w = Z;
  x = ca;
 }
 f : do if ((A | 0) == 86) if (!d) if (!w) W = 0; else {
  ca = 1;
  while (1) {
   x = c[i + (ca << 2) >> 2] | 0;
   if (!x) {
    Ia = ca;
    break;
   }
   Rd(g + (ca << 3) | 0, x, f);
   x = ca + 1 | 0;
   if ((ca | 0) < 9) ca = x; else {
    Ia = x;
    break;
   }
  }
  if ((Ia | 0) < 10) {
   ca = Ia;
   while (1) {
    if (c[i + (ca << 2) >> 2] | 0) {
     W = -1;
     break f;
    }
    if ((ca | 0) < 9) ca = ca + 1 | 0; else {
     W = 1;
     break;
    }
   }
  } else W = 1;
 } else W = y; while (0);
 l = j;
 return W | 0;
}

function xu(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0;
 f = l;
 l = l + 48 | 0;
 g = f + 36 | 0;
 h = f + 24 | 0;
 i = f + 8 | 0;
 j = f;
 a : do if ((b | 0) == (d | 0)) k = b; else if ((a[b >> 0] | 0) == 78) {
  m = Js(b + 1 | 0, d, g) | 0;
  b : do if ((m | 0) != (d | 0)) {
   n = e + 52 | 0;
   c[n >> 2] = 0;
   switch (a[m >> 0] | 0) {
   case 82:
    {
     o = 1;
     p = 6;
     break;
    }
   case 79:
    {
     o = 2;
     p = 6;
     break;
    }
   default:
    q = m;
   }
   if ((p | 0) == 6) {
    c[n >> 2] = o;
    q = m + 1 | 0;
   }
   n = e + 4 | 0;
   r = c[n >> 2] | 0;
   if (r >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    c[r >> 2] = 0;
    c[r + 4 >> 2] = 0;
    c[r + 8 >> 2] = 0;
    c[r + 12 >> 2] = 0;
    c[r + 16 >> 2] = 0;
    c[r + 20 >> 2] = 0;
    ju(r);
    c[n >> 2] = (c[n >> 2] | 0) + 24;
   } else ku(e);
   if ((d - q | 0) > 1) if ((a[q >> 0] | 0) == 83) if ((a[q + 1 >> 0] | 0) == 116) {
    Nt((c[n >> 2] | 0) + -24 | 0, 20284);
    s = q + 2 | 0;
   } else s = q; else s = q; else s = q;
   if ((s | 0) == (d | 0)) {
    r = c[n >> 2] | 0;
    t = r + -24 | 0;
    u = r;
    while (1) {
     if ((u | 0) == (t | 0)) break b;
     r = u + -24 | 0;
     c[n >> 2] = r;
     ns(r);
     u = c[n >> 2] | 0;
    }
   }
   u = h + 11 | 0;
   t = h + 4 | 0;
   r = e + 12 | 0;
   v = e + 20 | 0;
   w = e + 24 | 0;
   x = i + 12 | 0;
   y = i + 4 | 0;
   z = i + 8 | 0;
   A = e + 16 | 0;
   B = i + 12 | 0;
   C = i + 4 | 0;
   D = i + 8 | 0;
   E = i + 11 | 0;
   F = i + 4 | 0;
   G = i + 11 | 0;
   H = i + 4 | 0;
   I = i + 12 | 0;
   J = i + 4 | 0;
   K = i + 8 | 0;
   L = i + 12 | 0;
   M = i + 4 | 0;
   N = i + 8 | 0;
   O = i + 11 | 0;
   P = i + 4 | 0;
   Q = i + 12 | 0;
   R = i + 4 | 0;
   S = i + 8 | 0;
   T = i + 11 | 0;
   U = i + 4 | 0;
   V = 0;
   W = s;
   c : while (1) {
    X = W;
    d : while (1) {
     Y = a[X >> 0] | 0;
     if (Y << 24 >> 24 == 69) break c;
     switch (Y << 24 >> 24 | 0) {
     case 83:
      {
       p = 21;
       break d;
       break;
      }
     case 84:
      {
       p = 37;
       break d;
       break;
      }
     case 68:
      {
       p = 51;
       break d;
       break;
      }
     case 73:
      break;
     case 76:
      {
       Y = X + 1 | 0;
       if ((Y | 0) == (d | 0)) break b; else {
        X = Y;
        continue d;
       }
       break;
      }
     default:
      break d;
     }
     Y = Zs(X, d, e) | 0;
     if ((Y | 0) == (X | 0) | (Y | 0) == (d | 0)) break b;
     _s(h, (c[n >> 2] | 0) + -24 | 0);
     Z = c[n >> 2] | 0;
     _ = Z + -24 | 0;
     $ = Z;
     while (1) {
      if (($ | 0) == (_ | 0)) break;
      aa = $ + -24 | 0;
      c[n >> 2] = aa;
      ns(aa);
      $ = c[n >> 2] | 0;
     }
     $ = a[u >> 0] | 0;
     _ = $ << 24 >> 24 < 0;
     qs(Z + -48 | 0, _ ? c[h >> 2] | 0 : h, _ ? c[t >> 2] | 0 : $ & 255) | 0;
     $ = (c[n >> 2] | 0) + -24 | 0;
     c[j >> 2] = c[r >> 2];
     Rs(i, $, j);
     $ = c[v >> 2] | 0;
     if ($ >>> 0 < (c[w >> 2] | 0) >>> 0) {
      c[$ >> 2] = 0;
      _ = $ + 4 | 0;
      c[_ >> 2] = 0;
      aa = c[x >> 2] | 0;
      c[$ + 8 >> 2] = 0;
      c[$ + 12 >> 2] = aa;
      c[$ >> 2] = c[i >> 2];
      c[_ >> 2] = c[y >> 2];
      c[$ + 8 >> 2] = c[z >> 2];
      c[z >> 2] = 0;
      c[y >> 2] = 0;
      c[i >> 2] = 0;
      c[v >> 2] = (c[v >> 2] | 0) + 16;
     } else Ss(A, i);
     os(i);
     Es(h);
     X = Y;
    }
    e : do if ((p | 0) == 21) {
     p = 0;
     $ = X + 1 | 0;
     if (($ | 0) != (d | 0)) if ((a[$ >> 0] | 0) == 116) break;
     $ = gt(X, d, e) | 0;
     if (($ | 0) == (X | 0) | ($ | 0) == (d | 0)) break b;
     _s(h, (c[n >> 2] | 0) + -24 | 0);
     _ = c[n >> 2] | 0;
     aa = _ + -24 | 0;
     ba = _;
     while (1) {
      if ((ba | 0) == (aa | 0)) break;
      ca = ba + -24 | 0;
      c[n >> 2] = ca;
      ns(ca);
      ba = c[n >> 2] | 0;
     }
     ba = _ + -48 | 0;
     aa = a[ba + 11 >> 0] | 0;
     if (aa << 24 >> 24 < 0) da = c[_ + -44 >> 2] | 0; else da = aa & 255;
     if (!da) Bu(ba, h); else {
      mt(i, 18980, h);
      ba = a[G >> 0] | 0;
      aa = ba << 24 >> 24 < 0;
      qs((c[n >> 2] | 0) + -24 | 0, aa ? c[i >> 2] | 0 : i, aa ? c[H >> 2] | 0 : ba & 255) | 0;
      Es(i);
      ba = (c[n >> 2] | 0) + -24 | 0;
      c[j >> 2] = c[r >> 2];
      Rs(i, ba, j);
      ba = c[v >> 2] | 0;
      if (ba >>> 0 < (c[w >> 2] | 0) >>> 0) {
       c[ba >> 2] = 0;
       aa = ba + 4 | 0;
       c[aa >> 2] = 0;
       Y = c[I >> 2] | 0;
       c[ba + 8 >> 2] = 0;
       c[ba + 12 >> 2] = Y;
       c[ba >> 2] = c[i >> 2];
       c[aa >> 2] = c[J >> 2];
       c[ba + 8 >> 2] = c[K >> 2];
       c[K >> 2] = 0;
       c[J >> 2] = 0;
       c[i >> 2] = 0;
       c[v >> 2] = (c[v >> 2] | 0) + 16;
      } else Ss(A, i);
      os(i);
     }
     Es(h);
     V = 1;
     W = $;
     continue c;
    } else if ((p | 0) == 37) {
     p = 0;
     ba = Ys(X, d, e) | 0;
     if ((ba | 0) == (X | 0) | (ba | 0) == (d | 0)) break b;
     _s(h, (c[n >> 2] | 0) + -24 | 0);
     aa = c[n >> 2] | 0;
     Y = aa + -24 | 0;
     Z = aa;
     while (1) {
      if ((Z | 0) == (Y | 0)) break;
      ca = Z + -24 | 0;
      c[n >> 2] = ca;
      ns(ca);
      Z = c[n >> 2] | 0;
     }
     Z = aa + -48 | 0;
     Y = a[Z + 11 >> 0] | 0;
     if (Y << 24 >> 24 < 0) ea = c[aa + -44 >> 2] | 0; else ea = Y & 255;
     if (!ea) Bu(Z, h); else {
      mt(i, 18980, h);
      Z = a[O >> 0] | 0;
      Y = Z << 24 >> 24 < 0;
      qs((c[n >> 2] | 0) + -24 | 0, Y ? c[i >> 2] | 0 : i, Y ? c[P >> 2] | 0 : Z & 255) | 0;
      Es(i);
     }
     Z = (c[n >> 2] | 0) + -24 | 0;
     c[j >> 2] = c[r >> 2];
     Rs(i, Z, j);
     Z = c[v >> 2] | 0;
     if (Z >>> 0 < (c[w >> 2] | 0) >>> 0) {
      c[Z >> 2] = 0;
      Y = Z + 4 | 0;
      c[Y >> 2] = 0;
      $ = c[L >> 2] | 0;
      c[Z + 8 >> 2] = 0;
      c[Z + 12 >> 2] = $;
      c[Z >> 2] = c[i >> 2];
      c[Y >> 2] = c[M >> 2];
      c[Z + 8 >> 2] = c[N >> 2];
      c[N >> 2] = 0;
      c[M >> 2] = 0;
      c[i >> 2] = 0;
      c[v >> 2] = (c[v >> 2] | 0) + 16;
     } else Ss(A, i);
     os(i);
     Es(h);
     V = 1;
     W = ba;
     continue c;
    } else if ((p | 0) == 51) {
     p = 0;
     Z = X + 1 | 0;
     if ((Z | 0) != (d | 0)) switch (a[Z >> 0] | 0) {
     case 84:
     case 116:
      break;
     default:
      break e;
     }
     Z = ht(X, d, e) | 0;
     if ((Z | 0) == (X | 0) | (Z | 0) == (d | 0)) break b;
     _s(h, (c[n >> 2] | 0) + -24 | 0);
     Y = c[n >> 2] | 0;
     $ = Y + -24 | 0;
     _ = Y;
     while (1) {
      if ((_ | 0) == ($ | 0)) break;
      ca = _ + -24 | 0;
      c[n >> 2] = ca;
      ns(ca);
      _ = c[n >> 2] | 0;
     }
     _ = Y + -48 | 0;
     $ = a[_ + 11 >> 0] | 0;
     if ($ << 24 >> 24 < 0) fa = c[Y + -44 >> 2] | 0; else fa = $ & 255;
     if (!fa) Bu(_, h); else {
      mt(i, 18980, h);
      _ = a[T >> 0] | 0;
      $ = _ << 24 >> 24 < 0;
      qs((c[n >> 2] | 0) + -24 | 0, $ ? c[i >> 2] | 0 : i, $ ? c[U >> 2] | 0 : _ & 255) | 0;
      Es(i);
     }
     _ = (c[n >> 2] | 0) + -24 | 0;
     c[j >> 2] = c[r >> 2];
     Rs(i, _, j);
     _ = c[v >> 2] | 0;
     if (_ >>> 0 < (c[w >> 2] | 0) >>> 0) {
      c[_ >> 2] = 0;
      $ = _ + 4 | 0;
      c[$ >> 2] = 0;
      ba = c[Q >> 2] | 0;
      c[_ + 8 >> 2] = 0;
      c[_ + 12 >> 2] = ba;
      c[_ >> 2] = c[i >> 2];
      c[$ >> 2] = c[R >> 2];
      c[_ + 8 >> 2] = c[S >> 2];
      c[S >> 2] = 0;
      c[R >> 2] = 0;
      c[i >> 2] = 0;
      c[v >> 2] = (c[v >> 2] | 0) + 16;
     } else Ss(A, i);
     os(i);
     Es(h);
     V = 1;
     W = Z;
     continue c;
    } while (0);
    _ = Tt(X, d, e) | 0;
    if ((_ | 0) == (X | 0) | (_ | 0) == (d | 0)) break b;
    _s(h, (c[n >> 2] | 0) + -24 | 0);
    $ = c[n >> 2] | 0;
    ba = $ + -24 | 0;
    aa = $;
    while (1) {
     if ((aa | 0) == (ba | 0)) break;
     ca = aa + -24 | 0;
     c[n >> 2] = ca;
     ns(ca);
     aa = c[n >> 2] | 0;
    }
    aa = $ + -48 | 0;
    ba = a[aa + 11 >> 0] | 0;
    if (ba << 24 >> 24 < 0) ga = c[$ + -44 >> 2] | 0; else ga = ba & 255;
    if (!ga) Bu(aa, h); else {
     mt(i, 18980, h);
     aa = a[E >> 0] | 0;
     ba = aa << 24 >> 24 < 0;
     qs((c[n >> 2] | 0) + -24 | 0, ba ? c[i >> 2] | 0 : i, ba ? c[F >> 2] | 0 : aa & 255) | 0;
     Es(i);
    }
    aa = (c[n >> 2] | 0) + -24 | 0;
    c[j >> 2] = c[r >> 2];
    Rs(i, aa, j);
    aa = c[v >> 2] | 0;
    if (aa >>> 0 < (c[w >> 2] | 0) >>> 0) {
     c[aa >> 2] = 0;
     ba = aa + 4 | 0;
     c[ba >> 2] = 0;
     ca = c[B >> 2] | 0;
     c[aa + 8 >> 2] = 0;
     c[aa + 12 >> 2] = ca;
     c[aa >> 2] = c[i >> 2];
     c[ba >> 2] = c[C >> 2];
     c[aa + 8 >> 2] = c[D >> 2];
     c[D >> 2] = 0;
     c[C >> 2] = 0;
     c[i >> 2] = 0;
     c[v >> 2] = (c[v >> 2] | 0) + 16;
    } else Ss(A, i);
    os(i);
    Es(h);
    V = 1;
    W = _;
   }
   W = X + 1 | 0;
   c[e + 48 >> 2] = c[g >> 2];
   f : do if (V) {
    A = c[v >> 2] | 0;
    if ((c[e + 16 >> 2] | 0) != (A | 0)) {
     C = A + -16 | 0;
     D = A;
     while (1) {
      if ((D | 0) == (C | 0)) break f;
      A = D + -16 | 0;
      c[v >> 2] = A;
      os(A);
      D = c[v >> 2] | 0;
     }
    }
   } while (0);
   k = W;
   break a;
  } while (0);
  k = b;
 } else k = b; while (0);
 l = f;
 return k | 0;
}

function xt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0;
 f = l;
 l = l + 32 | 0;
 g = f + 12 | 0;
 h = f;
 i = d;
 a : do if ((i - b | 0) > 2) {
  if ((a[b >> 0] | 0) == 103) {
   j = (a[b + 1 >> 0] | 0) == 115;
   k = j;
   m = j ? b + 2 | 0 : b;
  } else {
   k = 0;
   m = b;
  }
  j = Pt(m, d, e) | 0;
  if ((j | 0) != (m | 0)) {
   if (!k) {
    n = j;
    break;
   }
   o = c[e + 4 >> 2] | 0;
   if ((c[e >> 2] | 0) == (o | 0)) {
    n = b;
    break;
   }
   Ls(o + -24 | 0, 0, 18980) | 0;
   n = j;
   break;
  }
  if ((i - m | 0) > 2) if ((a[m >> 0] | 0) == 115) if ((a[m + 1 >> 0] | 0) == 114) {
   j = m + 2 | 0;
   if ((a[j >> 0] | 0) == 78) {
    o = m + 3 | 0;
    p = Qt(o, d, e) | 0;
    if ((p | 0) == (o | 0) | (p | 0) == (d | 0)) {
     n = b;
     break;
    }
    o = Zs(p, d, e) | 0;
    q = e + 4 | 0;
    do if ((o | 0) == (p | 0)) {
     r = p;
     s = e;
    } else {
     t = c[q >> 2] | 0;
     if (((t - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      n = b;
      break a;
     }
     _s(g, t + -24 | 0);
     t = c[q >> 2] | 0;
     u = t + -24 | 0;
     v = t;
     while (1) {
      if ((v | 0) == (u | 0)) break;
      w = v + -24 | 0;
      c[q >> 2] = w;
      ns(w);
      v = c[q >> 2] | 0;
     }
     v = a[g + 11 >> 0] | 0;
     u = v << 24 >> 24 < 0;
     qs(t + -48 | 0, u ? c[g >> 2] | 0 : g, u ? c[g + 4 >> 2] | 0 : v & 255) | 0;
     if ((o | 0) != (d | 0)) {
      Es(g);
      r = o;
      s = e;
      break;
     }
     v = c[q >> 2] | 0;
     u = v + -24 | 0;
     w = v;
     while (1) {
      if ((w | 0) == (u | 0)) break;
      v = w + -24 | 0;
      c[q >> 2] = v;
      ns(v);
      w = c[q >> 2] | 0;
     }
     Es(g);
     n = b;
     break a;
    } while (0);
    o = h + 11 | 0;
    p = h + 4 | 0;
    w = r;
    while (1) {
     if ((a[w >> 0] | 0) == 69) break;
     u = Rt(w, d, e) | 0;
     if ((u | 0) == (w | 0) | (u | 0) == (d | 0)) {
      n = b;
      break a;
     }
     t = c[q >> 2] | 0;
     if (((t - (c[s >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      n = b;
      break a;
     }
     _s(g, t + -24 | 0);
     t = c[q >> 2] | 0;
     v = t + -24 | 0;
     x = t;
     while (1) {
      if ((x | 0) == (v | 0)) break;
      t = x + -24 | 0;
      c[q >> 2] = t;
      ns(t);
      x = c[q >> 2] | 0;
     }
     Ls(g, 0, 18980) | 0;
     c[h >> 2] = c[g >> 2];
     c[h + 4 >> 2] = c[g + 4 >> 2];
     c[h + 8 >> 2] = c[g + 8 >> 2];
     x = 0;
     while (1) {
      if ((x | 0) == 3) break;
      c[g + (x << 2) >> 2] = 0;
      x = x + 1 | 0;
     }
     x = a[o >> 0] | 0;
     v = x << 24 >> 24 < 0;
     qs((c[q >> 2] | 0) + -24 | 0, v ? c[h >> 2] | 0 : h, v ? c[p >> 2] | 0 : x & 255) | 0;
     Es(h);
     Es(g);
     w = u;
    }
    p = w + 1 | 0;
    o = Pt(p, d, e) | 0;
    if ((o | 0) == (p | 0)) {
     p = c[q >> 2] | 0;
     if ((c[e >> 2] | 0) == (p | 0)) {
      n = b;
      break;
     }
     x = p + -24 | 0;
     v = p;
     while (1) {
      if ((v | 0) == (x | 0)) {
       n = b;
       break a;
      }
      p = v + -24 | 0;
      c[q >> 2] = p;
      ns(p);
      v = c[q >> 2] | 0;
     }
    }
    v = c[q >> 2] | 0;
    if (((v - (c[s >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     n = b;
     break;
    }
    _s(g, v + -24 | 0);
    v = c[q >> 2] | 0;
    x = v + -24 | 0;
    w = v;
    while (1) {
     if ((w | 0) == (x | 0)) break;
     v = w + -24 | 0;
     c[q >> 2] = v;
     ns(v);
     w = c[q >> 2] | 0;
    }
    Ls(g, 0, 18980) | 0;
    c[h >> 2] = c[g >> 2];
    c[h + 4 >> 2] = c[g + 4 >> 2];
    c[h + 8 >> 2] = c[g + 8 >> 2];
    w = 0;
    while (1) {
     if ((w | 0) == 3) break;
     c[g + (w << 2) >> 2] = 0;
     w = w + 1 | 0;
    }
    w = a[h + 11 >> 0] | 0;
    x = w << 24 >> 24 < 0;
    qs((c[q >> 2] | 0) + -24 | 0, x ? c[h >> 2] | 0 : h, x ? c[h + 4 >> 2] | 0 : w & 255) | 0;
    Es(h);
    Es(g);
    n = o;
    break;
   }
   w = Qt(j, d, e) | 0;
   if ((w | 0) != (j | 0)) {
    x = Zs(w, d, e) | 0;
    if ((x | 0) == (w | 0)) y = w; else {
     w = e + 4 | 0;
     v = c[w >> 2] | 0;
     if (((v - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      n = b;
      break;
     }
     _s(g, v + -24 | 0);
     v = c[w >> 2] | 0;
     p = v + -24 | 0;
     t = v;
     while (1) {
      if ((t | 0) == (p | 0)) break;
      z = t + -24 | 0;
      c[w >> 2] = z;
      ns(z);
      t = c[w >> 2] | 0;
     }
     w = a[g + 11 >> 0] | 0;
     t = w << 24 >> 24 < 0;
     qs(v + -48 | 0, t ? c[g >> 2] | 0 : g, t ? c[g + 4 >> 2] | 0 : w & 255) | 0;
     Es(g);
     y = x;
    }
    w = Pt(y, d, e) | 0;
    if ((w | 0) == (y | 0)) {
     t = e + 4 | 0;
     p = c[t >> 2] | 0;
     if ((c[e >> 2] | 0) == (p | 0)) {
      n = b;
      break;
     }
     o = p + -24 | 0;
     q = p;
     while (1) {
      if ((q | 0) == (o | 0)) {
       n = b;
       break a;
      }
      p = q + -24 | 0;
      c[t >> 2] = p;
      ns(p);
      q = c[t >> 2] | 0;
     }
    }
    t = e + 4 | 0;
    q = c[t >> 2] | 0;
    if (((q - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     n = b;
     break;
    }
    _s(g, q + -24 | 0);
    q = c[t >> 2] | 0;
    o = q + -24 | 0;
    x = q;
    while (1) {
     if ((x | 0) == (o | 0)) break;
     q = x + -24 | 0;
     c[t >> 2] = q;
     ns(q);
     x = c[t >> 2] | 0;
    }
    Ls(g, 0, 18980) | 0;
    c[h >> 2] = c[g >> 2];
    c[h + 4 >> 2] = c[g + 4 >> 2];
    c[h + 8 >> 2] = c[g + 8 >> 2];
    x = 0;
    while (1) {
     if ((x | 0) == 3) break;
     c[g + (x << 2) >> 2] = 0;
     x = x + 1 | 0;
    }
    x = a[h + 11 >> 0] | 0;
    o = x << 24 >> 24 < 0;
    qs((c[t >> 2] | 0) + -24 | 0, o ? c[h >> 2] | 0 : h, o ? c[h + 4 >> 2] | 0 : x & 255) | 0;
    Es(h);
    Es(g);
    n = w;
    break;
   }
   x = Rt(j, d, e) | 0;
   if ((x | 0) == (j | 0) | (x | 0) == (d | 0)) n = b; else {
    if (k) {
     o = e + 4 | 0;
     q = c[o >> 2] | 0;
     if ((c[e >> 2] | 0) == (q | 0)) {
      n = b;
      break;
     }
     Ls(q + -24 | 0, 0, 18980) | 0;
     A = o;
    } else A = e + 4 | 0;
    o = h + 11 | 0;
    q = h + 4 | 0;
    v = x;
    while (1) {
     if ((a[v >> 0] | 0) == 69) break;
     x = Rt(v, d, e) | 0;
     if ((x | 0) == (v | 0) | (x | 0) == (d | 0)) {
      n = b;
      break a;
     }
     p = c[A >> 2] | 0;
     if (((p - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      n = b;
      break a;
     }
     _s(g, p + -24 | 0);
     p = c[A >> 2] | 0;
     z = p + -24 | 0;
     B = p;
     while (1) {
      if ((B | 0) == (z | 0)) break;
      p = B + -24 | 0;
      c[A >> 2] = p;
      ns(p);
      B = c[A >> 2] | 0;
     }
     Ls(g, 0, 18980) | 0;
     c[h >> 2] = c[g >> 2];
     c[h + 4 >> 2] = c[g + 4 >> 2];
     c[h + 8 >> 2] = c[g + 8 >> 2];
     B = 0;
     while (1) {
      if ((B | 0) == 3) break;
      c[g + (B << 2) >> 2] = 0;
      B = B + 1 | 0;
     }
     B = a[o >> 0] | 0;
     z = B << 24 >> 24 < 0;
     qs((c[A >> 2] | 0) + -24 | 0, z ? c[h >> 2] | 0 : h, z ? c[q >> 2] | 0 : B & 255) | 0;
     Es(h);
     Es(g);
     v = x;
    }
    q = v + 1 | 0;
    o = Pt(q, d, e) | 0;
    if ((o | 0) == (q | 0)) {
     q = c[A >> 2] | 0;
     if ((c[e >> 2] | 0) == (q | 0)) {
      n = b;
      break;
     }
     j = q + -24 | 0;
     w = q;
     while (1) {
      if ((w | 0) == (j | 0)) {
       n = b;
       break a;
      }
      q = w + -24 | 0;
      c[A >> 2] = q;
      ns(q);
      w = c[A >> 2] | 0;
     }
    }
    w = c[A >> 2] | 0;
    if (((w - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) n = b; else {
     _s(g, w + -24 | 0);
     w = c[A >> 2] | 0;
     j = w + -24 | 0;
     v = w;
     while (1) {
      if ((v | 0) == (j | 0)) break;
      w = v + -24 | 0;
      c[A >> 2] = w;
      ns(w);
      v = c[A >> 2] | 0;
     }
     Ls(g, 0, 18980) | 0;
     c[h >> 2] = c[g >> 2];
     c[h + 4 >> 2] = c[g + 4 >> 2];
     c[h + 8 >> 2] = c[g + 8 >> 2];
     v = 0;
     while (1) {
      if ((v | 0) == 3) break;
      c[g + (v << 2) >> 2] = 0;
      v = v + 1 | 0;
     }
     v = a[h + 11 >> 0] | 0;
     j = v << 24 >> 24 < 0;
     qs((c[A >> 2] | 0) + -24 | 0, j ? c[h >> 2] | 0 : h, j ? c[h + 4 >> 2] | 0 : v & 255) | 0;
     Es(h);
     Es(g);
     n = o;
    }
   }
  } else n = b; else n = b; else n = b;
 } else n = b; while (0);
 l = f;
 return n | 0;
}

function Fs(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0;
 f = l;
 l = l + 64 | 0;
 g = f + 48 | 0;
 h = f + 40 | 0;
 i = f + 32 | 0;
 j = f + 24 | 0;
 k = f + 12 | 0;
 m = f;
 if ((b | 0) == (d | 0)) {
  n = b;
  o = 88;
 } else {
  p = e + 56 | 0;
  _u(h, p);
  c[p >> 2] = (c[p >> 2] | 0) + 1;
  q = e + 61 | 0;
  $u(i, q);
  if ((c[p >> 2] | 0) >>> 0 > 1) a[q >> 0] = 1;
  a : do switch (a[b >> 0] | 0) {
  case 84:
  case 71:
   {
    r = av(b, d, e) | 0;
    s = 1;
    break;
   }
  default:
   {
    p = ft(b, d, e) | 0;
    t = c[e + 48 >> 2] | 0;
    u = c[e + 52 >> 2] | 0;
    b : do if ((p | 0) == (b | 0)) v = b; else if ((p | 0) == (d | 0)) v = d; else {
     switch (a[p >> 0] | 0) {
     case 46:
     case 69:
      {
       v = p;
       break b;
       break;
      }
     default:
      {}
     }
     $u(j, q);
     a[q >> 0] = 0;
     c[k >> 2] = 0;
     c[k + 4 >> 2] = 0;
     c[k + 8 >> 2] = 0;
     w = 0;
     while (1) {
      if ((w | 0) == 3) break;
      c[k + (w << 2) >> 2] = 0;
      w = w + 1 | 0;
     }
     w = e + 4 | 0;
     x = c[w >> 2] | 0;
     c : do if ((c[e >> 2] | 0) == (x | 0)) {
      y = b;
      z = 0;
     } else {
      A = x + -24 | 0;
      B = a[A + 11 >> 0] | 0;
      C = B << 24 >> 24 < 0;
      if (C) D = c[x + -20 >> 2] | 0; else D = B & 255;
      if (!D) {
       y = b;
       z = 0;
      } else {
       if (!(a[e + 60 >> 0] | 0)) {
        if (C) {
         E = c[A >> 2] | 0;
         F = c[x + -20 >> 2] | 0;
        } else {
         E = A;
         F = B & 255;
        }
        if ((a[E + F + -1 >> 0] | 0) == 62) {
         if (C) {
          G = c[x + -20 >> 2] | 0;
          H = c[A >> 2] | 0;
         } else {
          G = B & 255;
          H = A;
         }
         if ((a[H + (G + -2) >> 0] | 0) == 45) {
          I = p;
          J = x;
         } else {
          if (C) {
           K = c[x + -20 >> 2] | 0;
           L = c[A >> 2] | 0;
          } else {
           K = B & 255;
           L = A;
          }
          if ((a[L + (K + -2) >> 0] | 0) == 62) {
           I = p;
           J = x;
          } else {
           A = Is(p, d, e) | 0;
           if ((A | 0) == (p | 0)) {
            y = b;
            z = 0;
            break;
           }
           B = c[w >> 2] | 0;
           C = B;
           if (((B - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
            y = b;
            z = 0;
            break;
           }
           B = C + -24 | 0;
           c[m >> 2] = c[B >> 2];
           c[m + 4 >> 2] = c[B + 4 >> 2];
           c[m + 8 >> 2] = c[B + 8 >> 2];
           M = 0;
           while (1) {
            if ((M | 0) == 3) break;
            c[B + (M << 2) >> 2] = 0;
            M = M + 1 | 0;
           }
           M = C + -12 | 0;
           B = k + 11 | 0;
           if ((a[B >> 0] | 0) < 0) {
            N = c[k >> 2] | 0;
            a[g >> 0] = 0;
            mh(N, g);
            c[k + 4 >> 2] = 0;
           } else {
            a[g >> 0] = 0;
            mh(k, g);
            a[B >> 0] = 0;
           }
           lt(k);
           c[k >> 2] = c[M >> 2];
           c[k + 4 >> 2] = c[M + 4 >> 2];
           c[k + 8 >> 2] = c[M + 8 >> 2];
           N = 0;
           while (1) {
            if ((N | 0) == 3) break;
            c[M + (N << 2) >> 2] = 0;
            N = N + 1 | 0;
           }
           N = a[B >> 0] | 0;
           if (!((N << 24 >> 24 < 0 ? c[k + 4 >> 2] | 0 : N & 255) | 0)) du(m, 32);
           N = c[w >> 2] | 0;
           M = N + -24 | 0;
           C = N;
           while (1) {
            if ((C | 0) == (M | 0)) break;
            O = C + -24 | 0;
            c[w >> 2] = O;
            ns(O);
            C = c[w >> 2] | 0;
           }
           C = a[m + 11 >> 0] | 0;
           M = C << 24 >> 24 < 0;
           Nu(N + -48 | 0, 0, M ? c[m >> 2] | 0 : m, M ? c[m + 4 >> 2] | 0 : C & 255) | 0;
           Es(m);
           I = A;
           J = c[w >> 2] | 0;
          }
         }
        } else {
         I = p;
         J = x;
        }
       } else {
        I = p;
        J = x;
       }
       du(J + -24 | 0, 40);
       if ((I | 0) == (d | 0)) o = 49; else if ((a[I >> 0] | 0) == 118) {
        P = I + 1 | 0;
        Q = c[e >> 2] | 0;
        R = c[w >> 2] | 0;
       } else o = 49;
       do if ((o | 0) == 49) {
        C = g + 11 | 0;
        M = g + 4 | 0;
        B = m + 11 | 0;
        O = m + 4 | 0;
        S = 1;
        T = I;
        d : while (1) {
         U = T;
         V = c[e >> 2] | 0;
         W = c[w >> 2] | 0;
         while (1) {
          X = (W - V | 0) / 24 | 0;
          Y = Is(U, d, e) | 0;
          W = c[w >> 2] | 0;
          V = c[e >> 2] | 0;
          Z = (W - V | 0) / 24 | 0;
          if ((Y | 0) == (U | 0)) {
           o = 72;
           break d;
          }
          if (Z >>> 0 > X >>> 0) break; else U = Y;
         }
         c[g >> 2] = 0;
         c[g + 4 >> 2] = 0;
         c[g + 8 >> 2] = 0;
         _ = 0;
         while (1) {
          if ((_ | 0) == 3) {
           $ = X;
           break;
          }
          c[g + (_ << 2) >> 2] = 0;
          _ = _ + 1 | 0;
         }
         while (1) {
          if ($ >>> 0 >= Z >>> 0) {
           aa = X;
           break;
          }
          _ = a[C >> 0] | 0;
          if ((_ << 24 >> 24 < 0 ? c[M >> 2] | 0 : _ & 255) | 0) Ms(g, 19130) | 0;
          _s(m, (c[e >> 2] | 0) + ($ * 24 | 0) | 0);
          _ = a[B >> 0] | 0;
          ba = _ << 24 >> 24 < 0;
          qs(g, ba ? c[m >> 2] | 0 : m, ba ? c[O >> 2] | 0 : _ & 255) | 0;
          Es(m);
          $ = $ + 1 | 0;
         }
         while (1) {
          if (aa >>> 0 >= Z >>> 0) break;
          _ = c[w >> 2] | 0;
          ba = _ + -24 | 0;
          ca = _;
          while (1) {
           if ((ca | 0) == (ba | 0)) break;
           _ = ca + -24 | 0;
           c[w >> 2] = _;
           ns(_);
           ca = c[w >> 2] | 0;
          }
          aa = aa + 1 | 0;
         }
         ca = a[C >> 0] | 0;
         ba = c[M >> 2] | 0;
         if (!((ca << 24 >> 24 < 0 ? ba : ca & 255) | 0)) da = S; else {
          _ = c[w >> 2] | 0;
          if ((c[e >> 2] | 0) == (_ | 0)) {
           o = 84;
           break;
          }
          if (S) {
           ea = _;
           fa = ca;
           ga = ba;
          } else {
           Ms(_ + -24 | 0, 19130) | 0;
           ea = c[w >> 2] | 0;
           fa = a[C >> 0] | 0;
           ga = c[M >> 2] | 0;
          }
          _ = fa << 24 >> 24 < 0;
          qs(ea + -24 | 0, _ ? c[g >> 2] | 0 : g, _ ? ga : fa & 255) | 0;
          da = 0;
         }
         Es(g);
         S = da;
         T = Y;
        }
        if ((o | 0) == 72) {
         P = U;
         Q = V;
         R = W;
         break;
        } else if ((o | 0) == 84) {
         Es(g);
         y = b;
         z = 0;
         break c;
        }
       } while (0);
       if ((Q | 0) == (R | 0)) {
        y = b;
        z = 0;
       } else {
        du(R + -24 | 0, 41);
        if (t & 1 | 0) Ms((c[w >> 2] | 0) + -24 | 0, 18853) | 0;
        if (t & 2 | 0) Ms((c[w >> 2] | 0) + -24 | 0, 18860) | 0;
        if (t & 4 | 0) Ms((c[w >> 2] | 0) + -24 | 0, 18870) | 0;
        switch (u | 0) {
        case 1:
         {
          Ms((c[w >> 2] | 0) + -24 | 0, 20334) | 0;
          break;
         }
        case 2:
         {
          Ms((c[w >> 2] | 0) + -24 | 0, 20337) | 0;
          break;
         }
        default:
         {}
        }
        A = a[k + 11 >> 0] | 0;
        N = A << 24 >> 24 < 0;
        qs((c[w >> 2] | 0) + -24 | 0, N ? c[k >> 2] | 0 : k, N ? c[k + 4 >> 2] | 0 : A & 255) | 0;
        y = P;
        z = 1;
       }
      }
     } while (0);
     Es(k);
     bv(j);
     if (z) v = y; else {
      r = y;
      s = 0;
      break a;
     }
    } while (0);
    r = v;
    s = 1;
   }
  } while (0);
  bv(i);
  cv(h);
  if (s) {
   n = r;
   o = 88;
  } else ha = b;
 }
 if ((o | 0) == 88) ha = n;
 l = f;
 return ha | 0;
}

function yd(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0;
 if (!a) return;
 b = a + -8 | 0;
 d = c[5364] | 0;
 if (b >>> 0 < d >>> 0) jb();
 e = c[a + -4 >> 2] | 0;
 a = e & 3;
 if ((a | 0) == 1) jb();
 f = e & -8;
 g = b + f | 0;
 a : do if (!(e & 1)) {
  h = c[b >> 2] | 0;
  if (!a) return;
  i = b + (0 - h) | 0;
  j = h + f | 0;
  if (i >>> 0 < d >>> 0) jb();
  if ((c[5365] | 0) == (i | 0)) {
   k = g + 4 | 0;
   l = c[k >> 2] | 0;
   if ((l & 3 | 0) != 3) {
    m = i;
    n = j;
    o = i;
    break;
   }
   c[5362] = j;
   c[k >> 2] = l & -2;
   c[i + 4 >> 2] = j | 1;
   c[i + j >> 2] = j;
   return;
  }
  l = h >>> 3;
  if (h >>> 0 < 256) {
   h = c[i + 8 >> 2] | 0;
   k = c[i + 12 >> 2] | 0;
   p = 21480 + (l << 1 << 2) | 0;
   if ((h | 0) != (p | 0)) {
    if (d >>> 0 > h >>> 0) jb();
    if ((c[h + 12 >> 2] | 0) != (i | 0)) jb();
   }
   if ((k | 0) == (h | 0)) {
    c[5360] = c[5360] & ~(1 << l);
    m = i;
    n = j;
    o = i;
    break;
   }
   if ((k | 0) == (p | 0)) q = k + 8 | 0; else {
    if (d >>> 0 > k >>> 0) jb();
    p = k + 8 | 0;
    if ((c[p >> 2] | 0) == (i | 0)) q = p; else jb();
   }
   c[h + 12 >> 2] = k;
   c[q >> 2] = h;
   m = i;
   n = j;
   o = i;
   break;
  }
  h = c[i + 24 >> 2] | 0;
  k = c[i + 12 >> 2] | 0;
  do if ((k | 0) == (i | 0)) {
   p = i + 16 | 0;
   l = p + 4 | 0;
   r = c[l >> 2] | 0;
   if (!r) {
    s = c[p >> 2] | 0;
    if (!s) {
     t = 0;
     break;
    } else {
     u = s;
     v = p;
    }
   } else {
    u = r;
    v = l;
   }
   while (1) {
    l = u + 20 | 0;
    r = c[l >> 2] | 0;
    if (r | 0) {
     u = r;
     v = l;
     continue;
    }
    l = u + 16 | 0;
    r = c[l >> 2] | 0;
    if (!r) break; else {
     u = r;
     v = l;
    }
   }
   if (d >>> 0 > v >>> 0) jb(); else {
    c[v >> 2] = 0;
    t = u;
    break;
   }
  } else {
   l = c[i + 8 >> 2] | 0;
   if (d >>> 0 > l >>> 0) jb();
   r = l + 12 | 0;
   if ((c[r >> 2] | 0) != (i | 0)) jb();
   p = k + 8 | 0;
   if ((c[p >> 2] | 0) == (i | 0)) {
    c[r >> 2] = k;
    c[p >> 2] = l;
    t = k;
    break;
   } else jb();
  } while (0);
  if (!h) {
   m = i;
   n = j;
   o = i;
  } else {
   k = c[i + 28 >> 2] | 0;
   l = 21744 + (k << 2) | 0;
   do if ((c[l >> 2] | 0) == (i | 0)) {
    c[l >> 2] = t;
    if (!t) {
     c[5361] = c[5361] & ~(1 << k);
     m = i;
     n = j;
     o = i;
     break a;
    }
   } else if ((c[5364] | 0) >>> 0 > h >>> 0) jb(); else {
    c[h + 16 + (((c[h + 16 >> 2] | 0) != (i | 0) & 1) << 2) >> 2] = t;
    if (!t) {
     m = i;
     n = j;
     o = i;
     break a;
    } else break;
   } while (0);
   k = c[5364] | 0;
   if (k >>> 0 > t >>> 0) jb();
   c[t + 24 >> 2] = h;
   l = i + 16 | 0;
   p = c[l >> 2] | 0;
   do if (p | 0) if (k >>> 0 > p >>> 0) jb(); else {
    c[t + 16 >> 2] = p;
    c[p + 24 >> 2] = t;
    break;
   } while (0);
   p = c[l + 4 >> 2] | 0;
   if (!p) {
    m = i;
    n = j;
    o = i;
   } else if ((c[5364] | 0) >>> 0 > p >>> 0) jb(); else {
    c[t + 20 >> 2] = p;
    c[p + 24 >> 2] = t;
    m = i;
    n = j;
    o = i;
    break;
   }
  }
 } else {
  m = b;
  n = f;
  o = b;
 } while (0);
 if (o >>> 0 >= g >>> 0) jb();
 b = g + 4 | 0;
 f = c[b >> 2] | 0;
 if (!(f & 1)) jb();
 if (!(f & 2)) {
  if ((c[5366] | 0) == (g | 0)) {
   t = (c[5363] | 0) + n | 0;
   c[5363] = t;
   c[5366] = m;
   c[m + 4 >> 2] = t | 1;
   if ((m | 0) != (c[5365] | 0)) return;
   c[5365] = 0;
   c[5362] = 0;
   return;
  }
  if ((c[5365] | 0) == (g | 0)) {
   t = (c[5362] | 0) + n | 0;
   c[5362] = t;
   c[5365] = o;
   c[m + 4 >> 2] = t | 1;
   c[o + t >> 2] = t;
   return;
  }
  t = (f & -8) + n | 0;
  d = f >>> 3;
  b : do if (f >>> 0 < 256) {
   u = c[g + 8 >> 2] | 0;
   v = c[g + 12 >> 2] | 0;
   q = 21480 + (d << 1 << 2) | 0;
   if ((u | 0) != (q | 0)) {
    if ((c[5364] | 0) >>> 0 > u >>> 0) jb();
    if ((c[u + 12 >> 2] | 0) != (g | 0)) jb();
   }
   if ((v | 0) == (u | 0)) {
    c[5360] = c[5360] & ~(1 << d);
    break;
   }
   if ((v | 0) == (q | 0)) w = v + 8 | 0; else {
    if ((c[5364] | 0) >>> 0 > v >>> 0) jb();
    q = v + 8 | 0;
    if ((c[q >> 2] | 0) == (g | 0)) w = q; else jb();
   }
   c[u + 12 >> 2] = v;
   c[w >> 2] = u;
  } else {
   u = c[g + 24 >> 2] | 0;
   v = c[g + 12 >> 2] | 0;
   do if ((v | 0) == (g | 0)) {
    q = g + 16 | 0;
    a = q + 4 | 0;
    e = c[a >> 2] | 0;
    if (!e) {
     p = c[q >> 2] | 0;
     if (!p) {
      x = 0;
      break;
     } else {
      y = p;
      z = q;
     }
    } else {
     y = e;
     z = a;
    }
    while (1) {
     a = y + 20 | 0;
     e = c[a >> 2] | 0;
     if (e | 0) {
      y = e;
      z = a;
      continue;
     }
     a = y + 16 | 0;
     e = c[a >> 2] | 0;
     if (!e) break; else {
      y = e;
      z = a;
     }
    }
    if ((c[5364] | 0) >>> 0 > z >>> 0) jb(); else {
     c[z >> 2] = 0;
     x = y;
     break;
    }
   } else {
    a = c[g + 8 >> 2] | 0;
    if ((c[5364] | 0) >>> 0 > a >>> 0) jb();
    e = a + 12 | 0;
    if ((c[e >> 2] | 0) != (g | 0)) jb();
    q = v + 8 | 0;
    if ((c[q >> 2] | 0) == (g | 0)) {
     c[e >> 2] = v;
     c[q >> 2] = a;
     x = v;
     break;
    } else jb();
   } while (0);
   if (u | 0) {
    v = c[g + 28 >> 2] | 0;
    i = 21744 + (v << 2) | 0;
    do if ((c[i >> 2] | 0) == (g | 0)) {
     c[i >> 2] = x;
     if (!x) {
      c[5361] = c[5361] & ~(1 << v);
      break b;
     }
    } else if ((c[5364] | 0) >>> 0 > u >>> 0) jb(); else {
     c[u + 16 + (((c[u + 16 >> 2] | 0) != (g | 0) & 1) << 2) >> 2] = x;
     if (!x) break b; else break;
    } while (0);
    v = c[5364] | 0;
    if (v >>> 0 > x >>> 0) jb();
    c[x + 24 >> 2] = u;
    i = g + 16 | 0;
    j = c[i >> 2] | 0;
    do if (j | 0) if (v >>> 0 > j >>> 0) jb(); else {
     c[x + 16 >> 2] = j;
     c[j + 24 >> 2] = x;
     break;
    } while (0);
    j = c[i + 4 >> 2] | 0;
    if (j | 0) if ((c[5364] | 0) >>> 0 > j >>> 0) jb(); else {
     c[x + 20 >> 2] = j;
     c[j + 24 >> 2] = x;
     break;
    }
   }
  } while (0);
  c[m + 4 >> 2] = t | 1;
  c[o + t >> 2] = t;
  if ((m | 0) == (c[5365] | 0)) {
   c[5362] = t;
   return;
  } else A = t;
 } else {
  c[b >> 2] = f & -2;
  c[m + 4 >> 2] = n | 1;
  c[o + n >> 2] = n;
  A = n;
 }
 n = A >>> 3;
 if (A >>> 0 < 256) {
  o = 21480 + (n << 1 << 2) | 0;
  f = c[5360] | 0;
  b = 1 << n;
  if (!(f & b)) {
   c[5360] = f | b;
   B = o;
   C = o + 8 | 0;
  } else {
   b = o + 8 | 0;
   f = c[b >> 2] | 0;
   if ((c[5364] | 0) >>> 0 > f >>> 0) jb(); else {
    B = f;
    C = b;
   }
  }
  c[C >> 2] = m;
  c[B + 12 >> 2] = m;
  c[m + 8 >> 2] = B;
  c[m + 12 >> 2] = o;
  return;
 }
 o = A >>> 8;
 if (!o) D = 0; else if (A >>> 0 > 16777215) D = 31; else {
  B = (o + 1048320 | 0) >>> 16 & 8;
  C = o << B;
  o = (C + 520192 | 0) >>> 16 & 4;
  b = C << o;
  C = (b + 245760 | 0) >>> 16 & 2;
  f = 14 - (o | B | C) + (b << C >>> 15) | 0;
  D = A >>> (f + 7 | 0) & 1 | f << 1;
 }
 f = 21744 + (D << 2) | 0;
 c[m + 28 >> 2] = D;
 c[m + 20 >> 2] = 0;
 c[m + 16 >> 2] = 0;
 C = c[5361] | 0;
 b = 1 << D;
 do if (!(C & b)) {
  c[5361] = C | b;
  c[f >> 2] = m;
  c[m + 24 >> 2] = f;
  c[m + 12 >> 2] = m;
  c[m + 8 >> 2] = m;
 } else {
  B = A << ((D | 0) == 31 ? 0 : 25 - (D >>> 1) | 0);
  o = c[f >> 2] | 0;
  while (1) {
   if ((c[o + 4 >> 2] & -8 | 0) == (A | 0)) {
    E = 124;
    break;
   }
   F = o + 16 + (B >>> 31 << 2) | 0;
   n = c[F >> 2] | 0;
   if (!n) {
    E = 121;
    break;
   } else {
    B = B << 1;
    o = n;
   }
  }
  if ((E | 0) == 121) if ((c[5364] | 0) >>> 0 > F >>> 0) jb(); else {
   c[F >> 2] = m;
   c[m + 24 >> 2] = o;
   c[m + 12 >> 2] = m;
   c[m + 8 >> 2] = m;
   break;
  } else if ((E | 0) == 124) {
   B = o + 8 | 0;
   i = c[B >> 2] | 0;
   n = c[5364] | 0;
   if (n >>> 0 <= i >>> 0 & n >>> 0 <= o >>> 0) {
    c[i + 12 >> 2] = m;
    c[B >> 2] = m;
    c[m + 8 >> 2] = i;
    c[m + 12 >> 2] = o;
    c[m + 24 >> 2] = 0;
    break;
   } else jb();
  }
 } while (0);
 m = (c[5368] | 0) + -1 | 0;
 c[5368] = m;
 if (!m) G = 21896; else return;
 while (1) {
  m = c[G >> 2] | 0;
  if (!m) break; else G = m + 8 | 0;
 }
 c[5368] = -1;
 return;
}

function Ps(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0;
 f = l;
 l = l + 32 | 0;
 g = f;
 a : do if ((b | 0) == (d | 0)) h = b; else do switch (a[b >> 0] | 0) {
 case 118:
  {
   su(g, 20345);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 119:
  {
   Vu(g);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 98:
  {
   su(g, 20350);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 99:
  {
   su(g, 20119);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 97:
  {
   $t(g, 20124);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 104:
  {
   wu(g, 20136);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 115:
  {
   Lt(g, 20150);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 116:
  {
   au(g, 20156);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 105:
  {
   Wu(g, 20355);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 106:
  {
   bu(g, 20359);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 108:
  {
   su(g, 20372);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 109:
  {
   wu(g, 20377);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 120:
  {
   Yt(g, 20391);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 121:
  {
   Xu(g);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 110:
  {
   Yu(g, 20185);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 111:
  {
   Zt(g, 20194);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 102:
  {
   Lt(g, 20401);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 100:
  {
   Zu(g);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 101:
  {
   $t(g, 20407);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 103:
  {
   Xt(g, 20419);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 122:
  {
   Wu(g, 20430);
   i = e + 4 | 0;
   j = c[i >> 2] | 0;
   if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(j, g);
    c[i >> 2] = (c[i >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   h = b + 1 | 0;
   break a;
   break;
  }
 case 117:
  {
   i = b + 1 | 0;
   j = $s(i, d, e) | 0;
   h = (j | 0) == (i | 0) ? b : j;
   break a;
   break;
  }
 case 68:
  {
   j = b + 1 | 0;
   if ((j | 0) == (d | 0)) {
    h = b;
    break a;
   }
   switch (a[j >> 0] | 0) {
   case 100:
    {
     Yt(g, 20434);
     j = e + 4 | 0;
     i = c[j >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[j >> 2] = (c[j >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     h = b + 2 | 0;
     break a;
     break;
    }
   case 101:
    {
     Xt(g, 20444);
     j = e + 4 | 0;
     i = c[j >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[j >> 2] = (c[j >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     h = b + 2 | 0;
     break a;
     break;
    }
   case 102:
    {
     Yt(g, 20455);
     j = e + 4 | 0;
     i = c[j >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[j >> 2] = (c[j >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     h = b + 2 | 0;
     break a;
     break;
    }
   case 104:
    {
     Yt(g, 20465);
     j = e + 4 | 0;
     i = c[j >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[j >> 2] = (c[j >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     h = b + 2 | 0;
     break a;
     break;
    }
   case 105:
    {
     Yu(g, 20475);
     j = e + 4 | 0;
     i = c[j >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[j >> 2] = (c[j >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     h = b + 2 | 0;
     break a;
     break;
    }
   case 115:
    {
     Yu(g, 20484);
     j = e + 4 | 0;
     i = c[j >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[j >> 2] = (c[j >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     h = b + 2 | 0;
     break a;
     break;
    }
   case 97:
    {
     su(g, 20493);
     j = e + 4 | 0;
     i = c[j >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[j >> 2] = (c[j >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     h = b + 2 | 0;
     break a;
     break;
    }
   case 110:
    {
     au(g, 20498);
     j = e + 4 | 0;
     i = c[j >> 2] | 0;
     if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(i, g);
      c[j >> 2] = (c[j >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     h = b + 2 | 0;
     break a;
     break;
    }
   default:
    {
     h = b;
     break a;
    }
   }
   break;
  }
 default:
  {
   h = b;
   break a;
  }
 } while (0); while (0);
 l = f;
 return h | 0;
}

function Bd(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;
 d = a + b | 0;
 e = c[a + 4 >> 2] | 0;
 a : do if (!(e & 1)) {
  f = c[a >> 2] | 0;
  if (!(e & 3)) return;
  g = a + (0 - f) | 0;
  h = f + b | 0;
  i = c[5364] | 0;
  if (g >>> 0 < i >>> 0) jb();
  if ((c[5365] | 0) == (g | 0)) {
   j = d + 4 | 0;
   k = c[j >> 2] | 0;
   if ((k & 3 | 0) != 3) {
    l = g;
    m = h;
    break;
   }
   c[5362] = h;
   c[j >> 2] = k & -2;
   c[g + 4 >> 2] = h | 1;
   c[d >> 2] = h;
   return;
  }
  k = f >>> 3;
  if (f >>> 0 < 256) {
   f = c[g + 8 >> 2] | 0;
   j = c[g + 12 >> 2] | 0;
   n = 21480 + (k << 1 << 2) | 0;
   if ((f | 0) != (n | 0)) {
    if (i >>> 0 > f >>> 0) jb();
    if ((c[f + 12 >> 2] | 0) != (g | 0)) jb();
   }
   if ((j | 0) == (f | 0)) {
    c[5360] = c[5360] & ~(1 << k);
    l = g;
    m = h;
    break;
   }
   if ((j | 0) == (n | 0)) o = j + 8 | 0; else {
    if (i >>> 0 > j >>> 0) jb();
    n = j + 8 | 0;
    if ((c[n >> 2] | 0) == (g | 0)) o = n; else jb();
   }
   c[f + 12 >> 2] = j;
   c[o >> 2] = f;
   l = g;
   m = h;
   break;
  }
  f = c[g + 24 >> 2] | 0;
  j = c[g + 12 >> 2] | 0;
  do if ((j | 0) == (g | 0)) {
   n = g + 16 | 0;
   k = n + 4 | 0;
   p = c[k >> 2] | 0;
   if (!p) {
    q = c[n >> 2] | 0;
    if (!q) {
     r = 0;
     break;
    } else {
     s = q;
     t = n;
    }
   } else {
    s = p;
    t = k;
   }
   while (1) {
    k = s + 20 | 0;
    p = c[k >> 2] | 0;
    if (p | 0) {
     s = p;
     t = k;
     continue;
    }
    k = s + 16 | 0;
    p = c[k >> 2] | 0;
    if (!p) break; else {
     s = p;
     t = k;
    }
   }
   if (i >>> 0 > t >>> 0) jb(); else {
    c[t >> 2] = 0;
    r = s;
    break;
   }
  } else {
   k = c[g + 8 >> 2] | 0;
   if (i >>> 0 > k >>> 0) jb();
   p = k + 12 | 0;
   if ((c[p >> 2] | 0) != (g | 0)) jb();
   n = j + 8 | 0;
   if ((c[n >> 2] | 0) == (g | 0)) {
    c[p >> 2] = j;
    c[n >> 2] = k;
    r = j;
    break;
   } else jb();
  } while (0);
  if (!f) {
   l = g;
   m = h;
  } else {
   j = c[g + 28 >> 2] | 0;
   i = 21744 + (j << 2) | 0;
   do if ((c[i >> 2] | 0) == (g | 0)) {
    c[i >> 2] = r;
    if (!r) {
     c[5361] = c[5361] & ~(1 << j);
     l = g;
     m = h;
     break a;
    }
   } else if ((c[5364] | 0) >>> 0 > f >>> 0) jb(); else {
    c[f + 16 + (((c[f + 16 >> 2] | 0) != (g | 0) & 1) << 2) >> 2] = r;
    if (!r) {
     l = g;
     m = h;
     break a;
    } else break;
   } while (0);
   j = c[5364] | 0;
   if (j >>> 0 > r >>> 0) jb();
   c[r + 24 >> 2] = f;
   i = g + 16 | 0;
   k = c[i >> 2] | 0;
   do if (k | 0) if (j >>> 0 > k >>> 0) jb(); else {
    c[r + 16 >> 2] = k;
    c[k + 24 >> 2] = r;
    break;
   } while (0);
   k = c[i + 4 >> 2] | 0;
   if (!k) {
    l = g;
    m = h;
   } else if ((c[5364] | 0) >>> 0 > k >>> 0) jb(); else {
    c[r + 20 >> 2] = k;
    c[k + 24 >> 2] = r;
    l = g;
    m = h;
    break;
   }
  }
 } else {
  l = a;
  m = b;
 } while (0);
 b = c[5364] | 0;
 if (d >>> 0 < b >>> 0) jb();
 a = d + 4 | 0;
 r = c[a >> 2] | 0;
 if (!(r & 2)) {
  if ((c[5366] | 0) == (d | 0)) {
   s = (c[5363] | 0) + m | 0;
   c[5363] = s;
   c[5366] = l;
   c[l + 4 >> 2] = s | 1;
   if ((l | 0) != (c[5365] | 0)) return;
   c[5365] = 0;
   c[5362] = 0;
   return;
  }
  if ((c[5365] | 0) == (d | 0)) {
   s = (c[5362] | 0) + m | 0;
   c[5362] = s;
   c[5365] = l;
   c[l + 4 >> 2] = s | 1;
   c[l + s >> 2] = s;
   return;
  }
  s = (r & -8) + m | 0;
  t = r >>> 3;
  b : do if (r >>> 0 < 256) {
   o = c[d + 8 >> 2] | 0;
   e = c[d + 12 >> 2] | 0;
   k = 21480 + (t << 1 << 2) | 0;
   if ((o | 0) != (k | 0)) {
    if (b >>> 0 > o >>> 0) jb();
    if ((c[o + 12 >> 2] | 0) != (d | 0)) jb();
   }
   if ((e | 0) == (o | 0)) {
    c[5360] = c[5360] & ~(1 << t);
    break;
   }
   if ((e | 0) == (k | 0)) u = e + 8 | 0; else {
    if (b >>> 0 > e >>> 0) jb();
    k = e + 8 | 0;
    if ((c[k >> 2] | 0) == (d | 0)) u = k; else jb();
   }
   c[o + 12 >> 2] = e;
   c[u >> 2] = o;
  } else {
   o = c[d + 24 >> 2] | 0;
   e = c[d + 12 >> 2] | 0;
   do if ((e | 0) == (d | 0)) {
    k = d + 16 | 0;
    j = k + 4 | 0;
    f = c[j >> 2] | 0;
    if (!f) {
     n = c[k >> 2] | 0;
     if (!n) {
      v = 0;
      break;
     } else {
      w = n;
      x = k;
     }
    } else {
     w = f;
     x = j;
    }
    while (1) {
     j = w + 20 | 0;
     f = c[j >> 2] | 0;
     if (f | 0) {
      w = f;
      x = j;
      continue;
     }
     j = w + 16 | 0;
     f = c[j >> 2] | 0;
     if (!f) break; else {
      w = f;
      x = j;
     }
    }
    if (b >>> 0 > x >>> 0) jb(); else {
     c[x >> 2] = 0;
     v = w;
     break;
    }
   } else {
    j = c[d + 8 >> 2] | 0;
    if (b >>> 0 > j >>> 0) jb();
    f = j + 12 | 0;
    if ((c[f >> 2] | 0) != (d | 0)) jb();
    k = e + 8 | 0;
    if ((c[k >> 2] | 0) == (d | 0)) {
     c[f >> 2] = e;
     c[k >> 2] = j;
     v = e;
     break;
    } else jb();
   } while (0);
   if (o | 0) {
    e = c[d + 28 >> 2] | 0;
    h = 21744 + (e << 2) | 0;
    do if ((c[h >> 2] | 0) == (d | 0)) {
     c[h >> 2] = v;
     if (!v) {
      c[5361] = c[5361] & ~(1 << e);
      break b;
     }
    } else if ((c[5364] | 0) >>> 0 > o >>> 0) jb(); else {
     c[o + 16 + (((c[o + 16 >> 2] | 0) != (d | 0) & 1) << 2) >> 2] = v;
     if (!v) break b; else break;
    } while (0);
    e = c[5364] | 0;
    if (e >>> 0 > v >>> 0) jb();
    c[v + 24 >> 2] = o;
    h = d + 16 | 0;
    g = c[h >> 2] | 0;
    do if (g | 0) if (e >>> 0 > g >>> 0) jb(); else {
     c[v + 16 >> 2] = g;
     c[g + 24 >> 2] = v;
     break;
    } while (0);
    g = c[h + 4 >> 2] | 0;
    if (g | 0) if ((c[5364] | 0) >>> 0 > g >>> 0) jb(); else {
     c[v + 20 >> 2] = g;
     c[g + 24 >> 2] = v;
     break;
    }
   }
  } while (0);
  c[l + 4 >> 2] = s | 1;
  c[l + s >> 2] = s;
  if ((l | 0) == (c[5365] | 0)) {
   c[5362] = s;
   return;
  } else y = s;
 } else {
  c[a >> 2] = r & -2;
  c[l + 4 >> 2] = m | 1;
  c[l + m >> 2] = m;
  y = m;
 }
 m = y >>> 3;
 if (y >>> 0 < 256) {
  r = 21480 + (m << 1 << 2) | 0;
  a = c[5360] | 0;
  s = 1 << m;
  if (!(a & s)) {
   c[5360] = a | s;
   z = r;
   A = r + 8 | 0;
  } else {
   s = r + 8 | 0;
   a = c[s >> 2] | 0;
   if ((c[5364] | 0) >>> 0 > a >>> 0) jb(); else {
    z = a;
    A = s;
   }
  }
  c[A >> 2] = l;
  c[z + 12 >> 2] = l;
  c[l + 8 >> 2] = z;
  c[l + 12 >> 2] = r;
  return;
 }
 r = y >>> 8;
 if (!r) B = 0; else if (y >>> 0 > 16777215) B = 31; else {
  z = (r + 1048320 | 0) >>> 16 & 8;
  A = r << z;
  r = (A + 520192 | 0) >>> 16 & 4;
  s = A << r;
  A = (s + 245760 | 0) >>> 16 & 2;
  a = 14 - (r | z | A) + (s << A >>> 15) | 0;
  B = y >>> (a + 7 | 0) & 1 | a << 1;
 }
 a = 21744 + (B << 2) | 0;
 c[l + 28 >> 2] = B;
 c[l + 20 >> 2] = 0;
 c[l + 16 >> 2] = 0;
 A = c[5361] | 0;
 s = 1 << B;
 if (!(A & s)) {
  c[5361] = A | s;
  c[a >> 2] = l;
  c[l + 24 >> 2] = a;
  c[l + 12 >> 2] = l;
  c[l + 8 >> 2] = l;
  return;
 }
 s = y << ((B | 0) == 31 ? 0 : 25 - (B >>> 1) | 0);
 B = c[a >> 2] | 0;
 while (1) {
  if ((c[B + 4 >> 2] & -8 | 0) == (y | 0)) {
   C = 121;
   break;
  }
  D = B + 16 + (s >>> 31 << 2) | 0;
  a = c[D >> 2] | 0;
  if (!a) {
   C = 118;
   break;
  } else {
   s = s << 1;
   B = a;
  }
 }
 if ((C | 0) == 118) {
  if ((c[5364] | 0) >>> 0 > D >>> 0) jb();
  c[D >> 2] = l;
  c[l + 24 >> 2] = B;
  c[l + 12 >> 2] = l;
  c[l + 8 >> 2] = l;
  return;
 } else if ((C | 0) == 121) {
  C = B + 8 | 0;
  D = c[C >> 2] | 0;
  s = c[5364] | 0;
  if (!(s >>> 0 <= D >>> 0 & s >>> 0 <= B >>> 0)) jb();
  c[D + 12 >> 2] = l;
  c[C >> 2] = l;
  c[l + 8 >> 2] = D;
  c[l + 12 >> 2] = B;
  c[l + 24 >> 2] = 0;
  return;
 }
}

function Ce(b, e, f, g, h) {
 b = b | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0, ea = 0, fa = 0, ga = 0, ha = 0, ia = 0, ja = 0, ka = 0, la = 0;
 a : do if (e >>> 0 > 36) {
  c[(Gd() | 0) >> 2] = 22;
  i = 0;
  j = 0;
 } else {
  k = b + 4 | 0;
  l = b + 100 | 0;
  do {
   m = c[k >> 2] | 0;
   if (m >>> 0 < (c[l >> 2] | 0) >>> 0) {
    c[k >> 2] = m + 1;
    n = d[m >> 0] | 0;
   } else n = xe(b) | 0;
  } while ((ve(n) | 0) != 0);
  b : do switch (n | 0) {
  case 43:
  case 45:
   {
    m = ((n | 0) == 45) << 31 >> 31;
    o = c[k >> 2] | 0;
    if (o >>> 0 < (c[l >> 2] | 0) >>> 0) {
     c[k >> 2] = o + 1;
     p = m;
     q = d[o >> 0] | 0;
     break b;
    } else {
     p = m;
     q = xe(b) | 0;
     break b;
    }
    break;
   }
  default:
   {
    p = 0;
    q = n;
   }
  } while (0);
  m = (e | 0) == 0;
  do if ((e | 16 | 0) == 16 & (q | 0) == 48) {
   o = c[k >> 2] | 0;
   if (o >>> 0 < (c[l >> 2] | 0) >>> 0) {
    c[k >> 2] = o + 1;
    r = d[o >> 0] | 0;
   } else r = xe(b) | 0;
   if ((r | 32 | 0) != 120) if (m) {
    s = r;
    t = 8;
    u = 46;
    break;
   } else {
    v = r;
    w = e;
    u = 32;
    break;
   }
   o = c[k >> 2] | 0;
   if (o >>> 0 < (c[l >> 2] | 0) >>> 0) {
    c[k >> 2] = o + 1;
    x = d[o >> 0] | 0;
   } else x = xe(b) | 0;
   if ((d[14958 + x >> 0] | 0) > 15) {
    o = (c[l >> 2] | 0) == 0;
    if (!o) c[k >> 2] = (c[k >> 2] | 0) + -1;
    if (!f) {
     we(b, 0);
     i = 0;
     j = 0;
     break a;
    }
    if (o) {
     i = 0;
     j = 0;
     break a;
    }
    c[k >> 2] = (c[k >> 2] | 0) + -1;
    i = 0;
    j = 0;
    break a;
   } else {
    s = x;
    t = 16;
    u = 46;
   }
  } else {
   o = m ? 10 : e;
   if (o >>> 0 > (d[14958 + q >> 0] | 0) >>> 0) {
    v = q;
    w = o;
    u = 32;
   } else {
    if (c[l >> 2] | 0) c[k >> 2] = (c[k >> 2] | 0) + -1;
    we(b, 0);
    c[(Gd() | 0) >> 2] = 22;
    i = 0;
    j = 0;
    break a;
   }
  } while (0);
  c : do if ((u | 0) == 32) if ((w | 0) == 10) {
   m = v + -48 | 0;
   if (m >>> 0 < 10) {
    o = 0;
    y = m;
    do {
     o = (o * 10 | 0) + y | 0;
     m = c[k >> 2] | 0;
     if (m >>> 0 < (c[l >> 2] | 0) >>> 0) {
      c[k >> 2] = m + 1;
      A = d[m >> 0] | 0;
     } else A = xe(b) | 0;
     y = A + -48 | 0;
    } while (y >>> 0 < 10 & o >>> 0 < 429496729);
    B = A;
    C = o;
    D = 0;
   } else {
    B = v;
    C = 0;
    D = 0;
   }
   y = B + -48 | 0;
   if (y >>> 0 < 10) {
    m = B;
    E = C;
    F = D;
    G = y;
    while (1) {
     y = pv(E | 0, F | 0, 10, 0) | 0;
     H = z;
     I = ((G | 0) < 0) << 31 >> 31;
     J = ~I;
     if (H >>> 0 > J >>> 0 | (H | 0) == (J | 0) & y >>> 0 > ~G >>> 0) {
      K = 10;
      L = m;
      M = E;
      N = F;
      u = 72;
      break c;
     }
     E = qv(y | 0, H | 0, G | 0, I | 0) | 0;
     F = z;
     I = c[k >> 2] | 0;
     if (I >>> 0 < (c[l >> 2] | 0) >>> 0) {
      c[k >> 2] = I + 1;
      P = d[I >> 0] | 0;
     } else P = xe(b) | 0;
     G = P + -48 | 0;
     if (!(G >>> 0 < 10 & (F >>> 0 < 429496729 | (F | 0) == 429496729 & E >>> 0 < 2576980378))) break; else m = P;
    }
    if (G >>> 0 > 9) {
     Q = p;
     R = F;
     S = E;
    } else {
     K = 10;
     L = P;
     M = E;
     N = F;
     u = 72;
    }
   } else {
    Q = p;
    R = D;
    S = C;
   }
  } else {
   s = v;
   t = w;
   u = 46;
  } while (0);
  d : do if ((u | 0) == 46) {
   if (!(t + -1 & t)) {
    m = a[15214 + ((t * 23 | 0) >>> 5 & 7) >> 0] | 0;
    o = a[14958 + s >> 0] | 0;
    I = o & 255;
    if (t >>> 0 > I >>> 0) {
     H = 0;
     y = I;
     do {
      H = y | H << m;
      I = c[k >> 2] | 0;
      if (I >>> 0 < (c[l >> 2] | 0) >>> 0) {
       c[k >> 2] = I + 1;
       T = d[I >> 0] | 0;
      } else T = xe(b) | 0;
      U = a[14958 + T >> 0] | 0;
      y = U & 255;
     } while (H >>> 0 < 134217728 & t >>> 0 > y >>> 0);
     V = T;
     W = U;
     X = 0;
     Y = H;
    } else {
     V = s;
     W = o;
     X = 0;
     Y = 0;
    }
    y = wv(-1, -1, m | 0) | 0;
    F = z;
    if (t >>> 0 <= (W & 255) >>> 0 | (F >>> 0 < X >>> 0 | (F | 0) == (X | 0) & y >>> 0 < Y >>> 0)) {
     K = t;
     L = V;
     M = Y;
     N = X;
     u = 72;
     break;
    } else {
     Z = Y;
     _ = X;
     $ = W;
    }
    while (1) {
     E = xv(Z | 0, _ | 0, m | 0) | 0;
     G = z;
     I = E | $ & 255;
     E = c[k >> 2] | 0;
     if (E >>> 0 < (c[l >> 2] | 0) >>> 0) {
      c[k >> 2] = E + 1;
      aa = d[E >> 0] | 0;
     } else aa = xe(b) | 0;
     $ = a[14958 + aa >> 0] | 0;
     if (t >>> 0 <= ($ & 255) >>> 0 | (G >>> 0 > F >>> 0 | (G | 0) == (F | 0) & I >>> 0 > y >>> 0)) {
      K = t;
      L = aa;
      M = I;
      N = G;
      u = 72;
      break d;
     } else {
      Z = I;
      _ = G;
     }
    }
   }
   y = a[14958 + s >> 0] | 0;
   F = y & 255;
   if (t >>> 0 > F >>> 0) {
    m = 0;
    o = F;
    do {
     m = o + (O(m, t) | 0) | 0;
     F = c[k >> 2] | 0;
     if (F >>> 0 < (c[l >> 2] | 0) >>> 0) {
      c[k >> 2] = F + 1;
      ba = d[F >> 0] | 0;
     } else ba = xe(b) | 0;
     ca = a[14958 + ba >> 0] | 0;
     o = ca & 255;
    } while (m >>> 0 < 119304647 & t >>> 0 > o >>> 0);
    da = ba;
    ea = ca;
    fa = m;
    ga = 0;
   } else {
    da = s;
    ea = y;
    fa = 0;
    ga = 0;
   }
   if (t >>> 0 > (ea & 255) >>> 0) {
    o = uv(-1, -1, t | 0, 0) | 0;
    F = z;
    H = da;
    G = ga;
    I = fa;
    E = ea;
    while (1) {
     if (G >>> 0 > F >>> 0 | (G | 0) == (F | 0) & I >>> 0 > o >>> 0) {
      K = t;
      L = H;
      M = I;
      N = G;
      u = 72;
      break d;
     }
     J = pv(I | 0, G | 0, t | 0, 0) | 0;
     ha = z;
     ia = E & 255;
     if (ha >>> 0 > 4294967295 | (ha | 0) == -1 & J >>> 0 > ~ia >>> 0) {
      K = t;
      L = H;
      M = I;
      N = G;
      u = 72;
      break d;
     }
     ja = qv(J | 0, ha | 0, ia | 0, 0) | 0;
     ia = z;
     ha = c[k >> 2] | 0;
     if (ha >>> 0 < (c[l >> 2] | 0) >>> 0) {
      c[k >> 2] = ha + 1;
      ka = d[ha >> 0] | 0;
     } else ka = xe(b) | 0;
     E = a[14958 + ka >> 0] | 0;
     if (t >>> 0 <= (E & 255) >>> 0) {
      K = t;
      L = ka;
      M = ja;
      N = ia;
      u = 72;
      break;
     } else {
      H = ka;
      G = ia;
      I = ja;
     }
    }
   } else {
    K = t;
    L = da;
    M = fa;
    N = ga;
    u = 72;
   }
  } while (0);
  if ((u | 0) == 72) if (K >>> 0 > (d[14958 + L >> 0] | 0) >>> 0) {
   do {
    I = c[k >> 2] | 0;
    if (I >>> 0 < (c[l >> 2] | 0) >>> 0) {
     c[k >> 2] = I + 1;
     la = d[I >> 0] | 0;
    } else la = xe(b) | 0;
   } while (K >>> 0 > (d[14958 + la >> 0] | 0) >>> 0);
   c[(Gd() | 0) >> 2] = 34;
   Q = (g & 1 | 0) == 0 & 0 == 0 ? p : 0;
   R = h;
   S = g;
  } else {
   Q = p;
   R = N;
   S = M;
  }
  if (c[l >> 2] | 0) c[k >> 2] = (c[k >> 2] | 0) + -1;
  if (!(R >>> 0 < h >>> 0 | (R | 0) == (h | 0) & S >>> 0 < g >>> 0)) {
   if (!((g & 1 | 0) != 0 | 0 != 0 | (Q | 0) != 0)) {
    c[(Gd() | 0) >> 2] = 34;
    I = qv(g | 0, h | 0, -1, -1) | 0;
    i = z;
    j = I;
    break;
   }
   if (R >>> 0 > h >>> 0 | (R | 0) == (h | 0) & S >>> 0 > g >>> 0) {
    c[(Gd() | 0) >> 2] = 34;
    i = h;
    j = g;
    break;
   }
  }
  I = ((Q | 0) < 0) << 31 >> 31;
  G = rv(S ^ Q | 0, R ^ I | 0, Q | 0, I | 0) | 0;
  i = z;
  j = G;
 } while (0);
 z = i;
 return j | 0;
}

function At(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0;
 f = l;
 l = l + 112 | 0;
 g = f + 88 | 0;
 h = f + 76 | 0;
 i = f + 64 | 0;
 j = f + 40 | 0;
 k = f + 16 | 0;
 m = f;
 n = f + 52 | 0;
 o = d;
 a : do if ((o - b | 0) > 3) {
  p = a[b >> 0] | 0;
  if (p << 24 >> 24 == 103) {
   q = (a[b + 1 >> 0] | 0) == 115;
   r = q ? b + 2 | 0 : b;
   s = q;
   t = r;
   u = a[r >> 0] | 0;
  } else {
   s = 0;
   t = b;
   u = p;
  }
  if (u << 24 >> 24 == 110) {
   p = a[t + 1 >> 0] | 0;
   switch (p << 24 >> 24) {
   case 97:
   case 119:
    break;
   default:
    {
     v = b;
     break a;
    }
   }
   r = p << 24 >> 24 == 97;
   p = t + 2 | 0;
   b : do if ((p | 0) != (d | 0)) {
    q = 0;
    w = p;
    while (1) {
     if ((a[w >> 0] | 0) == 95) break;
     x = kt(w, d, e) | 0;
     y = (x | 0) == (w | 0);
     z = (x | 0) == (d | 0);
     if (y | z) break b; else {
      q = q | (y | z) ^ 1;
      w = x;
     }
    }
    x = w + 1 | 0;
    z = Is(x, d, e) | 0;
    if (!((z | 0) == (x | 0) | (z | 0) == (d | 0))) {
     x = a[z >> 0] | 0;
     c : do if ((o - z | 0) > 2 & x << 24 >> 24 == 112) {
      if ((a[z + 1 >> 0] | 0) != 105) break b;
      y = z + 2 | 0;
      while (1) {
       if ((a[y >> 0] | 0) == 69) {
        A = 1;
        B = y;
        break c;
       }
       C = y;
       y = kt(y, d, e) | 0;
       if ((y | 0) == (C | 0) | (y | 0) == (d | 0)) break b;
      }
     } else if (x << 24 >> 24 == 69) {
      A = 0;
      B = z;
     } else break b; while (0);
     c[h >> 2] = 0;
     c[h + 4 >> 2] = 0;
     c[h + 8 >> 2] = 0;
     z = 0;
     while (1) {
      if ((z | 0) == 3) break;
      c[h + (z << 2) >> 2] = 0;
      z = z + 1 | 0;
     }
     d : do if (A) {
      z = e + 4 | 0;
      x = c[z >> 2] | 0;
      if ((c[e >> 2] | 0) == (x | 0)) {
       D = b;
       E = 1;
      } else {
       _s(i, x + -24 | 0);
       x = h + 11 | 0;
       if ((a[x >> 0] | 0) < 0) {
        w = c[h >> 2] | 0;
        a[g >> 0] = 0;
        mh(w, g);
        c[h + 4 >> 2] = 0;
       } else {
        a[g >> 0] = 0;
        mh(h, g);
        a[x >> 0] = 0;
       }
       lt(h);
       c[h >> 2] = c[i >> 2];
       c[h + 4 >> 2] = c[i + 4 >> 2];
       c[h + 8 >> 2] = c[i + 8 >> 2];
       x = 0;
       while (1) {
        if ((x | 0) == 3) break;
        c[i + (x << 2) >> 2] = 0;
        x = x + 1 | 0;
       }
       Es(i);
       x = c[z >> 2] | 0;
       w = x + -24 | 0;
       y = x;
       while (1) {
        if ((y | 0) == (w | 0)) {
         F = z;
         G = e;
         H = w;
         I = 31;
         break d;
        }
        x = y + -24 | 0;
        c[z >> 2] = x;
        ns(x);
        y = c[z >> 2] | 0;
       }
      }
     } else {
      z = e + 4 | 0;
      F = z;
      G = e;
      H = c[z >> 2] | 0;
      I = 31;
     } while (0);
     if ((I | 0) == 31) if ((c[G >> 2] | 0) == (H | 0)) {
      D = b;
      E = 1;
     } else {
      _s(i, H + -24 | 0);
      z = c[F >> 2] | 0;
      y = z + -24 | 0;
      w = z;
      while (1) {
       if ((w | 0) == (y | 0)) break;
       x = w + -24 | 0;
       c[F >> 2] = x;
       ns(x);
       w = c[F >> 2] | 0;
      }
      c[j >> 2] = 0;
      c[j + 4 >> 2] = 0;
      c[j + 8 >> 2] = 0;
      w = 0;
      while (1) {
       if ((w | 0) == 3) break;
       c[j + (w << 2) >> 2] = 0;
       w = w + 1 | 0;
      }
      e : do if (q) if ((c[G >> 2] | 0) == (y | 0)) {
       J = b;
       K = 1;
      } else {
       _s(k, z + -48 | 0);
       w = j + 11 | 0;
       if ((a[w >> 0] | 0) < 0) {
        x = c[j >> 2] | 0;
        a[g >> 0] = 0;
        mh(x, g);
        c[j + 4 >> 2] = 0;
       } else {
        a[g >> 0] = 0;
        mh(j, g);
        a[w >> 0] = 0;
       }
       lt(j);
       c[j >> 2] = c[k >> 2];
       c[j + 4 >> 2] = c[k + 4 >> 2];
       c[j + 8 >> 2] = c[k + 8 >> 2];
       w = 0;
       while (1) {
        if ((w | 0) == 3) break;
        c[k + (w << 2) >> 2] = 0;
        w = w + 1 | 0;
       }
       Es(k);
       w = c[F >> 2] | 0;
       x = w + -24 | 0;
       C = w;
       while (1) {
        if ((C | 0) == (x | 0)) {
         I = 49;
         break e;
        }
        w = C + -24 | 0;
        c[F >> 2] = w;
        ns(w);
        C = c[F >> 2] | 0;
       }
      } else I = 49; while (0);
      if ((I | 0) == 49) {
       c[g >> 2] = 0;
       c[g + 4 >> 2] = 0;
       c[g + 8 >> 2] = 0;
       z = 0;
       while (1) {
        if ((z | 0) == 3) break;
        c[g + (z << 2) >> 2] = 0;
        z = z + 1 | 0;
       }
       if (s) Nt(g, 18980);
       if (r) Ms(g, 19190) | 0; else Ms(g, 18940) | 0;
       if (q) {
        mt(m, 18908, j);
        Ms(m, 19194) | 0;
        c[k >> 2] = c[m >> 2];
        c[k + 4 >> 2] = c[m + 4 >> 2];
        c[k + 8 >> 2] = c[m + 8 >> 2];
        z = 0;
        while (1) {
         if ((z | 0) == 3) break;
         c[m + (z << 2) >> 2] = 0;
         z = z + 1 | 0;
        }
        z = a[k + 11 >> 0] | 0;
        q = z << 24 >> 24 < 0;
        qs(g, q ? c[k >> 2] | 0 : k, q ? c[k + 4 >> 2] | 0 : z & 255) | 0;
        Es(k);
        Es(m);
       }
       z = a[i + 11 >> 0] | 0;
       q = z << 24 >> 24 < 0;
       qs(g, q ? c[i >> 2] | 0 : i, q ? c[i + 4 >> 2] | 0 : z & 255) | 0;
       if (A) {
        mt(m, 18903, h);
        Ms(m, 18906) | 0;
        c[k >> 2] = c[m >> 2];
        c[k + 4 >> 2] = c[m + 4 >> 2];
        c[k + 8 >> 2] = c[m + 8 >> 2];
        z = 0;
        while (1) {
         if ((z | 0) == 3) break;
         c[m + (z << 2) >> 2] = 0;
         z = z + 1 | 0;
        }
        z = a[k + 11 >> 0] | 0;
        q = z << 24 >> 24 < 0;
        qs(g, q ? c[k >> 2] | 0 : k, q ? c[k + 4 >> 2] | 0 : z & 255) | 0;
        Es(k);
        Es(m);
       };
       c[n >> 2] = c[g >> 2];
       c[n + 4 >> 2] = c[g + 4 >> 2];
       c[n + 8 >> 2] = c[g + 8 >> 2];
       z = 0;
       while (1) {
        if ((z | 0) == 3) break;
        c[g + (z << 2) >> 2] = 0;
        z = z + 1 | 0;
       }
       bt(k, n);
       z = c[F >> 2] | 0;
       if (z >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
        dt(z, k);
        c[F >> 2] = (c[F >> 2] | 0) + 24;
       } else et(e, k);
       ns(k);
       Es(n);
       Es(g);
       J = B + 1 | 0;
       K = 0;
      }
      Es(j);
      Es(i);
      D = J;
      E = K;
     }
     Es(h);
     if (!E) {
      v = D;
      break a;
     }
    }
   } while (0);
   v = b;
  } else v = b;
 } else v = b; while (0);
 l = f;
 return v | 0;
}

function Vt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0;
 f = l;
 l = l + 80 | 0;
 g = f + 68 | 0;
 h = f + 16 | 0;
 i = f + 56 | 0;
 j = f + 44 | 0;
 k = f;
 m = f + 40 | 0;
 a : do if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 85) {
  switch (a[b + 1 >> 0] | 0) {
  case 116:
   {
    c[i >> 2] = 0;
    c[i + 4 >> 2] = 0;
    c[i + 8 >> 2] = 0;
    n = lh(19709) | 0;
    if (n >>> 0 > 4294967279) _q(i);
    if (n >>> 0 < 11) {
     a[i + 11 >> 0] = n;
     o = i;
    } else {
     p = n + 16 & -16;
     q = Bs(p) | 0;
     c[i >> 2] = q;
     c[i + 8 >> 2] = p | -2147483648;
     c[i + 4 >> 2] = n;
     o = q;
    }
    sg(o, 19709, n) | 0;
    a[g >> 0] = 0;
    mh(o + n | 0, g);
    bt(h, i);
    n = e + 4 | 0;
    q = c[n >> 2] | 0;
    if (q >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(q, h);
     c[n >> 2] = (c[n >> 2] | 0) + 24;
    } else et(e, h);
    ns(h);
    Es(i);
    q = b + 2 | 0;
    if ((q | 0) == (d | 0)) {
     p = c[n >> 2] | 0;
     r = p + -24 | 0;
     s = p;
     while (1) {
      if ((s | 0) == (r | 0)) {
       t = b;
       break a;
      }
      p = s + -24 | 0;
      c[n >> 2] = p;
      ns(p);
      s = c[n >> 2] | 0;
     }
    }
    if (((a[q >> 0] | 0) + -48 | 0) >>> 0 < 10) {
     s = b + 3 | 0;
     while (1) {
      if ((s | 0) == (d | 0)) {
       u = d;
       break;
      }
      if (((a[s >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
       u = s;
       break;
      }
      s = s + 1 | 0;
     }
     cu((c[n >> 2] | 0) + -24 | 0, q, u);
     v = u;
    } else v = q;
    du((c[n >> 2] | 0) + -24 | 0, 39);
    if ((v | 0) != (d | 0)) if ((a[v >> 0] | 0) == 95) {
     t = v + 1 | 0;
     break a;
    }
    s = c[n >> 2] | 0;
    r = s + -24 | 0;
    p = s;
    while (1) {
     if ((p | 0) == (r | 0)) {
      t = b;
      break a;
     }
     s = p + -24 | 0;
     c[n >> 2] = s;
     ns(s);
     p = c[n >> 2] | 0;
    }
    break;
   }
  case 108:
   break;
  default:
   {
    t = b;
    break a;
   }
  }
  c[j >> 2] = 0;
  c[j + 4 >> 2] = 0;
  c[j + 8 >> 2] = 0;
  n = lh(19718) | 0;
  if (n >>> 0 > 4294967279) _q(j);
  if (n >>> 0 < 11) {
   a[j + 11 >> 0] = n;
   w = j;
  } else {
   p = n + 16 & -16;
   r = Bs(p) | 0;
   c[j >> 2] = r;
   c[j + 8 >> 2] = p | -2147483648;
   c[j + 4 >> 2] = n;
   w = r;
  }
  sg(w, 19718, n) | 0;
  a[g >> 0] = 0;
  mh(w + n | 0, g);
  bt(h, j);
  n = e + 4 | 0;
  r = c[n >> 2] | 0;
  if (r >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
   dt(r, h);
   c[n >> 2] = (c[n >> 2] | 0) + 24;
  } else et(e, h);
  ns(h);
  Es(j);
  r = b + 2 | 0;
  do if ((a[r >> 0] | 0) == 118) {
   du((c[n >> 2] | 0) + -24 | 0, 41);
   x = b + 3 | 0;
  } else {
   p = Is(r, d, e) | 0;
   if ((p | 0) == (r | 0)) {
    q = c[n >> 2] | 0;
    s = q + -24 | 0;
    y = q;
    while (1) {
     if ((y | 0) == (s | 0)) {
      t = b;
      break a;
     }
     q = y + -24 | 0;
     c[n >> 2] = q;
     ns(q);
     y = c[n >> 2] | 0;
    }
   }
   y = c[n >> 2] | 0;
   if (((y - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
    t = b;
    break a;
   }
   _s(h, y + -24 | 0);
   y = c[n >> 2] | 0;
   s = y + -24 | 0;
   q = y;
   while (1) {
    if ((q | 0) == (s | 0)) break;
    z = q + -24 | 0;
    c[n >> 2] = z;
    ns(z);
    q = c[n >> 2] | 0;
   }
   q = h + 11 | 0;
   s = a[q >> 0] | 0;
   z = s << 24 >> 24 < 0;
   A = h + 4 | 0;
   qs(y + -48 | 0, z ? c[h >> 2] | 0 : h, z ? c[A >> 2] | 0 : s & 255) | 0;
   s = p;
   while (1) {
    z = Is(s, d, e) | 0;
    if ((z | 0) == (s | 0)) {
     B = 60;
     break;
    }
    C = c[n >> 2] | 0;
    if (((C - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     B = 85;
     break;
    }
    _s(k, C + -24 | 0);
    if ((a[q >> 0] | 0) < 0) {
     C = c[h >> 2] | 0;
     a[g >> 0] = 0;
     mh(C, g);
     c[A >> 2] = 0;
    } else {
     a[g >> 0] = 0;
     mh(h, g);
     a[q >> 0] = 0;
    }
    lt(h);
    c[h >> 2] = c[k >> 2];
    c[h + 4 >> 2] = c[k + 4 >> 2];
    c[h + 8 >> 2] = c[k + 8 >> 2];
    C = 0;
    while (1) {
     if ((C | 0) == 3) break;
     c[k + (C << 2) >> 2] = 0;
     C = C + 1 | 0;
    }
    Es(k);
    C = c[n >> 2] | 0;
    D = C + -24 | 0;
    E = C;
    while (1) {
     if ((E | 0) == (D | 0)) break;
     F = E + -24 | 0;
     c[n >> 2] = F;
     ns(F);
     E = c[n >> 2] | 0;
    }
    E = a[q >> 0] | 0;
    if (!((E << 24 >> 24 < 0 ? c[A >> 2] | 0 : E & 255) | 0)) {
     s = z;
     continue;
    }
    Ms(C + -48 | 0, 19130) | 0;
    E = a[q >> 0] | 0;
    D = E << 24 >> 24 < 0;
    qs((c[n >> 2] | 0) + -24 | 0, D ? c[h >> 2] | 0 : h, D ? c[A >> 2] | 0 : E & 255) | 0;
    s = z;
   }
   if ((B | 0) == 60) {
    Ms((c[n >> 2] | 0) + -24 | 0, 18906) | 0;
    Es(h);
    x = s;
    break;
   } else if ((B | 0) == 85) {
    Es(h);
    t = b;
    break a;
   }
  } while (0);
  if ((x | 0) != (d | 0)) if ((a[x >> 0] | 0) == 69) {
   r = x + 1 | 0;
   if ((r | 0) == (d | 0)) {
    A = c[n >> 2] | 0;
    q = A + -24 | 0;
    p = A;
    while (1) {
     if ((p | 0) == (q | 0)) {
      t = b;
      break a;
     }
     A = p + -24 | 0;
     c[n >> 2] = A;
     ns(A);
     p = c[n >> 2] | 0;
    }
   }
   if (((a[r >> 0] | 0) + -48 | 0) >>> 0 < 10) {
    p = x + 2 | 0;
    while (1) {
     if ((p | 0) == (d | 0)) {
      G = d;
      break;
     }
     if (((a[p >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
      G = p;
      break;
     }
     p = p + 1 | 0;
    }
    p = (c[n >> 2] | 0) + -24 | 0;
    if ((a[p + 11 >> 0] | 0) < 0) H = c[p >> 2] | 0; else H = p;
    c[m >> 2] = H + 7;
    c[g >> 2] = c[m >> 2];
    eu(p, g, r, G) | 0;
    I = G;
   } else I = r;
   if ((I | 0) != (d | 0)) if ((a[I >> 0] | 0) == 95) {
    t = I + 1 | 0;
    break;
   }
   p = c[n >> 2] | 0;
   q = p + -24 | 0;
   A = p;
   while (1) {
    if ((A | 0) == (q | 0)) {
     t = b;
     break a;
    }
    p = A + -24 | 0;
    c[n >> 2] = p;
    ns(p);
    A = c[n >> 2] | 0;
   }
  }
  A = c[n >> 2] | 0;
  q = A + -24 | 0;
  r = A;
  while (1) {
   if ((r | 0) == (q | 0)) {
    t = b;
    break a;
   }
   A = r + -24 | 0;
   c[n >> 2] = A;
   ns(A);
   r = c[n >> 2] | 0;
  }
 } else t = b; else t = b; while (0);
 l = f;
 return t | 0;
}

function av(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0;
 f = l;
 l = l + 64 | 0;
 g = f + 60 | 0;
 h = f + 48 | 0;
 i = f + 36 | 0;
 j = f + 24 | 0;
 k = f + 12 | 0;
 m = f;
 a : do if ((d - b | 0) > 2) {
  switch (a[b >> 0] | 0) {
  case 84:
   break;
  case 71:
   {
    switch (a[b + 1 >> 0] | 0) {
    case 86:
     {
      n = b + 2 | 0;
      o = ft(n, d, e) | 0;
      if ((o | 0) == (n | 0)) {
       p = b;
       q = 60;
       break a;
      }
      n = c[e + 4 >> 2] | 0;
      if ((c[e >> 2] | 0) == (n | 0)) {
       r = b;
       break a;
      }
      Ls(n + -24 | 0, 0, 20738) | 0;
      p = o;
      q = 60;
      break a;
      break;
     }
    case 82:
     {
      o = b + 2 | 0;
      n = ft(o, d, e) | 0;
      if ((n | 0) == (o | 0)) {
       p = b;
       q = 60;
       break a;
      }
      o = c[e + 4 >> 2] | 0;
      if ((c[e >> 2] | 0) == (o | 0)) {
       r = b;
       break a;
      }
      Ls(o + -24 | 0, 0, 20758) | 0;
      p = n;
      q = 60;
      break a;
      break;
     }
    default:
     {
      p = b;
      q = 60;
      break a;
     }
    }
    break;
   }
  default:
   {
    p = b;
    q = 60;
    break a;
   }
  }
  n = b + 1 | 0;
  switch (a[n >> 0] | 0) {
  case 86:
   {
    o = b + 2 | 0;
    s = Is(o, d, e) | 0;
    if ((s | 0) == (o | 0)) {
     p = b;
     q = 60;
     break a;
    }
    o = c[e + 4 >> 2] | 0;
    if ((c[e >> 2] | 0) == (o | 0)) {
     r = b;
     break a;
    }
    Ls(o + -24 | 0, 0, 20587) | 0;
    p = s;
    q = 60;
    break a;
    break;
   }
  case 84:
   {
    s = b + 2 | 0;
    o = Is(s, d, e) | 0;
    if ((o | 0) == (s | 0)) {
     p = b;
     q = 60;
     break a;
    }
    s = c[e + 4 >> 2] | 0;
    if ((c[e >> 2] | 0) == (s | 0)) {
     r = b;
     break a;
    }
    Ls(s + -24 | 0, 0, 20599) | 0;
    p = o;
    q = 60;
    break a;
    break;
   }
  case 73:
   {
    o = b + 2 | 0;
    s = Is(o, d, e) | 0;
    if ((s | 0) == (o | 0)) {
     p = b;
     q = 60;
     break a;
    }
    o = c[e + 4 >> 2] | 0;
    if ((c[e >> 2] | 0) == (o | 0)) {
     r = b;
     break a;
    }
    Ls(o + -24 | 0, 0, 20608) | 0;
    p = s;
    q = 60;
    break a;
    break;
   }
  case 83:
   {
    s = b + 2 | 0;
    o = Is(s, d, e) | 0;
    if ((o | 0) == (s | 0)) {
     p = b;
     q = 60;
     break a;
    }
    s = c[e + 4 >> 2] | 0;
    if ((c[e >> 2] | 0) == (s | 0)) {
     r = b;
     break a;
    }
    Ls(s + -24 | 0, 0, 20622) | 0;
    p = o;
    q = 60;
    break a;
    break;
   }
  case 99:
   {
    o = b + 2 | 0;
    s = dv(o, d) | 0;
    if ((s | 0) == (o | 0)) {
     p = b;
     q = 60;
     break a;
    }
    o = dv(s, d) | 0;
    if ((o | 0) == (s | 0)) {
     p = b;
     q = 60;
     break a;
    }
    s = Fs(o, d, e) | 0;
    if ((s | 0) == (o | 0)) {
     p = b;
     q = 60;
     break a;
    }
    o = c[e + 4 >> 2] | 0;
    if ((c[e >> 2] | 0) == (o | 0)) {
     r = b;
     break a;
    }
    Ls(o + -24 | 0, 0, 20641) | 0;
    p = s;
    q = 60;
    break a;
    break;
   }
  case 67:
   {
    s = b + 2 | 0;
    o = Is(s, d, e) | 0;
    if ((o | 0) == (s | 0)) {
     p = b;
     q = 60;
     break a;
    }
    s = jt(o, d) | 0;
    if ((s | 0) == (o | 0) | (s | 0) == (d | 0)) {
     p = b;
     q = 60;
     break a;
    }
    if ((a[s >> 0] | 0) != 95) {
     p = b;
     q = 60;
     break a;
    }
    o = s + 1 | 0;
    s = Is(o, d, e) | 0;
    if ((s | 0) == (o | 0)) {
     p = b;
     q = 60;
     break a;
    }
    o = e + 4 | 0;
    t = c[o >> 2] | 0;
    if (((t - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     r = b;
     break a;
    }
    _s(h, t + -24 | 0);
    t = c[o >> 2] | 0;
    u = t + -24 | 0;
    v = t;
    while (1) {
     if ((v | 0) == (u | 0)) break;
     t = v + -24 | 0;
     c[o >> 2] = t;
     ns(t);
     v = c[o >> 2] | 0;
    }
    Ls(h, 0, 20668) | 0;
    c[k >> 2] = c[h >> 2];
    c[k + 4 >> 2] = c[h + 4 >> 2];
    c[k + 8 >> 2] = c[h + 8 >> 2];
    v = 0;
    while (1) {
     if ((v | 0) == 3) break;
     c[h + (v << 2) >> 2] = 0;
     v = v + 1 | 0;
    }
    Ms(k, 20693) | 0;
    c[j >> 2] = c[k >> 2];
    c[j + 4 >> 2] = c[k + 4 >> 2];
    c[j + 8 >> 2] = c[k + 8 >> 2];
    v = 0;
    while (1) {
     if ((v | 0) == 3) break;
     c[k + (v << 2) >> 2] = 0;
     v = v + 1 | 0;
    }
    _s(m, (c[o >> 2] | 0) + -24 | 0);
    v = a[m + 11 >> 0] | 0;
    u = v << 24 >> 24 < 0;
    qs(j, u ? c[m >> 2] | 0 : m, u ? c[m + 4 >> 2] | 0 : v & 255) | 0;
    c[i >> 2] = c[j >> 2];
    c[i + 4 >> 2] = c[j + 4 >> 2];
    c[i + 8 >> 2] = c[j + 8 >> 2];
    v = 0;
    while (1) {
     if ((v | 0) == 3) break;
     c[j + (v << 2) >> 2] = 0;
     v = v + 1 | 0;
    }
    v = c[o >> 2] | 0;
    u = v + -24 | 0;
    t = u + 11 | 0;
    if ((a[t >> 0] | 0) < 0) {
     w = c[u >> 2] | 0;
     a[g >> 0] = 0;
     mh(w, g);
     c[v + -20 >> 2] = 0;
    } else {
     a[g >> 0] = 0;
     mh(u, g);
     a[t >> 0] = 0;
    }
    lt(u);
    c[u >> 2] = c[i >> 2];
    c[u + 4 >> 2] = c[i + 4 >> 2];
    c[u + 8 >> 2] = c[i + 8 >> 2];
    u = 0;
    while (1) {
     if ((u | 0) == 3) break;
     c[i + (u << 2) >> 2] = 0;
     u = u + 1 | 0;
    }
    Es(i);
    Es(m);
    Es(j);
    Es(k);
    Es(h);
    p = s;
    q = 60;
    break a;
    break;
   }
  default:
   {
    u = dv(n, d) | 0;
    do if ((u | 0) == (n | 0)) {
     x = 3;
     y = b;
    } else {
     o = Fs(u, d, e) | 0;
     if ((o | 0) == (u | 0)) {
      x = 0;
      y = b;
     } else {
      t = c[e + 4 >> 2] | 0;
      if ((c[e >> 2] | 0) == (t | 0)) {
       x = 1;
       y = b;
      } else {
       v = t + -24 | 0;
       if ((a[b + 2 >> 0] | 0) == 118) {
        Ls(v, 0, 20698) | 0;
        x = 0;
        y = o;
        break;
       } else {
        Ls(v, 0, 20716) | 0;
        x = 0;
        y = o;
        break;
       }
      }
     }
    } while (0);
    switch (x & 3) {
    case 3:
    case 0:
     {
      p = y;
      q = 60;
      break a;
      break;
     }
    default:
     {}
    }
    if (!x) {
     p = y;
     q = 60;
     break a;
    } else {
     r = b;
     break a;
    }
   }
  }
 } else {
  p = b;
  q = 60;
 } while (0);
 if ((q | 0) == 60) r = p;
 l = f;
 return r | 0;
}

function Ee(a, b, e, f, g) {
 a = a | 0;
 b = b | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0.0, q = 0.0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0.0, H = 0.0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0.0, Q = 0.0, R = 0, S = 0.0, T = 0.0, U = 0, V = 0, W = 0, X = 0.0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0.0, da = 0, ea = 0.0;
 h = a + 4 | 0;
 i = c[h >> 2] | 0;
 j = a + 100 | 0;
 if (i >>> 0 < (c[j >> 2] | 0) >>> 0) {
  c[h >> 2] = i + 1;
  k = d[i >> 0] | 0;
  l = 0;
 } else {
  k = xe(a) | 0;
  l = 0;
 }
 a : while (1) {
  switch (k | 0) {
  case 46:
   {
    m = 8;
    break a;
    break;
   }
  case 48:
   break;
  default:
   {
    n = 0;
    o = 0;
    p = 1.0;
    q = 0.0;
    r = 0;
    s = k;
    t = l;
    u = 0;
    v = 0;
    w = 0;
    x = 0;
    break a;
   }
  }
  i = c[h >> 2] | 0;
  if (i >>> 0 < (c[j >> 2] | 0) >>> 0) {
   c[h >> 2] = i + 1;
   k = d[i >> 0] | 0;
   l = 1;
   continue;
  } else {
   k = xe(a) | 0;
   l = 1;
   continue;
  }
 }
 if ((m | 0) == 8) {
  k = c[h >> 2] | 0;
  if (k >>> 0 < (c[j >> 2] | 0) >>> 0) {
   c[h >> 2] = k + 1;
   y = d[k >> 0] | 0;
  } else y = xe(a) | 0;
  if ((y | 0) == 48) {
   k = 0;
   i = 0;
   while (1) {
    A = c[h >> 2] | 0;
    if (A >>> 0 < (c[j >> 2] | 0) >>> 0) {
     c[h >> 2] = A + 1;
     B = d[A >> 0] | 0;
    } else B = xe(a) | 0;
    A = qv(k | 0, i | 0, -1, -1) | 0;
    C = z;
    if ((B | 0) == 48) {
     k = A;
     i = C;
    } else {
     n = 1;
     o = 0;
     p = 1.0;
     q = 0.0;
     r = 0;
     s = B;
     t = 1;
     u = 0;
     v = 0;
     w = A;
     x = C;
     break;
    }
   }
  } else {
   n = 1;
   o = 0;
   p = 1.0;
   q = 0.0;
   r = 0;
   s = y;
   t = l;
   u = 0;
   v = 0;
   w = 0;
   x = 0;
  }
 }
 while (1) {
  l = s + -48 | 0;
  y = s | 32;
  if (l >>> 0 < 10) m = 20; else {
   B = (s | 0) == 46;
   if (!(B | (y + -97 | 0) >>> 0 < 6)) {
    D = s;
    break;
   }
   if (B) if (!n) {
    E = 1;
    F = o;
    G = p;
    H = q;
    I = r;
    J = t;
    K = v;
    L = u;
    M = v;
    N = u;
   } else {
    D = 46;
    break;
   } else m = 20;
  }
  if ((m | 0) == 20) {
   m = 0;
   B = (s | 0) > 57 ? y + -87 | 0 : l;
   do if ((u | 0) < 0 | (u | 0) == 0 & v >>> 0 < 8) {
    O = o;
    P = p;
    Q = q;
    R = B + (r << 4) | 0;
   } else if ((u | 0) < 0 | (u | 0) == 0 & v >>> 0 < 14) {
    S = p * .0625;
    O = o;
    P = S;
    Q = q + S * +(B | 0);
    R = r;
    break;
   } else {
    l = (o | 0) != 0 | (B | 0) == 0;
    O = l ? o : 1;
    P = p;
    Q = l ? q : q + p * .5;
    R = r;
    break;
   } while (0);
   B = qv(v | 0, u | 0, 1, 0) | 0;
   E = n;
   F = O;
   G = P;
   H = Q;
   I = R;
   J = 1;
   K = w;
   L = x;
   M = B;
   N = z;
  }
  B = c[h >> 2] | 0;
  if (B >>> 0 < (c[j >> 2] | 0) >>> 0) {
   c[h >> 2] = B + 1;
   n = E;
   o = F;
   p = G;
   q = H;
   r = I;
   s = d[B >> 0] | 0;
   t = J;
   u = N;
   v = M;
   w = K;
   x = L;
   continue;
  } else {
   n = E;
   o = F;
   p = G;
   q = H;
   r = I;
   s = xe(a) | 0;
   t = J;
   u = N;
   v = M;
   w = K;
   x = L;
   continue;
  }
 }
 do if (!t) {
  L = (c[j >> 2] | 0) == 0;
  if (!L) c[h >> 2] = (c[h >> 2] | 0) + -1;
  if (!g) we(a, 0); else {
   if (!L) c[h >> 2] = (c[h >> 2] | 0) + -1;
   if (!((n | 0) == 0 | L)) c[h >> 2] = (c[h >> 2] | 0) + -1;
  }
  T = +(f | 0) * 0.0;
 } else {
  L = (n | 0) == 0;
  K = L ? v : w;
  M = L ? u : x;
  if ((u | 0) < 0 | (u | 0) == 0 & v >>> 0 < 8) {
   L = r;
   N = v;
   J = u;
   while (1) {
    s = L << 4;
    I = N;
    N = qv(N | 0, J | 0, 1, 0) | 0;
    if (!((J | 0) < 0 | (J | 0) == 0 & I >>> 0 < 7)) {
     U = s;
     break;
    } else {
     L = s;
     J = z;
    }
   }
  } else U = r;
  if ((D | 32 | 0) == 112) {
   J = Ge(a, g) | 0;
   L = z;
   if ((J | 0) == 0 & (L | 0) == -2147483648) {
    if (!g) {
     we(a, 0);
     T = 0.0;
     break;
    }
    if (!(c[j >> 2] | 0)) {
     V = 0;
     W = 0;
    } else {
     c[h >> 2] = (c[h >> 2] | 0) + -1;
     V = 0;
     W = 0;
    }
   } else {
    V = J;
    W = L;
   }
  } else if (!(c[j >> 2] | 0)) {
   V = 0;
   W = 0;
  } else {
   c[h >> 2] = (c[h >> 2] | 0) + -1;
   V = 0;
   W = 0;
  }
  L = xv(K | 0, M | 0, 2) | 0;
  J = qv(L | 0, z | 0, -32, -1) | 0;
  L = qv(J | 0, z | 0, V | 0, W | 0) | 0;
  J = z;
  if (!U) {
   T = +(f | 0) * 0.0;
   break;
  }
  N = 0 - e | 0;
  s = ((N | 0) < 0) << 31 >> 31;
  if ((J | 0) > (s | 0) | (J | 0) == (s | 0) & L >>> 0 > N >>> 0) {
   c[(Gd() | 0) >> 2] = 34;
   T = +(f | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
   break;
  }
  N = e + -106 | 0;
  s = ((N | 0) < 0) << 31 >> 31;
  if ((J | 0) < (s | 0) | (J | 0) == (s | 0) & L >>> 0 < N >>> 0) {
   c[(Gd() | 0) >> 2] = 34;
   T = +(f | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
   break;
  }
  if ((U | 0) > -1) {
   H = q;
   N = U;
   s = L;
   I = J;
   while (1) {
    F = !(H >= .5);
    o = N << 1 | (F ^ 1) & 1;
    G = H + (F ? H : H + -1.0);
    F = qv(s | 0, I | 0, -1, -1) | 0;
    E = z;
    if ((o | 0) > -1) {
     H = G;
     N = o;
     s = F;
     I = E;
    } else {
     X = G;
     Y = o;
     Z = F;
     _ = E;
     break;
    }
   }
  } else {
   X = q;
   Y = U;
   Z = L;
   _ = J;
  }
  I = ((b | 0) < 0) << 31 >> 31;
  s = rv(32, 0, e | 0, ((e | 0) < 0) << 31 >> 31 | 0) | 0;
  N = qv(s | 0, z | 0, Z | 0, _ | 0) | 0;
  s = z;
  if ((s | 0) < (I | 0) | (s | 0) == (I | 0) & N >>> 0 < b >>> 0) if ((N | 0) > 0) {
   $ = N;
   m = 59;
  } else {
   aa = 0;
   ba = 84;
   m = 61;
  } else {
   $ = b;
   m = 59;
  }
  if ((m | 0) == 59) if (($ | 0) < 53) {
   aa = $;
   ba = 84 - $ | 0;
   m = 61;
  } else {
   ca = 0.0;
   da = $;
   ea = +(f | 0);
  }
  if ((m | 0) == 61) {
   H = +(f | 0);
   ca = +Ie(+He(1.0, ba), H);
   da = aa;
   ea = H;
  }
  N = (Y & 1 | 0) == 0 & (X != 0.0 & (da | 0) < 32);
  H = (N ? 0.0 : X) * ea + (ca + ea * +((Y + (N & 1) | 0) >>> 0)) - ca;
  if (!(H != 0.0)) c[(Gd() | 0) >> 2] = 34;
  T = +Ke(H, Z);
 } while (0);
 return +T;
}

function Pk(d, e, f, g, h, i, j, k) {
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 var m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0;
 m = l;
 l = l + 16 | 0;
 n = m + 12 | 0;
 o = m + 8 | 0;
 p = m + 4 | 0;
 q = m;
 qh(n, g);
 r = Ji(n, 23108) | 0;
 Ki(n);
 c[h >> 2] = 0;
 s = r + 8 | 0;
 t = j;
 j = 0;
 a : while (1) {
  u = (t | 0) != (k | 0);
  v = j;
  while (1) {
   w = c[e >> 2] | 0;
   if (!(u & (v | 0) == 0)) {
    x = w;
    break a;
   }
   y = w;
   if (!w) {
    z = 0;
    A = 1;
    B = y;
   } else {
    C = c[w + 12 >> 2] | 0;
    if ((C | 0) == (c[w + 16 >> 2] | 0)) D = pc[c[(c[w >> 2] | 0) + 36 >> 2] & 63](w) | 0; else D = rg(a[C >> 0] | 0) | 0;
    if (ph(D, qg() | 0) | 0) {
     c[e >> 2] = 0;
     z = 0;
     A = 1;
     B = 0;
    } else {
     z = w;
     A = 0;
     B = y;
    }
   }
   y = c[f >> 2] | 0;
   w = y;
   do if (!y) {
    E = w;
    F = 16;
   } else {
    C = c[y + 12 >> 2] | 0;
    if ((C | 0) == (c[y + 16 >> 2] | 0)) G = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else G = rg(a[C >> 0] | 0) | 0;
    if (ph(G, qg() | 0) | 0) {
     c[f >> 2] = 0;
     E = 0;
     F = 16;
     break;
    } else if (A) {
     H = y;
     I = w;
     break;
    } else {
     F = 62;
     break a;
    }
   } while (0);
   if ((F | 0) == 16) {
    F = 0;
    if (A) {
     F = 62;
     break a;
    } else {
     H = 0;
     I = E;
    }
   }
   if ((rc[c[(c[r >> 2] | 0) + 36 >> 2] & 31](r, a[t >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
    F = 19;
    break;
   }
   w = a[t >> 0] | 0;
   if (w << 24 >> 24 > -1) {
    J = c[s >> 2] | 0;
    if (b[J + (w << 24 >> 24 << 1) >> 1] & 8192) {
     K = t;
     F = 26;
     break;
    }
   }
   L = z + 12 | 0;
   w = c[L >> 2] | 0;
   M = z + 16 | 0;
   if ((w | 0) == (c[M >> 2] | 0)) N = pc[c[(c[z >> 2] | 0) + 36 >> 2] & 63](z) | 0; else N = rg(a[w >> 0] | 0) | 0;
   w = qc[c[(c[r >> 2] | 0) + 12 >> 2] & 31](r, N & 255) | 0;
   if (w << 24 >> 24 == (qc[c[(c[r >> 2] | 0) + 12 >> 2] & 31](r, a[t >> 0] | 0) | 0) << 24 >> 24) {
    F = 56;
    break;
   }
   c[h >> 2] = 4;
   v = 4;
  }
  b : do if ((F | 0) == 19) {
   F = 0;
   v = t + 1 | 0;
   if ((v | 0) == (k | 0)) {
    F = 62;
    break a;
   }
   u = rc[c[(c[r >> 2] | 0) + 36 >> 2] & 31](r, a[v >> 0] | 0, 0) | 0;
   switch (u << 24 >> 24) {
   case 48:
   case 69:
    {
     w = t + 2 | 0;
     if ((w | 0) == (k | 0)) {
      F = 62;
      break a;
     }
     O = u;
     P = rc[c[(c[r >> 2] | 0) + 36 >> 2] & 31](r, a[w >> 0] | 0, 0) | 0;
     Q = v;
     break;
    }
   default:
    {
     O = 0;
     P = u;
     Q = t;
    }
   }
   u = c[(c[d >> 2] | 0) + 36 >> 2] | 0;
   c[p >> 2] = B;
   c[q >> 2] = I;
   c[o >> 2] = c[p >> 2];
   c[n >> 2] = c[q >> 2];
   c[e >> 2] = yc[u & 15](d, o, n, g, h, i, P, O) | 0;
   R = Q + 2 | 0;
  } else if ((F | 0) == 26) {
   while (1) {
    F = 0;
    u = K + 1 | 0;
    if ((u | 0) == (k | 0)) {
     S = k;
     break;
    }
    v = a[u >> 0] | 0;
    if (v << 24 >> 24 <= -1) {
     S = u;
     break;
    }
    if (!(b[J + (v << 24 >> 24 << 1) >> 1] & 8192)) {
     S = u;
     break;
    } else {
     K = u;
     F = 26;
    }
   }
   u = z;
   v = H;
   w = H;
   while (1) {
    if (!u) {
     T = 1;
     U = 0;
    } else {
     y = c[u + 12 >> 2] | 0;
     if ((y | 0) == (c[u + 16 >> 2] | 0)) V = pc[c[(c[u >> 2] | 0) + 36 >> 2] & 63](u) | 0; else V = rg(a[y >> 0] | 0) | 0;
     if (ph(V, qg() | 0) | 0) {
      c[e >> 2] = 0;
      T = 1;
      U = 0;
     } else {
      T = 0;
      U = u;
     }
    }
    do if (!w) {
     W = v;
     F = 42;
    } else {
     y = c[w + 12 >> 2] | 0;
     if ((y | 0) == (c[w + 16 >> 2] | 0)) X = pc[c[(c[w >> 2] | 0) + 36 >> 2] & 63](w) | 0; else X = rg(a[y >> 0] | 0) | 0;
     if (ph(X, qg() | 0) | 0) {
      c[f >> 2] = 0;
      W = 0;
      F = 42;
      break;
     } else if (T ^ (v | 0) == 0) {
      Y = v;
      Z = v;
      break;
     } else {
      R = S;
      break b;
     }
    } while (0);
    if ((F | 0) == 42) {
     F = 0;
     if (T) {
      R = S;
      break b;
     } else {
      Y = W;
      Z = 0;
     }
    }
    y = U + 12 | 0;
    C = c[y >> 2] | 0;
    _ = U + 16 | 0;
    if ((C | 0) == (c[_ >> 2] | 0)) $ = pc[c[(c[U >> 2] | 0) + 36 >> 2] & 63](U) | 0; else $ = rg(a[C >> 0] | 0) | 0;
    if (($ & 255) << 24 >> 24 <= -1) {
     R = S;
     break b;
    }
    if (!(b[(c[s >> 2] | 0) + ($ << 24 >> 24 << 1) >> 1] & 8192)) {
     R = S;
     break b;
    }
    C = c[y >> 2] | 0;
    if ((C | 0) == (c[_ >> 2] | 0)) {
     pc[c[(c[U >> 2] | 0) + 40 >> 2] & 63](U) | 0;
     u = U;
     v = Y;
     w = Z;
     continue;
    } else {
     c[y >> 2] = C + 1;
     rg(a[C >> 0] | 0) | 0;
     u = U;
     v = Y;
     w = Z;
     continue;
    }
   }
  } else if ((F | 0) == 56) {
   F = 0;
   w = c[L >> 2] | 0;
   if ((w | 0) == (c[M >> 2] | 0)) pc[c[(c[z >> 2] | 0) + 40 >> 2] & 63](z) | 0; else {
    c[L >> 2] = w + 1;
    rg(a[w >> 0] | 0) | 0;
   }
   R = t + 1 | 0;
  } while (0);
  t = R;
  j = c[h >> 2] | 0;
 }
 if ((F | 0) == 62) {
  c[h >> 2] = 4;
  x = z;
 }
 if (!x) {
  aa = 0;
  ba = 1;
 } else {
  z = c[x + 12 >> 2] | 0;
  if ((z | 0) == (c[x + 16 >> 2] | 0)) ca = pc[c[(c[x >> 2] | 0) + 36 >> 2] & 63](x) | 0; else ca = rg(a[z >> 0] | 0) | 0;
  if (ph(ca, qg() | 0) | 0) {
   c[e >> 2] = 0;
   aa = 0;
   ba = 1;
  } else {
   aa = x;
   ba = 0;
  }
 }
 x = c[f >> 2] | 0;
 do if (!x) F = 75; else {
  e = c[x + 12 >> 2] | 0;
  if ((e | 0) == (c[x + 16 >> 2] | 0)) da = pc[c[(c[x >> 2] | 0) + 36 >> 2] & 63](x) | 0; else da = rg(a[e >> 0] | 0) | 0;
  if (ph(da, qg() | 0) | 0) {
   c[f >> 2] = 0;
   F = 75;
   break;
  } else if (ba) break; else {
   F = 77;
   break;
  }
 } while (0);
 if ((F | 0) == 75) if (ba) F = 77;
 if ((F | 0) == 77) c[h >> 2] = c[h >> 2] | 2;
 l = m;
 return aa | 0;
}

function ff(b, e, f, g) {
 b = b | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0, ca = 0, da = 0;
 h = c[e >> 2] | 0;
 if (!g) i = 5; else {
  j = c[g >> 2] | 0;
  if (!j) i = 5; else if (!b) {
   k = j;
   l = h;
   m = f;
   i = 25;
  } else {
   c[g >> 2] = 0;
   n = j;
   o = b;
   p = f;
   q = h;
   i = 43;
  }
 }
 a : do if ((i | 0) == 5) {
  j = (b | 0) != 0;
  if (c[c[(gf() | 0) + 188 >> 2] >> 2] | 0) if (j) {
   r = b;
   s = f;
   t = h;
   i = 15;
   break;
  } else {
   u = h;
   v = f;
   i = 14;
   break;
  }
  if (!j) {
   w = Qe(h) | 0;
   i = 59;
   break;
  }
  b : do if (!f) x = h; else {
   j = h;
   g = b;
   y = f;
   while (1) {
    z = a[j >> 0] | 0;
    if (!(z << 24 >> 24)) break;
    A = j + 1 | 0;
    c[g >> 2] = z << 24 >> 24 & 57343;
    z = y + -1 | 0;
    if (!z) {
     x = A;
     break b;
    } else {
     j = A;
     g = g + 4 | 0;
     y = z;
    }
   }
   c[g >> 2] = 0;
   c[e >> 2] = 0;
   w = f - y | 0;
   i = 59;
   break a;
  } while (0);
  c[e >> 2] = x;
  w = f;
  i = 59;
 } while (0);
 c : while (1) {
  d : do if ((i | 0) == 14) {
   i = 0;
   x = u;
   h = v;
   while (1) {
    j = a[x >> 0] | 0;
    if (((j & 255) + -1 | 0) >>> 0 < 127) if (!(x & 3)) {
     z = c[x >> 2] | 0;
     A = z & 255;
     if (!((z + -16843009 | z) & -2139062144)) {
      z = x;
      B = h;
      do {
       z = z + 4 | 0;
       B = B + -4 | 0;
       C = c[z >> 2] | 0;
      } while (!((C + -16843009 | C) & -2139062144 | 0));
      D = z;
      E = B;
      F = C & 255;
     } else {
      D = x;
      E = h;
      F = A;
     }
    } else {
     D = x;
     E = h;
     F = j;
    } else {
     D = x;
     E = h;
     F = j;
    }
    G = F & 255;
    if ((G + -1 | 0) >>> 0 >= 127) break;
    x = D + 1 | 0;
    h = E + -1 | 0;
   }
   h = G + -194 | 0;
   if (h >>> 0 > 50) {
    H = D;
    I = b;
    J = E;
    i = 53;
   } else {
    k = c[2728 + (h << 2) >> 2] | 0;
    l = D + 1 | 0;
    m = E;
    i = 25;
    continue c;
   }
  } else if ((i | 0) == 15) {
   i = 0;
   e : do if (!s) K = t; else {
    h = r;
    x = s;
    y = t;
    while (1) {
     g = a[y >> 0] | 0;
     do if (((g & 255) + -1 | 0) >>> 0 < 127) if (x >>> 0 > 4 & (y & 3 | 0) == 0) {
      L = h;
      M = x;
      N = y;
      while (1) {
       O = c[N >> 2] | 0;
       if ((O + -16843009 | O) & -2139062144 | 0) {
        i = 38;
        break;
       }
       c[L >> 2] = O & 255;
       c[L + 4 >> 2] = d[N + 1 >> 0];
       c[L + 8 >> 2] = d[N + 2 >> 0];
       P = N + 4 | 0;
       Q = L + 16 | 0;
       c[L + 12 >> 2] = d[N + 3 >> 0];
       R = M + -4 | 0;
       if (R >>> 0 > 4) {
        L = Q;
        M = R;
        N = P;
       } else {
        i = 37;
        break;
       }
      }
      if ((i | 0) == 37) {
       i = 0;
       S = Q;
       T = R;
       U = P;
       V = a[P >> 0] | 0;
       break;
      } else if ((i | 0) == 38) {
       i = 0;
       S = L;
       T = M;
       U = N;
       V = O & 255;
       break;
      }
     } else {
      S = h;
      T = x;
      U = y;
      V = g;
     } else {
      S = h;
      T = x;
      U = y;
      V = g;
     } while (0);
     W = V & 255;
     if ((W + -1 | 0) >>> 0 >= 127) break;
     g = U + 1 | 0;
     c[S >> 2] = W;
     x = T + -1 | 0;
     if (!x) {
      K = g;
      break e;
     } else {
      h = S + 4 | 0;
      y = g;
     }
    }
    y = W + -194 | 0;
    if (y >>> 0 > 50) {
     H = U;
     I = S;
     J = T;
     i = 53;
     break d;
    }
    n = c[2728 + (y << 2) >> 2] | 0;
    o = S;
    p = T;
    q = U + 1 | 0;
    i = 43;
    continue c;
   } while (0);
   c[e >> 2] = K;
   w = f;
   i = 59;
   continue c;
  } else if ((i | 0) == 25) {
   i = 0;
   y = (d[l >> 0] | 0) >>> 3;
   if ((y + -16 | y + (k >> 26)) >>> 0 > 7) {
    X = b;
    Y = k;
    Z = l;
    _ = m;
    i = 52;
   } else {
    y = l + 1 | 0;
    if (!(k & 33554432)) $ = y; else {
     if ((a[y >> 0] & -64) << 24 >> 24 != -128) {
      X = b;
      Y = k;
      Z = l;
      _ = m;
      i = 52;
      break;
     }
     y = l + 2 | 0;
     if (!(k & 524288)) $ = y; else {
      if ((a[y >> 0] & -64) << 24 >> 24 != -128) {
       X = b;
       Y = k;
       Z = l;
       _ = m;
       i = 52;
       break;
      }
      $ = l + 3 | 0;
     }
    }
    u = $;
    v = m + -1 | 0;
    i = 14;
    continue c;
   }
  } else if ((i | 0) == 43) {
   i = 0;
   y = d[q >> 0] | 0;
   h = y >>> 3;
   if ((h + -16 | h + (n >> 26)) >>> 0 > 7) {
    X = o;
    Y = n;
    Z = q;
    _ = p;
    i = 52;
   } else {
    h = q + 1 | 0;
    x = y + -128 | n << 6;
    do if ((x | 0) < 0) {
     y = (d[h >> 0] | 0) + -128 | 0;
     if (y >>> 0 > 63) {
      aa = q + -1 | 0;
      ba = o;
      break d;
     }
     j = q + 2 | 0;
     A = y | x << 6;
     if ((A | 0) < 0) {
      y = (d[j >> 0] | 0) + -128 | 0;
      if (y >>> 0 > 63) {
       aa = q + -1 | 0;
       ba = o;
       break d;
      } else {
       ca = q + 3 | 0;
       da = y | A << 6;
       break;
      }
     } else {
      ca = j;
      da = A;
     }
    } else {
     ca = h;
     da = x;
    } while (0);
    c[o >> 2] = da;
    r = o + 4 | 0;
    s = p + -1 | 0;
    t = ca;
    i = 15;
    continue c;
   }
  } else if ((i | 0) == 59) {
   i = 0;
   return w | 0;
  } while (0);
  if ((i | 0) == 52) {
   i = 0;
   x = Z + -1 | 0;
   if (!Y) {
    H = x;
    I = X;
    J = _;
    i = 53;
   } else {
    aa = x;
    ba = X;
   }
  }
  if ((i | 0) == 53) {
   i = 0;
   if (!(a[H >> 0] | 0)) {
    if (I | 0) {
     c[I >> 2] = 0;
     c[e >> 2] = 0;
    }
    w = f - J | 0;
    i = 59;
    continue;
   } else {
    aa = H;
    ba = I;
   }
  }
  c[(Gd() | 0) >> 2] = 84;
  if (!ba) {
   w = -1;
   i = 59;
   continue;
  }
  c[e >> 2] = aa;
  w = -1;
  i = 59;
 }
 return 0;
}

function Qs(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0;
 f = l;
 l = l + 112 | 0;
 g = f + 96 | 0;
 h = f + 72 | 0;
 i = f + 48 | 0;
 j = f + 36 | 0;
 k = f + 24 | 0;
 m = f + 12 | 0;
 n = f;
 do if ((b | 0) == (d | 0)) o = b; else if ((a[b >> 0] | 0) == 65) {
  p = b + 1 | 0;
  if ((p | 0) == (d | 0)) o = b; else {
   q = a[p >> 0] | 0;
   if (q << 24 >> 24 == 95) {
    r = b + 2 | 0;
    s = Is(r, d, e) | 0;
    if ((s | 0) == (r | 0)) {
     o = b;
     break;
    }
    r = e + 4 | 0;
    t = c[r >> 2] | 0;
    if ((c[e >> 2] | 0) == (t | 0)) {
     o = b;
     break;
    }
    Vs(g, t + -12 | 0, 2);
    t = lh(18900) | 0;
    u = a[g + 11 >> 0] | 0;
    if ((t | 0) == ((u << 24 >> 24 < 0 ? c[g + 4 >> 2] | 0 : u & 255) | 0)) {
     u = (Ws(g, 18900, t) | 0) == 0;
     Es(g);
     if (u) Uu((c[r >> 2] | 0) + -12 | 0);
    } else Es(g);
    Ls((c[r >> 2] | 0) + -12 | 0, 0, 20341) | 0;
    o = s;
    break;
   }
   if ((q + -49 & 255) < 9) {
    q = jt(p, d) | 0;
    if ((q | 0) == (d | 0)) {
     o = b;
     break;
    }
    if ((a[q >> 0] | 0) != 95) {
     o = b;
     break;
    }
    s = q + 1 | 0;
    r = Is(s, d, e) | 0;
    if ((r | 0) == (s | 0)) {
     o = b;
     break;
    }
    s = e + 4 | 0;
    u = c[s >> 2] | 0;
    if ((c[e >> 2] | 0) == (u | 0)) {
     o = b;
     break;
    }
    Vs(g, u + -12 | 0, 2);
    u = lh(18900) | 0;
    t = a[g + 11 >> 0] | 0;
    if ((u | 0) == ((t << 24 >> 24 < 0 ? c[g + 4 >> 2] | 0 : t & 255) | 0)) {
     t = (Ws(g, 18900, u) | 0) == 0;
     Es(g);
     if (t) Uu((c[s >> 2] | 0) + -12 | 0);
    } else Es(g);
    t = (c[s >> 2] | 0) + -12 | 0;
    c[j >> 2] = 0;
    c[j + 4 >> 2] = 0;
    c[j + 8 >> 2] = 0;
    s = q - p | 0;
    if (s >>> 0 > 4294967279) _q(j);
    if (s >>> 0 < 11) {
     a[j + 11 >> 0] = s;
     v = j;
    } else {
     u = s + 16 & -16;
     w = Bs(u) | 0;
     c[j >> 2] = w;
     c[j + 8 >> 2] = u | -2147483648;
     c[j + 4 >> 2] = s;
     v = w;
    }
    w = p;
    u = v;
    while (1) {
     if ((w | 0) == (q | 0)) break;
     mh(u, w);
     w = w + 1 | 0;
     u = u + 1 | 0;
    }
    a[g >> 0] = 0;
    mh(v + s | 0, g);
    Ls(j, 0, 18900) | 0;
    c[i >> 2] = c[j >> 2];
    c[i + 4 >> 2] = c[j + 4 >> 2];
    c[i + 8 >> 2] = c[j + 8 >> 2];
    u = 0;
    while (1) {
     if ((u | 0) == 3) break;
     c[j + (u << 2) >> 2] = 0;
     u = u + 1 | 0;
    }
    Ms(i, 18955) | 0;
    c[h >> 2] = c[i >> 2];
    c[h + 4 >> 2] = c[i + 4 >> 2];
    c[h + 8 >> 2] = c[i + 8 >> 2];
    u = 0;
    while (1) {
     if ((u | 0) == 3) break;
     c[i + (u << 2) >> 2] = 0;
     u = u + 1 | 0;
    }
    u = a[h + 11 >> 0] | 0;
    s = u << 24 >> 24 < 0;
    Nu(t, 0, s ? c[h >> 2] | 0 : h, s ? c[h + 4 >> 2] | 0 : u & 255) | 0;
    Es(h);
    Es(i);
    Es(j);
    o = r;
    break;
   }
   u = kt(p, d, e) | 0;
   if ((u | 0) == (p | 0) | (u | 0) == (d | 0)) o = b; else if ((a[u >> 0] | 0) == 95) {
    s = u + 1 | 0;
    u = Is(s, d, e) | 0;
    if ((u | 0) == (s | 0)) o = b; else {
     s = e + 4 | 0;
     w = c[s >> 2] | 0;
     if (((w - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) o = b; else {
      dt(h, w + -24 | 0);
      w = c[s >> 2] | 0;
      q = w + -24 | 0;
      x = w;
      while (1) {
       if ((x | 0) == (q | 0)) break;
       y = x + -24 | 0;
       c[s >> 2] = y;
       ns(y);
       x = c[s >> 2] | 0;
      }
      dt(i, w + -48 | 0);
      x = c[s >> 2] | 0;
      q = x + -24 | 0;
      p = q + 11 | 0;
      if ((a[p >> 0] | 0) < 0) {
       r = c[q >> 2] | 0;
       a[g >> 0] = 0;
       mh(r, g);
       c[x + -20 >> 2] = 0;
      } else {
       a[g >> 0] = 0;
       mh(q, g);
       a[p >> 0] = 0;
      }
      lt(q);
      c[q >> 2] = c[h >> 2];
      c[q + 4 >> 2] = c[h + 4 >> 2];
      c[q + 8 >> 2] = c[h + 8 >> 2];
      q = 0;
      while (1) {
       if ((q | 0) == 3) break;
       c[h + (q << 2) >> 2] = 0;
       q = q + 1 | 0;
      }
      q = h + 12 | 0;
      Vs(g, q, 2);
      w = lh(18900) | 0;
      p = a[g + 11 >> 0] | 0;
      if ((w | 0) == ((p << 24 >> 24 < 0 ? c[g + 4 >> 2] | 0 : p & 255) | 0)) {
       p = (Ws(g, 18900, w) | 0) == 0;
       Es(g);
       if (p) Uu(q);
      } else Es(g);
      _s(n, i);
      Ls(n, 0, 18900) | 0;
      c[m >> 2] = c[n >> 2];
      c[m + 4 >> 2] = c[n + 4 >> 2];
      c[m + 8 >> 2] = c[n + 8 >> 2];
      p = 0;
      while (1) {
       if ((p | 0) == 3) break;
       c[n + (p << 2) >> 2] = 0;
       p = p + 1 | 0;
      }
      Ms(m, 18955) | 0;
      c[k >> 2] = c[m >> 2];
      c[k + 4 >> 2] = c[m + 4 >> 2];
      c[k + 8 >> 2] = c[m + 8 >> 2];
      p = 0;
      while (1) {
       if ((p | 0) == 3) break;
       c[m + (p << 2) >> 2] = 0;
       p = p + 1 | 0;
      }
      p = a[q + 11 >> 0] | 0;
      w = p << 24 >> 24 < 0;
      qs(k, w ? c[q >> 2] | 0 : q, w ? c[h + 16 >> 2] | 0 : p & 255) | 0;
      c[j >> 2] = c[k >> 2];
      c[j + 4 >> 2] = c[k + 4 >> 2];
      c[j + 8 >> 2] = c[k + 8 >> 2];
      p = 0;
      while (1) {
       if ((p | 0) == 3) break;
       c[k + (p << 2) >> 2] = 0;
       p = p + 1 | 0;
      }
      p = c[s >> 2] | 0;
      q = p + -12 | 0;
      w = q + 11 | 0;
      if ((a[w >> 0] | 0) < 0) {
       x = c[q >> 2] | 0;
       a[g >> 0] = 0;
       mh(x, g);
       c[p + -8 >> 2] = 0;
      } else {
       a[g >> 0] = 0;
       mh(q, g);
       a[w >> 0] = 0;
      }
      lt(q);
      c[q >> 2] = c[j >> 2];
      c[q + 4 >> 2] = c[j + 4 >> 2];
      c[q + 8 >> 2] = c[j + 8 >> 2];
      q = 0;
      while (1) {
       if ((q | 0) == 3) break;
       c[j + (q << 2) >> 2] = 0;
       q = q + 1 | 0;
      }
      Es(j);
      Es(k);
      Es(m);
      Es(n);
      ns(i);
      ns(h);
      o = u;
     }
    }
   } else o = b;
  }
 } else o = b; while (0);
 l = f;
 return o | 0;
}
function yl(a, b, d, e, f, g, h, i) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0;
 j = l;
 l = l + 16 | 0;
 k = j + 12 | 0;
 m = j + 8 | 0;
 n = j + 4 | 0;
 o = j;
 qh(k, e);
 p = Ji(k, 23140) | 0;
 Ki(k);
 c[f >> 2] = 0;
 q = h;
 h = 0;
 a : while (1) {
  r = (q | 0) != (i | 0);
  s = h;
  while (1) {
   t = c[b >> 2] | 0;
   if (!(r & (s | 0) == 0)) {
    u = t;
    break a;
   }
   v = t;
   if (!t) {
    w = 0;
    x = 1;
    y = v;
   } else {
    z = c[t + 12 >> 2] | 0;
    if ((z | 0) == (c[t + 16 >> 2] | 0)) A = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](t) | 0; else A = Jg(c[z >> 2] | 0) | 0;
    if (rh(A, Ig() | 0) | 0) {
     c[b >> 2] = 0;
     w = 0;
     x = 1;
     y = 0;
    } else {
     w = t;
     x = 0;
     y = v;
    }
   }
   v = c[d >> 2] | 0;
   t = v;
   do if (!v) {
    B = t;
    C = 16;
   } else {
    z = c[v + 12 >> 2] | 0;
    if ((z | 0) == (c[v + 16 >> 2] | 0)) D = pc[c[(c[v >> 2] | 0) + 36 >> 2] & 63](v) | 0; else D = Jg(c[z >> 2] | 0) | 0;
    if (rh(D, Ig() | 0) | 0) {
     c[d >> 2] = 0;
     B = 0;
     C = 16;
     break;
    } else if (x) {
     E = v;
     F = t;
     break;
    } else {
     C = 59;
     break a;
    }
   } while (0);
   if ((C | 0) == 16) {
    C = 0;
    if (x) {
     C = 59;
     break a;
    } else {
     E = 0;
     F = B;
    }
   }
   if ((rc[c[(c[p >> 2] | 0) + 52 >> 2] & 31](p, c[q >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
    C = 19;
    break;
   }
   if (rc[c[(c[p >> 2] | 0) + 12 >> 2] & 31](p, 8192, c[q >> 2] | 0) | 0) {
    G = q;
    C = 25;
    break;
   }
   H = w + 12 | 0;
   t = c[H >> 2] | 0;
   I = w + 16 | 0;
   if ((t | 0) == (c[I >> 2] | 0)) J = pc[c[(c[w >> 2] | 0) + 36 >> 2] & 63](w) | 0; else J = Jg(c[t >> 2] | 0) | 0;
   t = qc[c[(c[p >> 2] | 0) + 28 >> 2] & 31](p, J) | 0;
   if ((t | 0) == (qc[c[(c[p >> 2] | 0) + 28 >> 2] & 31](p, c[q >> 2] | 0) | 0)) {
    C = 53;
    break;
   }
   c[f >> 2] = 4;
   s = 4;
  }
  b : do if ((C | 0) == 19) {
   C = 0;
   s = q + 4 | 0;
   if ((s | 0) == (i | 0)) {
    C = 59;
    break a;
   }
   r = rc[c[(c[p >> 2] | 0) + 52 >> 2] & 31](p, c[s >> 2] | 0, 0) | 0;
   switch (r << 24 >> 24) {
   case 48:
   case 69:
    {
     t = q + 8 | 0;
     if ((t | 0) == (i | 0)) {
      C = 59;
      break a;
     }
     K = r;
     L = rc[c[(c[p >> 2] | 0) + 52 >> 2] & 31](p, c[t >> 2] | 0, 0) | 0;
     M = s;
     break;
    }
   default:
    {
     K = 0;
     L = r;
     M = q;
    }
   }
   r = c[(c[a >> 2] | 0) + 36 >> 2] | 0;
   c[n >> 2] = y;
   c[o >> 2] = F;
   c[m >> 2] = c[n >> 2];
   c[k >> 2] = c[o >> 2];
   c[b >> 2] = yc[r & 15](a, m, k, e, f, g, L, K) | 0;
   N = M + 8 | 0;
  } else if ((C | 0) == 25) {
   while (1) {
    C = 0;
    r = G + 4 | 0;
    if ((r | 0) == (i | 0)) {
     O = i;
     break;
    }
    if (rc[c[(c[p >> 2] | 0) + 12 >> 2] & 31](p, 8192, c[r >> 2] | 0) | 0) {
     G = r;
     C = 25;
    } else {
     O = r;
     break;
    }
   }
   r = w;
   s = E;
   t = E;
   while (1) {
    if (!r) {
     P = 1;
     Q = 0;
    } else {
     v = c[r + 12 >> 2] | 0;
     if ((v | 0) == (c[r + 16 >> 2] | 0)) R = pc[c[(c[r >> 2] | 0) + 36 >> 2] & 63](r) | 0; else R = Jg(c[v >> 2] | 0) | 0;
     if (rh(R, Ig() | 0) | 0) {
      c[b >> 2] = 0;
      P = 1;
      Q = 0;
     } else {
      P = 0;
      Q = r;
     }
    }
    do if (!t) {
     S = s;
     C = 40;
    } else {
     v = c[t + 12 >> 2] | 0;
     if ((v | 0) == (c[t + 16 >> 2] | 0)) T = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](t) | 0; else T = Jg(c[v >> 2] | 0) | 0;
     if (rh(T, Ig() | 0) | 0) {
      c[d >> 2] = 0;
      S = 0;
      C = 40;
      break;
     } else if (P ^ (s | 0) == 0) {
      U = s;
      V = s;
      break;
     } else {
      N = O;
      break b;
     }
    } while (0);
    if ((C | 0) == 40) {
     C = 0;
     if (P) {
      N = O;
      break b;
     } else {
      U = S;
      V = 0;
     }
    }
    v = Q + 12 | 0;
    z = c[v >> 2] | 0;
    W = Q + 16 | 0;
    if ((z | 0) == (c[W >> 2] | 0)) X = pc[c[(c[Q >> 2] | 0) + 36 >> 2] & 63](Q) | 0; else X = Jg(c[z >> 2] | 0) | 0;
    if (!(rc[c[(c[p >> 2] | 0) + 12 >> 2] & 31](p, 8192, X) | 0)) {
     N = O;
     break b;
    }
    z = c[v >> 2] | 0;
    if ((z | 0) == (c[W >> 2] | 0)) {
     pc[c[(c[Q >> 2] | 0) + 40 >> 2] & 63](Q) | 0;
     r = Q;
     s = U;
     t = V;
     continue;
    } else {
     c[v >> 2] = z + 4;
     Jg(c[z >> 2] | 0) | 0;
     r = Q;
     s = U;
     t = V;
     continue;
    }
   }
  } else if ((C | 0) == 53) {
   C = 0;
   t = c[H >> 2] | 0;
   if ((t | 0) == (c[I >> 2] | 0)) pc[c[(c[w >> 2] | 0) + 40 >> 2] & 63](w) | 0; else {
    c[H >> 2] = t + 4;
    Jg(c[t >> 2] | 0) | 0;
   }
   N = q + 4 | 0;
  } while (0);
  q = N;
  h = c[f >> 2] | 0;
 }
 if ((C | 0) == 59) {
  c[f >> 2] = 4;
  u = w;
 }
 if (!u) {
  Y = 0;
  Z = 1;
 } else {
  w = c[u + 12 >> 2] | 0;
  if ((w | 0) == (c[u + 16 >> 2] | 0)) _ = pc[c[(c[u >> 2] | 0) + 36 >> 2] & 63](u) | 0; else _ = Jg(c[w >> 2] | 0) | 0;
  if (rh(_, Ig() | 0) | 0) {
   c[b >> 2] = 0;
   Y = 0;
   Z = 1;
  } else {
   Y = u;
   Z = 0;
  }
 }
 u = c[d >> 2] | 0;
 do if (!u) C = 72; else {
  b = c[u + 12 >> 2] | 0;
  if ((b | 0) == (c[u + 16 >> 2] | 0)) $ = pc[c[(c[u >> 2] | 0) + 36 >> 2] & 63](u) | 0; else $ = Jg(c[b >> 2] | 0) | 0;
  if (rh($, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   C = 72;
   break;
  } else if (Z) break; else {
   C = 74;
   break;
  }
 } while (0);
 if ((C | 0) == 72) if (Z) C = 74;
 if ((C | 0) == 74) c[f >> 2] = c[f >> 2] | 2;
 l = j;
 return Y | 0;
}

function nn(b, d, e, f, g, h, i, j, k, m) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 m = m | 0;
 var n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0;
 n = l;
 l = l + 16 | 0;
 o = n + 12 | 0;
 p = n;
 if (b) {
  b = Ji(e, 24828) | 0;
  if (d) {
   Bc[c[(c[b >> 2] | 0) + 44 >> 2] & 63](o, b);
   q = c[o >> 2] | 0;
   a[f >> 0] = q;
   a[f + 1 >> 0] = q >> 8;
   a[f + 2 >> 0] = q >> 16;
   a[f + 3 >> 0] = q >> 24;
   Bc[c[(c[b >> 2] | 0) + 32 >> 2] & 63](p, b);
   q = k + 11 | 0;
   if ((a[q >> 0] | 0) < 0) {
    r = c[k >> 2] | 0;
    a[o >> 0] = 0;
    mh(r, o);
    c[k + 4 >> 2] = 0;
    s = k;
   } else {
    a[o >> 0] = 0;
    mh(k, o);
    a[q >> 0] = 0;
    s = k;
   }
   gr(k, 0);
   c[s >> 2] = c[p >> 2];
   c[s + 4 >> 2] = c[p + 4 >> 2];
   c[s + 8 >> 2] = c[p + 8 >> 2];
   s = 0;
   while (1) {
    if ((s | 0) == 3) break;
    c[p + (s << 2) >> 2] = 0;
    s = s + 1 | 0;
   }
   br(p);
   t = b;
  } else {
   Bc[c[(c[b >> 2] | 0) + 40 >> 2] & 63](o, b);
   s = c[o >> 2] | 0;
   a[f >> 0] = s;
   a[f + 1 >> 0] = s >> 8;
   a[f + 2 >> 0] = s >> 16;
   a[f + 3 >> 0] = s >> 24;
   Bc[c[(c[b >> 2] | 0) + 28 >> 2] & 63](p, b);
   s = k + 11 | 0;
   if ((a[s >> 0] | 0) < 0) {
    q = c[k >> 2] | 0;
    a[o >> 0] = 0;
    mh(q, o);
    c[k + 4 >> 2] = 0;
    u = k;
   } else {
    a[o >> 0] = 0;
    mh(k, o);
    a[s >> 0] = 0;
    u = k;
   }
   gr(k, 0);
   c[u >> 2] = c[p >> 2];
   c[u + 4 >> 2] = c[p + 4 >> 2];
   c[u + 8 >> 2] = c[p + 8 >> 2];
   u = 0;
   while (1) {
    if ((u | 0) == 3) break;
    c[p + (u << 2) >> 2] = 0;
    u = u + 1 | 0;
   }
   br(p);
   t = b;
  }
  a[g >> 0] = pc[c[(c[b >> 2] | 0) + 12 >> 2] & 63](b) | 0;
  a[h >> 0] = pc[c[(c[b >> 2] | 0) + 16 >> 2] & 63](b) | 0;
  Bc[c[(c[t >> 2] | 0) + 20 >> 2] & 63](p, b);
  u = i + 11 | 0;
  if ((a[u >> 0] | 0) < 0) {
   s = c[i >> 2] | 0;
   a[o >> 0] = 0;
   mh(s, o);
   c[i + 4 >> 2] = 0;
   v = i;
  } else {
   a[o >> 0] = 0;
   mh(i, o);
   a[u >> 0] = 0;
   v = i;
  }
  gr(i, 0);
  c[v >> 2] = c[p >> 2];
  c[v + 4 >> 2] = c[p + 4 >> 2];
  c[v + 8 >> 2] = c[p + 8 >> 2];
  v = 0;
  while (1) {
   if ((v | 0) == 3) break;
   c[p + (v << 2) >> 2] = 0;
   v = v + 1 | 0;
  }
  br(p);
  Bc[c[(c[t >> 2] | 0) + 24 >> 2] & 63](p, b);
  t = j + 11 | 0;
  if ((a[t >> 0] | 0) < 0) {
   v = c[j >> 2] | 0;
   a[o >> 0] = 0;
   mh(v, o);
   c[j + 4 >> 2] = 0;
   w = j;
  } else {
   a[o >> 0] = 0;
   mh(j, o);
   a[t >> 0] = 0;
   w = j;
  }
  gr(j, 0);
  c[w >> 2] = c[p >> 2];
  c[w + 4 >> 2] = c[p + 4 >> 2];
  c[w + 8 >> 2] = c[p + 8 >> 2];
  w = 0;
  while (1) {
   if ((w | 0) == 3) break;
   c[p + (w << 2) >> 2] = 0;
   w = w + 1 | 0;
  }
  br(p);
  x = pc[c[(c[b >> 2] | 0) + 36 >> 2] & 63](b) | 0;
 } else {
  b = Ji(e, 24820) | 0;
  if (d) {
   Bc[c[(c[b >> 2] | 0) + 44 >> 2] & 63](o, b);
   d = c[o >> 2] | 0;
   a[f >> 0] = d;
   a[f + 1 >> 0] = d >> 8;
   a[f + 2 >> 0] = d >> 16;
   a[f + 3 >> 0] = d >> 24;
   Bc[c[(c[b >> 2] | 0) + 32 >> 2] & 63](p, b);
   d = k + 11 | 0;
   if ((a[d >> 0] | 0) < 0) {
    e = c[k >> 2] | 0;
    a[o >> 0] = 0;
    mh(e, o);
    c[k + 4 >> 2] = 0;
    y = k;
   } else {
    a[o >> 0] = 0;
    mh(k, o);
    a[d >> 0] = 0;
    y = k;
   }
   gr(k, 0);
   c[y >> 2] = c[p >> 2];
   c[y + 4 >> 2] = c[p + 4 >> 2];
   c[y + 8 >> 2] = c[p + 8 >> 2];
   y = 0;
   while (1) {
    if ((y | 0) == 3) break;
    c[p + (y << 2) >> 2] = 0;
    y = y + 1 | 0;
   }
   br(p);
   z = b;
  } else {
   Bc[c[(c[b >> 2] | 0) + 40 >> 2] & 63](o, b);
   y = c[o >> 2] | 0;
   a[f >> 0] = y;
   a[f + 1 >> 0] = y >> 8;
   a[f + 2 >> 0] = y >> 16;
   a[f + 3 >> 0] = y >> 24;
   Bc[c[(c[b >> 2] | 0) + 28 >> 2] & 63](p, b);
   y = k + 11 | 0;
   if ((a[y >> 0] | 0) < 0) {
    f = c[k >> 2] | 0;
    a[o >> 0] = 0;
    mh(f, o);
    c[k + 4 >> 2] = 0;
    A = k;
   } else {
    a[o >> 0] = 0;
    mh(k, o);
    a[y >> 0] = 0;
    A = k;
   }
   gr(k, 0);
   c[A >> 2] = c[p >> 2];
   c[A + 4 >> 2] = c[p + 4 >> 2];
   c[A + 8 >> 2] = c[p + 8 >> 2];
   A = 0;
   while (1) {
    if ((A | 0) == 3) break;
    c[p + (A << 2) >> 2] = 0;
    A = A + 1 | 0;
   }
   br(p);
   z = b;
  }
  a[g >> 0] = pc[c[(c[b >> 2] | 0) + 12 >> 2] & 63](b) | 0;
  a[h >> 0] = pc[c[(c[b >> 2] | 0) + 16 >> 2] & 63](b) | 0;
  Bc[c[(c[z >> 2] | 0) + 20 >> 2] & 63](p, b);
  h = i + 11 | 0;
  if ((a[h >> 0] | 0) < 0) {
   g = c[i >> 2] | 0;
   a[o >> 0] = 0;
   mh(g, o);
   c[i + 4 >> 2] = 0;
   B = i;
  } else {
   a[o >> 0] = 0;
   mh(i, o);
   a[h >> 0] = 0;
   B = i;
  }
  gr(i, 0);
  c[B >> 2] = c[p >> 2];
  c[B + 4 >> 2] = c[p + 4 >> 2];
  c[B + 8 >> 2] = c[p + 8 >> 2];
  B = 0;
  while (1) {
   if ((B | 0) == 3) break;
   c[p + (B << 2) >> 2] = 0;
   B = B + 1 | 0;
  }
  br(p);
  Bc[c[(c[z >> 2] | 0) + 24 >> 2] & 63](p, b);
  z = j + 11 | 0;
  if ((a[z >> 0] | 0) < 0) {
   B = c[j >> 2] | 0;
   a[o >> 0] = 0;
   mh(B, o);
   c[j + 4 >> 2] = 0;
   C = j;
  } else {
   a[o >> 0] = 0;
   mh(j, o);
   a[z >> 0] = 0;
   C = j;
  }
  gr(j, 0);
  c[C >> 2] = c[p >> 2];
  c[C + 4 >> 2] = c[p + 4 >> 2];
  c[C + 8 >> 2] = c[p + 8 >> 2];
  C = 0;
  while (1) {
   if ((C | 0) == 3) break;
   c[p + (C << 2) >> 2] = 0;
   C = C + 1 | 0;
  }
  br(p);
  x = pc[c[(c[b >> 2] | 0) + 36 >> 2] & 63](b) | 0;
 }
 c[m >> 2] = x;
 l = n;
 return;
}

function Us(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;
 f = l;
 l = l + 112 | 0;
 g = f + 96 | 0;
 h = f + 72 | 0;
 i = f + 48 | 0;
 j = f + 36 | 0;
 k = f + 24 | 0;
 m = f + 12 | 0;
 n = f;
 if ((b | 0) == (d | 0)) o = b; else if ((a[b >> 0] | 0) == 77) {
  p = b + 1 | 0;
  q = Is(p, d, e) | 0;
  if ((q | 0) == (p | 0)) o = b; else {
   p = Is(q, d, e) | 0;
   if ((p | 0) == (q | 0)) o = b; else {
    q = e + 4 | 0;
    d = c[q >> 2] | 0;
    if (((d - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) o = b; else {
     dt(h, d + -24 | 0);
     d = c[q >> 2] | 0;
     e = d + -24 | 0;
     r = d;
     while (1) {
      if ((r | 0) == (e | 0)) break;
      s = r + -24 | 0;
      c[q >> 2] = s;
      ns(s);
      r = c[q >> 2] | 0;
     }
     dt(i, d + -48 | 0);
     d = h + 12 | 0;
     a : do if ((a[((a[d + 11 >> 0] | 0) < 0 ? c[d >> 2] | 0 : d) >> 0] | 0) == 40) {
      Ms(h, 18908) | 0;
      c[m >> 2] = c[h >> 2];
      c[m + 4 >> 2] = c[h + 4 >> 2];
      c[m + 8 >> 2] = c[h + 8 >> 2];
      r = 0;
      while (1) {
       if ((r | 0) == 3) break;
       c[h + (r << 2) >> 2] = 0;
       r = r + 1 | 0;
      }
      _s(n, i);
      r = a[n + 11 >> 0] | 0;
      e = r << 24 >> 24 < 0;
      qs(m, e ? c[n >> 2] | 0 : n, e ? c[n + 4 >> 2] | 0 : r & 255) | 0;
      c[k >> 2] = c[m >> 2];
      c[k + 4 >> 2] = c[m + 4 >> 2];
      c[k + 8 >> 2] = c[m + 8 >> 2];
      r = 0;
      while (1) {
       if ((r | 0) == 3) break;
       c[m + (r << 2) >> 2] = 0;
       r = r + 1 | 0;
      }
      Ms(k, 20330) | 0;
      c[j >> 2] = c[k >> 2];
      c[j + 4 >> 2] = c[k + 4 >> 2];
      c[j + 8 >> 2] = c[k + 8 >> 2];
      r = 0;
      while (1) {
       if ((r | 0) == 3) break;
       c[k + (r << 2) >> 2] = 0;
       r = r + 1 | 0;
      }
      r = c[q >> 2] | 0;
      e = r + -24 | 0;
      s = e + 11 | 0;
      if ((a[s >> 0] | 0) < 0) {
       t = c[e >> 2] | 0;
       a[g >> 0] = 0;
       mh(t, g);
       c[r + -20 >> 2] = 0;
      } else {
       a[g >> 0] = 0;
       mh(e, g);
       a[s >> 0] = 0;
      }
      lt(e);
      c[e >> 2] = c[j >> 2];
      c[e + 4 >> 2] = c[j + 4 >> 2];
      c[e + 8 >> 2] = c[j + 8 >> 2];
      e = 0;
      while (1) {
       if ((e | 0) == 3) break;
       c[j + (e << 2) >> 2] = 0;
       e = e + 1 | 0;
      }
      Es(j);
      Es(k);
      Es(n);
      Es(m);
      Ls(d, 0, 18906) | 0;
      c[j >> 2] = c[d >> 2];
      c[j + 4 >> 2] = c[d + 4 >> 2];
      c[j + 8 >> 2] = c[d + 8 >> 2];
      e = 0;
      while (1) {
       if ((e | 0) == 3) break;
       c[d + (e << 2) >> 2] = 0;
       e = e + 1 | 0;
      }
      e = c[q >> 2] | 0;
      s = e + -12 | 0;
      r = s + 11 | 0;
      if ((a[r >> 0] | 0) < 0) {
       t = c[s >> 2] | 0;
       a[g >> 0] = 0;
       mh(t, g);
       c[e + -8 >> 2] = 0;
      } else {
       a[g >> 0] = 0;
       mh(s, g);
       a[r >> 0] = 0;
      }
      lt(s);
      c[s >> 2] = c[j >> 2];
      c[s + 4 >> 2] = c[j + 4 >> 2];
      c[s + 8 >> 2] = c[j + 8 >> 2];
      s = 0;
      while (1) {
       if ((s | 0) == 3) break;
       c[j + (s << 2) >> 2] = 0;
       s = s + 1 | 0;
      }
      Es(j);
     } else {
      Ms(h, 18940) | 0;
      c[m >> 2] = c[h >> 2];
      c[m + 4 >> 2] = c[h + 4 >> 2];
      c[m + 8 >> 2] = c[h + 8 >> 2];
      s = 0;
      while (1) {
       if ((s | 0) == 3) break;
       c[h + (s << 2) >> 2] = 0;
       s = s + 1 | 0;
      }
      _s(n, i);
      s = a[n + 11 >> 0] | 0;
      r = s << 24 >> 24 < 0;
      qs(m, r ? c[n >> 2] | 0 : n, r ? c[n + 4 >> 2] | 0 : s & 255) | 0;
      c[k >> 2] = c[m >> 2];
      c[k + 4 >> 2] = c[m + 4 >> 2];
      c[k + 8 >> 2] = c[m + 8 >> 2];
      s = 0;
      while (1) {
       if ((s | 0) == 3) break;
       c[m + (s << 2) >> 2] = 0;
       s = s + 1 | 0;
      }
      Ms(k, 20330) | 0;
      c[j >> 2] = c[k >> 2];
      c[j + 4 >> 2] = c[k + 4 >> 2];
      c[j + 8 >> 2] = c[k + 8 >> 2];
      s = 0;
      while (1) {
       if ((s | 0) == 3) break;
       c[k + (s << 2) >> 2] = 0;
       s = s + 1 | 0;
      }
      s = c[q >> 2] | 0;
      r = s + -24 | 0;
      e = r + 11 | 0;
      if ((a[e >> 0] | 0) < 0) {
       t = c[r >> 2] | 0;
       a[g >> 0] = 0;
       mh(t, g);
       c[s + -20 >> 2] = 0;
      } else {
       a[g >> 0] = 0;
       mh(r, g);
       a[e >> 0] = 0;
      }
      lt(r);
      c[r >> 2] = c[j >> 2];
      c[r + 4 >> 2] = c[j + 4 >> 2];
      c[r + 8 >> 2] = c[j + 8 >> 2];
      r = 0;
      while (1) {
       if ((r | 0) == 3) break;
       c[j + (r << 2) >> 2] = 0;
       r = r + 1 | 0;
      }
      Es(j);
      Es(k);
      Es(n);
      Es(m);
      r = c[q >> 2] | 0;
      e = r + -12 | 0;
      s = e + 11 | 0;
      if ((a[s >> 0] | 0) < 0) {
       t = c[e >> 2] | 0;
       a[g >> 0] = 0;
       mh(t, g);
       c[r + -8 >> 2] = 0;
      } else {
       a[g >> 0] = 0;
       mh(e, g);
       a[s >> 0] = 0;
      }
      lt(e);
      c[e >> 2] = c[d >> 2];
      c[e + 4 >> 2] = c[d + 4 >> 2];
      c[e + 8 >> 2] = c[d + 8 >> 2];
      e = 0;
      while (1) {
       if ((e | 0) == 3) break a;
       c[d + (e << 2) >> 2] = 0;
       e = e + 1 | 0;
      }
     } while (0);
     ns(i);
     ns(h);
     o = p;
    }
   }
  }
 } else o = b;
 l = f;
 return o | 0;
}

function it(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0;
 f = l;
 l = l + 80 | 0;
 g = f + 60 | 0;
 h = f + 24 | 0;
 i = f + 12 | 0;
 j = f;
 k = f + 48 | 0;
 a : do if ((d - b | 0) > 3) if ((a[b >> 0] | 0) == 68) if ((a[b + 1 >> 0] | 0) == 118) {
  m = b + 2 | 0;
  n = a[m >> 0] | 0;
  if ((n + -49 & 255) >= 9) {
   c[h >> 2] = 0;
   c[h + 4 >> 2] = 0;
   c[h + 8 >> 2] = 0;
   o = 0;
   while (1) {
    if ((o | 0) == 3) break;
    c[h + (o << 2) >> 2] = 0;
    o = o + 1 | 0;
   }
   b : do if (n << 24 >> 24 == 95) {
    p = m;
    q = 53;
   } else {
    o = kt(m, d, e) | 0;
    if ((o | 0) == (m | 0)) {
     p = m;
     q = 53;
    } else {
     r = e + 4 | 0;
     s = c[r >> 2] | 0;
     if ((c[e >> 2] | 0) != (s | 0)) {
      _s(i, s + -24 | 0);
      s = h + 11 | 0;
      if ((a[s >> 0] | 0) < 0) {
       t = c[h >> 2] | 0;
       a[g >> 0] = 0;
       mh(t, g);
       c[h + 4 >> 2] = 0;
      } else {
       a[g >> 0] = 0;
       mh(h, g);
       a[s >> 0] = 0;
      }
      lt(h);
      c[h >> 2] = c[i >> 2];
      c[h + 4 >> 2] = c[i + 4 >> 2];
      c[h + 8 >> 2] = c[i + 8 >> 2];
      s = 0;
      while (1) {
       if ((s | 0) == 3) break;
       c[i + (s << 2) >> 2] = 0;
       s = s + 1 | 0;
      }
      Es(i);
      s = c[r >> 2] | 0;
      t = s + -24 | 0;
      u = s;
      while (1) {
       if ((u | 0) == (t | 0)) {
        p = o;
        q = 53;
        break b;
       }
       s = u + -24 | 0;
       c[r >> 2] = s;
       ns(s);
       u = c[r >> 2] | 0;
      }
     }
    }
   } while (0);
   do if ((q | 0) == 53) {
    if ((p | 0) == (d | 0)) v = b; else if ((a[p >> 0] | 0) == 95) {
     n = p + 1 | 0;
     if ((n | 0) == (d | 0)) v = b; else {
      r = Is(n, d, e) | 0;
      if ((r | 0) == (n | 0)) v = b; else {
       n = e + 4 | 0;
       if ((c[e >> 2] | 0) == (c[n >> 2] | 0)) break;
       mt(i, 18946, h);
       Ms(i, 18955) | 0;
       c[g >> 2] = c[i >> 2];
       c[g + 4 >> 2] = c[i + 4 >> 2];
       c[g + 8 >> 2] = c[i + 8 >> 2];
       u = 0;
       while (1) {
        if ((u | 0) == 3) break;
        c[i + (u << 2) >> 2] = 0;
        u = u + 1 | 0;
       }
       u = a[g + 11 >> 0] | 0;
       o = u << 24 >> 24 < 0;
       qs((c[n >> 2] | 0) + -24 | 0, o ? c[g >> 2] | 0 : g, o ? c[g + 4 >> 2] | 0 : u & 255) | 0;
       Es(g);
       Es(i);
       v = r;
      }
     }
    } else v = b;
    Es(h);
    w = v;
    break a;
   } while (0);
   Es(h);
   w = b;
   break;
  }
  u = jt(m, d) | 0;
  if ((u | 0) == (d | 0)) w = b; else if ((a[u >> 0] | 0) == 95) {
   o = u - m | 0;
   t = u + 1 | 0;
   if ((t | 0) == (d | 0)) w = b; else {
    if ((a[t >> 0] | 0) != 112) {
     s = Is(t, d, e) | 0;
     if ((s | 0) == (t | 0)) {
      w = b;
      break;
     }
     t = e + 4 | 0;
     if ((c[e >> 2] | 0) == (c[t >> 2] | 0)) {
      w = b;
      break;
     };
     c[j >> 2] = 0;
     c[j + 4 >> 2] = 0;
     c[j + 8 >> 2] = 0;
     if (o >>> 0 > 4294967279) _q(j);
     if (o >>> 0 < 11) {
      a[j + 11 >> 0] = o;
      x = j;
     } else {
      y = o + 16 & -16;
      z = Bs(y) | 0;
      c[j >> 2] = z;
      c[j + 8 >> 2] = y | -2147483648;
      c[j + 4 >> 2] = o;
      x = z;
     }
     sg(x, m, o) | 0;
     a[g >> 0] = 0;
     mh(x + o | 0, g);
     Ls(j, 0, 18946) | 0;
     c[i >> 2] = c[j >> 2];
     c[i + 4 >> 2] = c[j + 4 >> 2];
     c[i + 8 >> 2] = c[j + 8 >> 2];
     z = 0;
     while (1) {
      if ((z | 0) == 3) break;
      c[j + (z << 2) >> 2] = 0;
      z = z + 1 | 0;
     }
     Ms(i, 18955) | 0;
     c[h >> 2] = c[i >> 2];
     c[h + 4 >> 2] = c[i + 4 >> 2];
     c[h + 8 >> 2] = c[i + 8 >> 2];
     z = 0;
     while (1) {
      if ((z | 0) == 3) break;
      c[i + (z << 2) >> 2] = 0;
      z = z + 1 | 0;
     }
     z = a[h + 11 >> 0] | 0;
     y = z << 24 >> 24 < 0;
     qs((c[t >> 2] | 0) + -24 | 0, y ? c[h >> 2] | 0 : h, y ? c[h + 4 >> 2] | 0 : z & 255) | 0;
     Es(h);
     Es(i);
     Es(j);
     w = s;
     break;
    }
    z = u + 2 | 0;
    c[j >> 2] = 0;
    c[j + 4 >> 2] = 0;
    c[j + 8 >> 2] = 0;
    if (o >>> 0 > 4294967279) _q(j);
    if (o >>> 0 < 11) {
     a[j + 11 >> 0] = o;
     A = j;
    } else {
     y = o + 16 & -16;
     B = Bs(y) | 0;
     c[j >> 2] = B;
     c[j + 8 >> 2] = y | -2147483648;
     c[j + 4 >> 2] = o;
     A = B;
    }
    sg(A, m, o) | 0;
    a[g >> 0] = 0;
    mh(A + o | 0, g);
    Ls(j, 0, 18957) | 0;
    c[i >> 2] = c[j >> 2];
    c[i + 4 >> 2] = c[j + 4 >> 2];
    c[i + 8 >> 2] = c[j + 8 >> 2];
    B = 0;
    while (1) {
     if ((B | 0) == 3) break;
     c[j + (B << 2) >> 2] = 0;
     B = B + 1 | 0;
    }
    Ms(i, 18955) | 0;
    c[k >> 2] = c[i >> 2];
    c[k + 4 >> 2] = c[i + 4 >> 2];
    c[k + 8 >> 2] = c[i + 8 >> 2];
    B = 0;
    while (1) {
     if ((B | 0) == 3) break;
     c[i + (B << 2) >> 2] = 0;
     B = B + 1 | 0;
    }
    bt(h, k);
    B = e + 4 | 0;
    o = c[B >> 2] | 0;
    if (o >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(o, h);
     c[B >> 2] = (c[B >> 2] | 0) + 24;
    } else et(e, h);
    ns(h);
    Es(k);
    Es(i);
    Es(j);
    w = z;
   }
  } else w = b;
 } else w = b; else w = b; else w = b; while (0);
 l = f;
 return w | 0;
}

function tn(b, d, e, f, g, h, i, j, k, m) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 m = m | 0;
 var n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;
 n = l;
 l = l + 16 | 0;
 o = n + 12 | 0;
 p = n;
 if (b) {
  b = Ji(e, 24844) | 0;
  if (d) {
   Bc[c[(c[b >> 2] | 0) + 44 >> 2] & 63](o, b);
   q = c[o >> 2] | 0;
   a[f >> 0] = q;
   a[f + 1 >> 0] = q >> 8;
   a[f + 2 >> 0] = q >> 16;
   a[f + 3 >> 0] = q >> 24;
   Bc[c[(c[b >> 2] | 0) + 32 >> 2] & 63](p, b);
   q = k + 8 + 3 | 0;
   if ((a[q >> 0] | 0) < 0) {
    r = c[k >> 2] | 0;
    c[o >> 2] = 0;
    vi(r, o);
    c[k + 4 >> 2] = 0;
   } else {
    c[o >> 2] = 0;
    vi(k, o);
    a[q >> 0] = 0;
   }
   rr(k, 0);
   c[k >> 2] = c[p >> 2];
   c[k + 4 >> 2] = c[p + 4 >> 2];
   c[k + 8 >> 2] = c[p + 8 >> 2];
   q = 0;
   while (1) {
    if ((q | 0) == 3) break;
    c[p + (q << 2) >> 2] = 0;
    q = q + 1 | 0;
   }
   nr(p);
  } else {
   Bc[c[(c[b >> 2] | 0) + 40 >> 2] & 63](o, b);
   q = c[o >> 2] | 0;
   a[f >> 0] = q;
   a[f + 1 >> 0] = q >> 8;
   a[f + 2 >> 0] = q >> 16;
   a[f + 3 >> 0] = q >> 24;
   Bc[c[(c[b >> 2] | 0) + 28 >> 2] & 63](p, b);
   q = k + 8 + 3 | 0;
   if ((a[q >> 0] | 0) < 0) {
    r = c[k >> 2] | 0;
    c[o >> 2] = 0;
    vi(r, o);
    c[k + 4 >> 2] = 0;
   } else {
    c[o >> 2] = 0;
    vi(k, o);
    a[q >> 0] = 0;
   }
   rr(k, 0);
   c[k >> 2] = c[p >> 2];
   c[k + 4 >> 2] = c[p + 4 >> 2];
   c[k + 8 >> 2] = c[p + 8 >> 2];
   q = 0;
   while (1) {
    if ((q | 0) == 3) break;
    c[p + (q << 2) >> 2] = 0;
    q = q + 1 | 0;
   }
   nr(p);
  }
  c[g >> 2] = pc[c[(c[b >> 2] | 0) + 12 >> 2] & 63](b) | 0;
  c[h >> 2] = pc[c[(c[b >> 2] | 0) + 16 >> 2] & 63](b) | 0;
  Bc[c[(c[b >> 2] | 0) + 20 >> 2] & 63](p, b);
  q = i + 11 | 0;
  if ((a[q >> 0] | 0) < 0) {
   r = c[i >> 2] | 0;
   a[o >> 0] = 0;
   mh(r, o);
   c[i + 4 >> 2] = 0;
   s = i;
  } else {
   a[o >> 0] = 0;
   mh(i, o);
   a[q >> 0] = 0;
   s = i;
  }
  gr(i, 0);
  c[s >> 2] = c[p >> 2];
  c[s + 4 >> 2] = c[p + 4 >> 2];
  c[s + 8 >> 2] = c[p + 8 >> 2];
  s = 0;
  while (1) {
   if ((s | 0) == 3) break;
   c[p + (s << 2) >> 2] = 0;
   s = s + 1 | 0;
  }
  br(p);
  Bc[c[(c[b >> 2] | 0) + 24 >> 2] & 63](p, b);
  s = j + 8 + 3 | 0;
  if ((a[s >> 0] | 0) < 0) {
   q = c[j >> 2] | 0;
   c[o >> 2] = 0;
   vi(q, o);
   c[j + 4 >> 2] = 0;
  } else {
   c[o >> 2] = 0;
   vi(j, o);
   a[s >> 0] = 0;
  }
  rr(j, 0);
  c[j >> 2] = c[p >> 2];
  c[j + 4 >> 2] = c[p + 4 >> 2];
  c[j + 8 >> 2] = c[p + 8 >> 2];
  s = 0;
  while (1) {
   if ((s | 0) == 3) break;
   c[p + (s << 2) >> 2] = 0;
   s = s + 1 | 0;
  }
  nr(p);
  t = pc[c[(c[b >> 2] | 0) + 36 >> 2] & 63](b) | 0;
 } else {
  b = Ji(e, 24836) | 0;
  if (d) {
   Bc[c[(c[b >> 2] | 0) + 44 >> 2] & 63](o, b);
   d = c[o >> 2] | 0;
   a[f >> 0] = d;
   a[f + 1 >> 0] = d >> 8;
   a[f + 2 >> 0] = d >> 16;
   a[f + 3 >> 0] = d >> 24;
   Bc[c[(c[b >> 2] | 0) + 32 >> 2] & 63](p, b);
   d = k + 8 + 3 | 0;
   if ((a[d >> 0] | 0) < 0) {
    e = c[k >> 2] | 0;
    c[o >> 2] = 0;
    vi(e, o);
    c[k + 4 >> 2] = 0;
   } else {
    c[o >> 2] = 0;
    vi(k, o);
    a[d >> 0] = 0;
   }
   rr(k, 0);
   c[k >> 2] = c[p >> 2];
   c[k + 4 >> 2] = c[p + 4 >> 2];
   c[k + 8 >> 2] = c[p + 8 >> 2];
   d = 0;
   while (1) {
    if ((d | 0) == 3) break;
    c[p + (d << 2) >> 2] = 0;
    d = d + 1 | 0;
   }
   nr(p);
  } else {
   Bc[c[(c[b >> 2] | 0) + 40 >> 2] & 63](o, b);
   d = c[o >> 2] | 0;
   a[f >> 0] = d;
   a[f + 1 >> 0] = d >> 8;
   a[f + 2 >> 0] = d >> 16;
   a[f + 3 >> 0] = d >> 24;
   Bc[c[(c[b >> 2] | 0) + 28 >> 2] & 63](p, b);
   d = k + 8 + 3 | 0;
   if ((a[d >> 0] | 0) < 0) {
    f = c[k >> 2] | 0;
    c[o >> 2] = 0;
    vi(f, o);
    c[k + 4 >> 2] = 0;
   } else {
    c[o >> 2] = 0;
    vi(k, o);
    a[d >> 0] = 0;
   }
   rr(k, 0);
   c[k >> 2] = c[p >> 2];
   c[k + 4 >> 2] = c[p + 4 >> 2];
   c[k + 8 >> 2] = c[p + 8 >> 2];
   k = 0;
   while (1) {
    if ((k | 0) == 3) break;
    c[p + (k << 2) >> 2] = 0;
    k = k + 1 | 0;
   }
   nr(p);
  }
  c[g >> 2] = pc[c[(c[b >> 2] | 0) + 12 >> 2] & 63](b) | 0;
  c[h >> 2] = pc[c[(c[b >> 2] | 0) + 16 >> 2] & 63](b) | 0;
  Bc[c[(c[b >> 2] | 0) + 20 >> 2] & 63](p, b);
  h = i + 11 | 0;
  if ((a[h >> 0] | 0) < 0) {
   g = c[i >> 2] | 0;
   a[o >> 0] = 0;
   mh(g, o);
   c[i + 4 >> 2] = 0;
   u = i;
  } else {
   a[o >> 0] = 0;
   mh(i, o);
   a[h >> 0] = 0;
   u = i;
  }
  gr(i, 0);
  c[u >> 2] = c[p >> 2];
  c[u + 4 >> 2] = c[p + 4 >> 2];
  c[u + 8 >> 2] = c[p + 8 >> 2];
  u = 0;
  while (1) {
   if ((u | 0) == 3) break;
   c[p + (u << 2) >> 2] = 0;
   u = u + 1 | 0;
  }
  br(p);
  Bc[c[(c[b >> 2] | 0) + 24 >> 2] & 63](p, b);
  u = j + 8 + 3 | 0;
  if ((a[u >> 0] | 0) < 0) {
   i = c[j >> 2] | 0;
   c[o >> 2] = 0;
   vi(i, o);
   c[j + 4 >> 2] = 0;
  } else {
   c[o >> 2] = 0;
   vi(j, o);
   a[u >> 0] = 0;
  }
  rr(j, 0);
  c[j >> 2] = c[p >> 2];
  c[j + 4 >> 2] = c[p + 4 >> 2];
  c[j + 8 >> 2] = c[p + 8 >> 2];
  j = 0;
  while (1) {
   if ((j | 0) == 3) break;
   c[p + (j << 2) >> 2] = 0;
   j = j + 1 | 0;
  }
  nr(p);
  t = pc[c[(c[b >> 2] | 0) + 36 >> 2] & 63](b) | 0;
 }
 c[m >> 2] = t;
 l = n;
 return;
}

function kl(b, d, e, f, g, h, i, j) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 var k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0;
 j = l;
 l = l + 144 | 0;
 k = j + 128 | 0;
 m = j + 112 | 0;
 n = j + 124 | 0;
 o = j + 120 | 0;
 p = j + 116 | 0;
 q = j + 108 | 0;
 r = j + 104 | 0;
 s = j + 100 | 0;
 t = j + 96 | 0;
 u = j + 92 | 0;
 v = j + 88 | 0;
 w = j + 84 | 0;
 x = j + 80 | 0;
 y = j + 76 | 0;
 z = j + 72 | 0;
 A = j + 68 | 0;
 B = j + 64 | 0;
 C = j + 60 | 0;
 D = j + 56 | 0;
 E = j + 52 | 0;
 F = j + 48 | 0;
 G = j + 44 | 0;
 H = j + 40 | 0;
 I = j + 36 | 0;
 J = j + 32 | 0;
 K = j + 28 | 0;
 L = j + 24 | 0;
 M = j + 20 | 0;
 N = j + 16 | 0;
 O = j + 12 | 0;
 P = j + 8 | 0;
 Q = j + 4 | 0;
 R = j;
 c[g >> 2] = 0;
 qh(k, f);
 S = Ji(k, 23140) | 0;
 Ki(k);
 do switch (i << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   c[n >> 2] = c[e >> 2];
   c[k >> 2] = c[n >> 2];
   wl(b, h + 24 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   c[o >> 2] = c[e >> 2];
   c[k >> 2] = c[o >> 2];
   xl(b, h + 16 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 99:
  {
   U = b + 8 | 0;
   V = pc[c[(c[U >> 2] | 0) + 12 >> 2] & 63](U) | 0;
   c[p >> 2] = c[d >> 2];
   c[q >> 2] = c[e >> 2];
   U = a[V + 8 + 3 >> 0] | 0;
   W = U << 24 >> 24 < 0;
   X = W ? c[V >> 2] | 0 : V;
   Y = X + ((W ? c[V + 4 >> 2] | 0 : U & 255) << 2) | 0;
   c[m >> 2] = c[p >> 2];
   c[k >> 2] = c[q >> 2];
   c[d >> 2] = yl(b, m, k, f, g, h, X, Y) | 0;
   T = 26;
   break;
  }
 case 101:
 case 100:
  {
   c[r >> 2] = c[e >> 2];
   c[k >> 2] = c[r >> 2];
   zl(b, h + 12 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 68:
  {
   c[s >> 2] = c[d >> 2];
   c[t >> 2] = c[e >> 2];
   c[m >> 2] = c[s >> 2];
   c[k >> 2] = c[t >> 2];
   c[d >> 2] = yl(b, m, k, f, g, h, 8688, 8720) | 0;
   T = 26;
   break;
  }
 case 70:
  {
   c[u >> 2] = c[d >> 2];
   c[v >> 2] = c[e >> 2];
   c[m >> 2] = c[u >> 2];
   c[k >> 2] = c[v >> 2];
   c[d >> 2] = yl(b, m, k, f, g, h, 8720, 8752) | 0;
   T = 26;
   break;
  }
 case 72:
  {
   c[w >> 2] = c[e >> 2];
   c[k >> 2] = c[w >> 2];
   Al(b, h + 8 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 73:
  {
   c[x >> 2] = c[e >> 2];
   c[k >> 2] = c[x >> 2];
   Bl(b, h + 8 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 106:
  {
   c[y >> 2] = c[e >> 2];
   c[k >> 2] = c[y >> 2];
   Cl(b, h + 28 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 109:
  {
   c[z >> 2] = c[e >> 2];
   c[k >> 2] = c[z >> 2];
   Dl(b, h + 16 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 77:
  {
   c[A >> 2] = c[e >> 2];
   c[k >> 2] = c[A >> 2];
   El(b, h + 4 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 116:
 case 110:
  {
   c[B >> 2] = c[e >> 2];
   c[k >> 2] = c[B >> 2];
   Fl(b, d, k, g, S);
   T = 26;
   break;
  }
 case 112:
  {
   c[C >> 2] = c[e >> 2];
   c[k >> 2] = c[C >> 2];
   Gl(b, h + 8 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 114:
  {
   c[D >> 2] = c[d >> 2];
   c[E >> 2] = c[e >> 2];
   c[m >> 2] = c[D >> 2];
   c[k >> 2] = c[E >> 2];
   c[d >> 2] = yl(b, m, k, f, g, h, 8752, 8796) | 0;
   T = 26;
   break;
  }
 case 82:
  {
   c[F >> 2] = c[d >> 2];
   c[G >> 2] = c[e >> 2];
   c[m >> 2] = c[F >> 2];
   c[k >> 2] = c[G >> 2];
   c[d >> 2] = yl(b, m, k, f, g, h, 8796, 8816) | 0;
   T = 26;
   break;
  }
 case 83:
  {
   c[H >> 2] = c[e >> 2];
   c[k >> 2] = c[H >> 2];
   Hl(b, h, d, k, g, S);
   T = 26;
   break;
  }
 case 84:
  {
   c[I >> 2] = c[d >> 2];
   c[J >> 2] = c[e >> 2];
   c[m >> 2] = c[I >> 2];
   c[k >> 2] = c[J >> 2];
   c[d >> 2] = yl(b, m, k, f, g, h, 8816, 8848) | 0;
   T = 26;
   break;
  }
 case 119:
  {
   c[K >> 2] = c[e >> 2];
   c[k >> 2] = c[K >> 2];
   Il(b, h + 24 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 120:
  {
   Y = c[(c[b >> 2] | 0) + 20 >> 2] | 0;
   c[L >> 2] = c[d >> 2];
   c[M >> 2] = c[e >> 2];
   c[m >> 2] = c[L >> 2];
   c[k >> 2] = c[M >> 2];
   Z = wc[Y & 63](b, m, k, f, g, h) | 0;
   break;
  }
 case 88:
  {
   Y = b + 8 | 0;
   X = pc[c[(c[Y >> 2] | 0) + 24 >> 2] & 63](Y) | 0;
   c[N >> 2] = c[d >> 2];
   c[O >> 2] = c[e >> 2];
   Y = a[X + 8 + 3 >> 0] | 0;
   U = Y << 24 >> 24 < 0;
   V = U ? c[X >> 2] | 0 : X;
   W = V + ((U ? c[X + 4 >> 2] | 0 : Y & 255) << 2) | 0;
   c[m >> 2] = c[N >> 2];
   c[k >> 2] = c[O >> 2];
   c[d >> 2] = yl(b, m, k, f, g, h, V, W) | 0;
   T = 26;
   break;
  }
 case 121:
  {
   c[P >> 2] = c[e >> 2];
   c[k >> 2] = c[P >> 2];
   Jl(b, h + 20 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 89:
  {
   c[Q >> 2] = c[e >> 2];
   c[k >> 2] = c[Q >> 2];
   Kl(b, h + 20 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 37:
  {
   c[R >> 2] = c[e >> 2];
   c[k >> 2] = c[R >> 2];
   Ll(b, d, k, g, S);
   T = 26;
   break;
  }
 default:
  {
   c[g >> 2] = c[g >> 2] | 4;
   T = 26;
  }
 } while (0);
 if ((T | 0) == 26) Z = c[d >> 2] | 0;
 l = j;
 return Z | 0;
}

function Ck(b, d, e, f, g, h, i, j) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 var k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0, Y = 0, Z = 0;
 j = l;
 l = l + 144 | 0;
 k = j + 128 | 0;
 m = j + 112 | 0;
 n = j + 124 | 0;
 o = j + 120 | 0;
 p = j + 116 | 0;
 q = j + 108 | 0;
 r = j + 104 | 0;
 s = j + 100 | 0;
 t = j + 96 | 0;
 u = j + 92 | 0;
 v = j + 88 | 0;
 w = j + 84 | 0;
 x = j + 80 | 0;
 y = j + 76 | 0;
 z = j + 72 | 0;
 A = j + 68 | 0;
 B = j + 64 | 0;
 C = j + 60 | 0;
 D = j + 56 | 0;
 E = j + 52 | 0;
 F = j + 48 | 0;
 G = j + 44 | 0;
 H = j + 40 | 0;
 I = j + 36 | 0;
 J = j + 32 | 0;
 K = j + 28 | 0;
 L = j + 24 | 0;
 M = j + 20 | 0;
 N = j + 16 | 0;
 O = j + 12 | 0;
 P = j + 8 | 0;
 Q = j + 4 | 0;
 R = j;
 c[g >> 2] = 0;
 qh(k, f);
 S = Ji(k, 23108) | 0;
 Ki(k);
 do switch (i << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   c[n >> 2] = c[e >> 2];
   c[k >> 2] = c[n >> 2];
   Nk(b, h + 24 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   c[o >> 2] = c[e >> 2];
   c[k >> 2] = c[o >> 2];
   Ok(b, h + 16 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 99:
  {
   U = b + 8 | 0;
   V = pc[c[(c[U >> 2] | 0) + 12 >> 2] & 63](U) | 0;
   c[p >> 2] = c[d >> 2];
   c[q >> 2] = c[e >> 2];
   U = a[V + 11 >> 0] | 0;
   W = U << 24 >> 24 < 0;
   X = W ? c[V >> 2] | 0 : V;
   Y = X + (W ? c[V + 4 >> 2] | 0 : U & 255) | 0;
   c[m >> 2] = c[p >> 2];
   c[k >> 2] = c[q >> 2];
   c[d >> 2] = Pk(b, m, k, f, g, h, X, Y) | 0;
   T = 26;
   break;
  }
 case 101:
 case 100:
  {
   c[r >> 2] = c[e >> 2];
   c[k >> 2] = c[r >> 2];
   Qk(b, h + 12 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 68:
  {
   c[s >> 2] = c[d >> 2];
   c[t >> 2] = c[e >> 2];
   c[m >> 2] = c[s >> 2];
   c[k >> 2] = c[t >> 2];
   c[d >> 2] = Pk(b, m, k, f, g, h, 16702, 16710) | 0;
   T = 26;
   break;
  }
 case 70:
  {
   c[u >> 2] = c[d >> 2];
   c[v >> 2] = c[e >> 2];
   c[m >> 2] = c[u >> 2];
   c[k >> 2] = c[v >> 2];
   c[d >> 2] = Pk(b, m, k, f, g, h, 16710, 16718) | 0;
   T = 26;
   break;
  }
 case 72:
  {
   c[w >> 2] = c[e >> 2];
   c[k >> 2] = c[w >> 2];
   Rk(b, h + 8 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 73:
  {
   c[x >> 2] = c[e >> 2];
   c[k >> 2] = c[x >> 2];
   Sk(b, h + 8 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 106:
  {
   c[y >> 2] = c[e >> 2];
   c[k >> 2] = c[y >> 2];
   Tk(b, h + 28 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 109:
  {
   c[z >> 2] = c[e >> 2];
   c[k >> 2] = c[z >> 2];
   Uk(b, h + 16 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 77:
  {
   c[A >> 2] = c[e >> 2];
   c[k >> 2] = c[A >> 2];
   Vk(b, h + 4 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 116:
 case 110:
  {
   c[B >> 2] = c[e >> 2];
   c[k >> 2] = c[B >> 2];
   Wk(b, d, k, g, S);
   T = 26;
   break;
  }
 case 112:
  {
   c[C >> 2] = c[e >> 2];
   c[k >> 2] = c[C >> 2];
   Xk(b, h + 8 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 114:
  {
   c[D >> 2] = c[d >> 2];
   c[E >> 2] = c[e >> 2];
   c[m >> 2] = c[D >> 2];
   c[k >> 2] = c[E >> 2];
   c[d >> 2] = Pk(b, m, k, f, g, h, 16718, 16729) | 0;
   T = 26;
   break;
  }
 case 82:
  {
   c[F >> 2] = c[d >> 2];
   c[G >> 2] = c[e >> 2];
   c[m >> 2] = c[F >> 2];
   c[k >> 2] = c[G >> 2];
   c[d >> 2] = Pk(b, m, k, f, g, h, 16729, 16734) | 0;
   T = 26;
   break;
  }
 case 83:
  {
   c[H >> 2] = c[e >> 2];
   c[k >> 2] = c[H >> 2];
   Yk(b, h, d, k, g, S);
   T = 26;
   break;
  }
 case 84:
  {
   c[I >> 2] = c[d >> 2];
   c[J >> 2] = c[e >> 2];
   c[m >> 2] = c[I >> 2];
   c[k >> 2] = c[J >> 2];
   c[d >> 2] = Pk(b, m, k, f, g, h, 16734, 16742) | 0;
   T = 26;
   break;
  }
 case 119:
  {
   c[K >> 2] = c[e >> 2];
   c[k >> 2] = c[K >> 2];
   Zk(b, h + 24 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 120:
  {
   Y = c[(c[b >> 2] | 0) + 20 >> 2] | 0;
   c[L >> 2] = c[d >> 2];
   c[M >> 2] = c[e >> 2];
   c[m >> 2] = c[L >> 2];
   c[k >> 2] = c[M >> 2];
   Z = wc[Y & 63](b, m, k, f, g, h) | 0;
   break;
  }
 case 88:
  {
   Y = b + 8 | 0;
   X = pc[c[(c[Y >> 2] | 0) + 24 >> 2] & 63](Y) | 0;
   c[N >> 2] = c[d >> 2];
   c[O >> 2] = c[e >> 2];
   Y = a[X + 11 >> 0] | 0;
   U = Y << 24 >> 24 < 0;
   V = U ? c[X >> 2] | 0 : X;
   W = V + (U ? c[X + 4 >> 2] | 0 : Y & 255) | 0;
   c[m >> 2] = c[N >> 2];
   c[k >> 2] = c[O >> 2];
   c[d >> 2] = Pk(b, m, k, f, g, h, V, W) | 0;
   T = 26;
   break;
  }
 case 121:
  {
   c[P >> 2] = c[e >> 2];
   c[k >> 2] = c[P >> 2];
   _k(b, h + 20 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 89:
  {
   c[Q >> 2] = c[e >> 2];
   c[k >> 2] = c[Q >> 2];
   $k(b, h + 20 | 0, d, k, g, S);
   T = 26;
   break;
  }
 case 37:
  {
   c[R >> 2] = c[e >> 2];
   c[k >> 2] = c[R >> 2];
   al(b, d, k, g, S);
   T = 26;
   break;
  }
 default:
  {
   c[g >> 2] = c[g >> 2] | 4;
   T = 26;
  }
 } while (0);
 if ((T | 0) == 26) Z = c[d >> 2] | 0;
 l = j;
 return Z | 0;
}

function Ym(b, d, e, f, g, h, i, j, k, m) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 m = m | 0;
 var n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0;
 n = l;
 l = l + 16 | 0;
 o = n + 12 | 0;
 p = n;
 if (b) {
  b = Ji(d, 24828) | 0;
  Bc[c[(c[b >> 2] | 0) + 44 >> 2] & 63](o, b);
  q = c[o >> 2] | 0;
  a[e >> 0] = q;
  a[e + 1 >> 0] = q >> 8;
  a[e + 2 >> 0] = q >> 16;
  a[e + 3 >> 0] = q >> 24;
  Bc[c[(c[b >> 2] | 0) + 32 >> 2] & 63](p, b);
  q = k + 11 | 0;
  if ((a[q >> 0] | 0) < 0) {
   r = c[k >> 2] | 0;
   a[o >> 0] = 0;
   mh(r, o);
   c[k + 4 >> 2] = 0;
   s = k;
  } else {
   a[o >> 0] = 0;
   mh(k, o);
   a[q >> 0] = 0;
   s = k;
  }
  gr(k, 0);
  c[s >> 2] = c[p >> 2];
  c[s + 4 >> 2] = c[p + 4 >> 2];
  c[s + 8 >> 2] = c[p + 8 >> 2];
  s = 0;
  while (1) {
   if ((s | 0) == 3) break;
   c[p + (s << 2) >> 2] = 0;
   s = s + 1 | 0;
  }
  br(p);
  Bc[c[(c[b >> 2] | 0) + 28 >> 2] & 63](p, b);
  s = j + 11 | 0;
  if ((a[s >> 0] | 0) < 0) {
   q = c[j >> 2] | 0;
   a[o >> 0] = 0;
   mh(q, o);
   c[j + 4 >> 2] = 0;
   t = j;
  } else {
   a[o >> 0] = 0;
   mh(j, o);
   a[s >> 0] = 0;
   t = j;
  }
  gr(j, 0);
  c[t >> 2] = c[p >> 2];
  c[t + 4 >> 2] = c[p + 4 >> 2];
  c[t + 8 >> 2] = c[p + 8 >> 2];
  t = 0;
  while (1) {
   if ((t | 0) == 3) break;
   c[p + (t << 2) >> 2] = 0;
   t = t + 1 | 0;
  }
  br(p);
  a[f >> 0] = pc[c[(c[b >> 2] | 0) + 12 >> 2] & 63](b) | 0;
  a[g >> 0] = pc[c[(c[b >> 2] | 0) + 16 >> 2] & 63](b) | 0;
  Bc[c[(c[b >> 2] | 0) + 20 >> 2] & 63](p, b);
  t = h + 11 | 0;
  if ((a[t >> 0] | 0) < 0) {
   s = c[h >> 2] | 0;
   a[o >> 0] = 0;
   mh(s, o);
   c[h + 4 >> 2] = 0;
   u = h;
  } else {
   a[o >> 0] = 0;
   mh(h, o);
   a[t >> 0] = 0;
   u = h;
  }
  gr(h, 0);
  c[u >> 2] = c[p >> 2];
  c[u + 4 >> 2] = c[p + 4 >> 2];
  c[u + 8 >> 2] = c[p + 8 >> 2];
  u = 0;
  while (1) {
   if ((u | 0) == 3) break;
   c[p + (u << 2) >> 2] = 0;
   u = u + 1 | 0;
  }
  br(p);
  Bc[c[(c[b >> 2] | 0) + 24 >> 2] & 63](p, b);
  u = i + 11 | 0;
  if ((a[u >> 0] | 0) < 0) {
   t = c[i >> 2] | 0;
   a[o >> 0] = 0;
   mh(t, o);
   c[i + 4 >> 2] = 0;
   v = i;
  } else {
   a[o >> 0] = 0;
   mh(i, o);
   a[u >> 0] = 0;
   v = i;
  }
  gr(i, 0);
  c[v >> 2] = c[p >> 2];
  c[v + 4 >> 2] = c[p + 4 >> 2];
  c[v + 8 >> 2] = c[p + 8 >> 2];
  v = 0;
  while (1) {
   if ((v | 0) == 3) break;
   c[p + (v << 2) >> 2] = 0;
   v = v + 1 | 0;
  }
  br(p);
  w = pc[c[(c[b >> 2] | 0) + 36 >> 2] & 63](b) | 0;
 } else {
  b = Ji(d, 24820) | 0;
  Bc[c[(c[b >> 2] | 0) + 44 >> 2] & 63](o, b);
  d = c[o >> 2] | 0;
  a[e >> 0] = d;
  a[e + 1 >> 0] = d >> 8;
  a[e + 2 >> 0] = d >> 16;
  a[e + 3 >> 0] = d >> 24;
  Bc[c[(c[b >> 2] | 0) + 32 >> 2] & 63](p, b);
  d = k + 11 | 0;
  if ((a[d >> 0] | 0) < 0) {
   e = c[k >> 2] | 0;
   a[o >> 0] = 0;
   mh(e, o);
   c[k + 4 >> 2] = 0;
   x = k;
  } else {
   a[o >> 0] = 0;
   mh(k, o);
   a[d >> 0] = 0;
   x = k;
  }
  gr(k, 0);
  c[x >> 2] = c[p >> 2];
  c[x + 4 >> 2] = c[p + 4 >> 2];
  c[x + 8 >> 2] = c[p + 8 >> 2];
  x = 0;
  while (1) {
   if ((x | 0) == 3) break;
   c[p + (x << 2) >> 2] = 0;
   x = x + 1 | 0;
  }
  br(p);
  Bc[c[(c[b >> 2] | 0) + 28 >> 2] & 63](p, b);
  x = j + 11 | 0;
  if ((a[x >> 0] | 0) < 0) {
   k = c[j >> 2] | 0;
   a[o >> 0] = 0;
   mh(k, o);
   c[j + 4 >> 2] = 0;
   y = j;
  } else {
   a[o >> 0] = 0;
   mh(j, o);
   a[x >> 0] = 0;
   y = j;
  }
  gr(j, 0);
  c[y >> 2] = c[p >> 2];
  c[y + 4 >> 2] = c[p + 4 >> 2];
  c[y + 8 >> 2] = c[p + 8 >> 2];
  y = 0;
  while (1) {
   if ((y | 0) == 3) break;
   c[p + (y << 2) >> 2] = 0;
   y = y + 1 | 0;
  }
  br(p);
  a[f >> 0] = pc[c[(c[b >> 2] | 0) + 12 >> 2] & 63](b) | 0;
  a[g >> 0] = pc[c[(c[b >> 2] | 0) + 16 >> 2] & 63](b) | 0;
  Bc[c[(c[b >> 2] | 0) + 20 >> 2] & 63](p, b);
  g = h + 11 | 0;
  if ((a[g >> 0] | 0) < 0) {
   f = c[h >> 2] | 0;
   a[o >> 0] = 0;
   mh(f, o);
   c[h + 4 >> 2] = 0;
   z = h;
  } else {
   a[o >> 0] = 0;
   mh(h, o);
   a[g >> 0] = 0;
   z = h;
  }
  gr(h, 0);
  c[z >> 2] = c[p >> 2];
  c[z + 4 >> 2] = c[p + 4 >> 2];
  c[z + 8 >> 2] = c[p + 8 >> 2];
  z = 0;
  while (1) {
   if ((z | 0) == 3) break;
   c[p + (z << 2) >> 2] = 0;
   z = z + 1 | 0;
  }
  br(p);
  Bc[c[(c[b >> 2] | 0) + 24 >> 2] & 63](p, b);
  z = i + 11 | 0;
  if ((a[z >> 0] | 0) < 0) {
   h = c[i >> 2] | 0;
   a[o >> 0] = 0;
   mh(h, o);
   c[i + 4 >> 2] = 0;
   A = i;
  } else {
   a[o >> 0] = 0;
   mh(i, o);
   a[z >> 0] = 0;
   A = i;
  }
  gr(i, 0);
  c[A >> 2] = c[p >> 2];
  c[A + 4 >> 2] = c[p + 4 >> 2];
  c[A + 8 >> 2] = c[p + 8 >> 2];
  A = 0;
  while (1) {
   if ((A | 0) == 3) break;
   c[p + (A << 2) >> 2] = 0;
   A = A + 1 | 0;
  }
  br(p);
  w = pc[c[(c[b >> 2] | 0) + 36 >> 2] & 63](b) | 0;
 }
 c[m >> 2] = w;
 l = n;
 return;
}

function un(b, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 l = l | 0;
 m = m | 0;
 n = n | 0;
 o = o | 0;
 p = p | 0;
 q = q | 0;
 var r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0;
 c[e >> 2] = b;
 r = p + 8 + 3 | 0;
 s = p + 4 | 0;
 t = o + 8 + 3 | 0;
 u = o + 4 | 0;
 v = (f & 512 | 0) == 0;
 w = (q | 0) > 0;
 x = n + 11 | 0;
 y = n + 4 | 0;
 z = 0;
 A = g;
 while (1) {
  if ((z | 0) == 4) break;
  a : do switch (a[k + z >> 0] | 0) {
  case 0:
   {
    c[d >> 2] = c[e >> 2];
    B = A;
    break;
   }
  case 1:
   {
    c[d >> 2] = c[e >> 2];
    g = qc[c[(c[i >> 2] | 0) + 44 >> 2] & 31](i, 32) | 0;
    C = c[e >> 2] | 0;
    c[e >> 2] = C + 4;
    c[C >> 2] = g;
    B = A;
    break;
   }
  case 3:
   {
    g = a[r >> 0] | 0;
    C = g << 24 >> 24 < 0;
    if (!((C ? c[s >> 2] | 0 : g & 255) | 0)) B = A; else {
     g = c[(C ? c[p >> 2] | 0 : p) >> 2] | 0;
     C = c[e >> 2] | 0;
     c[e >> 2] = C + 4;
     c[C >> 2] = g;
     B = A;
    }
    break;
   }
  case 2:
   {
    g = a[t >> 0] | 0;
    C = g << 24 >> 24 < 0;
    D = C ? c[u >> 2] | 0 : g & 255;
    if (v | (D | 0) == 0) B = A; else {
     g = C ? c[o >> 2] | 0 : o;
     C = g + (D << 2) | 0;
     E = c[e >> 2] | 0;
     F = E;
     G = g;
     while (1) {
      if ((G | 0) == (C | 0)) break;
      c[F >> 2] = c[G >> 2];
      F = F + 4 | 0;
      G = G + 4 | 0;
     }
     c[e >> 2] = E + (D << 2);
     B = A;
    }
    break;
   }
  case 4:
   {
    G = c[e >> 2] | 0;
    F = j ? A + 4 | 0 : A;
    C = F;
    while (1) {
     if (C >>> 0 >= h >>> 0) break;
     if (!(rc[c[(c[i >> 2] | 0) + 12 >> 2] & 31](i, 2048, c[C >> 2] | 0) | 0)) break;
     C = C + 4 | 0;
    }
    if (w) {
     D = q;
     E = C;
     while (1) {
      H = (D | 0) > 0;
      if (!(E >>> 0 > F >>> 0 & H)) break;
      g = E + -4 | 0;
      I = c[g >> 2] | 0;
      J = c[e >> 2] | 0;
      c[e >> 2] = J + 4;
      c[J >> 2] = I;
      D = D + -1 | 0;
      E = g;
     }
     if (H) K = qc[c[(c[i >> 2] | 0) + 44 >> 2] & 31](i, 48) | 0; else K = 0;
     g = D;
     I = c[e >> 2] | 0;
     while (1) {
      L = I + 4 | 0;
      if ((g | 0) <= 0) break;
      c[I >> 2] = K;
      g = g + -1 | 0;
      I = L;
     }
     c[e >> 2] = L;
     c[I >> 2] = l;
     M = E;
    } else M = C;
    if ((M | 0) == (F | 0)) {
     g = qc[c[(c[i >> 2] | 0) + 44 >> 2] & 31](i, 48) | 0;
     D = c[e >> 2] | 0;
     J = D + 4 | 0;
     c[e >> 2] = J;
     c[D >> 2] = g;
     N = J;
    } else {
     J = a[x >> 0] | 0;
     g = J << 24 >> 24 < 0;
     if (!((g ? c[y >> 2] | 0 : J & 255) | 0)) {
      O = -1;
      P = 0;
      Q = 0;
      R = M;
     } else {
      O = a[(g ? c[n >> 2] | 0 : n) >> 0] | 0;
      P = 0;
      Q = 0;
      R = M;
     }
     while (1) {
      if ((R | 0) == (F | 0)) break;
      g = c[e >> 2] | 0;
      if ((Q | 0) == (O | 0)) {
       J = g + 4 | 0;
       c[e >> 2] = J;
       c[g >> 2] = m;
       D = P + 1 | 0;
       S = a[x >> 0] | 0;
       T = S << 24 >> 24 < 0;
       if (D >>> 0 < (T ? c[y >> 2] | 0 : S & 255) >>> 0) {
        S = a[(T ? c[n >> 2] | 0 : n) + D >> 0] | 0;
        U = S << 24 >> 24 == 127 ? -1 : S << 24 >> 24;
        V = D;
        W = 0;
        X = J;
       } else {
        U = Q;
        V = D;
        W = 0;
        X = J;
       }
      } else {
       U = O;
       V = P;
       W = Q;
       X = g;
      }
      g = R + -4 | 0;
      J = c[g >> 2] | 0;
      c[e >> 2] = X + 4;
      c[X >> 2] = J;
      O = U;
      P = V;
      Q = W + 1 | 0;
      R = g;
     }
     N = c[e >> 2] | 0;
    }
    if ((G | 0) == (N | 0)) B = F; else {
     C = N;
     E = G;
     while (1) {
      I = C + -4 | 0;
      if (E >>> 0 >= I >>> 0) {
       B = F;
       break a;
      }
      g = c[E >> 2] | 0;
      c[E >> 2] = c[I >> 2];
      c[I >> 2] = g;
      C = I;
      E = E + 4 | 0;
     }
    }
    break;
   }
  default:
   B = A;
  } while (0);
  z = z + 1 | 0;
  A = B;
 }
 B = a[r >> 0] | 0;
 r = B << 24 >> 24 < 0;
 A = r ? c[s >> 2] | 0 : B & 255;
 if (A >>> 0 > 1) {
  B = c[p >> 2] | 0;
  z = r ? B + 4 | 0 : s;
  s = (r ? B : p) + (A << 2) | 0;
  A = c[e >> 2] | 0;
  p = s - z | 0;
  B = A;
  r = z;
  while (1) {
   if ((r | 0) == (s | 0)) break;
   c[B >> 2] = c[r >> 2];
   B = B + 4 | 0;
   r = r + 4 | 0;
  }
  c[e >> 2] = A + (p >>> 2 << 2);
 }
 switch ((f & 176) << 24 >> 24) {
 case 32:
  {
   c[d >> 2] = c[e >> 2];
   break;
  }
 case 16:
  break;
 default:
  c[d >> 2] = b;
 }
 return;
}

function gn(b, d, e, f, g, h, i, j, k, m) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 m = m | 0;
 var n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;
 n = l;
 l = l + 16 | 0;
 o = n + 12 | 0;
 p = n;
 if (b) {
  b = Ji(d, 24844) | 0;
  Bc[c[(c[b >> 2] | 0) + 44 >> 2] & 63](o, b);
  q = c[o >> 2] | 0;
  a[e >> 0] = q;
  a[e + 1 >> 0] = q >> 8;
  a[e + 2 >> 0] = q >> 16;
  a[e + 3 >> 0] = q >> 24;
  Bc[c[(c[b >> 2] | 0) + 32 >> 2] & 63](p, b);
  q = k + 8 + 3 | 0;
  if ((a[q >> 0] | 0) < 0) {
   r = c[k >> 2] | 0;
   c[o >> 2] = 0;
   vi(r, o);
   c[k + 4 >> 2] = 0;
  } else {
   c[o >> 2] = 0;
   vi(k, o);
   a[q >> 0] = 0;
  }
  rr(k, 0);
  c[k >> 2] = c[p >> 2];
  c[k + 4 >> 2] = c[p + 4 >> 2];
  c[k + 8 >> 2] = c[p + 8 >> 2];
  q = 0;
  while (1) {
   if ((q | 0) == 3) break;
   c[p + (q << 2) >> 2] = 0;
   q = q + 1 | 0;
  }
  nr(p);
  Bc[c[(c[b >> 2] | 0) + 28 >> 2] & 63](p, b);
  q = j + 8 + 3 | 0;
  if ((a[q >> 0] | 0) < 0) {
   r = c[j >> 2] | 0;
   c[o >> 2] = 0;
   vi(r, o);
   c[j + 4 >> 2] = 0;
  } else {
   c[o >> 2] = 0;
   vi(j, o);
   a[q >> 0] = 0;
  }
  rr(j, 0);
  c[j >> 2] = c[p >> 2];
  c[j + 4 >> 2] = c[p + 4 >> 2];
  c[j + 8 >> 2] = c[p + 8 >> 2];
  q = 0;
  while (1) {
   if ((q | 0) == 3) break;
   c[p + (q << 2) >> 2] = 0;
   q = q + 1 | 0;
  }
  nr(p);
  c[f >> 2] = pc[c[(c[b >> 2] | 0) + 12 >> 2] & 63](b) | 0;
  c[g >> 2] = pc[c[(c[b >> 2] | 0) + 16 >> 2] & 63](b) | 0;
  Bc[c[(c[b >> 2] | 0) + 20 >> 2] & 63](p, b);
  q = h + 11 | 0;
  if ((a[q >> 0] | 0) < 0) {
   r = c[h >> 2] | 0;
   a[o >> 0] = 0;
   mh(r, o);
   c[h + 4 >> 2] = 0;
   s = h;
  } else {
   a[o >> 0] = 0;
   mh(h, o);
   a[q >> 0] = 0;
   s = h;
  }
  gr(h, 0);
  c[s >> 2] = c[p >> 2];
  c[s + 4 >> 2] = c[p + 4 >> 2];
  c[s + 8 >> 2] = c[p + 8 >> 2];
  s = 0;
  while (1) {
   if ((s | 0) == 3) break;
   c[p + (s << 2) >> 2] = 0;
   s = s + 1 | 0;
  }
  br(p);
  Bc[c[(c[b >> 2] | 0) + 24 >> 2] & 63](p, b);
  s = i + 8 + 3 | 0;
  if ((a[s >> 0] | 0) < 0) {
   q = c[i >> 2] | 0;
   c[o >> 2] = 0;
   vi(q, o);
   c[i + 4 >> 2] = 0;
  } else {
   c[o >> 2] = 0;
   vi(i, o);
   a[s >> 0] = 0;
  }
  rr(i, 0);
  c[i >> 2] = c[p >> 2];
  c[i + 4 >> 2] = c[p + 4 >> 2];
  c[i + 8 >> 2] = c[p + 8 >> 2];
  s = 0;
  while (1) {
   if ((s | 0) == 3) break;
   c[p + (s << 2) >> 2] = 0;
   s = s + 1 | 0;
  }
  nr(p);
  t = pc[c[(c[b >> 2] | 0) + 36 >> 2] & 63](b) | 0;
 } else {
  b = Ji(d, 24836) | 0;
  Bc[c[(c[b >> 2] | 0) + 44 >> 2] & 63](o, b);
  d = c[o >> 2] | 0;
  a[e >> 0] = d;
  a[e + 1 >> 0] = d >> 8;
  a[e + 2 >> 0] = d >> 16;
  a[e + 3 >> 0] = d >> 24;
  Bc[c[(c[b >> 2] | 0) + 32 >> 2] & 63](p, b);
  d = k + 8 + 3 | 0;
  if ((a[d >> 0] | 0) < 0) {
   e = c[k >> 2] | 0;
   c[o >> 2] = 0;
   vi(e, o);
   c[k + 4 >> 2] = 0;
  } else {
   c[o >> 2] = 0;
   vi(k, o);
   a[d >> 0] = 0;
  }
  rr(k, 0);
  c[k >> 2] = c[p >> 2];
  c[k + 4 >> 2] = c[p + 4 >> 2];
  c[k + 8 >> 2] = c[p + 8 >> 2];
  k = 0;
  while (1) {
   if ((k | 0) == 3) break;
   c[p + (k << 2) >> 2] = 0;
   k = k + 1 | 0;
  }
  nr(p);
  Bc[c[(c[b >> 2] | 0) + 28 >> 2] & 63](p, b);
  k = j + 8 + 3 | 0;
  if ((a[k >> 0] | 0) < 0) {
   d = c[j >> 2] | 0;
   c[o >> 2] = 0;
   vi(d, o);
   c[j + 4 >> 2] = 0;
  } else {
   c[o >> 2] = 0;
   vi(j, o);
   a[k >> 0] = 0;
  }
  rr(j, 0);
  c[j >> 2] = c[p >> 2];
  c[j + 4 >> 2] = c[p + 4 >> 2];
  c[j + 8 >> 2] = c[p + 8 >> 2];
  j = 0;
  while (1) {
   if ((j | 0) == 3) break;
   c[p + (j << 2) >> 2] = 0;
   j = j + 1 | 0;
  }
  nr(p);
  c[f >> 2] = pc[c[(c[b >> 2] | 0) + 12 >> 2] & 63](b) | 0;
  c[g >> 2] = pc[c[(c[b >> 2] | 0) + 16 >> 2] & 63](b) | 0;
  Bc[c[(c[b >> 2] | 0) + 20 >> 2] & 63](p, b);
  g = h + 11 | 0;
  if ((a[g >> 0] | 0) < 0) {
   f = c[h >> 2] | 0;
   a[o >> 0] = 0;
   mh(f, o);
   c[h + 4 >> 2] = 0;
   u = h;
  } else {
   a[o >> 0] = 0;
   mh(h, o);
   a[g >> 0] = 0;
   u = h;
  }
  gr(h, 0);
  c[u >> 2] = c[p >> 2];
  c[u + 4 >> 2] = c[p + 4 >> 2];
  c[u + 8 >> 2] = c[p + 8 >> 2];
  u = 0;
  while (1) {
   if ((u | 0) == 3) break;
   c[p + (u << 2) >> 2] = 0;
   u = u + 1 | 0;
  }
  br(p);
  Bc[c[(c[b >> 2] | 0) + 24 >> 2] & 63](p, b);
  u = i + 8 + 3 | 0;
  if ((a[u >> 0] | 0) < 0) {
   h = c[i >> 2] | 0;
   c[o >> 2] = 0;
   vi(h, o);
   c[i + 4 >> 2] = 0;
  } else {
   c[o >> 2] = 0;
   vi(i, o);
   a[u >> 0] = 0;
  }
  rr(i, 0);
  c[i >> 2] = c[p >> 2];
  c[i + 4 >> 2] = c[p + 4 >> 2];
  c[i + 8 >> 2] = c[p + 8 >> 2];
  i = 0;
  while (1) {
   if ((i | 0) == 3) break;
   c[p + (i << 2) >> 2] = 0;
   i = i + 1 | 0;
  }
  nr(p);
  t = pc[c[(c[b >> 2] | 0) + 36 >> 2] & 63](b) | 0;
 }
 c[m >> 2] = t;
 l = n;
 return;
}

function on(d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 l = l | 0;
 m = m | 0;
 n = n | 0;
 o = o | 0;
 p = p | 0;
 q = q | 0;
 r = r | 0;
 var s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0;
 c[f >> 2] = d;
 s = q + 11 | 0;
 t = q + 4 | 0;
 u = p + 11 | 0;
 v = p + 4 | 0;
 w = (g & 512 | 0) == 0;
 x = j + 8 | 0;
 y = (r | 0) > 0;
 z = o + 11 | 0;
 A = o + 4 | 0;
 B = 0;
 C = h;
 while (1) {
  if ((B | 0) == 4) break;
  a : do switch (a[l + B >> 0] | 0) {
  case 0:
   {
    c[e >> 2] = c[f >> 2];
    D = C;
    break;
   }
  case 1:
   {
    c[e >> 2] = c[f >> 2];
    h = qc[c[(c[j >> 2] | 0) + 28 >> 2] & 31](j, 32) | 0;
    E = c[f >> 2] | 0;
    c[f >> 2] = E + 1;
    a[E >> 0] = h;
    D = C;
    break;
   }
  case 3:
   {
    h = a[s >> 0] | 0;
    E = h << 24 >> 24 < 0;
    if (!((E ? c[t >> 2] | 0 : h & 255) | 0)) D = C; else {
     h = a[(E ? c[q >> 2] | 0 : q) >> 0] | 0;
     E = c[f >> 2] | 0;
     c[f >> 2] = E + 1;
     a[E >> 0] = h;
     D = C;
    }
    break;
   }
  case 2:
   {
    h = a[u >> 0] | 0;
    E = h << 24 >> 24 < 0;
    F = E ? c[v >> 2] | 0 : h & 255;
    if (w | (F | 0) == 0) D = C; else {
     h = E ? c[p >> 2] | 0 : p;
     E = h + F | 0;
     F = c[f >> 2] | 0;
     G = h;
     while (1) {
      if ((G | 0) == (E | 0)) break;
      a[F >> 0] = a[G >> 0] | 0;
      F = F + 1 | 0;
      G = G + 1 | 0;
     }
     c[f >> 2] = F;
     D = C;
    }
    break;
   }
  case 4:
   {
    G = c[f >> 2] | 0;
    E = k ? C + 1 | 0 : C;
    h = E;
    while (1) {
     if (h >>> 0 >= i >>> 0) break;
     H = a[h >> 0] | 0;
     if (H << 24 >> 24 <= -1) break;
     if (!(b[(c[x >> 2] | 0) + (H << 24 >> 24 << 1) >> 1] & 2048)) break;
     h = h + 1 | 0;
    }
    if (y) {
     F = r;
     H = h;
     while (1) {
      I = (F | 0) > 0;
      if (!(H >>> 0 > E >>> 0 & I)) break;
      J = H + -1 | 0;
      K = a[J >> 0] | 0;
      L = c[f >> 2] | 0;
      c[f >> 2] = L + 1;
      a[L >> 0] = K;
      F = F + -1 | 0;
      H = J;
     }
     if (I) M = qc[c[(c[j >> 2] | 0) + 28 >> 2] & 31](j, 48) | 0; else M = 0;
     J = F;
     while (1) {
      N = c[f >> 2] | 0;
      c[f >> 2] = N + 1;
      if ((J | 0) <= 0) break;
      a[N >> 0] = M;
      J = J + -1 | 0;
     }
     a[N >> 0] = m;
     O = H;
    } else O = h;
    b : do if ((O | 0) == (E | 0)) {
     J = qc[c[(c[j >> 2] | 0) + 28 >> 2] & 31](j, 48) | 0;
     F = c[f >> 2] | 0;
     c[f >> 2] = F + 1;
     a[F >> 0] = J;
    } else {
     J = a[z >> 0] | 0;
     F = J << 24 >> 24 < 0;
     if (!((F ? c[A >> 2] | 0 : J & 255) | 0)) {
      P = -1;
      Q = 0;
      R = 0;
      S = O;
     } else {
      P = a[(F ? c[o >> 2] | 0 : o) >> 0] | 0;
      Q = 0;
      R = 0;
      S = O;
     }
     while (1) {
      if ((S | 0) == (E | 0)) break b;
      if ((R | 0) == (P | 0)) {
       F = c[f >> 2] | 0;
       c[f >> 2] = F + 1;
       a[F >> 0] = n;
       F = Q + 1 | 0;
       J = a[z >> 0] | 0;
       K = J << 24 >> 24 < 0;
       if (F >>> 0 < (K ? c[A >> 2] | 0 : J & 255) >>> 0) {
        J = a[(K ? c[o >> 2] | 0 : o) + F >> 0] | 0;
        T = J << 24 >> 24 == 127 ? -1 : J << 24 >> 24;
        U = F;
        V = 0;
       } else {
        T = R;
        U = F;
        V = 0;
       }
      } else {
       T = P;
       U = Q;
       V = R;
      }
      F = S + -1 | 0;
      J = a[F >> 0] | 0;
      K = c[f >> 2] | 0;
      c[f >> 2] = K + 1;
      a[K >> 0] = J;
      P = T;
      Q = U;
      R = V + 1 | 0;
      S = F;
     }
    } while (0);
    h = c[f >> 2] | 0;
    if ((G | 0) == (h | 0)) D = E; else {
     H = h;
     h = G;
     while (1) {
      F = H + -1 | 0;
      if (h >>> 0 >= F >>> 0) {
       D = E;
       break a;
      }
      J = a[h >> 0] | 0;
      a[h >> 0] = a[F >> 0] | 0;
      a[F >> 0] = J;
      H = F;
      h = h + 1 | 0;
     }
    }
    break;
   }
  default:
   D = C;
  } while (0);
  B = B + 1 | 0;
  C = D;
 }
 D = a[s >> 0] | 0;
 s = D << 24 >> 24 < 0;
 C = s ? c[t >> 2] | 0 : D & 255;
 if (C >>> 0 > 1) {
  D = s ? c[q >> 2] | 0 : q;
  q = D + C | 0;
  C = c[f >> 2] | 0;
  s = D;
  while (1) {
   D = s + 1 | 0;
   if ((D | 0) == (q | 0)) break;
   a[C >> 0] = a[D >> 0] | 0;
   C = C + 1 | 0;
   s = D;
  }
  c[f >> 2] = C;
 }
 switch ((g & 176) << 24 >> 24) {
 case 32:
  {
   c[e >> 2] = c[f >> 2];
   break;
  }
 case 16:
  break;
 default:
  c[e >> 2] = d;
 }
 return;
}

function De(b, e, f) {
 b = b | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0.0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0;
 switch (e | 0) {
 case 0:
  {
   g = -149;
   h = 24;
   i = 4;
   break;
  }
 case 1:
  {
   g = -1074;
   h = 53;
   i = 4;
   break;
  }
 case 2:
  {
   g = -1074;
   h = 53;
   i = 4;
   break;
  }
 default:
  j = 0.0;
 }
 a : do if ((i | 0) == 4) {
  e = b + 4 | 0;
  k = b + 100 | 0;
  do {
   l = c[e >> 2] | 0;
   if (l >>> 0 < (c[k >> 2] | 0) >>> 0) {
    c[e >> 2] = l + 1;
    m = d[l >> 0] | 0;
   } else m = xe(b) | 0;
  } while ((ve(m) | 0) != 0);
  b : do switch (m | 0) {
  case 43:
  case 45:
   {
    l = 1 - (((m | 0) == 45 & 1) << 1) | 0;
    n = c[e >> 2] | 0;
    if (n >>> 0 < (c[k >> 2] | 0) >>> 0) {
     c[e >> 2] = n + 1;
     o = d[n >> 0] | 0;
     p = l;
     break b;
    } else {
     o = xe(b) | 0;
     p = l;
     break b;
    }
    break;
   }
  default:
   {
    o = m;
    p = 1;
   }
  } while (0);
  l = 0;
  n = o;
  while (1) {
   if ((n | 32 | 0) != (a[14944 + l >> 0] | 0)) {
    q = l;
    r = n;
    break;
   }
   do if (l >>> 0 < 7) {
    u = c[e >> 2] | 0;
    if (u >>> 0 < (c[k >> 2] | 0) >>> 0) {
     c[e >> 2] = u + 1;
     v = d[u >> 0] | 0;
     break;
    } else {
     v = xe(b) | 0;
     break;
    }
   } else v = n; while (0);
   u = l + 1 | 0;
   if (u >>> 0 < 8) {
    l = u;
    n = v;
   } else {
    q = u;
    r = v;
    break;
   }
  }
  c : do switch (q | 0) {
  case 8:
   break;
  case 3:
   {
    i = 23;
    break;
   }
  default:
   {
    n = (f | 0) != 0;
    if (n & q >>> 0 > 3) if ((q | 0) == 8) break c; else {
     i = 23;
     break c;
    }
    d : do if (!q) {
     l = 0;
     u = r;
     while (1) {
      if ((u | 32 | 0) != (a[14953 + l >> 0] | 0)) {
       w = l;
       x = u;
       break d;
      }
      do if (l >>> 0 < 2) {
       y = c[e >> 2] | 0;
       if (y >>> 0 < (c[k >> 2] | 0) >>> 0) {
        c[e >> 2] = y + 1;
        z = d[y >> 0] | 0;
        break;
       } else {
        z = xe(b) | 0;
        break;
       }
      } else z = u; while (0);
      y = l + 1 | 0;
      if (y >>> 0 < 3) {
       l = y;
       u = z;
      } else {
       w = y;
       x = z;
       break;
      }
     }
    } else {
     w = q;
     x = r;
    } while (0);
    switch (w | 0) {
    case 3:
     {
      u = c[e >> 2] | 0;
      if (u >>> 0 < (c[k >> 2] | 0) >>> 0) {
       c[e >> 2] = u + 1;
       A = d[u >> 0] | 0;
      } else A = xe(b) | 0;
      if ((A | 0) == 40) B = 1; else {
       if (!(c[k >> 2] | 0)) {
        j = s;
        break a;
       }
       c[e >> 2] = (c[e >> 2] | 0) + -1;
       j = s;
       break a;
      }
      while (1) {
       u = c[e >> 2] | 0;
       if (u >>> 0 < (c[k >> 2] | 0) >>> 0) {
        c[e >> 2] = u + 1;
        C = d[u >> 0] | 0;
       } else C = xe(b) | 0;
       if (!((C + -48 | 0) >>> 0 < 10 | (C + -65 | 0) >>> 0 < 26)) if (!((C | 0) == 95 | (C + -97 | 0) >>> 0 < 26)) break;
       B = B + 1 | 0;
      }
      if ((C | 0) == 41) {
       j = s;
       break a;
      }
      u = (c[k >> 2] | 0) == 0;
      if (!u) c[e >> 2] = (c[e >> 2] | 0) + -1;
      if (!n) {
       c[(Gd() | 0) >> 2] = 22;
       we(b, 0);
       j = 0.0;
       break a;
      }
      if (!B) {
       j = s;
       break a;
      } else D = B;
      while (1) {
       D = D + -1 | 0;
       if (!u) c[e >> 2] = (c[e >> 2] | 0) + -1;
       if (!D) {
        j = s;
        break a;
       }
      }
      break;
     }
    case 0:
     {
      if ((x | 0) == 48) {
       u = c[e >> 2] | 0;
       if (u >>> 0 < (c[k >> 2] | 0) >>> 0) {
        c[e >> 2] = u + 1;
        E = d[u >> 0] | 0;
       } else E = xe(b) | 0;
       if ((E | 32 | 0) == 120) {
        j = +Ee(b, h, g, p, f);
        break a;
       }
       if (!(c[k >> 2] | 0)) F = 48; else {
        c[e >> 2] = (c[e >> 2] | 0) + -1;
        F = 48;
       }
      } else F = x;
      j = +Fe(b, F, h, g, p, f);
      break a;
      break;
     }
    default:
     {
      if (c[k >> 2] | 0) c[e >> 2] = (c[e >> 2] | 0) + -1;
      c[(Gd() | 0) >> 2] = 22;
      we(b, 0);
      j = 0.0;
      break a;
     }
    }
   }
  } while (0);
  if ((i | 0) == 23) {
   u = (c[k >> 2] | 0) == 0;
   if (!u) c[e >> 2] = (c[e >> 2] | 0) + -1;
   if ((f | 0) != 0 & q >>> 0 > 3) {
    n = q;
    do {
     if (!u) c[e >> 2] = (c[e >> 2] | 0) + -1;
     n = n + -1 | 0;
    } while (n >>> 0 > 3);
   }
  }
  j = +(p | 0) * t;
 } while (0);
 return +j;
}

function pj(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0;
 j = l;
 l = l + 112 | 0;
 k = j;
 m = (f - e | 0) / 12 | 0;
 if (m >>> 0 > 100) {
  n = xd(m) | 0;
  if (!n) Wq(); else {
   o = n;
   p = n;
  }
 } else {
  o = k;
  p = 0;
 }
 k = m;
 m = e;
 n = o;
 q = 0;
 while (1) {
  if ((m | 0) == (f | 0)) break;
  r = a[m + 11 >> 0] | 0;
  if (r << 24 >> 24 < 0) s = c[m + 4 >> 2] | 0; else s = r & 255;
  if (!s) {
   a[n >> 0] = 2;
   t = k + -1 | 0;
   u = q + 1 | 0;
  } else {
   a[n >> 0] = 1;
   t = k;
   u = q;
  }
  k = t;
  m = m + 12 | 0;
  n = n + 1 | 0;
  q = u;
 }
 u = 0;
 n = k;
 k = q;
 a : while (1) {
  q = c[b >> 2] | 0;
  do if (!q) v = 1; else {
   m = c[q + 12 >> 2] | 0;
   if ((m | 0) == (c[q + 16 >> 2] | 0)) w = pc[c[(c[q >> 2] | 0) + 36 >> 2] & 63](q) | 0; else w = rg(a[m >> 0] | 0) | 0;
   if (ph(w, qg() | 0) | 0) {
    c[b >> 2] = 0;
    v = 1;
    break;
   } else {
    v = (c[b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  q = c[d >> 2] | 0;
  if (!q) {
   x = 0;
   y = 1;
  } else {
   m = c[q + 12 >> 2] | 0;
   if ((m | 0) == (c[q + 16 >> 2] | 0)) z = pc[c[(c[q >> 2] | 0) + 36 >> 2] & 63](q) | 0; else z = rg(a[m >> 0] | 0) | 0;
   if (ph(z, qg() | 0) | 0) {
    c[d >> 2] = 0;
    x = 0;
    y = 1;
   } else {
    x = q;
    y = 0;
   }
  }
  A = c[b >> 2] | 0;
  if (!((n | 0) != 0 & (v ^ y))) break;
  q = c[A + 12 >> 2] | 0;
  if ((q | 0) == (c[A + 16 >> 2] | 0)) B = pc[c[(c[A >> 2] | 0) + 36 >> 2] & 63](A) | 0; else B = rg(a[q >> 0] | 0) | 0;
  q = B & 255;
  if (i) C = q; else C = qc[c[(c[g >> 2] | 0) + 12 >> 2] & 31](g, q) | 0;
  q = u + 1 | 0;
  m = e;
  t = 0;
  s = o;
  r = k;
  D = n;
  while (1) {
   if ((m | 0) == (f | 0)) break;
   do if ((a[s >> 0] | 0) == 1) {
    E = m + 11 | 0;
    if ((a[E >> 0] | 0) < 0) F = c[m >> 2] | 0; else F = m;
    G = a[F + u >> 0] | 0;
    if (i) H = G; else H = qc[c[(c[g >> 2] | 0) + 12 >> 2] & 31](g, G) | 0;
    if (C << 24 >> 24 != H << 24 >> 24) {
     a[s >> 0] = 0;
     I = t;
     J = r;
     K = D + -1 | 0;
     break;
    }
    G = a[E >> 0] | 0;
    if (G << 24 >> 24 < 0) L = c[m + 4 >> 2] | 0; else L = G & 255;
    if ((L | 0) == (q | 0)) {
     a[s >> 0] = 2;
     I = 1;
     J = r + 1 | 0;
     K = D + -1 | 0;
    } else {
     I = 1;
     J = r;
     K = D;
    }
   } else {
    I = t;
    J = r;
    K = D;
   } while (0);
   m = m + 12 | 0;
   t = I;
   s = s + 1 | 0;
   r = J;
   D = K;
  }
  if (!t) {
   u = q;
   n = D;
   k = r;
   continue;
  }
  s = c[b >> 2] | 0;
  m = s + 12 | 0;
  G = c[m >> 2] | 0;
  if ((G | 0) == (c[s + 16 >> 2] | 0)) pc[c[(c[s >> 2] | 0) + 40 >> 2] & 63](s) | 0; else {
   c[m >> 2] = G + 1;
   rg(a[G >> 0] | 0) | 0;
  }
  if ((r + D | 0) >>> 0 > 1) {
   M = e;
   N = o;
   O = r;
  } else {
   u = q;
   n = D;
   k = r;
   continue;
  }
  while (1) {
   if ((M | 0) == (f | 0)) {
    u = q;
    n = D;
    k = O;
    continue a;
   }
   if ((a[N >> 0] | 0) == 2) {
    G = a[M + 11 >> 0] | 0;
    if (G << 24 >> 24 < 0) P = c[M + 4 >> 2] | 0; else P = G & 255;
    if ((P | 0) == (q | 0)) Q = O; else {
     a[N >> 0] = 0;
     Q = O + -1 | 0;
    }
   } else Q = O;
   M = M + 12 | 0;
   N = N + 1 | 0;
   O = Q;
  }
 }
 do if (!A) R = 1; else {
  Q = c[A + 12 >> 2] | 0;
  if ((Q | 0) == (c[A + 16 >> 2] | 0)) S = pc[c[(c[A >> 2] | 0) + 36 >> 2] & 63](A) | 0; else S = rg(a[Q >> 0] | 0) | 0;
  if (ph(S, qg() | 0) | 0) {
   c[b >> 2] = 0;
   R = 1;
   break;
  } else {
   R = (c[b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!x) T = 41; else {
  b = c[x + 12 >> 2] | 0;
  if ((b | 0) == (c[x + 16 >> 2] | 0)) U = pc[c[(c[x >> 2] | 0) + 36 >> 2] & 63](x) | 0; else U = rg(a[b >> 0] | 0) | 0;
  if (ph(U, qg() | 0) | 0) {
   c[d >> 2] = 0;
   T = 41;
   break;
  } else if (R) {
   V = e;
   W = o;
   break;
  } else {
   T = 77;
   break;
  }
 } while (0);
 if ((T | 0) == 41) if (R) T = 77; else {
  V = e;
  W = o;
 }
 if ((T | 0) == 77) {
  c[h >> 2] = c[h >> 2] | 2;
  V = e;
  W = o;
 }
 while (1) {
  if ((V | 0) == (f | 0)) {
   T = 81;
   break;
  }
  if ((a[W >> 0] | 0) == 2) {
   X = V;
   break;
  }
  V = V + 12 | 0;
  W = W + 1 | 0;
 }
 if ((T | 0) == 81) {
  c[h >> 2] = c[h >> 2] | 4;
  X = f;
 }
 yd(p);
 l = j;
 return X | 0;
}

function Qj(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0, W = 0, X = 0;
 j = l;
 l = l + 112 | 0;
 k = j;
 m = (f - e | 0) / 12 | 0;
 if (m >>> 0 > 100) {
  n = xd(m) | 0;
  if (!n) Wq(); else {
   o = n;
   p = n;
  }
 } else {
  o = k;
  p = 0;
 }
 k = 0;
 n = m;
 m = e;
 q = o;
 while (1) {
  if ((m | 0) == (f | 0)) break;
  r = a[m + 8 + 3 >> 0] | 0;
  if (r << 24 >> 24 < 0) s = c[m + 4 >> 2] | 0; else s = r & 255;
  if (!s) {
   a[q >> 0] = 2;
   t = k + 1 | 0;
   u = n + -1 | 0;
  } else {
   a[q >> 0] = 1;
   t = k;
   u = n;
  }
  k = t;
  n = u;
  m = m + 12 | 0;
  q = q + 1 | 0;
 }
 q = 0;
 m = k;
 k = n;
 a : while (1) {
  n = c[b >> 2] | 0;
  do if (!n) v = 1; else {
   u = c[n + 12 >> 2] | 0;
   if ((u | 0) == (c[n + 16 >> 2] | 0)) w = pc[c[(c[n >> 2] | 0) + 36 >> 2] & 63](n) | 0; else w = Jg(c[u >> 2] | 0) | 0;
   if (rh(w, Ig() | 0) | 0) {
    c[b >> 2] = 0;
    v = 1;
    break;
   } else {
    v = (c[b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  n = c[d >> 2] | 0;
  if (!n) {
   x = 0;
   y = 1;
  } else {
   u = c[n + 12 >> 2] | 0;
   if ((u | 0) == (c[n + 16 >> 2] | 0)) z = pc[c[(c[n >> 2] | 0) + 36 >> 2] & 63](n) | 0; else z = Jg(c[u >> 2] | 0) | 0;
   if (rh(z, Ig() | 0) | 0) {
    c[d >> 2] = 0;
    x = 0;
    y = 1;
   } else {
    x = n;
    y = 0;
   }
  }
  A = c[b >> 2] | 0;
  if (!((k | 0) != 0 & (v ^ y))) break;
  n = c[A + 12 >> 2] | 0;
  if ((n | 0) == (c[A + 16 >> 2] | 0)) B = pc[c[(c[A >> 2] | 0) + 36 >> 2] & 63](A) | 0; else B = Jg(c[n >> 2] | 0) | 0;
  if (i) C = B; else C = qc[c[(c[g >> 2] | 0) + 28 >> 2] & 31](g, B) | 0;
  n = q + 1 | 0;
  u = e;
  t = 0;
  s = o;
  r = m;
  D = k;
  while (1) {
   if ((u | 0) == (f | 0)) break;
   do if ((a[s >> 0] | 0) == 1) {
    E = u + 8 + 3 | 0;
    if ((a[E >> 0] | 0) < 0) F = c[u >> 2] | 0; else F = u;
    G = c[F + (q << 2) >> 2] | 0;
    if (i) H = G; else H = qc[c[(c[g >> 2] | 0) + 28 >> 2] & 31](g, G) | 0;
    if ((C | 0) != (H | 0)) {
     a[s >> 0] = 0;
     I = t;
     J = r;
     K = D + -1 | 0;
     break;
    }
    G = a[E >> 0] | 0;
    if (G << 24 >> 24 < 0) L = c[u + 4 >> 2] | 0; else L = G & 255;
    if ((L | 0) == (n | 0)) {
     a[s >> 0] = 2;
     I = 1;
     J = r + 1 | 0;
     K = D + -1 | 0;
    } else {
     I = 1;
     J = r;
     K = D;
    }
   } else {
    I = t;
    J = r;
    K = D;
   } while (0);
   u = u + 12 | 0;
   t = I;
   s = s + 1 | 0;
   r = J;
   D = K;
  }
  if (!t) {
   q = n;
   m = r;
   k = D;
   continue;
  }
  s = c[b >> 2] | 0;
  u = s + 12 | 0;
  G = c[u >> 2] | 0;
  if ((G | 0) == (c[s + 16 >> 2] | 0)) pc[c[(c[s >> 2] | 0) + 40 >> 2] & 63](s) | 0; else {
   c[u >> 2] = G + 4;
   Jg(c[G >> 2] | 0) | 0;
  }
  if ((r + D | 0) >>> 0 > 1) {
   M = e;
   N = o;
   O = r;
  } else {
   q = n;
   m = r;
   k = D;
   continue;
  }
  while (1) {
   if ((M | 0) == (f | 0)) {
    q = n;
    m = O;
    k = D;
    continue a;
   }
   if ((a[N >> 0] | 0) == 2) {
    G = a[M + 8 + 3 >> 0] | 0;
    if (G << 24 >> 24 < 0) P = c[M + 4 >> 2] | 0; else P = G & 255;
    if ((P | 0) == (n | 0)) Q = O; else {
     a[N >> 0] = 0;
     Q = O + -1 | 0;
    }
   } else Q = O;
   M = M + 12 | 0;
   N = N + 1 | 0;
   O = Q;
  }
 }
 do if (!A) R = 1; else {
  Q = c[A + 12 >> 2] | 0;
  if ((Q | 0) == (c[A + 16 >> 2] | 0)) S = pc[c[(c[A >> 2] | 0) + 36 >> 2] & 63](A) | 0; else S = Jg(c[Q >> 2] | 0) | 0;
  if (rh(S, Ig() | 0) | 0) {
   c[b >> 2] = 0;
   R = 1;
   break;
  } else {
   R = (c[b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!x) T = 41; else {
  b = c[x + 12 >> 2] | 0;
  if ((b | 0) == (c[x + 16 >> 2] | 0)) U = pc[c[(c[x >> 2] | 0) + 36 >> 2] & 63](x) | 0; else U = Jg(c[b >> 2] | 0) | 0;
  if (rh(U, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   T = 41;
   break;
  } else if (R) {
   V = e;
   W = o;
   break;
  } else {
   T = 77;
   break;
  }
 } while (0);
 if ((T | 0) == 41) if (R) T = 77; else {
  V = e;
  W = o;
 }
 if ((T | 0) == 77) {
  c[h >> 2] = c[h >> 2] | 2;
  V = e;
  W = o;
 }
 while (1) {
  if ((V | 0) == (f | 0)) {
   T = 81;
   break;
  }
  if ((a[W >> 0] | 0) == 2) {
   X = V;
   break;
  }
  V = V + 12 | 0;
  W = W + 1 | 0;
 }
 if ((T | 0) == 81) {
  c[h >> 2] = c[h >> 2] | 4;
  X = f;
 }
 yd(p);
 l = j;
 return X | 0;
}

function bl(d, e, f, g, h) {
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0;
 i = c[d >> 2] | 0;
 do if (!i) j = 1; else {
  k = c[i + 12 >> 2] | 0;
  if ((k | 0) == (c[i + 16 >> 2] | 0)) l = pc[c[(c[i >> 2] | 0) + 36 >> 2] & 63](i) | 0; else l = rg(a[k >> 0] | 0) | 0;
  if (ph(l, qg() | 0) | 0) {
   c[d >> 2] = 0;
   j = 1;
   break;
  } else {
   j = (c[d >> 2] | 0) == 0;
   break;
  }
 } while (0);
 l = c[e >> 2] | 0;
 do if (!l) m = 14; else {
  i = c[l + 12 >> 2] | 0;
  if ((i | 0) == (c[l + 16 >> 2] | 0)) n = pc[c[(c[l >> 2] | 0) + 36 >> 2] & 63](l) | 0; else n = rg(a[i >> 0] | 0) | 0;
  if (ph(n, qg() | 0) | 0) {
   c[e >> 2] = 0;
   m = 14;
   break;
  } else if (j) {
   o = l;
   m = 17;
   break;
  } else {
   m = 16;
   break;
  }
 } while (0);
 if ((m | 0) == 14) if (j) m = 16; else {
  o = 0;
  m = 17;
 }
 a : do if ((m | 0) == 16) {
  c[f >> 2] = c[f >> 2] | 6;
  p = 0;
 } else if ((m | 0) == 17) {
  j = c[d >> 2] | 0;
  l = c[j + 12 >> 2] | 0;
  if ((l | 0) == (c[j + 16 >> 2] | 0)) q = pc[c[(c[j >> 2] | 0) + 36 >> 2] & 63](j) | 0; else q = rg(a[l >> 0] | 0) | 0;
  l = q & 255;
  if (l << 24 >> 24 > -1) {
   j = g + 8 | 0;
   if (b[(c[j >> 2] | 0) + (q << 24 >> 24 << 1) >> 1] & 2048) {
    n = (rc[c[(c[g >> 2] | 0) + 36 >> 2] & 31](g, l, 0) | 0) << 24 >> 24;
    l = c[d >> 2] | 0;
    i = l + 12 | 0;
    k = c[i >> 2] | 0;
    if ((k | 0) == (c[l + 16 >> 2] | 0)) {
     pc[c[(c[l >> 2] | 0) + 40 >> 2] & 63](l) | 0;
     r = n;
     s = h;
     t = o;
     u = o;
    } else {
     c[i >> 2] = k + 1;
     rg(a[k >> 0] | 0) | 0;
     r = n;
     s = h;
     t = o;
     u = o;
    }
    while (1) {
     v = r + -48 | 0;
     n = s + -1 | 0;
     k = c[d >> 2] | 0;
     do if (!k) w = 1; else {
      i = c[k + 12 >> 2] | 0;
      if ((i | 0) == (c[k + 16 >> 2] | 0)) x = pc[c[(c[k >> 2] | 0) + 36 >> 2] & 63](k) | 0; else x = rg(a[i >> 0] | 0) | 0;
      if (ph(x, qg() | 0) | 0) {
       c[d >> 2] = 0;
       w = 1;
       break;
      } else {
       w = (c[d >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!u) {
      y = t;
      z = 1;
      A = 0;
     } else {
      k = c[u + 12 >> 2] | 0;
      if ((k | 0) == (c[u + 16 >> 2] | 0)) B = pc[c[(c[u >> 2] | 0) + 36 >> 2] & 63](u) | 0; else B = rg(a[k >> 0] | 0) | 0;
      if (ph(B, qg() | 0) | 0) {
       c[e >> 2] = 0;
       y = 0;
       z = 1;
       A = 0;
       break;
      } else {
       y = t;
       z = (t | 0) == 0;
       A = t;
       break;
      }
     } while (0);
     C = c[d >> 2] | 0;
     if (!((s | 0) > 1 & (w ^ z))) break;
     k = c[C + 12 >> 2] | 0;
     if ((k | 0) == (c[C + 16 >> 2] | 0)) D = pc[c[(c[C >> 2] | 0) + 36 >> 2] & 63](C) | 0; else D = rg(a[k >> 0] | 0) | 0;
     k = D & 255;
     if (k << 24 >> 24 <= -1) {
      p = v;
      break a;
     }
     if (!(b[(c[j >> 2] | 0) + (D << 24 >> 24 << 1) >> 1] & 2048)) {
      p = v;
      break a;
     }
     i = (v * 10 | 0) + ((rc[c[(c[g >> 2] | 0) + 36 >> 2] & 31](g, k, 0) | 0) << 24 >> 24) | 0;
     k = c[d >> 2] | 0;
     l = k + 12 | 0;
     E = c[l >> 2] | 0;
     if ((E | 0) == (c[k + 16 >> 2] | 0)) {
      pc[c[(c[k >> 2] | 0) + 40 >> 2] & 63](k) | 0;
      r = i;
      s = n;
      t = y;
      u = A;
      continue;
     } else {
      c[l >> 2] = E + 1;
      rg(a[E >> 0] | 0) | 0;
      r = i;
      s = n;
      t = y;
      u = A;
      continue;
     }
    }
    do if (!C) F = 1; else {
     j = c[C + 12 >> 2] | 0;
     if ((j | 0) == (c[C + 16 >> 2] | 0)) G = pc[c[(c[C >> 2] | 0) + 36 >> 2] & 63](C) | 0; else G = rg(a[j >> 0] | 0) | 0;
     if (ph(G, qg() | 0) | 0) {
      c[d >> 2] = 0;
      F = 1;
      break;
     } else {
      F = (c[d >> 2] | 0) == 0;
      break;
     }
    } while (0);
    do if (!y) m = 62; else {
     j = c[y + 12 >> 2] | 0;
     if ((j | 0) == (c[y + 16 >> 2] | 0)) H = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else H = rg(a[j >> 0] | 0) | 0;
     if (ph(H, qg() | 0) | 0) {
      c[e >> 2] = 0;
      m = 62;
      break;
     } else if (F) {
      p = v;
      break a;
     } else break;
    } while (0);
    if ((m | 0) == 62) if (!F) {
     p = v;
     break;
    }
    c[f >> 2] = c[f >> 2] | 2;
    p = v;
    break;
   }
  }
  c[f >> 2] = c[f >> 2] | 4;
  p = 0;
 } while (0);
 return p | 0;
}

function gu(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 g = d + 11 | 0;
 h = a[g >> 0] | 0;
 i = d + 4 | 0;
 a : do if (!((h << 24 >> 24 < 0 ? c[i >> 2] | 0 : h & 255) | 0)) hu(b, d); else {
  j = lh(19728) | 0;
  k = a[g >> 0] | 0;
  if ((j | 0) == ((k << 24 >> 24 < 0 ? c[i >> 2] | 0 : k & 255) | 0)) if (!(Ws(d, 19728, j) | 0)) {
   Nt(d, 19740);
   c[b >> 2] = 0;
   c[b + 4 >> 2] = 0;
   c[b + 8 >> 2] = 0;
   j = lh(19811) | 0;
   if (j >>> 0 > 4294967279) _q(b);
   if (j >>> 0 < 11) {
    a[b + 11 >> 0] = j;
    m = b;
   } else {
    k = j + 16 & -16;
    n = Bs(k) | 0;
    c[b >> 2] = n;
    c[b + 8 >> 2] = k | -2147483648;
    c[b + 4 >> 2] = j;
    m = n;
   }
   sg(m, 19811, j) | 0;
   a[f >> 0] = 0;
   mh(m + j | 0, f);
   break;
  }
  j = lh(19824) | 0;
  n = a[g >> 0] | 0;
  if ((j | 0) == ((n << 24 >> 24 < 0 ? c[i >> 2] | 0 : n & 255) | 0)) if (!(Ws(d, 19824, j) | 0)) {
   Nt(d, 19837);
   c[b >> 2] = 0;
   c[b + 4 >> 2] = 0;
   c[b + 8 >> 2] = 0;
   j = lh(19887) | 0;
   if (j >>> 0 > 4294967279) _q(b);
   if (j >>> 0 < 11) {
    a[b + 11 >> 0] = j;
    o = b;
   } else {
    n = j + 16 & -16;
    k = Bs(n) | 0;
    c[b >> 2] = k;
    c[b + 8 >> 2] = n | -2147483648;
    c[b + 4 >> 2] = j;
    o = k;
   }
   sg(o, 19887, j) | 0;
   a[f >> 0] = 0;
   mh(o + j | 0, f);
   break;
  }
  j = lh(19901) | 0;
  k = a[g >> 0] | 0;
  if ((j | 0) == ((k << 24 >> 24 < 0 ? c[i >> 2] | 0 : k & 255) | 0)) if (!(Ws(d, 19901, j) | 0)) {
   Nt(d, 19914);
   c[b >> 2] = 0;
   c[b + 4 >> 2] = 0;
   c[b + 8 >> 2] = 0;
   j = lh(19964) | 0;
   if (j >>> 0 > 4294967279) _q(b);
   if (j >>> 0 < 11) {
    a[b + 11 >> 0] = j;
    p = b;
   } else {
    k = j + 16 & -16;
    n = Bs(k) | 0;
    c[b >> 2] = n;
    c[b + 8 >> 2] = k | -2147483648;
    c[b + 4 >> 2] = j;
    p = n;
   }
   sg(p, 19964, j) | 0;
   a[f >> 0] = 0;
   mh(p + j | 0, f);
   break;
  }
  j = lh(19978) | 0;
  n = a[g >> 0] | 0;
  k = c[i >> 2] | 0;
  do if ((j | 0) == ((n << 24 >> 24 < 0 ? k : n & 255) | 0)) {
   if (Ws(d, 19978, j) | 0) {
    q = c[i >> 2] | 0;
    r = a[g >> 0] | 0;
    break;
   }
   Nt(d, 19992);
   c[b >> 2] = 0;
   c[b + 4 >> 2] = 0;
   c[b + 8 >> 2] = 0;
   s = lh(20043) | 0;
   if (s >>> 0 > 4294967279) _q(b);
   if (s >>> 0 < 11) {
    a[b + 11 >> 0] = s;
    t = b;
   } else {
    u = s + 16 & -16;
    v = Bs(u) | 0;
    c[b >> 2] = v;
    c[b + 8 >> 2] = u | -2147483648;
    c[b + 4 >> 2] = s;
    t = v;
   }
   sg(t, 20043, s) | 0;
   a[f >> 0] = 0;
   mh(t + s | 0, f);
   break a;
  } else {
   q = k;
   r = n;
  } while (0);
  n = r << 24 >> 24 < 0;
  k = n ? c[d >> 2] | 0 : d;
  j = k + (n ? q : r & 255) | 0;
  b : do if ((a[j + -1 >> 0] | 0) == 62) {
   n = 1;
   s = j;
   c : while (1) {
    v = s;
    d : while (1) {
     w = v + -1 | 0;
     if ((w | 0) == (k | 0)) break c;
     x = v + -2 | 0;
     switch (a[x >> 0] | 0) {
     case 60:
      {
       y = 43;
       break d;
       break;
      }
     case 62:
      {
       y = 44;
       break d;
       break;
      }
     default:
      v = w;
     }
    }
    if ((y | 0) == 43) {
     y = 0;
     v = n + -1 | 0;
     if (!v) {
      z = x;
      break b;
     } else {
      n = v;
      s = w;
      continue;
     }
    } else if ((y | 0) == 44) {
     y = 0;
     n = n + 1 | 0;
     s = w;
     continue;
    }
   }
   c[b >> 2] = 0;
   c[b + 4 >> 2] = 0;
   c[b + 8 >> 2] = 0;
   s = 0;
   while (1) {
    if ((s | 0) == 3) break a;
    c[b + (s << 2) >> 2] = 0;
    s = s + 1 | 0;
   }
  } else z = j; while (0);
  j = z;
  while (1) {
   s = j + -1 | 0;
   if ((s | 0) == (k | 0)) {
    A = k;
    break;
   }
   if ((a[s >> 0] | 0) == 58) {
    A = j;
    break;
   } else j = s;
  }
  c[b >> 2] = 0;
  c[b + 4 >> 2] = 0;
  c[b + 8 >> 2] = 0;
  j = z - A | 0;
  if (j >>> 0 > 4294967279) _q(b);
  if (j >>> 0 < 11) {
   a[b + 11 >> 0] = j;
   B = b;
  } else {
   k = j + 16 & -16;
   s = Bs(k) | 0;
   c[b >> 2] = s;
   c[b + 8 >> 2] = k | -2147483648;
   c[b + 4 >> 2] = j;
   B = s;
  }
  s = A;
  k = B;
  while (1) {
   if ((s | 0) == (z | 0)) break;
   mh(k, s);
   s = s + 1 | 0;
   k = k + 1 | 0;
  }
  a[f >> 0] = 0;
  mh(B + j | 0, f);
 } while (0);
 l = e;
 return;
}

function Ad(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0;
 d = a + 4 | 0;
 e = c[d >> 2] | 0;
 f = e & -8;
 g = a + f | 0;
 h = c[5364] | 0;
 i = e & 3;
 if (!((i | 0) != 1 & h >>> 0 <= a >>> 0 & g >>> 0 > a >>> 0)) jb();
 j = g + 4 | 0;
 k = c[j >> 2] | 0;
 if (!(k & 1)) jb();
 if (!i) {
  if (b >>> 0 < 256) {
   l = 0;
   return l | 0;
  }
  if (f >>> 0 >= (b + 4 | 0) >>> 0) if ((f - b | 0) >>> 0 <= c[5480] << 1 >>> 0) {
   l = a;
   return l | 0;
  }
  l = 0;
  return l | 0;
 }
 if (f >>> 0 >= b >>> 0) {
  i = f - b | 0;
  if (i >>> 0 <= 15) {
   l = a;
   return l | 0;
  }
  m = a + b | 0;
  c[d >> 2] = e & 1 | b | 2;
  c[m + 4 >> 2] = i | 3;
  c[j >> 2] = c[j >> 2] | 1;
  Bd(m, i);
  l = a;
  return l | 0;
 }
 if ((c[5366] | 0) == (g | 0)) {
  i = (c[5363] | 0) + f | 0;
  m = i - b | 0;
  j = a + b | 0;
  if (i >>> 0 <= b >>> 0) {
   l = 0;
   return l | 0;
  }
  c[d >> 2] = e & 1 | b | 2;
  c[j + 4 >> 2] = m | 1;
  c[5366] = j;
  c[5363] = m;
  l = a;
  return l | 0;
 }
 if ((c[5365] | 0) == (g | 0)) {
  m = (c[5362] | 0) + f | 0;
  if (m >>> 0 < b >>> 0) {
   l = 0;
   return l | 0;
  }
  j = m - b | 0;
  if (j >>> 0 > 15) {
   i = a + b | 0;
   n = a + m | 0;
   c[d >> 2] = e & 1 | b | 2;
   c[i + 4 >> 2] = j | 1;
   c[n >> 2] = j;
   o = n + 4 | 0;
   c[o >> 2] = c[o >> 2] & -2;
   p = i;
   q = j;
  } else {
   c[d >> 2] = e & 1 | m | 2;
   j = a + m + 4 | 0;
   c[j >> 2] = c[j >> 2] | 1;
   p = 0;
   q = 0;
  }
  c[5362] = q;
  c[5365] = p;
  l = a;
  return l | 0;
 }
 if (k & 2 | 0) {
  l = 0;
  return l | 0;
 }
 p = (k & -8) + f | 0;
 if (p >>> 0 < b >>> 0) {
  l = 0;
  return l | 0;
 }
 f = p - b | 0;
 q = k >>> 3;
 a : do if (k >>> 0 < 256) {
  j = c[g + 8 >> 2] | 0;
  m = c[g + 12 >> 2] | 0;
  i = 21480 + (q << 1 << 2) | 0;
  if ((j | 0) != (i | 0)) {
   if (h >>> 0 > j >>> 0) jb();
   if ((c[j + 12 >> 2] | 0) != (g | 0)) jb();
  }
  if ((m | 0) == (j | 0)) {
   c[5360] = c[5360] & ~(1 << q);
   break;
  }
  if ((m | 0) == (i | 0)) r = m + 8 | 0; else {
   if (h >>> 0 > m >>> 0) jb();
   i = m + 8 | 0;
   if ((c[i >> 2] | 0) == (g | 0)) r = i; else jb();
  }
  c[j + 12 >> 2] = m;
  c[r >> 2] = j;
 } else {
  j = c[g + 24 >> 2] | 0;
  m = c[g + 12 >> 2] | 0;
  do if ((m | 0) == (g | 0)) {
   i = g + 16 | 0;
   o = i + 4 | 0;
   n = c[o >> 2] | 0;
   if (!n) {
    s = c[i >> 2] | 0;
    if (!s) {
     t = 0;
     break;
    } else {
     u = s;
     v = i;
    }
   } else {
    u = n;
    v = o;
   }
   while (1) {
    o = u + 20 | 0;
    n = c[o >> 2] | 0;
    if (n | 0) {
     u = n;
     v = o;
     continue;
    }
    o = u + 16 | 0;
    n = c[o >> 2] | 0;
    if (!n) break; else {
     u = n;
     v = o;
    }
   }
   if (h >>> 0 > v >>> 0) jb(); else {
    c[v >> 2] = 0;
    t = u;
    break;
   }
  } else {
   o = c[g + 8 >> 2] | 0;
   if (h >>> 0 > o >>> 0) jb();
   n = o + 12 | 0;
   if ((c[n >> 2] | 0) != (g | 0)) jb();
   i = m + 8 | 0;
   if ((c[i >> 2] | 0) == (g | 0)) {
    c[n >> 2] = m;
    c[i >> 2] = o;
    t = m;
    break;
   } else jb();
  } while (0);
  if (j | 0) {
   m = c[g + 28 >> 2] | 0;
   o = 21744 + (m << 2) | 0;
   do if ((c[o >> 2] | 0) == (g | 0)) {
    c[o >> 2] = t;
    if (!t) {
     c[5361] = c[5361] & ~(1 << m);
     break a;
    }
   } else if ((c[5364] | 0) >>> 0 > j >>> 0) jb(); else {
    c[j + 16 + (((c[j + 16 >> 2] | 0) != (g | 0) & 1) << 2) >> 2] = t;
    if (!t) break a; else break;
   } while (0);
   m = c[5364] | 0;
   if (m >>> 0 > t >>> 0) jb();
   c[t + 24 >> 2] = j;
   o = g + 16 | 0;
   i = c[o >> 2] | 0;
   do if (i | 0) if (m >>> 0 > i >>> 0) jb(); else {
    c[t + 16 >> 2] = i;
    c[i + 24 >> 2] = t;
    break;
   } while (0);
   i = c[o + 4 >> 2] | 0;
   if (i | 0) if ((c[5364] | 0) >>> 0 > i >>> 0) jb(); else {
    c[t + 20 >> 2] = i;
    c[i + 24 >> 2] = t;
    break;
   }
  }
 } while (0);
 if (f >>> 0 < 16) {
  c[d >> 2] = p | e & 1 | 2;
  t = a + p + 4 | 0;
  c[t >> 2] = c[t >> 2] | 1;
  l = a;
  return l | 0;
 } else {
  t = a + b | 0;
  c[d >> 2] = e & 1 | b | 2;
  c[t + 4 >> 2] = f | 3;
  b = a + p + 4 | 0;
  c[b >> 2] = c[b >> 2] | 1;
  Bd(t, f);
  l = a;
  return l | 0;
 }
 return 0;
}

function Zs(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0;
 f = l;
 l = l + 64 | 0;
 g = f + 32 | 0;
 h = f + 16 | 0;
 i = f;
 j = f + 4 | 0;
 do if ((d - b | 0) > 1) if ((a[b >> 0] | 0) == 73) {
  k = e + 61 | 0;
  a : do if (a[k >> 0] | 0) {
   m = c[e + 36 >> 2] | 0;
   n = c[m + -16 >> 2] | 0;
   o = m + -12 | 0;
   while (1) {
    m = c[o >> 2] | 0;
    if ((m | 0) == (n | 0)) break a;
    p = m + -16 | 0;
    c[o >> 2] = p;
    os(p);
   }
  } while (0);
  c[h >> 2] = 0;
  c[h + 4 >> 2] = 0;
  c[h + 8 >> 2] = 0;
  o = lh(18942) | 0;
  if (o >>> 0 > 4294967279) _q(h);
  if (o >>> 0 < 11) {
   n = h + 11 | 0;
   a[n >> 0] = o;
   q = h;
   r = n;
   s = h + 4 | 0;
  } else {
   n = o + 16 & -16;
   p = Bs(n) | 0;
   c[h >> 2] = p;
   c[h + 8 >> 2] = n | -2147483648;
   n = h + 4 | 0;
   c[n >> 2] = o;
   q = p;
   r = h + 11 | 0;
   s = n;
  }
  sg(q, 18942, o) | 0;
  a[g >> 0] = 0;
  mh(q + o | 0, g);
  o = e + 4 | 0;
  n = e + 36 | 0;
  p = e + 12 | 0;
  m = g + 11 | 0;
  t = g + 4 | 0;
  u = e + 40 | 0;
  v = e + 32 | 0;
  w = b + 1 | 0;
  b : while (1) {
   if ((a[w >> 0] | 0) == 69) break;
   if (a[k >> 0] | 0) {
    c[i >> 2] = c[p >> 2];
    x = c[n >> 2] | 0;
    if (x >>> 0 < (c[u >> 2] | 0) >>> 0) {
     Du(g, i);
     c[x >> 2] = 0;
     c[x + 4 >> 2] = 0;
     y = c[g >> 2] | 0;
     c[x + 8 >> 2] = 0;
     c[x + 12 >> 2] = y;
     c[n >> 2] = (c[n >> 2] | 0) + 16;
    } else Eu(v, i);
   }
   y = ((c[o >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
   x = Fu(w, d, e) | 0;
   z = ((c[o >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
   c : do if (a[k >> 0] | 0) {
    A = c[n >> 2] | 0;
    B = A + -16 | 0;
    C = A;
    while (1) {
     if ((C | 0) == (B | 0)) break c;
     A = C + -16 | 0;
     c[n >> 2] = A;
     us(A);
     C = c[n >> 2] | 0;
    }
   } while (0);
   if ((x | 0) == (w | 0) | (x | 0) == (d | 0)) {
    D = 53;
    break;
   }
   d : do if (!(a[k >> 0] | 0)) E = y; else {
    C = c[n >> 2] | 0;
    B = c[p >> 2] | 0;
    c[g >> 2] = B;
    A = C + -12 | 0;
    F = c[A >> 2] | 0;
    if (F >>> 0 < (c[C + -8 >> 2] | 0) >>> 0) {
     c[F >> 2] = 0;
     c[F + 4 >> 2] = 0;
     c[F + 8 >> 2] = 0;
     c[F + 12 >> 2] = B;
     c[A >> 2] = (c[A >> 2] | 0) + 16;
    } else Ks(C + -16 | 0, g);
    C = y;
    while (1) {
     if (C >>> 0 >= z >>> 0) {
      E = y;
      break d;
     }
     A = c[(c[n >> 2] | 0) + -12 >> 2] | 0;
     B = (c[e >> 2] | 0) + (C * 24 | 0) | 0;
     F = A + -12 | 0;
     G = c[F >> 2] | 0;
     if ((G | 0) == (c[A + -8 >> 2] | 0)) Os(A + -16 | 0, B); else {
      Ns(G, B);
      c[F >> 2] = (c[F >> 2] | 0) + 24;
     }
     C = C + 1 | 0;
    }
   } while (0);
   while (1) {
    if (E >>> 0 >= z >>> 0) {
     H = z;
     break;
    }
    C = a[r >> 0] | 0;
    if ((C << 24 >> 24 < 0 ? c[s >> 2] | 0 : C & 255) >>> 0 > 1) Ms(h, 19130) | 0;
    _s(g, (c[e >> 2] | 0) + (E * 24 | 0) | 0);
    C = a[m >> 0] | 0;
    F = C << 24 >> 24 < 0;
    qs(h, F ? c[g >> 2] | 0 : g, F ? c[t >> 2] | 0 : C & 255) | 0;
    Es(g);
    E = E + 1 | 0;
   }
   while (1) {
    if ((H | 0) == (y | 0)) {
     w = x;
     continue b;
    }
    z = c[o >> 2] | 0;
    C = z + -24 | 0;
    F = z;
    while (1) {
     if ((F | 0) == (C | 0)) break;
     z = F + -24 | 0;
     c[o >> 2] = z;
     ns(z);
     F = c[o >> 2] | 0;
    }
    H = H + -1 | 0;
   }
  }
  if ((D | 0) == 53) {
   Es(h);
   I = b;
   break;
  }
  t = w + 1 | 0;
  m = a[r >> 0] | 0;
  n = m << 24 >> 24 < 0;
  if ((a[(n ? c[h >> 2] | 0 : h) + (n ? c[s >> 2] | 0 : m & 255) + -1 >> 0] | 0) == 62) Ms(h, 20321) | 0; else Ms(h, 18944) | 0;
  c[j >> 2] = c[h >> 2];
  c[j + 4 >> 2] = c[h + 4 >> 2];
  c[j + 8 >> 2] = c[h + 8 >> 2];
  m = 0;
  while (1) {
   if ((m | 0) == 3) break;
   c[h + (m << 2) >> 2] = 0;
   m = m + 1 | 0;
  }
  bt(g, j);
  m = c[o >> 2] | 0;
  if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
   dt(m, g);
   c[o >> 2] = (c[o >> 2] | 0) + 24;
  } else et(e, g);
  ns(g);
  Es(j);
  Es(h);
  I = t;
 } else I = b; else I = b; while (0);
 l = f;
 return I | 0;
}

function Ml(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0;
 g = c[a >> 2] | 0;
 do if (!g) h = 1; else {
  i = c[g + 12 >> 2] | 0;
  if ((i | 0) == (c[g + 16 >> 2] | 0)) j = pc[c[(c[g >> 2] | 0) + 36 >> 2] & 63](g) | 0; else j = Jg(c[i >> 2] | 0) | 0;
  if (rh(j, Ig() | 0) | 0) {
   c[a >> 2] = 0;
   h = 1;
   break;
  } else {
   h = (c[a >> 2] | 0) == 0;
   break;
  }
 } while (0);
 j = c[b >> 2] | 0;
 do if (!j) k = 14; else {
  g = c[j + 12 >> 2] | 0;
  if ((g | 0) == (c[j + 16 >> 2] | 0)) l = pc[c[(c[j >> 2] | 0) + 36 >> 2] & 63](j) | 0; else l = Jg(c[g >> 2] | 0) | 0;
  if (rh(l, Ig() | 0) | 0) {
   c[b >> 2] = 0;
   k = 14;
   break;
  } else if (h) {
   m = j;
   k = 17;
   break;
  } else {
   k = 16;
   break;
  }
 } while (0);
 if ((k | 0) == 14) if (h) k = 16; else {
  m = 0;
  k = 17;
 }
 a : do if ((k | 0) == 16) {
  c[d >> 2] = c[d >> 2] | 6;
  n = 0;
 } else if ((k | 0) == 17) {
  h = c[a >> 2] | 0;
  j = c[h + 12 >> 2] | 0;
  if ((j | 0) == (c[h + 16 >> 2] | 0)) o = pc[c[(c[h >> 2] | 0) + 36 >> 2] & 63](h) | 0; else o = Jg(c[j >> 2] | 0) | 0;
  if (!(rc[c[(c[e >> 2] | 0) + 12 >> 2] & 31](e, 2048, o) | 0)) {
   c[d >> 2] = c[d >> 2] | 4;
   n = 0;
   break;
  }
  j = (rc[c[(c[e >> 2] | 0) + 52 >> 2] & 31](e, o, 0) | 0) << 24 >> 24;
  h = c[a >> 2] | 0;
  l = h + 12 | 0;
  g = c[l >> 2] | 0;
  if ((g | 0) == (c[h + 16 >> 2] | 0)) {
   pc[c[(c[h >> 2] | 0) + 40 >> 2] & 63](h) | 0;
   p = j;
   q = f;
   r = m;
   s = m;
  } else {
   c[l >> 2] = g + 4;
   Jg(c[g >> 2] | 0) | 0;
   p = j;
   q = f;
   r = m;
   s = m;
  }
  while (1) {
   t = p + -48 | 0;
   j = q + -1 | 0;
   g = c[a >> 2] | 0;
   do if (!g) u = 1; else {
    l = c[g + 12 >> 2] | 0;
    if ((l | 0) == (c[g + 16 >> 2] | 0)) v = pc[c[(c[g >> 2] | 0) + 36 >> 2] & 63](g) | 0; else v = Jg(c[l >> 2] | 0) | 0;
    if (rh(v, Ig() | 0) | 0) {
     c[a >> 2] = 0;
     u = 1;
     break;
    } else {
     u = (c[a >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!s) {
    w = r;
    x = 1;
    y = 0;
   } else {
    g = c[s + 12 >> 2] | 0;
    if ((g | 0) == (c[s + 16 >> 2] | 0)) z = pc[c[(c[s >> 2] | 0) + 36 >> 2] & 63](s) | 0; else z = Jg(c[g >> 2] | 0) | 0;
    if (rh(z, Ig() | 0) | 0) {
     c[b >> 2] = 0;
     w = 0;
     x = 1;
     y = 0;
     break;
    } else {
     w = r;
     x = (r | 0) == 0;
     y = r;
     break;
    }
   } while (0);
   A = c[a >> 2] | 0;
   if (!((q | 0) > 1 & (u ^ x))) break;
   g = c[A + 12 >> 2] | 0;
   if ((g | 0) == (c[A + 16 >> 2] | 0)) B = pc[c[(c[A >> 2] | 0) + 36 >> 2] & 63](A) | 0; else B = Jg(c[g >> 2] | 0) | 0;
   if (!(rc[c[(c[e >> 2] | 0) + 12 >> 2] & 31](e, 2048, B) | 0)) {
    n = t;
    break a;
   }
   g = (t * 10 | 0) + ((rc[c[(c[e >> 2] | 0) + 52 >> 2] & 31](e, B, 0) | 0) << 24 >> 24) | 0;
   l = c[a >> 2] | 0;
   h = l + 12 | 0;
   i = c[h >> 2] | 0;
   if ((i | 0) == (c[l + 16 >> 2] | 0)) {
    pc[c[(c[l >> 2] | 0) + 40 >> 2] & 63](l) | 0;
    p = g;
    q = j;
    r = w;
    s = y;
    continue;
   } else {
    c[h >> 2] = i + 4;
    Jg(c[i >> 2] | 0) | 0;
    p = g;
    q = j;
    r = w;
    s = y;
    continue;
   }
  }
  do if (!A) C = 1; else {
   g = c[A + 12 >> 2] | 0;
   if ((g | 0) == (c[A + 16 >> 2] | 0)) D = pc[c[(c[A >> 2] | 0) + 36 >> 2] & 63](A) | 0; else D = Jg(c[g >> 2] | 0) | 0;
   if (rh(D, Ig() | 0) | 0) {
    c[a >> 2] = 0;
    C = 1;
    break;
   } else {
    C = (c[a >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!w) k = 60; else {
   g = c[w + 12 >> 2] | 0;
   if ((g | 0) == (c[w + 16 >> 2] | 0)) E = pc[c[(c[w >> 2] | 0) + 36 >> 2] & 63](w) | 0; else E = Jg(c[g >> 2] | 0) | 0;
   if (rh(E, Ig() | 0) | 0) {
    c[b >> 2] = 0;
    k = 60;
    break;
   } else if (C) {
    n = t;
    break a;
   } else break;
  } while (0);
  if ((k | 0) == 60) if (!C) {
   n = t;
   break;
  }
  c[d >> 2] = c[d >> 2] | 2;
  n = t;
 } while (0);
 return n | 0;
}

function Le(a, b) {
 a = +a;
 b = +b;
 var d = 0, e = 0, f = 0, g = 0, i = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0, S = 0, T = 0, U = 0, V = 0.0, W = 0, X = 0, Y = 0, Z = 0, _ = 0, $ = 0, aa = 0, ba = 0.0;
 h[j >> 3] = a;
 d = c[j >> 2] | 0;
 e = c[j + 4 >> 2] | 0;
 h[j >> 3] = b;
 f = c[j >> 2] | 0;
 g = c[j + 4 >> 2] | 0;
 i = wv(d | 0, e | 0, 52) | 0;
 k = i & 2047;
 i = wv(f | 0, g | 0, 52) | 0;
 l = i & 2047;
 i = e & -2147483648;
 m = xv(f | 0, g | 0, 1) | 0;
 n = z;
 a : do if ((m | 0) == 0 & (n | 0) == 0) o = 3; else {
  p = Me(b) | 0;
  q = z & 2147483647;
  if ((k | 0) == 2047 | (q >>> 0 > 2146435072 | (q | 0) == 2146435072 & p >>> 0 > 0)) o = 3; else {
   p = xv(d | 0, e | 0, 1) | 0;
   q = z;
   if (!(q >>> 0 > n >>> 0 | (q | 0) == (n | 0) & p >>> 0 > m >>> 0)) return +((p | 0) == (m | 0) & (q | 0) == (n | 0) ? a * 0.0 : a);
   if (!k) {
    q = xv(d | 0, e | 0, 12) | 0;
    p = z;
    if ((p | 0) > -1 | (p | 0) == -1 & q >>> 0 > 4294967295) {
     r = 0;
     s = q;
     q = p;
     while (1) {
      p = r + -1 | 0;
      s = xv(s | 0, q | 0, 1) | 0;
      q = z;
      if (!((q | 0) > -1 | (q | 0) == -1 & s >>> 0 > 4294967295)) {
       t = p;
       break;
      } else r = p;
     }
    } else t = 0;
    r = xv(d | 0, e | 0, 1 - t | 0) | 0;
    u = t;
    v = r;
    w = z;
   } else {
    u = k;
    v = d;
    w = e & 1048575 | 1048576;
   }
   if (!l) {
    r = xv(f | 0, g | 0, 12) | 0;
    s = z;
    if ((s | 0) > -1 | (s | 0) == -1 & r >>> 0 > 4294967295) {
     q = 0;
     p = r;
     r = s;
     while (1) {
      s = q + -1 | 0;
      p = xv(p | 0, r | 0, 1) | 0;
      r = z;
      if (!((r | 0) > -1 | (r | 0) == -1 & p >>> 0 > 4294967295)) {
       x = s;
       break;
      } else q = s;
     }
    } else x = 0;
    q = xv(f | 0, g | 0, 1 - x | 0) | 0;
    y = x;
    A = q;
    B = z;
   } else {
    y = l;
    A = f;
    B = g & 1048575 | 1048576;
   }
   q = rv(v | 0, w | 0, A | 0, B | 0) | 0;
   p = z;
   r = (p | 0) > -1 | (p | 0) == -1 & q >>> 0 > 4294967295;
   b : do if ((u | 0) > (y | 0)) {
    s = u;
    C = p;
    D = r;
    E = v;
    F = w;
    G = q;
    while (1) {
     if (D) if ((G | 0) == 0 & (C | 0) == 0) break; else {
      H = G;
      I = C;
     } else {
      H = E;
      I = F;
     }
     J = xv(H | 0, I | 0, 1) | 0;
     K = z;
     L = s + -1 | 0;
     M = rv(J | 0, K | 0, A | 0, B | 0) | 0;
     N = z;
     O = (N | 0) > -1 | (N | 0) == -1 & M >>> 0 > 4294967295;
     if ((L | 0) > (y | 0)) {
      s = L;
      C = N;
      D = O;
      E = J;
      F = K;
      G = M;
     } else {
      P = L;
      Q = O;
      R = M;
      S = N;
      T = J;
      U = K;
      break b;
     }
    }
    V = a * 0.0;
    break a;
   } else {
    P = u;
    Q = r;
    R = q;
    S = p;
    T = v;
    U = w;
   } while (0);
   if (Q) if ((R | 0) == 0 & (S | 0) == 0) {
    V = a * 0.0;
    break;
   } else {
    W = S;
    X = R;
   } else {
    W = U;
    X = T;
   }
   if (W >>> 0 < 1048576 | (W | 0) == 1048576 & X >>> 0 < 0) {
    p = P;
    q = X;
    r = W;
    while (1) {
     G = xv(q | 0, r | 0, 1) | 0;
     F = z;
     E = p + -1 | 0;
     if (F >>> 0 < 1048576 | (F | 0) == 1048576 & G >>> 0 < 0) {
      p = E;
      q = G;
      r = F;
     } else {
      Y = E;
      Z = G;
      _ = F;
      break;
     }
    }
   } else {
    Y = P;
    Z = X;
    _ = W;
   }
   if ((Y | 0) > 0) {
    r = qv(Z | 0, _ | 0, 0, -1048576) | 0;
    q = z;
    p = xv(Y | 0, 0, 52) | 0;
    $ = q | z;
    aa = r | p;
   } else {
    p = wv(Z | 0, _ | 0, 1 - Y | 0) | 0;
    $ = z;
    aa = p;
   }
   c[j >> 2] = aa;
   c[j + 4 >> 2] = $ | i;
   V = +h[j >> 3];
  }
 } while (0);
 if ((o | 0) == 3) {
  ba = a * b;
  V = ba / ba;
 }
 return +V;
}

function sk(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0;
 j = l;
 l = l + 16 | 0;
 k = j;
 m = Ji(i, 23140) | 0;
 n = Ji(i, 23148) | 0;
 Bc[c[(c[n >> 2] | 0) + 20 >> 2] & 63](k, n);
 c[h >> 2] = f;
 i = a[b >> 0] | 0;
 switch (i << 24 >> 24) {
 case 43:
 case 45:
  {
   o = qc[c[(c[m >> 2] | 0) + 44 >> 2] & 31](m, i) | 0;
   i = c[h >> 2] | 0;
   c[h >> 2] = i + 4;
   c[i >> 2] = o;
   p = b + 1 | 0;
   break;
  }
 default:
  p = b;
 }
 o = e;
 a : do if ((o - p | 0) > 1) if ((a[p >> 0] | 0) == 48) {
  i = p + 1 | 0;
  switch (a[i >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    q = p;
    r = 10;
    break a;
   }
  }
  s = qc[c[(c[m >> 2] | 0) + 44 >> 2] & 31](m, 48) | 0;
  t = c[h >> 2] | 0;
  c[h >> 2] = t + 4;
  c[t >> 2] = s;
  s = p + 2 | 0;
  t = qc[c[(c[m >> 2] | 0) + 44 >> 2] & 31](m, a[i >> 0] | 0) | 0;
  i = c[h >> 2] | 0;
  c[h >> 2] = i + 4;
  c[i >> 2] = t;
  t = s;
  while (1) {
   if (t >>> 0 >= e >>> 0) {
    u = s;
    v = t;
    break a;
   }
   i = a[t >> 0] | 0;
   if (!(Pf(i, Mi() | 0) | 0)) {
    u = s;
    v = t;
    break a;
   }
   t = t + 1 | 0;
  }
 } else {
  q = p;
  r = 10;
 } else {
  q = p;
  r = 10;
 } while (0);
 b : do if ((r | 0) == 10) while (1) {
  r = 0;
  if (q >>> 0 >= e >>> 0) {
   u = p;
   v = q;
   break b;
  }
  t = a[q >> 0] | 0;
  if (!(Hf(t, Mi() | 0) | 0)) {
   u = p;
   v = q;
   break b;
  }
  q = q + 1 | 0;
  r = 10;
 } while (0);
 q = k + 11 | 0;
 p = a[q >> 0] | 0;
 t = k + 4 | 0;
 c : do if (!((p << 24 >> 24 < 0 ? c[t >> 2] | 0 : p & 255) | 0)) {
  sc[c[(c[m >> 2] | 0) + 48 >> 2] & 7](m, u, v, c[h >> 2] | 0) | 0;
  s = (c[h >> 2] | 0) + (v - u << 2) | 0;
  c[h >> 2] = s;
  w = m;
  x = s;
 } else {
  d : do if ((u | 0) != (v | 0)) {
   s = v;
   i = u;
   while (1) {
    y = s + -1 | 0;
    if (i >>> 0 >= y >>> 0) break d;
    z = a[i >> 0] | 0;
    a[i >> 0] = a[y >> 0] | 0;
    a[y >> 0] = z;
    s = y;
    i = i + 1 | 0;
   }
  } while (0);
  i = pc[c[(c[n >> 2] | 0) + 16 >> 2] & 63](n) | 0;
  s = u;
  y = 0;
  z = 0;
  while (1) {
   if (s >>> 0 >= v >>> 0) break;
   A = a[((a[q >> 0] | 0) < 0 ? c[k >> 2] | 0 : k) + y >> 0] | 0;
   if (A << 24 >> 24 > 0 & (z | 0) == (A << 24 >> 24 | 0)) {
    A = c[h >> 2] | 0;
    c[h >> 2] = A + 4;
    c[A >> 2] = i;
    A = a[q >> 0] | 0;
    B = y + (y >>> 0 < ((A << 24 >> 24 < 0 ? c[t >> 2] | 0 : A & 255) + -1 | 0) >>> 0 & 1) | 0;
    C = 0;
   } else {
    B = y;
    C = z;
   }
   A = qc[c[(c[m >> 2] | 0) + 44 >> 2] & 31](m, a[s >> 0] | 0) | 0;
   D = c[h >> 2] | 0;
   c[h >> 2] = D + 4;
   c[D >> 2] = A;
   s = s + 1 | 0;
   y = B;
   z = C + 1 | 0;
  }
  z = f + (u - b << 2) | 0;
  y = c[h >> 2] | 0;
  if ((z | 0) == (y | 0)) {
   w = m;
   x = z;
  } else {
   s = y;
   i = z;
   while (1) {
    z = s + -4 | 0;
    if (i >>> 0 >= z >>> 0) {
     w = m;
     x = y;
     break c;
    }
    A = c[i >> 2] | 0;
    c[i >> 2] = c[z >> 2];
    c[z >> 2] = A;
    s = z;
    i = i + 4 | 0;
   }
  }
 } while (0);
 u = v;
 v = x;
 while (1) {
  if (u >>> 0 >= e >>> 0) {
   E = u;
   F = v;
   break;
  }
  x = a[u >> 0] | 0;
  if (x << 24 >> 24 == 46) {
   r = 29;
   break;
  }
  C = qc[c[(c[w >> 2] | 0) + 44 >> 2] & 31](m, x) | 0;
  x = c[h >> 2] | 0;
  B = x + 4 | 0;
  c[h >> 2] = B;
  c[x >> 2] = C;
  u = u + 1 | 0;
  v = B;
 }
 if ((r | 0) == 29) {
  r = pc[c[(c[n >> 2] | 0) + 12 >> 2] & 63](n) | 0;
  n = c[h >> 2] | 0;
  v = n + 4 | 0;
  c[h >> 2] = v;
  c[n >> 2] = r;
  E = u + 1 | 0;
  F = v;
 }
 sc[c[(c[m >> 2] | 0) + 48 >> 2] & 7](m, E, e, F) | 0;
 F = (c[h >> 2] | 0) + (o - E << 2) | 0;
 c[h >> 2] = F;
 c[g >> 2] = (d | 0) == (e | 0) ? F : f + (d - b << 2) | 0;
 br(k);
 l = j;
 return;
}

function Ts(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0;
 f = l;
 l = l + 32 | 0;
 g = f + 12 | 0;
 h = f;
 a : do if ((b | 0) == (d | 0)) i = b; else if ((a[b >> 0] | 0) == 70) {
  j = b + 1 | 0;
  if ((j | 0) == (d | 0)) i = b; else {
   if ((a[j >> 0] | 0) == 89) {
    k = b + 2 | 0;
    if ((k | 0) == (d | 0)) {
     i = b;
     break;
    } else m = k;
   } else m = j;
   j = Is(m, d, e) | 0;
   if ((j | 0) == (m | 0)) i = b; else {
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    k = lh(18908) | 0;
    if (k >>> 0 > 4294967279) _q(h);
    if (k >>> 0 < 11) {
     n = h + 11 | 0;
     a[n >> 0] = k;
     o = h;
     p = n;
     q = h + 4 | 0;
    } else {
     n = k + 16 & -16;
     r = Bs(n) | 0;
     c[h >> 2] = r;
     c[h + 8 >> 2] = n | -2147483648;
     n = h + 4 | 0;
     c[n >> 2] = k;
     o = r;
     p = h + 11 | 0;
     q = n;
    }
    sg(o, 18908, k) | 0;
    a[g >> 0] = 0;
    mh(o + k | 0, g);
    k = e + 4 | 0;
    n = g + 11 | 0;
    r = g + 4 | 0;
    s = 0;
    t = j;
    b : while (1) {
     u = t;
     c : while (1) {
      if ((u | 0) == (d | 0)) {
       v = 15;
       break b;
      }
      switch (a[u >> 0] | 0) {
      case 69:
       {
        v = 19;
        break b;
        break;
       }
      case 118:
       {
        u = u + 1 | 0;
        continue c;
        break;
       }
      case 82:
       {
        j = u + 1 | 0;
        if ((j | 0) != (d | 0)) if ((a[j >> 0] | 0) == 69) {
         s = 1;
         t = j;
         continue b;
        }
        break;
       }
      case 79:
       {
        j = u + 1 | 0;
        if ((j | 0) != (d | 0)) if ((a[j >> 0] | 0) == 69) {
         s = 2;
         t = j;
         continue b;
        }
        break;
       }
      default:
       {}
      }
      j = ((c[k >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
      w = Is(u, d, e) | 0;
      x = ((c[k >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
      if ((w | 0) == (u | 0) | (w | 0) == (d | 0)) break b; else y = j;
      while (1) {
       if (y >>> 0 >= x >>> 0) {
        z = j;
        break;
       }
       A = a[p >> 0] | 0;
       if ((A << 24 >> 24 < 0 ? c[q >> 2] | 0 : A & 255) >>> 0 > 1) Ms(h, 19130) | 0;
       _s(g, (c[e >> 2] | 0) + (y * 24 | 0) | 0);
       A = a[n >> 0] | 0;
       B = A << 24 >> 24 < 0;
       qs(h, B ? c[g >> 2] | 0 : g, B ? c[r >> 2] | 0 : A & 255) | 0;
       Es(g);
       y = y + 1 | 0;
      }
      while (1) {
       if (z >>> 0 >= x >>> 0) {
        u = w;
        continue c;
       }
       j = c[k >> 2] | 0;
       A = j + -24 | 0;
       B = j;
       while (1) {
        if ((B | 0) == (A | 0)) break;
        j = B + -24 | 0;
        c[k >> 2] = j;
        ns(j);
        B = c[k >> 2] | 0;
       }
       z = z + 1 | 0;
      }
     }
    }
    d : do if ((v | 0) == 15) {
     r = c[k >> 2] | 0;
     n = r + -24 | 0;
     t = r;
     while (1) {
      if ((t | 0) == (n | 0)) break d;
      r = t + -24 | 0;
      c[k >> 2] = r;
      ns(r);
      t = c[k >> 2] | 0;
     }
    } else if ((v | 0) == 19) {
     t = u + 1 | 0;
     Ms(h, 18906) | 0;
     switch (s & 3) {
     case 1:
      {
       Ms(h, 20334) | 0;
       break;
      }
     case 2:
      {
       Ms(h, 20337) | 0;
       break;
      }
     default:
      {}
     }
     n = c[k >> 2] | 0;
     if ((c[e >> 2] | 0) != (n | 0)) {
      Ms(n + -24 | 0, 18940) | 0;
      n = a[p >> 0] | 0;
      r = n << 24 >> 24 < 0;
      Nu((c[k >> 2] | 0) + -12 | 0, 0, r ? c[h >> 2] | 0 : h, r ? c[q >> 2] | 0 : n & 255) | 0;
      Es(h);
      i = t;
      break a;
     }
    } while (0);
    Es(h);
    i = b;
   }
  }
 } else i = b; while (0);
 l = f;
 return i | 0;
}

function dk(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;
 j = l;
 l = l + 16 | 0;
 k = j;
 m = Ji(i, 23108) | 0;
 n = Ji(i, 23124) | 0;
 Bc[c[(c[n >> 2] | 0) + 20 >> 2] & 63](k, n);
 c[h >> 2] = f;
 i = a[b >> 0] | 0;
 switch (i << 24 >> 24) {
 case 43:
 case 45:
  {
   o = qc[c[(c[m >> 2] | 0) + 28 >> 2] & 31](m, i) | 0;
   i = c[h >> 2] | 0;
   c[h >> 2] = i + 1;
   a[i >> 0] = o;
   p = b + 1 | 0;
   break;
  }
 default:
  p = b;
 }
 o = e;
 a : do if ((o - p | 0) > 1) if ((a[p >> 0] | 0) == 48) {
  i = p + 1 | 0;
  switch (a[i >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    q = p;
    r = 10;
    break a;
   }
  }
  s = qc[c[(c[m >> 2] | 0) + 28 >> 2] & 31](m, 48) | 0;
  t = c[h >> 2] | 0;
  c[h >> 2] = t + 1;
  a[t >> 0] = s;
  s = p + 2 | 0;
  t = qc[c[(c[m >> 2] | 0) + 28 >> 2] & 31](m, a[i >> 0] | 0) | 0;
  i = c[h >> 2] | 0;
  c[h >> 2] = i + 1;
  a[i >> 0] = t;
  t = s;
  while (1) {
   if (t >>> 0 >= e >>> 0) {
    u = s;
    v = t;
    break a;
   }
   i = a[t >> 0] | 0;
   if (!(Pf(i, Mi() | 0) | 0)) {
    u = s;
    v = t;
    break a;
   }
   t = t + 1 | 0;
  }
 } else {
  q = p;
  r = 10;
 } else {
  q = p;
  r = 10;
 } while (0);
 b : do if ((r | 0) == 10) while (1) {
  r = 0;
  if (q >>> 0 >= e >>> 0) {
   u = p;
   v = q;
   break b;
  }
  t = a[q >> 0] | 0;
  if (!(Hf(t, Mi() | 0) | 0)) {
   u = p;
   v = q;
   break b;
  }
  q = q + 1 | 0;
  r = 10;
 } while (0);
 q = k + 11 | 0;
 p = a[q >> 0] | 0;
 t = k + 4 | 0;
 c : do if (!((p << 24 >> 24 < 0 ? c[t >> 2] | 0 : p & 255) | 0)) {
  sc[c[(c[m >> 2] | 0) + 32 >> 2] & 7](m, u, v, c[h >> 2] | 0) | 0;
  c[h >> 2] = (c[h >> 2] | 0) + (v - u);
  w = m;
 } else {
  d : do if ((u | 0) != (v | 0)) {
   s = v;
   i = u;
   while (1) {
    x = s + -1 | 0;
    if (i >>> 0 >= x >>> 0) break d;
    y = a[i >> 0] | 0;
    a[i >> 0] = a[x >> 0] | 0;
    a[x >> 0] = y;
    s = x;
    i = i + 1 | 0;
   }
  } while (0);
  i = pc[c[(c[n >> 2] | 0) + 16 >> 2] & 63](n) | 0;
  s = u;
  x = 0;
  y = 0;
  while (1) {
   if (s >>> 0 >= v >>> 0) break;
   z = a[((a[q >> 0] | 0) < 0 ? c[k >> 2] | 0 : k) + y >> 0] | 0;
   if (z << 24 >> 24 > 0 & (x | 0) == (z << 24 >> 24 | 0)) {
    z = c[h >> 2] | 0;
    c[h >> 2] = z + 1;
    a[z >> 0] = i;
    z = a[q >> 0] | 0;
    A = y + (y >>> 0 < ((z << 24 >> 24 < 0 ? c[t >> 2] | 0 : z & 255) + -1 | 0) >>> 0 & 1) | 0;
    B = 0;
   } else {
    A = y;
    B = x;
   }
   z = qc[c[(c[m >> 2] | 0) + 28 >> 2] & 31](m, a[s >> 0] | 0) | 0;
   C = c[h >> 2] | 0;
   c[h >> 2] = C + 1;
   a[C >> 0] = z;
   s = s + 1 | 0;
   x = B + 1 | 0;
   y = A;
  }
  y = f + (u - b) | 0;
  x = c[h >> 2] | 0;
  if ((y | 0) == (x | 0)) w = m; else {
   s = x;
   x = y;
   while (1) {
    y = s + -1 | 0;
    if (x >>> 0 >= y >>> 0) {
     w = m;
     break c;
    }
    i = a[x >> 0] | 0;
    a[x >> 0] = a[y >> 0] | 0;
    a[y >> 0] = i;
    s = y;
    x = x + 1 | 0;
   }
  }
 } while (0);
 u = v;
 while (1) {
  if (u >>> 0 >= e >>> 0) {
   D = u;
   break;
  }
  v = a[u >> 0] | 0;
  if (v << 24 >> 24 == 46) {
   r = 29;
   break;
  }
  A = qc[c[(c[w >> 2] | 0) + 28 >> 2] & 31](m, v) | 0;
  v = c[h >> 2] | 0;
  c[h >> 2] = v + 1;
  a[v >> 0] = A;
  u = u + 1 | 0;
 }
 if ((r | 0) == 29) {
  r = pc[c[(c[n >> 2] | 0) + 12 >> 2] & 63](n) | 0;
  n = c[h >> 2] | 0;
  c[h >> 2] = n + 1;
  a[n >> 0] = r;
  D = u + 1 | 0;
 }
 sc[c[(c[m >> 2] | 0) + 32 >> 2] & 7](m, D, e, c[h >> 2] | 0) | 0;
 m = (c[h >> 2] | 0) + (o - D) | 0;
 c[h >> 2] = m;
 c[g >> 2] = (d | 0) == (e | 0) ? m : f + (d - b) | 0;
 br(k);
 l = j;
 return;
}

function Zi(b, d, e, f, g, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0;
 b = l;
 l = l + 240 | 0;
 j = b + 200 | 0;
 k = b + 199 | 0;
 m = b + 198 | 0;
 n = b + 184 | 0;
 o = b + 172 | 0;
 p = b + 168 | 0;
 q = b + 8 | 0;
 r = b + 4 | 0;
 s = b;
 t = b + 197 | 0;
 u = b + 196 | 0;
 Vi(n, f, j, k, m);
 c[o >> 2] = 0;
 c[o + 4 >> 2] = 0;
 c[o + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[o + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = o + 11 | 0;
 v = o + 8 | 0;
 if ((a[f >> 0] | 0) < 0) w = (c[v >> 2] & 2147483647) + -1 | 0; else w = 10;
 ir(o, w, 0);
 w = (a[f >> 0] | 0) < 0 ? c[o >> 2] | 0 : o;
 c[p >> 2] = w;
 c[r >> 2] = q;
 c[s >> 2] = 0;
 a[t >> 0] = 1;
 a[u >> 0] = 69;
 x = o + 4 | 0;
 y = c[d >> 2] | 0;
 z = w;
 w = y;
 A = y;
 a : while (1) {
  if (!w) {
   B = 0;
   C = 0;
   D = 1;
  } else {
   y = c[w + 12 >> 2] | 0;
   if ((y | 0) == (c[w + 16 >> 2] | 0)) E = pc[c[(c[w >> 2] | 0) + 36 >> 2] & 63](w) | 0; else E = rg(a[y >> 0] | 0) | 0;
   if (ph(E, qg() | 0) | 0) {
    c[d >> 2] = 0;
    B = 0;
    C = 0;
    D = 1;
   } else {
    B = w;
    C = A;
    D = 0;
   }
  }
  y = c[e >> 2] | 0;
  do if (!y) F = 19; else {
   G = c[y + 12 >> 2] | 0;
   if ((G | 0) == (c[y + 16 >> 2] | 0)) H = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else H = rg(a[G >> 0] | 0) | 0;
   if (ph(H, qg() | 0) | 0) {
    c[e >> 2] = 0;
    F = 19;
    break;
   } else if (D) {
    I = y;
    break;
   } else {
    J = z;
    K = y;
    break a;
   }
  } while (0);
  if ((F | 0) == 19) {
   F = 0;
   if (D) {
    J = z;
    K = 0;
    break;
   } else I = 0;
  }
  y = a[f >> 0] | 0;
  G = y << 24 >> 24 < 0 ? c[x >> 2] | 0 : y & 255;
  if ((c[p >> 2] | 0) == (z + G | 0)) {
   ir(o, G << 1, 0);
   if ((a[f >> 0] | 0) < 0) L = (c[v >> 2] & 2147483647) + -1 | 0; else L = 10;
   ir(o, L, 0);
   y = (a[f >> 0] | 0) < 0 ? c[o >> 2] | 0 : o;
   c[p >> 2] = y + G;
   M = y;
  } else M = z;
  y = B + 12 | 0;
  G = c[y >> 2] | 0;
  N = B + 16 | 0;
  if ((G | 0) == (c[N >> 2] | 0)) O = pc[c[(c[B >> 2] | 0) + 36 >> 2] & 63](B) | 0; else O = rg(a[G >> 0] | 0) | 0;
  if (Wi(O & 255, t, u, M, p, a[k >> 0] | 0, a[m >> 0] | 0, n, q, r, s, j) | 0) {
   J = M;
   K = I;
   break;
  }
  G = c[y >> 2] | 0;
  if ((G | 0) == (c[N >> 2] | 0)) {
   pc[c[(c[B >> 2] | 0) + 40 >> 2] & 63](B) | 0;
   z = M;
   w = B;
   A = C;
   continue;
  } else {
   c[y >> 2] = G + 1;
   rg(a[G >> 0] | 0) | 0;
   z = M;
   w = B;
   A = C;
   continue;
  }
 }
 A = a[n + 11 >> 0] | 0;
 if (!((a[t >> 0] | 0) == 0 ? 1 : ((A << 24 >> 24 < 0 ? c[n + 4 >> 2] | 0 : A & 255) | 0) == 0)) {
  A = c[r >> 2] | 0;
  if ((A - q | 0) < 160) {
   t = c[s >> 2] | 0;
   c[r >> 2] = A + 4;
   c[A >> 2] = t;
  }
 }
 h[i >> 3] = +_i(J, c[p >> 2] | 0, g);
 Yi(n, q, c[r >> 2] | 0, g);
 if (!B) P = 1; else {
  r = c[B + 12 >> 2] | 0;
  if ((r | 0) == (c[B + 16 >> 2] | 0)) Q = pc[c[(c[C >> 2] | 0) + 36 >> 2] & 63](B) | 0; else Q = rg(a[r >> 0] | 0) | 0;
  if (ph(Q, qg() | 0) | 0) {
   c[d >> 2] = 0;
   P = 1;
  } else P = 0;
 }
 do if (!K) F = 47; else {
  Q = c[K + 12 >> 2] | 0;
  if ((Q | 0) == (c[K + 16 >> 2] | 0)) R = pc[c[(c[K >> 2] | 0) + 36 >> 2] & 63](K) | 0; else R = rg(a[Q >> 0] | 0) | 0;
  if (ph(R, qg() | 0) | 0) {
   c[e >> 2] = 0;
   F = 47;
   break;
  } else if (P) break; else {
   F = 49;
   break;
  }
 } while (0);
 if ((F | 0) == 47) if (P) F = 49;
 if ((F | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(o);
 br(n);
 l = b;
 return g | 0;
}

function Ui(b, d, e, f, g, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0;
 b = l;
 l = l + 240 | 0;
 j = b + 200 | 0;
 k = b + 199 | 0;
 m = b + 198 | 0;
 n = b + 184 | 0;
 o = b + 172 | 0;
 p = b + 168 | 0;
 q = b + 8 | 0;
 r = b + 4 | 0;
 s = b;
 t = b + 197 | 0;
 u = b + 196 | 0;
 Vi(n, f, j, k, m);
 c[o >> 2] = 0;
 c[o + 4 >> 2] = 0;
 c[o + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[o + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = o + 11 | 0;
 v = o + 8 | 0;
 if ((a[f >> 0] | 0) < 0) w = (c[v >> 2] & 2147483647) + -1 | 0; else w = 10;
 ir(o, w, 0);
 w = (a[f >> 0] | 0) < 0 ? c[o >> 2] | 0 : o;
 c[p >> 2] = w;
 c[r >> 2] = q;
 c[s >> 2] = 0;
 a[t >> 0] = 1;
 a[u >> 0] = 69;
 x = o + 4 | 0;
 y = c[d >> 2] | 0;
 z = w;
 w = y;
 A = y;
 a : while (1) {
  if (!w) {
   B = 0;
   C = 0;
   D = 1;
  } else {
   y = c[w + 12 >> 2] | 0;
   if ((y | 0) == (c[w + 16 >> 2] | 0)) E = pc[c[(c[w >> 2] | 0) + 36 >> 2] & 63](w) | 0; else E = rg(a[y >> 0] | 0) | 0;
   if (ph(E, qg() | 0) | 0) {
    c[d >> 2] = 0;
    B = 0;
    C = 0;
    D = 1;
   } else {
    B = w;
    C = A;
    D = 0;
   }
  }
  y = c[e >> 2] | 0;
  do if (!y) F = 19; else {
   G = c[y + 12 >> 2] | 0;
   if ((G | 0) == (c[y + 16 >> 2] | 0)) H = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else H = rg(a[G >> 0] | 0) | 0;
   if (ph(H, qg() | 0) | 0) {
    c[e >> 2] = 0;
    F = 19;
    break;
   } else if (D) {
    I = y;
    break;
   } else {
    J = z;
    K = y;
    break a;
   }
  } while (0);
  if ((F | 0) == 19) {
   F = 0;
   if (D) {
    J = z;
    K = 0;
    break;
   } else I = 0;
  }
  y = a[f >> 0] | 0;
  G = y << 24 >> 24 < 0 ? c[x >> 2] | 0 : y & 255;
  if ((c[p >> 2] | 0) == (z + G | 0)) {
   ir(o, G << 1, 0);
   if ((a[f >> 0] | 0) < 0) L = (c[v >> 2] & 2147483647) + -1 | 0; else L = 10;
   ir(o, L, 0);
   y = (a[f >> 0] | 0) < 0 ? c[o >> 2] | 0 : o;
   c[p >> 2] = y + G;
   M = y;
  } else M = z;
  y = B + 12 | 0;
  G = c[y >> 2] | 0;
  N = B + 16 | 0;
  if ((G | 0) == (c[N >> 2] | 0)) O = pc[c[(c[B >> 2] | 0) + 36 >> 2] & 63](B) | 0; else O = rg(a[G >> 0] | 0) | 0;
  if (Wi(O & 255, t, u, M, p, a[k >> 0] | 0, a[m >> 0] | 0, n, q, r, s, j) | 0) {
   J = M;
   K = I;
   break;
  }
  G = c[y >> 2] | 0;
  if ((G | 0) == (c[N >> 2] | 0)) {
   pc[c[(c[B >> 2] | 0) + 40 >> 2] & 63](B) | 0;
   z = M;
   w = B;
   A = C;
   continue;
  } else {
   c[y >> 2] = G + 1;
   rg(a[G >> 0] | 0) | 0;
   z = M;
   w = B;
   A = C;
   continue;
  }
 }
 A = a[n + 11 >> 0] | 0;
 if (!((a[t >> 0] | 0) == 0 ? 1 : ((A << 24 >> 24 < 0 ? c[n + 4 >> 2] | 0 : A & 255) | 0) == 0)) {
  A = c[r >> 2] | 0;
  if ((A - q | 0) < 160) {
   t = c[s >> 2] | 0;
   c[r >> 2] = A + 4;
   c[A >> 2] = t;
  }
 }
 h[i >> 3] = +Xi(J, c[p >> 2] | 0, g);
 Yi(n, q, c[r >> 2] | 0, g);
 if (!B) P = 1; else {
  r = c[B + 12 >> 2] | 0;
  if ((r | 0) == (c[B + 16 >> 2] | 0)) Q = pc[c[(c[C >> 2] | 0) + 36 >> 2] & 63](B) | 0; else Q = rg(a[r >> 0] | 0) | 0;
  if (ph(Q, qg() | 0) | 0) {
   c[d >> 2] = 0;
   P = 1;
  } else P = 0;
 }
 do if (!K) F = 47; else {
  Q = c[K + 12 >> 2] | 0;
  if ((Q | 0) == (c[K + 16 >> 2] | 0)) R = pc[c[(c[K >> 2] | 0) + 36 >> 2] & 63](K) | 0; else R = rg(a[Q >> 0] | 0) | 0;
  if (ph(R, qg() | 0) | 0) {
   c[e >> 2] = 0;
   F = 47;
   break;
  } else if (P) break; else {
   F = 49;
   break;
  }
 } while (0);
 if ((F | 0) == 47) if (P) F = 49;
 if ((F | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(o);
 br(n);
 l = b;
 return g | 0;
}

function $i(b, d, e, f, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0;
 b = l;
 l = l + 240 | 0;
 j = b + 200 | 0;
 k = b + 199 | 0;
 m = b + 198 | 0;
 n = b + 184 | 0;
 o = b + 172 | 0;
 p = b + 168 | 0;
 q = b + 8 | 0;
 r = b + 4 | 0;
 s = b;
 t = b + 197 | 0;
 u = b + 196 | 0;
 Vi(n, f, j, k, m);
 c[o >> 2] = 0;
 c[o + 4 >> 2] = 0;
 c[o + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[o + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = o + 11 | 0;
 v = o + 8 | 0;
 if ((a[f >> 0] | 0) < 0) w = (c[v >> 2] & 2147483647) + -1 | 0; else w = 10;
 ir(o, w, 0);
 w = (a[f >> 0] | 0) < 0 ? c[o >> 2] | 0 : o;
 c[p >> 2] = w;
 c[r >> 2] = q;
 c[s >> 2] = 0;
 a[t >> 0] = 1;
 a[u >> 0] = 69;
 x = o + 4 | 0;
 y = c[d >> 2] | 0;
 z = w;
 w = y;
 A = y;
 a : while (1) {
  if (!w) {
   B = 0;
   C = 0;
   D = 1;
  } else {
   y = c[w + 12 >> 2] | 0;
   if ((y | 0) == (c[w + 16 >> 2] | 0)) E = pc[c[(c[w >> 2] | 0) + 36 >> 2] & 63](w) | 0; else E = rg(a[y >> 0] | 0) | 0;
   if (ph(E, qg() | 0) | 0) {
    c[d >> 2] = 0;
    B = 0;
    C = 0;
    D = 1;
   } else {
    B = w;
    C = A;
    D = 0;
   }
  }
  y = c[e >> 2] | 0;
  do if (!y) F = 19; else {
   G = c[y + 12 >> 2] | 0;
   if ((G | 0) == (c[y + 16 >> 2] | 0)) H = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else H = rg(a[G >> 0] | 0) | 0;
   if (ph(H, qg() | 0) | 0) {
    c[e >> 2] = 0;
    F = 19;
    break;
   } else if (D) {
    I = y;
    break;
   } else {
    J = z;
    K = y;
    break a;
   }
  } while (0);
  if ((F | 0) == 19) {
   F = 0;
   if (D) {
    J = z;
    K = 0;
    break;
   } else I = 0;
  }
  y = a[f >> 0] | 0;
  G = y << 24 >> 24 < 0 ? c[x >> 2] | 0 : y & 255;
  if ((c[p >> 2] | 0) == (z + G | 0)) {
   ir(o, G << 1, 0);
   if ((a[f >> 0] | 0) < 0) L = (c[v >> 2] & 2147483647) + -1 | 0; else L = 10;
   ir(o, L, 0);
   y = (a[f >> 0] | 0) < 0 ? c[o >> 2] | 0 : o;
   c[p >> 2] = y + G;
   M = y;
  } else M = z;
  y = B + 12 | 0;
  G = c[y >> 2] | 0;
  N = B + 16 | 0;
  if ((G | 0) == (c[N >> 2] | 0)) O = pc[c[(c[B >> 2] | 0) + 36 >> 2] & 63](B) | 0; else O = rg(a[G >> 0] | 0) | 0;
  if (Wi(O & 255, t, u, M, p, a[k >> 0] | 0, a[m >> 0] | 0, n, q, r, s, j) | 0) {
   J = M;
   K = I;
   break;
  }
  G = c[y >> 2] | 0;
  if ((G | 0) == (c[N >> 2] | 0)) {
   pc[c[(c[B >> 2] | 0) + 40 >> 2] & 63](B) | 0;
   z = M;
   w = B;
   A = C;
   continue;
  } else {
   c[y >> 2] = G + 1;
   rg(a[G >> 0] | 0) | 0;
   z = M;
   w = B;
   A = C;
   continue;
  }
 }
 A = a[n + 11 >> 0] | 0;
 if (!((a[t >> 0] | 0) == 0 ? 1 : ((A << 24 >> 24 < 0 ? c[n + 4 >> 2] | 0 : A & 255) | 0) == 0)) {
  A = c[r >> 2] | 0;
  if ((A - q | 0) < 160) {
   t = c[s >> 2] | 0;
   c[r >> 2] = A + 4;
   c[A >> 2] = t;
  }
 }
 g[i >> 2] = +aj(J, c[p >> 2] | 0, h);
 Yi(n, q, c[r >> 2] | 0, h);
 if (!B) P = 1; else {
  r = c[B + 12 >> 2] | 0;
  if ((r | 0) == (c[B + 16 >> 2] | 0)) Q = pc[c[(c[C >> 2] | 0) + 36 >> 2] & 63](B) | 0; else Q = rg(a[r >> 0] | 0) | 0;
  if (ph(Q, qg() | 0) | 0) {
   c[d >> 2] = 0;
   P = 1;
  } else P = 0;
 }
 do if (!K) F = 47; else {
  Q = c[K + 12 >> 2] | 0;
  if ((Q | 0) == (c[K + 16 >> 2] | 0)) R = pc[c[(c[K >> 2] | 0) + 36 >> 2] & 63](K) | 0; else R = rg(a[Q >> 0] | 0) | 0;
  if (ph(R, qg() | 0) | 0) {
   c[e >> 2] = 0;
   F = 47;
   break;
  } else if (P) break; else {
   F = 49;
   break;
  }
 } while (0);
 if ((F | 0) == 47) if (P) F = 49;
 if ((F | 0) == 49) c[h >> 2] = c[h >> 2] | 2;
 h = c[d >> 2] | 0;
 br(o);
 br(n);
 l = b;
 return h | 0;
}

function Ij(b, d, e, f, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0;
 b = l;
 l = l + 352 | 0;
 j = b + 208 | 0;
 k = b + 200 | 0;
 m = b + 196 | 0;
 n = b + 184 | 0;
 o = b + 172 | 0;
 p = b + 168 | 0;
 q = b + 8 | 0;
 r = b + 4 | 0;
 s = b;
 t = b + 337 | 0;
 u = b + 336 | 0;
 Fj(n, f, j, k, m);
 c[o >> 2] = 0;
 c[o + 4 >> 2] = 0;
 c[o + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[o + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = o + 11 | 0;
 v = o + 8 | 0;
 if ((a[f >> 0] | 0) < 0) w = (c[v >> 2] & 2147483647) + -1 | 0; else w = 10;
 ir(o, w, 0);
 w = (a[f >> 0] | 0) < 0 ? c[o >> 2] | 0 : o;
 c[p >> 2] = w;
 c[r >> 2] = q;
 c[s >> 2] = 0;
 a[t >> 0] = 1;
 a[u >> 0] = 69;
 x = o + 4 | 0;
 y = c[d >> 2] | 0;
 z = w;
 w = y;
 A = y;
 a : while (1) {
  if (!w) {
   B = 0;
   C = 0;
   D = 1;
  } else {
   y = c[w + 12 >> 2] | 0;
   if ((y | 0) == (c[w + 16 >> 2] | 0)) E = pc[c[(c[w >> 2] | 0) + 36 >> 2] & 63](w) | 0; else E = Jg(c[y >> 2] | 0) | 0;
   if (rh(E, Ig() | 0) | 0) {
    c[d >> 2] = 0;
    B = 0;
    C = 0;
    D = 1;
   } else {
    B = w;
    C = A;
    D = 0;
   }
  }
  y = c[e >> 2] | 0;
  do if (!y) F = 19; else {
   G = c[y + 12 >> 2] | 0;
   if ((G | 0) == (c[y + 16 >> 2] | 0)) H = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else H = Jg(c[G >> 2] | 0) | 0;
   if (rh(H, Ig() | 0) | 0) {
    c[e >> 2] = 0;
    F = 19;
    break;
   } else if (D) {
    I = y;
    break;
   } else {
    J = z;
    K = y;
    break a;
   }
  } while (0);
  if ((F | 0) == 19) {
   F = 0;
   if (D) {
    J = z;
    K = 0;
    break;
   } else I = 0;
  }
  y = a[f >> 0] | 0;
  G = y << 24 >> 24 < 0 ? c[x >> 2] | 0 : y & 255;
  if ((c[p >> 2] | 0) == (z + G | 0)) {
   ir(o, G << 1, 0);
   if ((a[f >> 0] | 0) < 0) L = (c[v >> 2] & 2147483647) + -1 | 0; else L = 10;
   ir(o, L, 0);
   y = (a[f >> 0] | 0) < 0 ? c[o >> 2] | 0 : o;
   c[p >> 2] = y + G;
   M = y;
  } else M = z;
  y = B + 12 | 0;
  G = c[y >> 2] | 0;
  N = B + 16 | 0;
  if ((G | 0) == (c[N >> 2] | 0)) O = pc[c[(c[B >> 2] | 0) + 36 >> 2] & 63](B) | 0; else O = Jg(c[G >> 2] | 0) | 0;
  if (Gj(O, t, u, M, p, c[k >> 2] | 0, c[m >> 2] | 0, n, q, r, s, j) | 0) {
   J = M;
   K = I;
   break;
  }
  G = c[y >> 2] | 0;
  if ((G | 0) == (c[N >> 2] | 0)) {
   pc[c[(c[B >> 2] | 0) + 40 >> 2] & 63](B) | 0;
   z = M;
   w = B;
   A = C;
   continue;
  } else {
   c[y >> 2] = G + 4;
   Jg(c[G >> 2] | 0) | 0;
   z = M;
   w = B;
   A = C;
   continue;
  }
 }
 A = a[n + 11 >> 0] | 0;
 if (!((a[t >> 0] | 0) == 0 ? 1 : ((A << 24 >> 24 < 0 ? c[n + 4 >> 2] | 0 : A & 255) | 0) == 0)) {
  A = c[r >> 2] | 0;
  if ((A - q | 0) < 160) {
   t = c[s >> 2] | 0;
   c[r >> 2] = A + 4;
   c[A >> 2] = t;
  }
 }
 g[i >> 2] = +aj(J, c[p >> 2] | 0, h);
 Yi(n, q, c[r >> 2] | 0, h);
 if (!B) P = 1; else {
  r = c[B + 12 >> 2] | 0;
  if ((r | 0) == (c[B + 16 >> 2] | 0)) Q = pc[c[(c[C >> 2] | 0) + 36 >> 2] & 63](B) | 0; else Q = Jg(c[r >> 2] | 0) | 0;
  if (rh(Q, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   P = 1;
  } else P = 0;
 }
 do if (!K) F = 47; else {
  Q = c[K + 12 >> 2] | 0;
  if ((Q | 0) == (c[K + 16 >> 2] | 0)) R = pc[c[(c[K >> 2] | 0) + 36 >> 2] & 63](K) | 0; else R = Jg(c[Q >> 2] | 0) | 0;
  if (rh(R, Ig() | 0) | 0) {
   c[e >> 2] = 0;
   F = 47;
   break;
  } else if (P) break; else {
   F = 49;
   break;
  }
 } while (0);
 if ((F | 0) == 47) if (P) F = 49;
 if ((F | 0) == 49) c[h >> 2] = c[h >> 2] | 2;
 h = c[d >> 2] | 0;
 br(o);
 br(n);
 l = b;
 return h | 0;
}

function Hj(b, d, e, f, g, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0;
 b = l;
 l = l + 352 | 0;
 j = b + 208 | 0;
 k = b + 200 | 0;
 m = b + 196 | 0;
 n = b + 184 | 0;
 o = b + 172 | 0;
 p = b + 168 | 0;
 q = b + 8 | 0;
 r = b + 4 | 0;
 s = b;
 t = b + 337 | 0;
 u = b + 336 | 0;
 Fj(n, f, j, k, m);
 c[o >> 2] = 0;
 c[o + 4 >> 2] = 0;
 c[o + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[o + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = o + 11 | 0;
 v = o + 8 | 0;
 if ((a[f >> 0] | 0) < 0) w = (c[v >> 2] & 2147483647) + -1 | 0; else w = 10;
 ir(o, w, 0);
 w = (a[f >> 0] | 0) < 0 ? c[o >> 2] | 0 : o;
 c[p >> 2] = w;
 c[r >> 2] = q;
 c[s >> 2] = 0;
 a[t >> 0] = 1;
 a[u >> 0] = 69;
 x = o + 4 | 0;
 y = c[d >> 2] | 0;
 z = w;
 w = y;
 A = y;
 a : while (1) {
  if (!w) {
   B = 0;
   C = 0;
   D = 1;
  } else {
   y = c[w + 12 >> 2] | 0;
   if ((y | 0) == (c[w + 16 >> 2] | 0)) E = pc[c[(c[w >> 2] | 0) + 36 >> 2] & 63](w) | 0; else E = Jg(c[y >> 2] | 0) | 0;
   if (rh(E, Ig() | 0) | 0) {
    c[d >> 2] = 0;
    B = 0;
    C = 0;
    D = 1;
   } else {
    B = w;
    C = A;
    D = 0;
   }
  }
  y = c[e >> 2] | 0;
  do if (!y) F = 19; else {
   G = c[y + 12 >> 2] | 0;
   if ((G | 0) == (c[y + 16 >> 2] | 0)) H = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else H = Jg(c[G >> 2] | 0) | 0;
   if (rh(H, Ig() | 0) | 0) {
    c[e >> 2] = 0;
    F = 19;
    break;
   } else if (D) {
    I = y;
    break;
   } else {
    J = z;
    K = y;
    break a;
   }
  } while (0);
  if ((F | 0) == 19) {
   F = 0;
   if (D) {
    J = z;
    K = 0;
    break;
   } else I = 0;
  }
  y = a[f >> 0] | 0;
  G = y << 24 >> 24 < 0 ? c[x >> 2] | 0 : y & 255;
  if ((c[p >> 2] | 0) == (z + G | 0)) {
   ir(o, G << 1, 0);
   if ((a[f >> 0] | 0) < 0) L = (c[v >> 2] & 2147483647) + -1 | 0; else L = 10;
   ir(o, L, 0);
   y = (a[f >> 0] | 0) < 0 ? c[o >> 2] | 0 : o;
   c[p >> 2] = y + G;
   M = y;
  } else M = z;
  y = B + 12 | 0;
  G = c[y >> 2] | 0;
  N = B + 16 | 0;
  if ((G | 0) == (c[N >> 2] | 0)) O = pc[c[(c[B >> 2] | 0) + 36 >> 2] & 63](B) | 0; else O = Jg(c[G >> 2] | 0) | 0;
  if (Gj(O, t, u, M, p, c[k >> 2] | 0, c[m >> 2] | 0, n, q, r, s, j) | 0) {
   J = M;
   K = I;
   break;
  }
  G = c[y >> 2] | 0;
  if ((G | 0) == (c[N >> 2] | 0)) {
   pc[c[(c[B >> 2] | 0) + 40 >> 2] & 63](B) | 0;
   z = M;
   w = B;
   A = C;
   continue;
  } else {
   c[y >> 2] = G + 4;
   Jg(c[G >> 2] | 0) | 0;
   z = M;
   w = B;
   A = C;
   continue;
  }
 }
 A = a[n + 11 >> 0] | 0;
 if (!((a[t >> 0] | 0) == 0 ? 1 : ((A << 24 >> 24 < 0 ? c[n + 4 >> 2] | 0 : A & 255) | 0) == 0)) {
  A = c[r >> 2] | 0;
  if ((A - q | 0) < 160) {
   t = c[s >> 2] | 0;
   c[r >> 2] = A + 4;
   c[A >> 2] = t;
  }
 }
 h[i >> 3] = +_i(J, c[p >> 2] | 0, g);
 Yi(n, q, c[r >> 2] | 0, g);
 if (!B) P = 1; else {
  r = c[B + 12 >> 2] | 0;
  if ((r | 0) == (c[B + 16 >> 2] | 0)) Q = pc[c[(c[C >> 2] | 0) + 36 >> 2] & 63](B) | 0; else Q = Jg(c[r >> 2] | 0) | 0;
  if (rh(Q, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   P = 1;
  } else P = 0;
 }
 do if (!K) F = 47; else {
  Q = c[K + 12 >> 2] | 0;
  if ((Q | 0) == (c[K + 16 >> 2] | 0)) R = pc[c[(c[K >> 2] | 0) + 36 >> 2] & 63](K) | 0; else R = Jg(c[Q >> 2] | 0) | 0;
  if (rh(R, Ig() | 0) | 0) {
   c[e >> 2] = 0;
   F = 47;
   break;
  } else if (P) break; else {
   F = 49;
   break;
  }
 } while (0);
 if ((F | 0) == 47) if (P) F = 49;
 if ((F | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(o);
 br(n);
 l = b;
 return g | 0;
}

function Ej(b, d, e, f, g, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0, Q = 0, R = 0;
 b = l;
 l = l + 352 | 0;
 j = b + 208 | 0;
 k = b + 200 | 0;
 m = b + 196 | 0;
 n = b + 184 | 0;
 o = b + 172 | 0;
 p = b + 168 | 0;
 q = b + 8 | 0;
 r = b + 4 | 0;
 s = b;
 t = b + 337 | 0;
 u = b + 336 | 0;
 Fj(n, f, j, k, m);
 c[o >> 2] = 0;
 c[o + 4 >> 2] = 0;
 c[o + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[o + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = o + 11 | 0;
 v = o + 8 | 0;
 if ((a[f >> 0] | 0) < 0) w = (c[v >> 2] & 2147483647) + -1 | 0; else w = 10;
 ir(o, w, 0);
 w = (a[f >> 0] | 0) < 0 ? c[o >> 2] | 0 : o;
 c[p >> 2] = w;
 c[r >> 2] = q;
 c[s >> 2] = 0;
 a[t >> 0] = 1;
 a[u >> 0] = 69;
 x = o + 4 | 0;
 y = c[d >> 2] | 0;
 z = w;
 w = y;
 A = y;
 a : while (1) {
  if (!w) {
   B = 0;
   C = 0;
   D = 1;
  } else {
   y = c[w + 12 >> 2] | 0;
   if ((y | 0) == (c[w + 16 >> 2] | 0)) E = pc[c[(c[w >> 2] | 0) + 36 >> 2] & 63](w) | 0; else E = Jg(c[y >> 2] | 0) | 0;
   if (rh(E, Ig() | 0) | 0) {
    c[d >> 2] = 0;
    B = 0;
    C = 0;
    D = 1;
   } else {
    B = w;
    C = A;
    D = 0;
   }
  }
  y = c[e >> 2] | 0;
  do if (!y) F = 19; else {
   G = c[y + 12 >> 2] | 0;
   if ((G | 0) == (c[y + 16 >> 2] | 0)) H = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else H = Jg(c[G >> 2] | 0) | 0;
   if (rh(H, Ig() | 0) | 0) {
    c[e >> 2] = 0;
    F = 19;
    break;
   } else if (D) {
    I = y;
    break;
   } else {
    J = z;
    K = y;
    break a;
   }
  } while (0);
  if ((F | 0) == 19) {
   F = 0;
   if (D) {
    J = z;
    K = 0;
    break;
   } else I = 0;
  }
  y = a[f >> 0] | 0;
  G = y << 24 >> 24 < 0 ? c[x >> 2] | 0 : y & 255;
  if ((c[p >> 2] | 0) == (z + G | 0)) {
   ir(o, G << 1, 0);
   if ((a[f >> 0] | 0) < 0) L = (c[v >> 2] & 2147483647) + -1 | 0; else L = 10;
   ir(o, L, 0);
   y = (a[f >> 0] | 0) < 0 ? c[o >> 2] | 0 : o;
   c[p >> 2] = y + G;
   M = y;
  } else M = z;
  y = B + 12 | 0;
  G = c[y >> 2] | 0;
  N = B + 16 | 0;
  if ((G | 0) == (c[N >> 2] | 0)) O = pc[c[(c[B >> 2] | 0) + 36 >> 2] & 63](B) | 0; else O = Jg(c[G >> 2] | 0) | 0;
  if (Gj(O, t, u, M, p, c[k >> 2] | 0, c[m >> 2] | 0, n, q, r, s, j) | 0) {
   J = M;
   K = I;
   break;
  }
  G = c[y >> 2] | 0;
  if ((G | 0) == (c[N >> 2] | 0)) {
   pc[c[(c[B >> 2] | 0) + 40 >> 2] & 63](B) | 0;
   z = M;
   w = B;
   A = C;
   continue;
  } else {
   c[y >> 2] = G + 4;
   Jg(c[G >> 2] | 0) | 0;
   z = M;
   w = B;
   A = C;
   continue;
  }
 }
 A = a[n + 11 >> 0] | 0;
 if (!((a[t >> 0] | 0) == 0 ? 1 : ((A << 24 >> 24 < 0 ? c[n + 4 >> 2] | 0 : A & 255) | 0) == 0)) {
  A = c[r >> 2] | 0;
  if ((A - q | 0) < 160) {
   t = c[s >> 2] | 0;
   c[r >> 2] = A + 4;
   c[A >> 2] = t;
  }
 }
 h[i >> 3] = +Xi(J, c[p >> 2] | 0, g);
 Yi(n, q, c[r >> 2] | 0, g);
 if (!B) P = 1; else {
  r = c[B + 12 >> 2] | 0;
  if ((r | 0) == (c[B + 16 >> 2] | 0)) Q = pc[c[(c[C >> 2] | 0) + 36 >> 2] & 63](B) | 0; else Q = Jg(c[r >> 2] | 0) | 0;
  if (rh(Q, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   P = 1;
  } else P = 0;
 }
 do if (!K) F = 47; else {
  Q = c[K + 12 >> 2] | 0;
  if ((Q | 0) == (c[K + 16 >> 2] | 0)) R = pc[c[(c[K >> 2] | 0) + 36 >> 2] & 63](K) | 0; else R = Jg(c[Q >> 2] | 0) | 0;
  if (rh(R, Ig() | 0) | 0) {
   c[e >> 2] = 0;
   F = 47;
   break;
  } else if (P) break; else {
   F = 49;
   break;
  }
 } while (0);
 if ((F | 0) == 47) if (P) F = 49;
 if ((F | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(o);
 br(n);
 l = b;
 return g | 0;
}

function Ii(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0;
 b = l;
 l = l + 240 | 0;
 i = b;
 j = b + 204 | 0;
 k = b + 192 | 0;
 m = b + 180 | 0;
 n = b + 176 | 0;
 o = b + 16 | 0;
 p = b + 8 | 0;
 q = b + 4 | 0;
 c[k >> 2] = 0;
 c[k + 4 >> 2] = 0;
 c[k + 8 >> 2] = 0;
 r = 0;
 while (1) {
  if ((r | 0) == 3) break;
  c[k + (r << 2) >> 2] = 0;
  r = r + 1 | 0;
 }
 qh(m, f);
 f = Ji(m, 23108) | 0;
 sc[c[(c[f >> 2] | 0) + 32 >> 2] & 7](f, 15968, 15994, j) | 0;
 Ki(m);
 c[m >> 2] = 0;
 c[m + 4 >> 2] = 0;
 c[m + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[m + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = m + 11 | 0;
 r = m + 8 | 0;
 if ((a[f >> 0] | 0) < 0) s = (c[r >> 2] & 2147483647) + -1 | 0; else s = 10;
 ir(m, s, 0);
 s = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 c[n >> 2] = s;
 c[p >> 2] = o;
 c[q >> 2] = 0;
 t = m + 4 | 0;
 u = c[d >> 2] | 0;
 v = s;
 s = u;
 w = u;
 a : while (1) {
  if (!s) {
   x = 0;
   y = 0;
   z = 1;
  } else {
   u = c[s + 12 >> 2] | 0;
   if ((u | 0) == (c[s + 16 >> 2] | 0)) A = pc[c[(c[s >> 2] | 0) + 36 >> 2] & 63](s) | 0; else A = rg(a[u >> 0] | 0) | 0;
   if (ph(A, qg() | 0) | 0) {
    c[d >> 2] = 0;
    x = 0;
    y = 0;
    z = 1;
   } else {
    x = s;
    y = w;
    z = 0;
   }
  }
  u = c[e >> 2] | 0;
  do if (!u) B = 22; else {
   C = c[u + 12 >> 2] | 0;
   if ((C | 0) == (c[u + 16 >> 2] | 0)) D = pc[c[(c[u >> 2] | 0) + 36 >> 2] & 63](u) | 0; else D = rg(a[C >> 0] | 0) | 0;
   if (ph(D, qg() | 0) | 0) {
    c[e >> 2] = 0;
    B = 22;
    break;
   } else if (z) {
    E = u;
    break;
   } else {
    F = v;
    G = u;
    break a;
   }
  } while (0);
  if ((B | 0) == 22) {
   B = 0;
   if (z) {
    F = v;
    G = 0;
    break;
   } else E = 0;
  }
  u = a[f >> 0] | 0;
  C = u << 24 >> 24 < 0 ? c[t >> 2] | 0 : u & 255;
  if ((c[n >> 2] | 0) == (v + C | 0)) {
   ir(m, C << 1, 0);
   if ((a[f >> 0] | 0) < 0) H = (c[r >> 2] & 2147483647) + -1 | 0; else H = 10;
   ir(m, H, 0);
   u = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
   c[n >> 2] = u + C;
   I = u;
  } else I = v;
  u = x + 12 | 0;
  C = c[u >> 2] | 0;
  J = x + 16 | 0;
  if ((C | 0) == (c[J >> 2] | 0)) K = pc[c[(c[x >> 2] | 0) + 36 >> 2] & 63](x) | 0; else K = rg(a[C >> 0] | 0) | 0;
  if (Li(K & 255, 16, I, n, q, 0, k, o, p, j) | 0) {
   F = I;
   G = E;
   break;
  }
  C = c[u >> 2] | 0;
  if ((C | 0) == (c[J >> 2] | 0)) {
   pc[c[(c[x >> 2] | 0) + 40 >> 2] & 63](x) | 0;
   v = I;
   s = x;
   w = y;
   continue;
  } else {
   c[u >> 2] = C + 1;
   rg(a[C >> 0] | 0) | 0;
   v = I;
   s = x;
   w = y;
   continue;
  }
 }
 ir(m, (c[n >> 2] | 0) - F | 0, 0);
 F = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 f = Mi() | 0;
 c[i >> 2] = h;
 if ((Ni(F, f, 16001, i) | 0) != 1) c[g >> 2] = 4;
 if (!x) L = 1; else {
  i = c[x + 12 >> 2] | 0;
  if ((i | 0) == (c[x + 16 >> 2] | 0)) M = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](x) | 0; else M = rg(a[i >> 0] | 0) | 0;
  if (ph(M, qg() | 0) | 0) {
   c[d >> 2] = 0;
   L = 1;
  } else L = 0;
 }
 do if (!G) B = 49; else {
  M = c[G + 12 >> 2] | 0;
  if ((M | 0) == (c[G + 16 >> 2] | 0)) N = pc[c[(c[G >> 2] | 0) + 36 >> 2] & 63](G) | 0; else N = rg(a[M >> 0] | 0) | 0;
  if (ph(N, qg() | 0) | 0) {
   c[e >> 2] = 0;
   B = 49;
   break;
  } else if (L) break; else {
   B = 51;
   break;
  }
 } while (0);
 if ((B | 0) == 49) if (L) B = 51;
 if ((B | 0) == 51) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(m);
 br(k);
 l = b;
 return g | 0;
}

function Cj(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0;
 b = l;
 l = l + 320 | 0;
 i = b;
 j = b + 208 | 0;
 k = b + 192 | 0;
 m = b + 180 | 0;
 n = b + 176 | 0;
 o = b + 16 | 0;
 p = b + 8 | 0;
 q = b + 4 | 0;
 c[k >> 2] = 0;
 c[k + 4 >> 2] = 0;
 c[k + 8 >> 2] = 0;
 r = 0;
 while (1) {
  if ((r | 0) == 3) break;
  c[k + (r << 2) >> 2] = 0;
  r = r + 1 | 0;
 }
 qh(m, f);
 f = Ji(m, 23140) | 0;
 sc[c[(c[f >> 2] | 0) + 48 >> 2] & 7](f, 15968, 15994, j) | 0;
 Ki(m);
 c[m >> 2] = 0;
 c[m + 4 >> 2] = 0;
 c[m + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[m + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = m + 11 | 0;
 r = m + 8 | 0;
 if ((a[f >> 0] | 0) < 0) s = (c[r >> 2] & 2147483647) + -1 | 0; else s = 10;
 ir(m, s, 0);
 s = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 c[n >> 2] = s;
 c[p >> 2] = o;
 c[q >> 2] = 0;
 t = m + 4 | 0;
 u = c[d >> 2] | 0;
 v = s;
 s = u;
 w = u;
 a : while (1) {
  if (!s) {
   x = 0;
   y = 0;
   z = 1;
  } else {
   u = c[s + 12 >> 2] | 0;
   if ((u | 0) == (c[s + 16 >> 2] | 0)) A = pc[c[(c[s >> 2] | 0) + 36 >> 2] & 63](s) | 0; else A = Jg(c[u >> 2] | 0) | 0;
   if (rh(A, Ig() | 0) | 0) {
    c[d >> 2] = 0;
    x = 0;
    y = 0;
    z = 1;
   } else {
    x = s;
    y = w;
    z = 0;
   }
  }
  u = c[e >> 2] | 0;
  do if (!u) B = 22; else {
   C = c[u + 12 >> 2] | 0;
   if ((C | 0) == (c[u + 16 >> 2] | 0)) D = pc[c[(c[u >> 2] | 0) + 36 >> 2] & 63](u) | 0; else D = Jg(c[C >> 2] | 0) | 0;
   if (rh(D, Ig() | 0) | 0) {
    c[e >> 2] = 0;
    B = 22;
    break;
   } else if (z) {
    E = u;
    break;
   } else {
    F = v;
    G = u;
    break a;
   }
  } while (0);
  if ((B | 0) == 22) {
   B = 0;
   if (z) {
    F = v;
    G = 0;
    break;
   } else E = 0;
  }
  u = a[f >> 0] | 0;
  C = u << 24 >> 24 < 0 ? c[t >> 2] | 0 : u & 255;
  if ((c[n >> 2] | 0) == (v + C | 0)) {
   ir(m, C << 1, 0);
   if ((a[f >> 0] | 0) < 0) H = (c[r >> 2] & 2147483647) + -1 | 0; else H = 10;
   ir(m, H, 0);
   u = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
   c[n >> 2] = u + C;
   I = u;
  } else I = v;
  u = x + 12 | 0;
  C = c[u >> 2] | 0;
  J = x + 16 | 0;
  if ((C | 0) == (c[J >> 2] | 0)) K = pc[c[(c[x >> 2] | 0) + 36 >> 2] & 63](x) | 0; else K = Jg(c[C >> 2] | 0) | 0;
  if (Dj(K, 16, I, n, q, 0, k, o, p, j) | 0) {
   F = I;
   G = E;
   break;
  }
  C = c[u >> 2] | 0;
  if ((C | 0) == (c[J >> 2] | 0)) {
   pc[c[(c[x >> 2] | 0) + 40 >> 2] & 63](x) | 0;
   v = I;
   s = x;
   w = y;
   continue;
  } else {
   c[u >> 2] = C + 4;
   Jg(c[C >> 2] | 0) | 0;
   v = I;
   s = x;
   w = y;
   continue;
  }
 }
 ir(m, (c[n >> 2] | 0) - F | 0, 0);
 F = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 f = Mi() | 0;
 c[i >> 2] = h;
 if ((Ni(F, f, 16001, i) | 0) != 1) c[g >> 2] = 4;
 if (!x) L = 1; else {
  i = c[x + 12 >> 2] | 0;
  if ((i | 0) == (c[x + 16 >> 2] | 0)) M = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](x) | 0; else M = Jg(c[i >> 2] | 0) | 0;
  if (rh(M, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   L = 1;
  } else L = 0;
 }
 do if (!G) B = 49; else {
  M = c[G + 12 >> 2] | 0;
  if ((M | 0) == (c[G + 16 >> 2] | 0)) N = pc[c[(c[G >> 2] | 0) + 36 >> 2] & 63](G) | 0; else N = Jg(c[M >> 2] | 0) | 0;
  if (rh(N, Ig() | 0) | 0) {
   c[e >> 2] = 0;
   B = 49;
   break;
  } else if (L) break; else {
   B = 51;
   break;
  }
 } while (0);
 if ((B | 0) == 49) if (L) B = 51;
 if ((B | 0) == 51) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(m);
 br(k);
 l = b;
 return g | 0;
}

function lj(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0;
 b = l;
 l = l + 224 | 0;
 i = b + 198 | 0;
 j = b + 196 | 0;
 k = b + 184 | 0;
 m = b + 172 | 0;
 n = b + 168 | 0;
 o = b + 8 | 0;
 p = b + 4 | 0;
 q = b;
 r = cj(f) | 0;
 dj(k, f, i, j);
 c[m >> 2] = 0;
 c[m + 4 >> 2] = 0;
 c[m + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[m + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = m + 11 | 0;
 s = m + 8 | 0;
 if ((a[f >> 0] | 0) < 0) t = (c[s >> 2] & 2147483647) + -1 | 0; else t = 10;
 ir(m, t, 0);
 t = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 c[n >> 2] = t;
 c[p >> 2] = o;
 c[q >> 2] = 0;
 u = m + 4 | 0;
 v = c[d >> 2] | 0;
 w = t;
 t = v;
 x = v;
 a : while (1) {
  if (!t) {
   y = 0;
   A = 0;
   B = 1;
  } else {
   v = c[t + 12 >> 2] | 0;
   if ((v | 0) == (c[t + 16 >> 2] | 0)) C = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](t) | 0; else C = rg(a[v >> 0] | 0) | 0;
   if (ph(C, qg() | 0) | 0) {
    c[d >> 2] = 0;
    y = 0;
    A = 0;
    B = 1;
   } else {
    y = t;
    A = x;
    B = 0;
   }
  }
  v = c[e >> 2] | 0;
  do if (!v) D = 19; else {
   E = c[v + 12 >> 2] | 0;
   if ((E | 0) == (c[v + 16 >> 2] | 0)) F = pc[c[(c[v >> 2] | 0) + 36 >> 2] & 63](v) | 0; else F = rg(a[E >> 0] | 0) | 0;
   if (ph(F, qg() | 0) | 0) {
    c[e >> 2] = 0;
    D = 19;
    break;
   } else if (B) {
    G = v;
    break;
   } else {
    H = w;
    I = v;
    break a;
   }
  } while (0);
  if ((D | 0) == 19) {
   D = 0;
   if (B) {
    H = w;
    I = 0;
    break;
   } else G = 0;
  }
  v = a[f >> 0] | 0;
  E = v << 24 >> 24 < 0 ? c[u >> 2] | 0 : v & 255;
  if ((c[n >> 2] | 0) == (w + E | 0)) {
   ir(m, E << 1, 0);
   if ((a[f >> 0] | 0) < 0) J = (c[s >> 2] & 2147483647) + -1 | 0; else J = 10;
   ir(m, J, 0);
   v = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
   c[n >> 2] = v + E;
   K = v;
  } else K = w;
  v = y + 12 | 0;
  E = c[v >> 2] | 0;
  L = y + 16 | 0;
  if ((E | 0) == (c[L >> 2] | 0)) M = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else M = rg(a[E >> 0] | 0) | 0;
  if (Li(M & 255, r, K, n, q, a[j >> 0] | 0, k, o, p, i) | 0) {
   H = K;
   I = G;
   break;
  }
  E = c[v >> 2] | 0;
  if ((E | 0) == (c[L >> 2] | 0)) {
   pc[c[(c[y >> 2] | 0) + 40 >> 2] & 63](y) | 0;
   w = K;
   t = y;
   x = A;
   continue;
  } else {
   c[v >> 2] = E + 1;
   rg(a[E >> 0] | 0) | 0;
   w = K;
   t = y;
   x = A;
   continue;
  }
 }
 x = a[k + 11 >> 0] | 0;
 if ((x << 24 >> 24 < 0 ? c[k + 4 >> 2] | 0 : x & 255) | 0) {
  x = c[p >> 2] | 0;
  if ((x - o | 0) < 160) {
   t = c[q >> 2] | 0;
   c[p >> 2] = x + 4;
   c[x >> 2] = t;
  }
 }
 t = mj(H, c[n >> 2] | 0, g, r) | 0;
 r = h;
 c[r >> 2] = t;
 c[r + 4 >> 2] = z;
 Yi(k, o, c[p >> 2] | 0, g);
 if (!y) N = 1; else {
  p = c[y + 12 >> 2] | 0;
  if ((p | 0) == (c[y + 16 >> 2] | 0)) O = pc[c[(c[A >> 2] | 0) + 36 >> 2] & 63](y) | 0; else O = rg(a[p >> 0] | 0) | 0;
  if (ph(O, qg() | 0) | 0) {
   c[d >> 2] = 0;
   N = 1;
  } else N = 0;
 }
 do if (!I) D = 47; else {
  O = c[I + 12 >> 2] | 0;
  if ((O | 0) == (c[I + 16 >> 2] | 0)) P = pc[c[(c[I >> 2] | 0) + 36 >> 2] & 63](I) | 0; else P = rg(a[O >> 0] | 0) | 0;
  if (ph(P, qg() | 0) | 0) {
   c[e >> 2] = 0;
   D = 47;
   break;
  } else if (N) break; else {
   D = 49;
   break;
  }
 } while (0);
 if ((D | 0) == 47) if (N) D = 49;
 if ((D | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(m);
 br(k);
 l = b;
 return g | 0;
}

function bj(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0;
 b = l;
 l = l + 224 | 0;
 i = b + 198 | 0;
 j = b + 196 | 0;
 k = b + 184 | 0;
 m = b + 172 | 0;
 n = b + 168 | 0;
 o = b + 8 | 0;
 p = b + 4 | 0;
 q = b;
 r = cj(f) | 0;
 dj(k, f, i, j);
 c[m >> 2] = 0;
 c[m + 4 >> 2] = 0;
 c[m + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[m + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = m + 11 | 0;
 s = m + 8 | 0;
 if ((a[f >> 0] | 0) < 0) t = (c[s >> 2] & 2147483647) + -1 | 0; else t = 10;
 ir(m, t, 0);
 t = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 c[n >> 2] = t;
 c[p >> 2] = o;
 c[q >> 2] = 0;
 u = m + 4 | 0;
 v = c[d >> 2] | 0;
 w = t;
 t = v;
 x = v;
 a : while (1) {
  if (!t) {
   y = 0;
   A = 0;
   B = 1;
  } else {
   v = c[t + 12 >> 2] | 0;
   if ((v | 0) == (c[t + 16 >> 2] | 0)) C = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](t) | 0; else C = rg(a[v >> 0] | 0) | 0;
   if (ph(C, qg() | 0) | 0) {
    c[d >> 2] = 0;
    y = 0;
    A = 0;
    B = 1;
   } else {
    y = t;
    A = x;
    B = 0;
   }
  }
  v = c[e >> 2] | 0;
  do if (!v) D = 19; else {
   E = c[v + 12 >> 2] | 0;
   if ((E | 0) == (c[v + 16 >> 2] | 0)) F = pc[c[(c[v >> 2] | 0) + 36 >> 2] & 63](v) | 0; else F = rg(a[E >> 0] | 0) | 0;
   if (ph(F, qg() | 0) | 0) {
    c[e >> 2] = 0;
    D = 19;
    break;
   } else if (B) {
    G = v;
    break;
   } else {
    H = w;
    I = v;
    break a;
   }
  } while (0);
  if ((D | 0) == 19) {
   D = 0;
   if (B) {
    H = w;
    I = 0;
    break;
   } else G = 0;
  }
  v = a[f >> 0] | 0;
  E = v << 24 >> 24 < 0 ? c[u >> 2] | 0 : v & 255;
  if ((c[n >> 2] | 0) == (w + E | 0)) {
   ir(m, E << 1, 0);
   if ((a[f >> 0] | 0) < 0) J = (c[s >> 2] & 2147483647) + -1 | 0; else J = 10;
   ir(m, J, 0);
   v = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
   c[n >> 2] = v + E;
   K = v;
  } else K = w;
  v = y + 12 | 0;
  E = c[v >> 2] | 0;
  L = y + 16 | 0;
  if ((E | 0) == (c[L >> 2] | 0)) M = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else M = rg(a[E >> 0] | 0) | 0;
  if (Li(M & 255, r, K, n, q, a[j >> 0] | 0, k, o, p, i) | 0) {
   H = K;
   I = G;
   break;
  }
  E = c[v >> 2] | 0;
  if ((E | 0) == (c[L >> 2] | 0)) {
   pc[c[(c[y >> 2] | 0) + 40 >> 2] & 63](y) | 0;
   w = K;
   t = y;
   x = A;
   continue;
  } else {
   c[v >> 2] = E + 1;
   rg(a[E >> 0] | 0) | 0;
   w = K;
   t = y;
   x = A;
   continue;
  }
 }
 x = a[k + 11 >> 0] | 0;
 if ((x << 24 >> 24 < 0 ? c[k + 4 >> 2] | 0 : x & 255) | 0) {
  x = c[p >> 2] | 0;
  if ((x - o | 0) < 160) {
   t = c[q >> 2] | 0;
   c[p >> 2] = x + 4;
   c[x >> 2] = t;
  }
 }
 t = ej(H, c[n >> 2] | 0, g, r) | 0;
 r = h;
 c[r >> 2] = t;
 c[r + 4 >> 2] = z;
 Yi(k, o, c[p >> 2] | 0, g);
 if (!y) N = 1; else {
  p = c[y + 12 >> 2] | 0;
  if ((p | 0) == (c[y + 16 >> 2] | 0)) O = pc[c[(c[A >> 2] | 0) + 36 >> 2] & 63](y) | 0; else O = rg(a[p >> 0] | 0) | 0;
  if (ph(O, qg() | 0) | 0) {
   c[d >> 2] = 0;
   N = 1;
  } else N = 0;
 }
 do if (!I) D = 47; else {
  O = c[I + 12 >> 2] | 0;
  if ((O | 0) == (c[I + 16 >> 2] | 0)) P = pc[c[(c[I >> 2] | 0) + 36 >> 2] & 63](I) | 0; else P = rg(a[O >> 0] | 0) | 0;
  if (ph(P, qg() | 0) | 0) {
   c[e >> 2] = 0;
   D = 47;
   break;
  } else if (N) break; else {
   D = 49;
   break;
  }
 } while (0);
 if ((D | 0) == 47) if (N) D = 49;
 if ((D | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(m);
 br(k);
 l = b;
 return g | 0;
}

function Oj(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0;
 b = l;
 l = l + 304 | 0;
 i = b + 200 | 0;
 j = b + 196 | 0;
 k = b + 184 | 0;
 m = b + 172 | 0;
 n = b + 168 | 0;
 o = b + 8 | 0;
 p = b + 4 | 0;
 q = b;
 r = cj(f) | 0;
 Kj(k, f, i, j);
 c[m >> 2] = 0;
 c[m + 4 >> 2] = 0;
 c[m + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[m + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = m + 11 | 0;
 s = m + 8 | 0;
 if ((a[f >> 0] | 0) < 0) t = (c[s >> 2] & 2147483647) + -1 | 0; else t = 10;
 ir(m, t, 0);
 t = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 c[n >> 2] = t;
 c[p >> 2] = o;
 c[q >> 2] = 0;
 u = m + 4 | 0;
 v = c[d >> 2] | 0;
 w = t;
 t = v;
 x = v;
 a : while (1) {
  if (!t) {
   y = 0;
   A = 0;
   B = 1;
  } else {
   v = c[t + 12 >> 2] | 0;
   if ((v | 0) == (c[t + 16 >> 2] | 0)) C = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](t) | 0; else C = Jg(c[v >> 2] | 0) | 0;
   if (rh(C, Ig() | 0) | 0) {
    c[d >> 2] = 0;
    y = 0;
    A = 0;
    B = 1;
   } else {
    y = t;
    A = x;
    B = 0;
   }
  }
  v = c[e >> 2] | 0;
  do if (!v) D = 19; else {
   E = c[v + 12 >> 2] | 0;
   if ((E | 0) == (c[v + 16 >> 2] | 0)) F = pc[c[(c[v >> 2] | 0) + 36 >> 2] & 63](v) | 0; else F = Jg(c[E >> 2] | 0) | 0;
   if (rh(F, Ig() | 0) | 0) {
    c[e >> 2] = 0;
    D = 19;
    break;
   } else if (B) {
    G = v;
    break;
   } else {
    H = w;
    I = v;
    break a;
   }
  } while (0);
  if ((D | 0) == 19) {
   D = 0;
   if (B) {
    H = w;
    I = 0;
    break;
   } else G = 0;
  }
  v = a[f >> 0] | 0;
  E = v << 24 >> 24 < 0 ? c[u >> 2] | 0 : v & 255;
  if ((c[n >> 2] | 0) == (w + E | 0)) {
   ir(m, E << 1, 0);
   if ((a[f >> 0] | 0) < 0) J = (c[s >> 2] & 2147483647) + -1 | 0; else J = 10;
   ir(m, J, 0);
   v = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
   c[n >> 2] = v + E;
   K = v;
  } else K = w;
  v = y + 12 | 0;
  E = c[v >> 2] | 0;
  L = y + 16 | 0;
  if ((E | 0) == (c[L >> 2] | 0)) M = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else M = Jg(c[E >> 2] | 0) | 0;
  if (Dj(M, r, K, n, q, c[j >> 2] | 0, k, o, p, i) | 0) {
   H = K;
   I = G;
   break;
  }
  E = c[v >> 2] | 0;
  if ((E | 0) == (c[L >> 2] | 0)) {
   pc[c[(c[y >> 2] | 0) + 40 >> 2] & 63](y) | 0;
   w = K;
   t = y;
   x = A;
   continue;
  } else {
   c[v >> 2] = E + 4;
   Jg(c[E >> 2] | 0) | 0;
   w = K;
   t = y;
   x = A;
   continue;
  }
 }
 x = a[k + 11 >> 0] | 0;
 if ((x << 24 >> 24 < 0 ? c[k + 4 >> 2] | 0 : x & 255) | 0) {
  x = c[p >> 2] | 0;
  if ((x - o | 0) < 160) {
   t = c[q >> 2] | 0;
   c[p >> 2] = x + 4;
   c[x >> 2] = t;
  }
 }
 t = mj(H, c[n >> 2] | 0, g, r) | 0;
 r = h;
 c[r >> 2] = t;
 c[r + 4 >> 2] = z;
 Yi(k, o, c[p >> 2] | 0, g);
 if (!y) N = 1; else {
  p = c[y + 12 >> 2] | 0;
  if ((p | 0) == (c[y + 16 >> 2] | 0)) O = pc[c[(c[A >> 2] | 0) + 36 >> 2] & 63](y) | 0; else O = Jg(c[p >> 2] | 0) | 0;
  if (rh(O, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   N = 1;
  } else N = 0;
 }
 do if (!I) D = 47; else {
  O = c[I + 12 >> 2] | 0;
  if ((O | 0) == (c[I + 16 >> 2] | 0)) P = pc[c[(c[I >> 2] | 0) + 36 >> 2] & 63](I) | 0; else P = Jg(c[O >> 2] | 0) | 0;
  if (rh(P, Ig() | 0) | 0) {
   c[e >> 2] = 0;
   D = 47;
   break;
  } else if (N) break; else {
   D = 49;
   break;
  }
 } while (0);
 if ((D | 0) == 47) if (N) D = 49;
 if ((D | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(m);
 br(k);
 l = b;
 return g | 0;
}

function Jj(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0;
 b = l;
 l = l + 304 | 0;
 i = b + 200 | 0;
 j = b + 196 | 0;
 k = b + 184 | 0;
 m = b + 172 | 0;
 n = b + 168 | 0;
 o = b + 8 | 0;
 p = b + 4 | 0;
 q = b;
 r = cj(f) | 0;
 Kj(k, f, i, j);
 c[m >> 2] = 0;
 c[m + 4 >> 2] = 0;
 c[m + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[m + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = m + 11 | 0;
 s = m + 8 | 0;
 if ((a[f >> 0] | 0) < 0) t = (c[s >> 2] & 2147483647) + -1 | 0; else t = 10;
 ir(m, t, 0);
 t = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 c[n >> 2] = t;
 c[p >> 2] = o;
 c[q >> 2] = 0;
 u = m + 4 | 0;
 v = c[d >> 2] | 0;
 w = t;
 t = v;
 x = v;
 a : while (1) {
  if (!t) {
   y = 0;
   A = 0;
   B = 1;
  } else {
   v = c[t + 12 >> 2] | 0;
   if ((v | 0) == (c[t + 16 >> 2] | 0)) C = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](t) | 0; else C = Jg(c[v >> 2] | 0) | 0;
   if (rh(C, Ig() | 0) | 0) {
    c[d >> 2] = 0;
    y = 0;
    A = 0;
    B = 1;
   } else {
    y = t;
    A = x;
    B = 0;
   }
  }
  v = c[e >> 2] | 0;
  do if (!v) D = 19; else {
   E = c[v + 12 >> 2] | 0;
   if ((E | 0) == (c[v + 16 >> 2] | 0)) F = pc[c[(c[v >> 2] | 0) + 36 >> 2] & 63](v) | 0; else F = Jg(c[E >> 2] | 0) | 0;
   if (rh(F, Ig() | 0) | 0) {
    c[e >> 2] = 0;
    D = 19;
    break;
   } else if (B) {
    G = v;
    break;
   } else {
    H = w;
    I = v;
    break a;
   }
  } while (0);
  if ((D | 0) == 19) {
   D = 0;
   if (B) {
    H = w;
    I = 0;
    break;
   } else G = 0;
  }
  v = a[f >> 0] | 0;
  E = v << 24 >> 24 < 0 ? c[u >> 2] | 0 : v & 255;
  if ((c[n >> 2] | 0) == (w + E | 0)) {
   ir(m, E << 1, 0);
   if ((a[f >> 0] | 0) < 0) J = (c[s >> 2] & 2147483647) + -1 | 0; else J = 10;
   ir(m, J, 0);
   v = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
   c[n >> 2] = v + E;
   K = v;
  } else K = w;
  v = y + 12 | 0;
  E = c[v >> 2] | 0;
  L = y + 16 | 0;
  if ((E | 0) == (c[L >> 2] | 0)) M = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else M = Jg(c[E >> 2] | 0) | 0;
  if (Dj(M, r, K, n, q, c[j >> 2] | 0, k, o, p, i) | 0) {
   H = K;
   I = G;
   break;
  }
  E = c[v >> 2] | 0;
  if ((E | 0) == (c[L >> 2] | 0)) {
   pc[c[(c[y >> 2] | 0) + 40 >> 2] & 63](y) | 0;
   w = K;
   t = y;
   x = A;
   continue;
  } else {
   c[v >> 2] = E + 4;
   Jg(c[E >> 2] | 0) | 0;
   w = K;
   t = y;
   x = A;
   continue;
  }
 }
 x = a[k + 11 >> 0] | 0;
 if ((x << 24 >> 24 < 0 ? c[k + 4 >> 2] | 0 : x & 255) | 0) {
  x = c[p >> 2] | 0;
  if ((x - o | 0) < 160) {
   t = c[q >> 2] | 0;
   c[p >> 2] = x + 4;
   c[x >> 2] = t;
  }
 }
 t = ej(H, c[n >> 2] | 0, g, r) | 0;
 r = h;
 c[r >> 2] = t;
 c[r + 4 >> 2] = z;
 Yi(k, o, c[p >> 2] | 0, g);
 if (!y) N = 1; else {
  p = c[y + 12 >> 2] | 0;
  if ((p | 0) == (c[y + 16 >> 2] | 0)) O = pc[c[(c[A >> 2] | 0) + 36 >> 2] & 63](y) | 0; else O = Jg(c[p >> 2] | 0) | 0;
  if (rh(O, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   N = 1;
  } else N = 0;
 }
 do if (!I) D = 47; else {
  O = c[I + 12 >> 2] | 0;
  if ((O | 0) == (c[I + 16 >> 2] | 0)) P = pc[c[(c[I >> 2] | 0) + 36 >> 2] & 63](I) | 0; else P = Jg(c[O >> 2] | 0) | 0;
  if (rh(P, Ig() | 0) | 0) {
   c[e >> 2] = 0;
   D = 47;
   break;
  } else if (N) break; else {
   D = 49;
   break;
  }
 } while (0);
 if ((D | 0) == 47) if (N) D = 49;
 if ((D | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(m);
 br(k);
 l = b;
 return g | 0;
}

function nj(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0;
 b = l;
 l = l + 224 | 0;
 i = b + 198 | 0;
 j = b + 196 | 0;
 k = b + 184 | 0;
 m = b + 172 | 0;
 n = b + 168 | 0;
 o = b + 8 | 0;
 p = b + 4 | 0;
 q = b;
 r = cj(f) | 0;
 dj(k, f, i, j);
 c[m >> 2] = 0;
 c[m + 4 >> 2] = 0;
 c[m + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[m + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = m + 11 | 0;
 s = m + 8 | 0;
 if ((a[f >> 0] | 0) < 0) t = (c[s >> 2] & 2147483647) + -1 | 0; else t = 10;
 ir(m, t, 0);
 t = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 c[n >> 2] = t;
 c[p >> 2] = o;
 c[q >> 2] = 0;
 u = m + 4 | 0;
 v = c[d >> 2] | 0;
 w = t;
 t = v;
 x = v;
 a : while (1) {
  if (!t) {
   y = 0;
   z = 0;
   A = 1;
  } else {
   v = c[t + 12 >> 2] | 0;
   if ((v | 0) == (c[t + 16 >> 2] | 0)) B = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](t) | 0; else B = rg(a[v >> 0] | 0) | 0;
   if (ph(B, qg() | 0) | 0) {
    c[d >> 2] = 0;
    y = 0;
    z = 0;
    A = 1;
   } else {
    y = t;
    z = x;
    A = 0;
   }
  }
  v = c[e >> 2] | 0;
  do if (!v) C = 19; else {
   D = c[v + 12 >> 2] | 0;
   if ((D | 0) == (c[v + 16 >> 2] | 0)) E = pc[c[(c[v >> 2] | 0) + 36 >> 2] & 63](v) | 0; else E = rg(a[D >> 0] | 0) | 0;
   if (ph(E, qg() | 0) | 0) {
    c[e >> 2] = 0;
    C = 19;
    break;
   } else if (A) {
    F = v;
    break;
   } else {
    G = w;
    H = v;
    break a;
   }
  } while (0);
  if ((C | 0) == 19) {
   C = 0;
   if (A) {
    G = w;
    H = 0;
    break;
   } else F = 0;
  }
  v = a[f >> 0] | 0;
  D = v << 24 >> 24 < 0 ? c[u >> 2] | 0 : v & 255;
  if ((c[n >> 2] | 0) == (w + D | 0)) {
   ir(m, D << 1, 0);
   if ((a[f >> 0] | 0) < 0) I = (c[s >> 2] & 2147483647) + -1 | 0; else I = 10;
   ir(m, I, 0);
   v = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
   c[n >> 2] = v + D;
   J = v;
  } else J = w;
  v = y + 12 | 0;
  D = c[v >> 2] | 0;
  K = y + 16 | 0;
  if ((D | 0) == (c[K >> 2] | 0)) L = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else L = rg(a[D >> 0] | 0) | 0;
  if (Li(L & 255, r, J, n, q, a[j >> 0] | 0, k, o, p, i) | 0) {
   G = J;
   H = F;
   break;
  }
  D = c[v >> 2] | 0;
  if ((D | 0) == (c[K >> 2] | 0)) {
   pc[c[(c[y >> 2] | 0) + 40 >> 2] & 63](y) | 0;
   w = J;
   t = y;
   x = z;
   continue;
  } else {
   c[v >> 2] = D + 1;
   rg(a[D >> 0] | 0) | 0;
   w = J;
   t = y;
   x = z;
   continue;
  }
 }
 x = a[k + 11 >> 0] | 0;
 if ((x << 24 >> 24 < 0 ? c[k + 4 >> 2] | 0 : x & 255) | 0) {
  x = c[p >> 2] | 0;
  if ((x - o | 0) < 160) {
   t = c[q >> 2] | 0;
   c[p >> 2] = x + 4;
   c[x >> 2] = t;
  }
 }
 c[h >> 2] = oj(G, c[n >> 2] | 0, g, r) | 0;
 Yi(k, o, c[p >> 2] | 0, g);
 if (!y) M = 1; else {
  p = c[y + 12 >> 2] | 0;
  if ((p | 0) == (c[y + 16 >> 2] | 0)) N = pc[c[(c[z >> 2] | 0) + 36 >> 2] & 63](y) | 0; else N = rg(a[p >> 0] | 0) | 0;
  if (ph(N, qg() | 0) | 0) {
   c[d >> 2] = 0;
   M = 1;
  } else M = 0;
 }
 do if (!H) C = 47; else {
  N = c[H + 12 >> 2] | 0;
  if ((N | 0) == (c[H + 16 >> 2] | 0)) O = pc[c[(c[H >> 2] | 0) + 36 >> 2] & 63](H) | 0; else O = rg(a[N >> 0] | 0) | 0;
  if (ph(O, qg() | 0) | 0) {
   c[e >> 2] = 0;
   C = 47;
   break;
  } else if (M) break; else {
   C = 49;
   break;
  }
 } while (0);
 if ((C | 0) == 47) if (M) C = 49;
 if ((C | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(m);
 br(k);
 l = b;
 return g | 0;
}

function jj(d, e, f, g, h, i) {
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0;
 d = l;
 l = l + 224 | 0;
 j = d + 198 | 0;
 k = d + 196 | 0;
 m = d + 184 | 0;
 n = d + 172 | 0;
 o = d + 168 | 0;
 p = d + 8 | 0;
 q = d + 4 | 0;
 r = d;
 s = cj(g) | 0;
 dj(m, g, j, k);
 c[n >> 2] = 0;
 c[n + 4 >> 2] = 0;
 c[n + 8 >> 2] = 0;
 g = 0;
 while (1) {
  if ((g | 0) == 3) break;
  c[n + (g << 2) >> 2] = 0;
  g = g + 1 | 0;
 }
 g = n + 11 | 0;
 t = n + 8 | 0;
 if ((a[g >> 0] | 0) < 0) u = (c[t >> 2] & 2147483647) + -1 | 0; else u = 10;
 ir(n, u, 0);
 u = (a[g >> 0] | 0) < 0 ? c[n >> 2] | 0 : n;
 c[o >> 2] = u;
 c[q >> 2] = p;
 c[r >> 2] = 0;
 v = n + 4 | 0;
 w = c[e >> 2] | 0;
 x = u;
 u = w;
 y = w;
 a : while (1) {
  if (!u) {
   z = 0;
   A = 0;
   B = 1;
  } else {
   w = c[u + 12 >> 2] | 0;
   if ((w | 0) == (c[u + 16 >> 2] | 0)) C = pc[c[(c[u >> 2] | 0) + 36 >> 2] & 63](u) | 0; else C = rg(a[w >> 0] | 0) | 0;
   if (ph(C, qg() | 0) | 0) {
    c[e >> 2] = 0;
    z = 0;
    A = 0;
    B = 1;
   } else {
    z = u;
    A = y;
    B = 0;
   }
  }
  w = c[f >> 2] | 0;
  do if (!w) D = 19; else {
   E = c[w + 12 >> 2] | 0;
   if ((E | 0) == (c[w + 16 >> 2] | 0)) F = pc[c[(c[w >> 2] | 0) + 36 >> 2] & 63](w) | 0; else F = rg(a[E >> 0] | 0) | 0;
   if (ph(F, qg() | 0) | 0) {
    c[f >> 2] = 0;
    D = 19;
    break;
   } else if (B) {
    G = w;
    break;
   } else {
    H = x;
    I = w;
    break a;
   }
  } while (0);
  if ((D | 0) == 19) {
   D = 0;
   if (B) {
    H = x;
    I = 0;
    break;
   } else G = 0;
  }
  w = a[g >> 0] | 0;
  E = w << 24 >> 24 < 0 ? c[v >> 2] | 0 : w & 255;
  if ((c[o >> 2] | 0) == (x + E | 0)) {
   ir(n, E << 1, 0);
   if ((a[g >> 0] | 0) < 0) J = (c[t >> 2] & 2147483647) + -1 | 0; else J = 10;
   ir(n, J, 0);
   w = (a[g >> 0] | 0) < 0 ? c[n >> 2] | 0 : n;
   c[o >> 2] = w + E;
   K = w;
  } else K = x;
  w = z + 12 | 0;
  E = c[w >> 2] | 0;
  L = z + 16 | 0;
  if ((E | 0) == (c[L >> 2] | 0)) M = pc[c[(c[z >> 2] | 0) + 36 >> 2] & 63](z) | 0; else M = rg(a[E >> 0] | 0) | 0;
  if (Li(M & 255, s, K, o, r, a[k >> 0] | 0, m, p, q, j) | 0) {
   H = K;
   I = G;
   break;
  }
  E = c[w >> 2] | 0;
  if ((E | 0) == (c[L >> 2] | 0)) {
   pc[c[(c[z >> 2] | 0) + 40 >> 2] & 63](z) | 0;
   x = K;
   u = z;
   y = A;
   continue;
  } else {
   c[w >> 2] = E + 1;
   rg(a[E >> 0] | 0) | 0;
   x = K;
   u = z;
   y = A;
   continue;
  }
 }
 y = a[m + 11 >> 0] | 0;
 if ((y << 24 >> 24 < 0 ? c[m + 4 >> 2] | 0 : y & 255) | 0) {
  y = c[q >> 2] | 0;
  if ((y - p | 0) < 160) {
   u = c[r >> 2] | 0;
   c[q >> 2] = y + 4;
   c[y >> 2] = u;
  }
 }
 b[i >> 1] = kj(H, c[o >> 2] | 0, h, s) | 0;
 Yi(m, p, c[q >> 2] | 0, h);
 if (!z) N = 1; else {
  q = c[z + 12 >> 2] | 0;
  if ((q | 0) == (c[z + 16 >> 2] | 0)) O = pc[c[(c[A >> 2] | 0) + 36 >> 2] & 63](z) | 0; else O = rg(a[q >> 0] | 0) | 0;
  if (ph(O, qg() | 0) | 0) {
   c[e >> 2] = 0;
   N = 1;
  } else N = 0;
 }
 do if (!I) D = 47; else {
  O = c[I + 12 >> 2] | 0;
  if ((O | 0) == (c[I + 16 >> 2] | 0)) P = pc[c[(c[I >> 2] | 0) + 36 >> 2] & 63](I) | 0; else P = rg(a[O >> 0] | 0) | 0;
  if (ph(P, qg() | 0) | 0) {
   c[f >> 2] = 0;
   D = 47;
   break;
  } else if (N) break; else {
   D = 49;
   break;
  }
 } while (0);
 if ((D | 0) == 47) if (N) D = 49;
 if ((D | 0) == 49) c[h >> 2] = c[h >> 2] | 2;
 h = c[e >> 2] | 0;
 br(n);
 br(m);
 l = d;
 return h | 0;
}

function hj(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0;
 b = l;
 l = l + 224 | 0;
 i = b + 198 | 0;
 j = b + 196 | 0;
 k = b + 184 | 0;
 m = b + 172 | 0;
 n = b + 168 | 0;
 o = b + 8 | 0;
 p = b + 4 | 0;
 q = b;
 r = cj(f) | 0;
 dj(k, f, i, j);
 c[m >> 2] = 0;
 c[m + 4 >> 2] = 0;
 c[m + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[m + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = m + 11 | 0;
 s = m + 8 | 0;
 if ((a[f >> 0] | 0) < 0) t = (c[s >> 2] & 2147483647) + -1 | 0; else t = 10;
 ir(m, t, 0);
 t = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 c[n >> 2] = t;
 c[p >> 2] = o;
 c[q >> 2] = 0;
 u = m + 4 | 0;
 v = c[d >> 2] | 0;
 w = t;
 t = v;
 x = v;
 a : while (1) {
  if (!t) {
   y = 0;
   z = 0;
   A = 1;
  } else {
   v = c[t + 12 >> 2] | 0;
   if ((v | 0) == (c[t + 16 >> 2] | 0)) B = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](t) | 0; else B = rg(a[v >> 0] | 0) | 0;
   if (ph(B, qg() | 0) | 0) {
    c[d >> 2] = 0;
    y = 0;
    z = 0;
    A = 1;
   } else {
    y = t;
    z = x;
    A = 0;
   }
  }
  v = c[e >> 2] | 0;
  do if (!v) C = 19; else {
   D = c[v + 12 >> 2] | 0;
   if ((D | 0) == (c[v + 16 >> 2] | 0)) E = pc[c[(c[v >> 2] | 0) + 36 >> 2] & 63](v) | 0; else E = rg(a[D >> 0] | 0) | 0;
   if (ph(E, qg() | 0) | 0) {
    c[e >> 2] = 0;
    C = 19;
    break;
   } else if (A) {
    F = v;
    break;
   } else {
    G = w;
    H = v;
    break a;
   }
  } while (0);
  if ((C | 0) == 19) {
   C = 0;
   if (A) {
    G = w;
    H = 0;
    break;
   } else F = 0;
  }
  v = a[f >> 0] | 0;
  D = v << 24 >> 24 < 0 ? c[u >> 2] | 0 : v & 255;
  if ((c[n >> 2] | 0) == (w + D | 0)) {
   ir(m, D << 1, 0);
   if ((a[f >> 0] | 0) < 0) I = (c[s >> 2] & 2147483647) + -1 | 0; else I = 10;
   ir(m, I, 0);
   v = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
   c[n >> 2] = v + D;
   J = v;
  } else J = w;
  v = y + 12 | 0;
  D = c[v >> 2] | 0;
  K = y + 16 | 0;
  if ((D | 0) == (c[K >> 2] | 0)) L = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else L = rg(a[D >> 0] | 0) | 0;
  if (Li(L & 255, r, J, n, q, a[j >> 0] | 0, k, o, p, i) | 0) {
   G = J;
   H = F;
   break;
  }
  D = c[v >> 2] | 0;
  if ((D | 0) == (c[K >> 2] | 0)) {
   pc[c[(c[y >> 2] | 0) + 40 >> 2] & 63](y) | 0;
   w = J;
   t = y;
   x = z;
   continue;
  } else {
   c[v >> 2] = D + 1;
   rg(a[D >> 0] | 0) | 0;
   w = J;
   t = y;
   x = z;
   continue;
  }
 }
 x = a[k + 11 >> 0] | 0;
 if ((x << 24 >> 24 < 0 ? c[k + 4 >> 2] | 0 : x & 255) | 0) {
  x = c[p >> 2] | 0;
  if ((x - o | 0) < 160) {
   t = c[q >> 2] | 0;
   c[p >> 2] = x + 4;
   c[x >> 2] = t;
  }
 }
 c[h >> 2] = ij(G, c[n >> 2] | 0, g, r) | 0;
 Yi(k, o, c[p >> 2] | 0, g);
 if (!y) M = 1; else {
  p = c[y + 12 >> 2] | 0;
  if ((p | 0) == (c[y + 16 >> 2] | 0)) N = pc[c[(c[z >> 2] | 0) + 36 >> 2] & 63](y) | 0; else N = rg(a[p >> 0] | 0) | 0;
  if (ph(N, qg() | 0) | 0) {
   c[d >> 2] = 0;
   M = 1;
  } else M = 0;
 }
 do if (!H) C = 47; else {
  N = c[H + 12 >> 2] | 0;
  if ((N | 0) == (c[H + 16 >> 2] | 0)) O = pc[c[(c[H >> 2] | 0) + 36 >> 2] & 63](H) | 0; else O = rg(a[N >> 0] | 0) | 0;
  if (ph(O, qg() | 0) | 0) {
   c[e >> 2] = 0;
   C = 47;
   break;
  } else if (M) break; else {
   C = 49;
   break;
  }
 } while (0);
 if ((C | 0) == 47) if (M) C = 49;
 if ((C | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(m);
 br(k);
 l = b;
 return g | 0;
}

function fj(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0;
 b = l;
 l = l + 224 | 0;
 i = b + 198 | 0;
 j = b + 196 | 0;
 k = b + 184 | 0;
 m = b + 172 | 0;
 n = b + 168 | 0;
 o = b + 8 | 0;
 p = b + 4 | 0;
 q = b;
 r = cj(f) | 0;
 dj(k, f, i, j);
 c[m >> 2] = 0;
 c[m + 4 >> 2] = 0;
 c[m + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[m + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = m + 11 | 0;
 s = m + 8 | 0;
 if ((a[f >> 0] | 0) < 0) t = (c[s >> 2] & 2147483647) + -1 | 0; else t = 10;
 ir(m, t, 0);
 t = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 c[n >> 2] = t;
 c[p >> 2] = o;
 c[q >> 2] = 0;
 u = m + 4 | 0;
 v = c[d >> 2] | 0;
 w = t;
 t = v;
 x = v;
 a : while (1) {
  if (!t) {
   y = 0;
   z = 0;
   A = 1;
  } else {
   v = c[t + 12 >> 2] | 0;
   if ((v | 0) == (c[t + 16 >> 2] | 0)) B = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](t) | 0; else B = rg(a[v >> 0] | 0) | 0;
   if (ph(B, qg() | 0) | 0) {
    c[d >> 2] = 0;
    y = 0;
    z = 0;
    A = 1;
   } else {
    y = t;
    z = x;
    A = 0;
   }
  }
  v = c[e >> 2] | 0;
  do if (!v) C = 19; else {
   D = c[v + 12 >> 2] | 0;
   if ((D | 0) == (c[v + 16 >> 2] | 0)) E = pc[c[(c[v >> 2] | 0) + 36 >> 2] & 63](v) | 0; else E = rg(a[D >> 0] | 0) | 0;
   if (ph(E, qg() | 0) | 0) {
    c[e >> 2] = 0;
    C = 19;
    break;
   } else if (A) {
    F = v;
    break;
   } else {
    G = w;
    H = v;
    break a;
   }
  } while (0);
  if ((C | 0) == 19) {
   C = 0;
   if (A) {
    G = w;
    H = 0;
    break;
   } else F = 0;
  }
  v = a[f >> 0] | 0;
  D = v << 24 >> 24 < 0 ? c[u >> 2] | 0 : v & 255;
  if ((c[n >> 2] | 0) == (w + D | 0)) {
   ir(m, D << 1, 0);
   if ((a[f >> 0] | 0) < 0) I = (c[s >> 2] & 2147483647) + -1 | 0; else I = 10;
   ir(m, I, 0);
   v = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
   c[n >> 2] = v + D;
   J = v;
  } else J = w;
  v = y + 12 | 0;
  D = c[v >> 2] | 0;
  K = y + 16 | 0;
  if ((D | 0) == (c[K >> 2] | 0)) L = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else L = rg(a[D >> 0] | 0) | 0;
  if (Li(L & 255, r, J, n, q, a[j >> 0] | 0, k, o, p, i) | 0) {
   G = J;
   H = F;
   break;
  }
  D = c[v >> 2] | 0;
  if ((D | 0) == (c[K >> 2] | 0)) {
   pc[c[(c[y >> 2] | 0) + 40 >> 2] & 63](y) | 0;
   w = J;
   t = y;
   x = z;
   continue;
  } else {
   c[v >> 2] = D + 1;
   rg(a[D >> 0] | 0) | 0;
   w = J;
   t = y;
   x = z;
   continue;
  }
 }
 x = a[k + 11 >> 0] | 0;
 if ((x << 24 >> 24 < 0 ? c[k + 4 >> 2] | 0 : x & 255) | 0) {
  x = c[p >> 2] | 0;
  if ((x - o | 0) < 160) {
   t = c[q >> 2] | 0;
   c[p >> 2] = x + 4;
   c[x >> 2] = t;
  }
 }
 c[h >> 2] = gj(G, c[n >> 2] | 0, g, r) | 0;
 Yi(k, o, c[p >> 2] | 0, g);
 if (!y) M = 1; else {
  p = c[y + 12 >> 2] | 0;
  if ((p | 0) == (c[y + 16 >> 2] | 0)) N = pc[c[(c[z >> 2] | 0) + 36 >> 2] & 63](y) | 0; else N = rg(a[p >> 0] | 0) | 0;
  if (ph(N, qg() | 0) | 0) {
   c[d >> 2] = 0;
   M = 1;
  } else M = 0;
 }
 do if (!H) C = 47; else {
  N = c[H + 12 >> 2] | 0;
  if ((N | 0) == (c[H + 16 >> 2] | 0)) O = pc[c[(c[H >> 2] | 0) + 36 >> 2] & 63](H) | 0; else O = rg(a[N >> 0] | 0) | 0;
  if (ph(O, qg() | 0) | 0) {
   c[e >> 2] = 0;
   C = 47;
   break;
  } else if (M) break; else {
   C = 49;
   break;
  }
 } while (0);
 if ((C | 0) == 47) if (M) C = 49;
 if ((C | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(m);
 br(k);
 l = b;
 return g | 0;
}

function Pj(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0;
 b = l;
 l = l + 304 | 0;
 i = b + 200 | 0;
 j = b + 196 | 0;
 k = b + 184 | 0;
 m = b + 172 | 0;
 n = b + 168 | 0;
 o = b + 8 | 0;
 p = b + 4 | 0;
 q = b;
 r = cj(f) | 0;
 Kj(k, f, i, j);
 c[m >> 2] = 0;
 c[m + 4 >> 2] = 0;
 c[m + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[m + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = m + 11 | 0;
 s = m + 8 | 0;
 if ((a[f >> 0] | 0) < 0) t = (c[s >> 2] & 2147483647) + -1 | 0; else t = 10;
 ir(m, t, 0);
 t = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 c[n >> 2] = t;
 c[p >> 2] = o;
 c[q >> 2] = 0;
 u = m + 4 | 0;
 v = c[d >> 2] | 0;
 w = t;
 t = v;
 x = v;
 a : while (1) {
  if (!t) {
   y = 0;
   z = 0;
   A = 1;
  } else {
   v = c[t + 12 >> 2] | 0;
   if ((v | 0) == (c[t + 16 >> 2] | 0)) B = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](t) | 0; else B = Jg(c[v >> 2] | 0) | 0;
   if (rh(B, Ig() | 0) | 0) {
    c[d >> 2] = 0;
    y = 0;
    z = 0;
    A = 1;
   } else {
    y = t;
    z = x;
    A = 0;
   }
  }
  v = c[e >> 2] | 0;
  do if (!v) C = 19; else {
   D = c[v + 12 >> 2] | 0;
   if ((D | 0) == (c[v + 16 >> 2] | 0)) E = pc[c[(c[v >> 2] | 0) + 36 >> 2] & 63](v) | 0; else E = Jg(c[D >> 2] | 0) | 0;
   if (rh(E, Ig() | 0) | 0) {
    c[e >> 2] = 0;
    C = 19;
    break;
   } else if (A) {
    F = v;
    break;
   } else {
    G = w;
    H = v;
    break a;
   }
  } while (0);
  if ((C | 0) == 19) {
   C = 0;
   if (A) {
    G = w;
    H = 0;
    break;
   } else F = 0;
  }
  v = a[f >> 0] | 0;
  D = v << 24 >> 24 < 0 ? c[u >> 2] | 0 : v & 255;
  if ((c[n >> 2] | 0) == (w + D | 0)) {
   ir(m, D << 1, 0);
   if ((a[f >> 0] | 0) < 0) I = (c[s >> 2] & 2147483647) + -1 | 0; else I = 10;
   ir(m, I, 0);
   v = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
   c[n >> 2] = v + D;
   J = v;
  } else J = w;
  v = y + 12 | 0;
  D = c[v >> 2] | 0;
  K = y + 16 | 0;
  if ((D | 0) == (c[K >> 2] | 0)) L = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else L = Jg(c[D >> 2] | 0) | 0;
  if (Dj(L, r, J, n, q, c[j >> 2] | 0, k, o, p, i) | 0) {
   G = J;
   H = F;
   break;
  }
  D = c[v >> 2] | 0;
  if ((D | 0) == (c[K >> 2] | 0)) {
   pc[c[(c[y >> 2] | 0) + 40 >> 2] & 63](y) | 0;
   w = J;
   t = y;
   x = z;
   continue;
  } else {
   c[v >> 2] = D + 4;
   Jg(c[D >> 2] | 0) | 0;
   w = J;
   t = y;
   x = z;
   continue;
  }
 }
 x = a[k + 11 >> 0] | 0;
 if ((x << 24 >> 24 < 0 ? c[k + 4 >> 2] | 0 : x & 255) | 0) {
  x = c[p >> 2] | 0;
  if ((x - o | 0) < 160) {
   t = c[q >> 2] | 0;
   c[p >> 2] = x + 4;
   c[x >> 2] = t;
  }
 }
 c[h >> 2] = oj(G, c[n >> 2] | 0, g, r) | 0;
 Yi(k, o, c[p >> 2] | 0, g);
 if (!y) M = 1; else {
  p = c[y + 12 >> 2] | 0;
  if ((p | 0) == (c[y + 16 >> 2] | 0)) N = pc[c[(c[z >> 2] | 0) + 36 >> 2] & 63](y) | 0; else N = Jg(c[p >> 2] | 0) | 0;
  if (rh(N, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   M = 1;
  } else M = 0;
 }
 do if (!H) C = 47; else {
  N = c[H + 12 >> 2] | 0;
  if ((N | 0) == (c[H + 16 >> 2] | 0)) O = pc[c[(c[H >> 2] | 0) + 36 >> 2] & 63](H) | 0; else O = Jg(c[N >> 2] | 0) | 0;
  if (rh(O, Ig() | 0) | 0) {
   c[e >> 2] = 0;
   C = 47;
   break;
  } else if (M) break; else {
   C = 49;
   break;
  }
 } while (0);
 if ((C | 0) == 47) if (M) C = 49;
 if ((C | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(m);
 br(k);
 l = b;
 return g | 0;
}

function Nj(d, e, f, g, h, i) {
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0, P = 0;
 d = l;
 l = l + 304 | 0;
 j = d + 200 | 0;
 k = d + 196 | 0;
 m = d + 184 | 0;
 n = d + 172 | 0;
 o = d + 168 | 0;
 p = d + 8 | 0;
 q = d + 4 | 0;
 r = d;
 s = cj(g) | 0;
 Kj(m, g, j, k);
 c[n >> 2] = 0;
 c[n + 4 >> 2] = 0;
 c[n + 8 >> 2] = 0;
 g = 0;
 while (1) {
  if ((g | 0) == 3) break;
  c[n + (g << 2) >> 2] = 0;
  g = g + 1 | 0;
 }
 g = n + 11 | 0;
 t = n + 8 | 0;
 if ((a[g >> 0] | 0) < 0) u = (c[t >> 2] & 2147483647) + -1 | 0; else u = 10;
 ir(n, u, 0);
 u = (a[g >> 0] | 0) < 0 ? c[n >> 2] | 0 : n;
 c[o >> 2] = u;
 c[q >> 2] = p;
 c[r >> 2] = 0;
 v = n + 4 | 0;
 w = c[e >> 2] | 0;
 x = u;
 u = w;
 y = w;
 a : while (1) {
  if (!u) {
   z = 0;
   A = 0;
   B = 1;
  } else {
   w = c[u + 12 >> 2] | 0;
   if ((w | 0) == (c[u + 16 >> 2] | 0)) C = pc[c[(c[u >> 2] | 0) + 36 >> 2] & 63](u) | 0; else C = Jg(c[w >> 2] | 0) | 0;
   if (rh(C, Ig() | 0) | 0) {
    c[e >> 2] = 0;
    z = 0;
    A = 0;
    B = 1;
   } else {
    z = u;
    A = y;
    B = 0;
   }
  }
  w = c[f >> 2] | 0;
  do if (!w) D = 19; else {
   E = c[w + 12 >> 2] | 0;
   if ((E | 0) == (c[w + 16 >> 2] | 0)) F = pc[c[(c[w >> 2] | 0) + 36 >> 2] & 63](w) | 0; else F = Jg(c[E >> 2] | 0) | 0;
   if (rh(F, Ig() | 0) | 0) {
    c[f >> 2] = 0;
    D = 19;
    break;
   } else if (B) {
    G = w;
    break;
   } else {
    H = x;
    I = w;
    break a;
   }
  } while (0);
  if ((D | 0) == 19) {
   D = 0;
   if (B) {
    H = x;
    I = 0;
    break;
   } else G = 0;
  }
  w = a[g >> 0] | 0;
  E = w << 24 >> 24 < 0 ? c[v >> 2] | 0 : w & 255;
  if ((c[o >> 2] | 0) == (x + E | 0)) {
   ir(n, E << 1, 0);
   if ((a[g >> 0] | 0) < 0) J = (c[t >> 2] & 2147483647) + -1 | 0; else J = 10;
   ir(n, J, 0);
   w = (a[g >> 0] | 0) < 0 ? c[n >> 2] | 0 : n;
   c[o >> 2] = w + E;
   K = w;
  } else K = x;
  w = z + 12 | 0;
  E = c[w >> 2] | 0;
  L = z + 16 | 0;
  if ((E | 0) == (c[L >> 2] | 0)) M = pc[c[(c[z >> 2] | 0) + 36 >> 2] & 63](z) | 0; else M = Jg(c[E >> 2] | 0) | 0;
  if (Dj(M, s, K, o, r, c[k >> 2] | 0, m, p, q, j) | 0) {
   H = K;
   I = G;
   break;
  }
  E = c[w >> 2] | 0;
  if ((E | 0) == (c[L >> 2] | 0)) {
   pc[c[(c[z >> 2] | 0) + 40 >> 2] & 63](z) | 0;
   x = K;
   u = z;
   y = A;
   continue;
  } else {
   c[w >> 2] = E + 4;
   Jg(c[E >> 2] | 0) | 0;
   x = K;
   u = z;
   y = A;
   continue;
  }
 }
 y = a[m + 11 >> 0] | 0;
 if ((y << 24 >> 24 < 0 ? c[m + 4 >> 2] | 0 : y & 255) | 0) {
  y = c[q >> 2] | 0;
  if ((y - p | 0) < 160) {
   u = c[r >> 2] | 0;
   c[q >> 2] = y + 4;
   c[y >> 2] = u;
  }
 }
 b[i >> 1] = kj(H, c[o >> 2] | 0, h, s) | 0;
 Yi(m, p, c[q >> 2] | 0, h);
 if (!z) N = 1; else {
  q = c[z + 12 >> 2] | 0;
  if ((q | 0) == (c[z + 16 >> 2] | 0)) O = pc[c[(c[A >> 2] | 0) + 36 >> 2] & 63](z) | 0; else O = Jg(c[q >> 2] | 0) | 0;
  if (rh(O, Ig() | 0) | 0) {
   c[e >> 2] = 0;
   N = 1;
  } else N = 0;
 }
 do if (!I) D = 47; else {
  O = c[I + 12 >> 2] | 0;
  if ((O | 0) == (c[I + 16 >> 2] | 0)) P = pc[c[(c[I >> 2] | 0) + 36 >> 2] & 63](I) | 0; else P = Jg(c[O >> 2] | 0) | 0;
  if (rh(P, Ig() | 0) | 0) {
   c[f >> 2] = 0;
   D = 47;
   break;
  } else if (N) break; else {
   D = 49;
   break;
  }
 } while (0);
 if ((D | 0) == 47) if (N) D = 49;
 if ((D | 0) == 49) c[h >> 2] = c[h >> 2] | 2;
 h = c[e >> 2] | 0;
 br(n);
 br(m);
 l = d;
 return h | 0;
}

function Mj(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0;
 b = l;
 l = l + 304 | 0;
 i = b + 200 | 0;
 j = b + 196 | 0;
 k = b + 184 | 0;
 m = b + 172 | 0;
 n = b + 168 | 0;
 o = b + 8 | 0;
 p = b + 4 | 0;
 q = b;
 r = cj(f) | 0;
 Kj(k, f, i, j);
 c[m >> 2] = 0;
 c[m + 4 >> 2] = 0;
 c[m + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[m + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = m + 11 | 0;
 s = m + 8 | 0;
 if ((a[f >> 0] | 0) < 0) t = (c[s >> 2] & 2147483647) + -1 | 0; else t = 10;
 ir(m, t, 0);
 t = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 c[n >> 2] = t;
 c[p >> 2] = o;
 c[q >> 2] = 0;
 u = m + 4 | 0;
 v = c[d >> 2] | 0;
 w = t;
 t = v;
 x = v;
 a : while (1) {
  if (!t) {
   y = 0;
   z = 0;
   A = 1;
  } else {
   v = c[t + 12 >> 2] | 0;
   if ((v | 0) == (c[t + 16 >> 2] | 0)) B = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](t) | 0; else B = Jg(c[v >> 2] | 0) | 0;
   if (rh(B, Ig() | 0) | 0) {
    c[d >> 2] = 0;
    y = 0;
    z = 0;
    A = 1;
   } else {
    y = t;
    z = x;
    A = 0;
   }
  }
  v = c[e >> 2] | 0;
  do if (!v) C = 19; else {
   D = c[v + 12 >> 2] | 0;
   if ((D | 0) == (c[v + 16 >> 2] | 0)) E = pc[c[(c[v >> 2] | 0) + 36 >> 2] & 63](v) | 0; else E = Jg(c[D >> 2] | 0) | 0;
   if (rh(E, Ig() | 0) | 0) {
    c[e >> 2] = 0;
    C = 19;
    break;
   } else if (A) {
    F = v;
    break;
   } else {
    G = w;
    H = v;
    break a;
   }
  } while (0);
  if ((C | 0) == 19) {
   C = 0;
   if (A) {
    G = w;
    H = 0;
    break;
   } else F = 0;
  }
  v = a[f >> 0] | 0;
  D = v << 24 >> 24 < 0 ? c[u >> 2] | 0 : v & 255;
  if ((c[n >> 2] | 0) == (w + D | 0)) {
   ir(m, D << 1, 0);
   if ((a[f >> 0] | 0) < 0) I = (c[s >> 2] & 2147483647) + -1 | 0; else I = 10;
   ir(m, I, 0);
   v = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
   c[n >> 2] = v + D;
   J = v;
  } else J = w;
  v = y + 12 | 0;
  D = c[v >> 2] | 0;
  K = y + 16 | 0;
  if ((D | 0) == (c[K >> 2] | 0)) L = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else L = Jg(c[D >> 2] | 0) | 0;
  if (Dj(L, r, J, n, q, c[j >> 2] | 0, k, o, p, i) | 0) {
   G = J;
   H = F;
   break;
  }
  D = c[v >> 2] | 0;
  if ((D | 0) == (c[K >> 2] | 0)) {
   pc[c[(c[y >> 2] | 0) + 40 >> 2] & 63](y) | 0;
   w = J;
   t = y;
   x = z;
   continue;
  } else {
   c[v >> 2] = D + 4;
   Jg(c[D >> 2] | 0) | 0;
   w = J;
   t = y;
   x = z;
   continue;
  }
 }
 x = a[k + 11 >> 0] | 0;
 if ((x << 24 >> 24 < 0 ? c[k + 4 >> 2] | 0 : x & 255) | 0) {
  x = c[p >> 2] | 0;
  if ((x - o | 0) < 160) {
   t = c[q >> 2] | 0;
   c[p >> 2] = x + 4;
   c[x >> 2] = t;
  }
 }
 c[h >> 2] = ij(G, c[n >> 2] | 0, g, r) | 0;
 Yi(k, o, c[p >> 2] | 0, g);
 if (!y) M = 1; else {
  p = c[y + 12 >> 2] | 0;
  if ((p | 0) == (c[y + 16 >> 2] | 0)) N = pc[c[(c[z >> 2] | 0) + 36 >> 2] & 63](y) | 0; else N = Jg(c[p >> 2] | 0) | 0;
  if (rh(N, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   M = 1;
  } else M = 0;
 }
 do if (!H) C = 47; else {
  N = c[H + 12 >> 2] | 0;
  if ((N | 0) == (c[H + 16 >> 2] | 0)) O = pc[c[(c[H >> 2] | 0) + 36 >> 2] & 63](H) | 0; else O = Jg(c[N >> 2] | 0) | 0;
  if (rh(O, Ig() | 0) | 0) {
   c[e >> 2] = 0;
   C = 47;
   break;
  } else if (M) break; else {
   C = 49;
   break;
  }
 } while (0);
 if ((C | 0) == 47) if (M) C = 49;
 if ((C | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(m);
 br(k);
 l = b;
 return g | 0;
}

function Lj(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0, N = 0, O = 0;
 b = l;
 l = l + 304 | 0;
 i = b + 200 | 0;
 j = b + 196 | 0;
 k = b + 184 | 0;
 m = b + 172 | 0;
 n = b + 168 | 0;
 o = b + 8 | 0;
 p = b + 4 | 0;
 q = b;
 r = cj(f) | 0;
 Kj(k, f, i, j);
 c[m >> 2] = 0;
 c[m + 4 >> 2] = 0;
 c[m + 8 >> 2] = 0;
 f = 0;
 while (1) {
  if ((f | 0) == 3) break;
  c[m + (f << 2) >> 2] = 0;
  f = f + 1 | 0;
 }
 f = m + 11 | 0;
 s = m + 8 | 0;
 if ((a[f >> 0] | 0) < 0) t = (c[s >> 2] & 2147483647) + -1 | 0; else t = 10;
 ir(m, t, 0);
 t = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
 c[n >> 2] = t;
 c[p >> 2] = o;
 c[q >> 2] = 0;
 u = m + 4 | 0;
 v = c[d >> 2] | 0;
 w = t;
 t = v;
 x = v;
 a : while (1) {
  if (!t) {
   y = 0;
   z = 0;
   A = 1;
  } else {
   v = c[t + 12 >> 2] | 0;
   if ((v | 0) == (c[t + 16 >> 2] | 0)) B = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](t) | 0; else B = Jg(c[v >> 2] | 0) | 0;
   if (rh(B, Ig() | 0) | 0) {
    c[d >> 2] = 0;
    y = 0;
    z = 0;
    A = 1;
   } else {
    y = t;
    z = x;
    A = 0;
   }
  }
  v = c[e >> 2] | 0;
  do if (!v) C = 19; else {
   D = c[v + 12 >> 2] | 0;
   if ((D | 0) == (c[v + 16 >> 2] | 0)) E = pc[c[(c[v >> 2] | 0) + 36 >> 2] & 63](v) | 0; else E = Jg(c[D >> 2] | 0) | 0;
   if (rh(E, Ig() | 0) | 0) {
    c[e >> 2] = 0;
    C = 19;
    break;
   } else if (A) {
    F = v;
    break;
   } else {
    G = w;
    H = v;
    break a;
   }
  } while (0);
  if ((C | 0) == 19) {
   C = 0;
   if (A) {
    G = w;
    H = 0;
    break;
   } else F = 0;
  }
  v = a[f >> 0] | 0;
  D = v << 24 >> 24 < 0 ? c[u >> 2] | 0 : v & 255;
  if ((c[n >> 2] | 0) == (w + D | 0)) {
   ir(m, D << 1, 0);
   if ((a[f >> 0] | 0) < 0) I = (c[s >> 2] & 2147483647) + -1 | 0; else I = 10;
   ir(m, I, 0);
   v = (a[f >> 0] | 0) < 0 ? c[m >> 2] | 0 : m;
   c[n >> 2] = v + D;
   J = v;
  } else J = w;
  v = y + 12 | 0;
  D = c[v >> 2] | 0;
  K = y + 16 | 0;
  if ((D | 0) == (c[K >> 2] | 0)) L = pc[c[(c[y >> 2] | 0) + 36 >> 2] & 63](y) | 0; else L = Jg(c[D >> 2] | 0) | 0;
  if (Dj(L, r, J, n, q, c[j >> 2] | 0, k, o, p, i) | 0) {
   G = J;
   H = F;
   break;
  }
  D = c[v >> 2] | 0;
  if ((D | 0) == (c[K >> 2] | 0)) {
   pc[c[(c[y >> 2] | 0) + 40 >> 2] & 63](y) | 0;
   w = J;
   t = y;
   x = z;
   continue;
  } else {
   c[v >> 2] = D + 4;
   Jg(c[D >> 2] | 0) | 0;
   w = J;
   t = y;
   x = z;
   continue;
  }
 }
 x = a[k + 11 >> 0] | 0;
 if ((x << 24 >> 24 < 0 ? c[k + 4 >> 2] | 0 : x & 255) | 0) {
  x = c[p >> 2] | 0;
  if ((x - o | 0) < 160) {
   t = c[q >> 2] | 0;
   c[p >> 2] = x + 4;
   c[x >> 2] = t;
  }
 }
 c[h >> 2] = gj(G, c[n >> 2] | 0, g, r) | 0;
 Yi(k, o, c[p >> 2] | 0, g);
 if (!y) M = 1; else {
  p = c[y + 12 >> 2] | 0;
  if ((p | 0) == (c[y + 16 >> 2] | 0)) N = pc[c[(c[z >> 2] | 0) + 36 >> 2] & 63](y) | 0; else N = Jg(c[p >> 2] | 0) | 0;
  if (rh(N, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   M = 1;
  } else M = 0;
 }
 do if (!H) C = 47; else {
  N = c[H + 12 >> 2] | 0;
  if ((N | 0) == (c[H + 16 >> 2] | 0)) O = pc[c[(c[H >> 2] | 0) + 36 >> 2] & 63](H) | 0; else O = Jg(c[N >> 2] | 0) | 0;
  if (rh(O, Ig() | 0) | 0) {
   c[e >> 2] = 0;
   C = 47;
   break;
  } else if (M) break; else {
   C = 49;
   break;
  }
 } while (0);
 if ((C | 0) == 47) if (M) C = 49;
 if ((C | 0) == 49) c[g >> 2] = c[g >> 2] | 2;
 g = c[d >> 2] | 0;
 br(m);
 br(k);
 l = b;
 return g | 0;
}

function tv(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0;
 g = a;
 h = b;
 i = h;
 j = d;
 k = e;
 l = k;
 if (!i) {
  m = (f | 0) != 0;
  if (!l) {
   if (m) {
    c[f >> 2] = (g >>> 0) % (j >>> 0);
    c[f + 4 >> 2] = 0;
   }
   n = 0;
   o = (g >>> 0) / (j >>> 0) >>> 0;
   return (z = n, o) | 0;
  } else {
   if (!m) {
    n = 0;
    o = 0;
    return (z = n, o) | 0;
   }
   c[f >> 2] = a | 0;
   c[f + 4 >> 2] = b & 0;
   n = 0;
   o = 0;
   return (z = n, o) | 0;
  }
 }
 m = (l | 0) == 0;
 do if (!j) {
  if (m) {
   if (f | 0) {
    c[f >> 2] = (i >>> 0) % (j >>> 0);
    c[f + 4 >> 2] = 0;
   }
   n = 0;
   o = (i >>> 0) / (j >>> 0) >>> 0;
   return (z = n, o) | 0;
  }
  if (!g) {
   if (f | 0) {
    c[f >> 2] = 0;
    c[f + 4 >> 2] = (i >>> 0) % (l >>> 0);
   }
   n = 0;
   o = (i >>> 0) / (l >>> 0) >>> 0;
   return (z = n, o) | 0;
  }
  p = l - 1 | 0;
  if (!(p & l)) {
   if (f | 0) {
    c[f >> 2] = a | 0;
    c[f + 4 >> 2] = p & i | b & 0;
   }
   n = 0;
   o = i >>> ((sv(l | 0) | 0) >>> 0);
   return (z = n, o) | 0;
  }
  p = (R(l | 0) | 0) - (R(i | 0) | 0) | 0;
  if (p >>> 0 <= 30) {
   q = p + 1 | 0;
   r = 31 - p | 0;
   s = q;
   t = i << r | g >>> (q >>> 0);
   u = i >>> (q >>> 0);
   v = 0;
   w = g << r;
   break;
  }
  if (!f) {
   n = 0;
   o = 0;
   return (z = n, o) | 0;
  }
  c[f >> 2] = a | 0;
  c[f + 4 >> 2] = h | b & 0;
  n = 0;
  o = 0;
  return (z = n, o) | 0;
 } else {
  if (!m) {
   r = (R(l | 0) | 0) - (R(i | 0) | 0) | 0;
   if (r >>> 0 <= 31) {
    q = r + 1 | 0;
    p = 31 - r | 0;
    x = r - 31 >> 31;
    s = q;
    t = g >>> (q >>> 0) & x | i << p;
    u = i >>> (q >>> 0) & x;
    v = 0;
    w = g << p;
    break;
   }
   if (!f) {
    n = 0;
    o = 0;
    return (z = n, o) | 0;
   }
   c[f >> 2] = a | 0;
   c[f + 4 >> 2] = h | b & 0;
   n = 0;
   o = 0;
   return (z = n, o) | 0;
  }
  p = j - 1 | 0;
  if (p & j | 0) {
   x = (R(j | 0) | 0) + 33 - (R(i | 0) | 0) | 0;
   q = 64 - x | 0;
   r = 32 - x | 0;
   y = r >> 31;
   A = x - 32 | 0;
   B = A >> 31;
   s = x;
   t = r - 1 >> 31 & i >>> (A >>> 0) | (i << r | g >>> (x >>> 0)) & B;
   u = B & i >>> (x >>> 0);
   v = g << q & y;
   w = (i << q | g >>> (A >>> 0)) & y | g << r & x - 33 >> 31;
   break;
  }
  if (f | 0) {
   c[f >> 2] = p & g;
   c[f + 4 >> 2] = 0;
  }
  if ((j | 0) == 1) {
   n = h | b & 0;
   o = a | 0 | 0;
   return (z = n, o) | 0;
  } else {
   p = sv(j | 0) | 0;
   n = i >>> (p >>> 0) | 0;
   o = i << 32 - p | g >>> (p >>> 0) | 0;
   return (z = n, o) | 0;
  }
 } while (0);
 if (!s) {
  C = w;
  D = v;
  E = u;
  F = t;
  G = 0;
  H = 0;
 } else {
  g = d | 0 | 0;
  d = k | e & 0;
  e = qv(g | 0, d | 0, -1, -1) | 0;
  k = z;
  i = w;
  w = v;
  v = u;
  u = t;
  t = s;
  s = 0;
  do {
   j = i;
   i = w >>> 31 | i << 1;
   w = s | w << 1;
   a = u << 1 | j >>> 31 | 0;
   j = u >>> 31 | v << 1 | 0;
   rv(e | 0, k | 0, a | 0, j | 0) | 0;
   b = z;
   h = b >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;
   s = h & 1;
   u = rv(a | 0, j | 0, h & g | 0, (((b | 0) < 0 ? -1 : 0) >> 31 | ((b | 0) < 0 ? -1 : 0) << 1) & d | 0) | 0;
   v = z;
   t = t - 1 | 0;
  } while ((t | 0) != 0);
  C = i;
  D = w;
  E = v;
  F = u;
  G = 0;
  H = s;
 }
 s = D;
 D = 0;
 if (f | 0) {
  c[f >> 2] = F;
  c[f + 4 >> 2] = E;
 }
 n = (s | 0) >>> 31 | (C | D) << 1 | (D << 1 | s >>> 31) & 0 | G;
 o = (s << 1 | 0 >>> 31) & -2 | H;
 return (z = n, o) | 0;
}

function gt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 f = l;
 l = l + 32 | 0;
 g = f;
 a : do if ((d - b | 0) > 1) if ((a[b >> 0] | 0) == 83) {
  h = a[b + 1 >> 0] | 0;
  switch (h | 0) {
  case 97:
   {
    au(g, 20234);
    i = e + 4 | 0;
    j = c[i >> 2] | 0;
    if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(j, g);
     c[i >> 2] = (c[i >> 2] | 0) + 24;
    } else et(e, g);
    ns(g);
    k = b + 2 | 0;
    break a;
    break;
   }
  case 98:
   {
    Zt(g, 20249);
    i = e + 4 | 0;
    j = c[i >> 2] | 0;
    if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(j, g);
     c[i >> 2] = (c[i >> 2] | 0) + 24;
    } else et(e, g);
    ns(g);
    k = b + 2 | 0;
    break a;
    break;
   }
  case 115:
   {
    $t(g, 19728);
    i = e + 4 | 0;
    j = c[i >> 2] | 0;
    if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(j, g);
     c[i >> 2] = (c[i >> 2] | 0) + 24;
    } else et(e, g);
    ns(g);
    k = b + 2 | 0;
    break a;
    break;
   }
  case 105:
   {
    bu(g, 19824);
    i = e + 4 | 0;
    j = c[i >> 2] | 0;
    if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(j, g);
     c[i >> 2] = (c[i >> 2] | 0) + 24;
    } else et(e, g);
    ns(g);
    k = b + 2 | 0;
    break a;
    break;
   }
  case 111:
   {
    bu(g, 19901);
    i = e + 4 | 0;
    j = c[i >> 2] | 0;
    if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(j, g);
     c[i >> 2] = (c[i >> 2] | 0) + 24;
    } else et(e, g);
    ns(g);
    k = b + 2 | 0;
    break a;
    break;
   }
  case 100:
   {
    wu(g, 19978);
    i = e + 4 | 0;
    j = c[i >> 2] | 0;
    if (j >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(j, g);
     c[i >> 2] = (c[i >> 2] | 0) + 24;
    } else et(e, g);
    ns(g);
    k = b + 2 | 0;
    break a;
    break;
   }
  case 95:
   {
    i = c[e + 16 >> 2] | 0;
    if ((i | 0) == (c[e + 20 >> 2] | 0)) {
     k = b;
     break a;
    }
    j = c[i + 4 >> 2] | 0;
    m = e + 4 | 0;
    n = e + 8 | 0;
    o = c[i >> 2] | 0;
    while (1) {
     if ((o | 0) == (j | 0)) break;
     i = c[m >> 2] | 0;
     if ((i | 0) == (c[n >> 2] | 0)) Os(e, o); else {
      Ns(i, o);
      c[m >> 2] = (c[m >> 2] | 0) + 24;
     }
     o = o + 24 | 0;
    }
    k = b + 2 | 0;
    break a;
    break;
   }
  default:
   {
    o = (h + -48 | 0) >>> 0 < 10;
    if (!o) if (!(Af(h) | 0)) {
     k = b;
     break a;
    }
    m = b + 2 | 0;
    n = (o ? -48 : -55) + h | 0;
    while (1) {
     if ((m | 0) == (d | 0)) {
      k = b;
      break a;
     }
     p = a[m >> 0] | 0;
     o = p << 24 >> 24;
     j = (o + -48 | 0) >>> 0 < 10;
     if (!j) if (!(Af(o) | 0)) break;
     m = m + 1 | 0;
     n = (n * 36 | 0) + o + (j ? -48 : -55) | 0;
    }
    if (p << 24 >> 24 != 95) {
     k = b;
     break a;
    }
    h = n + 1 | 0;
    j = c[e + 16 >> 2] | 0;
    o = j;
    if (h >>> 0 >= (c[e + 20 >> 2] | 0) - j >> 4 >>> 0) {
     k = b;
     break a;
    }
    j = c[o + (h << 4) + 4 >> 2] | 0;
    i = e + 4 | 0;
    q = e + 8 | 0;
    r = c[o + (h << 4) >> 2] | 0;
    while (1) {
     if ((r | 0) == (j | 0)) break;
     h = c[i >> 2] | 0;
     if ((h | 0) == (c[q >> 2] | 0)) Os(e, r); else {
      Ns(h, r);
      c[i >> 2] = (c[i >> 2] | 0) + 24;
     }
     r = r + 24 | 0;
    }
    k = m + 1 | 0;
    break a;
   }
  }
 } else k = b; else k = b; while (0);
 l = f;
 return k | 0;
}

function Qt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;
 f = l;
 l = l + 32 | 0;
 g = f + 8 | 0;
 h = f;
 a : do if ((b | 0) == (d | 0)) i = b; else switch (a[b >> 0] | 0) {
 case 84:
  {
   j = e + 4 | 0;
   k = ((c[j >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
   m = Ys(b, d, e) | 0;
   n = c[j >> 2] | 0;
   o = (n - (c[e >> 2] | 0) | 0) / 24 | 0;
   p = n;
   if ((m | 0) != (b | 0) & (o | 0) == (k + 1 | 0)) {
    c[h >> 2] = c[e + 12 >> 2];
    Rs(g, p + -24 | 0, h);
    n = e + 20 | 0;
    q = c[n >> 2] | 0;
    if (q >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
     c[q >> 2] = 0;
     r = q + 4 | 0;
     c[r >> 2] = 0;
     s = c[g + 12 >> 2] | 0;
     c[q + 8 >> 2] = 0;
     c[q + 12 >> 2] = s;
     c[q >> 2] = c[g >> 2];
     s = g + 4 | 0;
     c[r >> 2] = c[s >> 2];
     r = g + 8 | 0;
     c[q + 8 >> 2] = c[r >> 2];
     c[r >> 2] = 0;
     c[s >> 2] = 0;
     c[g >> 2] = 0;
     c[n >> 2] = (c[n >> 2] | 0) + 16;
    } else Ss(e + 16 | 0, g);
    os(g);
    i = m;
    break a;
   } else {
    t = o;
    u = p;
   }
   while (1) {
    if ((t | 0) == (k | 0)) {
     i = b;
     break a;
    }
    p = u + -24 | 0;
    o = u;
    while (1) {
     if ((o | 0) == (p | 0)) break;
     m = o + -24 | 0;
     c[j >> 2] = m;
     ns(m);
     o = c[j >> 2] | 0;
    }
    t = t + -1 | 0;
    u = p;
   }
   break;
  }
 case 68:
  {
   j = ht(b, d, e) | 0;
   if ((j | 0) == (b | 0)) {
    i = b;
    break a;
   }
   k = c[e + 4 >> 2] | 0;
   if ((c[e >> 2] | 0) == (k | 0)) {
    i = b;
    break a;
   }
   c[h >> 2] = c[e + 12 >> 2];
   Rs(g, k + -24 | 0, h);
   k = e + 20 | 0;
   o = c[k >> 2] | 0;
   if (o >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
    c[o >> 2] = 0;
    m = o + 4 | 0;
    c[m >> 2] = 0;
    n = c[g + 12 >> 2] | 0;
    c[o + 8 >> 2] = 0;
    c[o + 12 >> 2] = n;
    c[o >> 2] = c[g >> 2];
    n = g + 4 | 0;
    c[m >> 2] = c[n >> 2];
    m = g + 8 | 0;
    c[o + 8 >> 2] = c[m >> 2];
    c[m >> 2] = 0;
    c[n >> 2] = 0;
    c[g >> 2] = 0;
    c[k >> 2] = (c[k >> 2] | 0) + 16;
   } else Ss(e + 16 | 0, g);
   os(g);
   i = j;
   break a;
   break;
  }
 case 83:
  {
   j = gt(b, d, e) | 0;
   if ((j | 0) != (b | 0)) {
    i = j;
    break a;
   }
   if ((d - b | 0) <= 2) {
    i = b;
    break a;
   }
   if ((a[b + 1 >> 0] | 0) != 116) {
    i = b;
    break a;
   }
   j = b + 2 | 0;
   k = Tt(j, d, e) | 0;
   if ((k | 0) == (j | 0)) {
    i = b;
    break a;
   }
   j = e + 4 | 0;
   n = c[j >> 2] | 0;
   if ((c[e >> 2] | 0) == (n | 0)) {
    i = b;
    break a;
   }
   Ls(n + -24 | 0, 0, 19202) | 0;
   n = (c[j >> 2] | 0) + -24 | 0;
   c[h >> 2] = c[e + 12 >> 2];
   Rs(g, n, h);
   n = e + 20 | 0;
   j = c[n >> 2] | 0;
   if (j >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
    c[j >> 2] = 0;
    m = j + 4 | 0;
    c[m >> 2] = 0;
    o = c[g + 12 >> 2] | 0;
    c[j + 8 >> 2] = 0;
    c[j + 12 >> 2] = o;
    c[j >> 2] = c[g >> 2];
    o = g + 4 | 0;
    c[m >> 2] = c[o >> 2];
    m = g + 8 | 0;
    c[j + 8 >> 2] = c[m >> 2];
    c[m >> 2] = 0;
    c[o >> 2] = 0;
    c[g >> 2] = 0;
    c[n >> 2] = (c[n >> 2] | 0) + 16;
   } else Ss(e + 16 | 0, g);
   os(g);
   i = k;
   break a;
   break;
  }
 default:
  {
   i = b;
   break a;
  }
 } while (0);
 l = f;
 return i | 0;
}

function oo(e, f, g, h, i, j, k, l) {
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 l = l | 0;
 var m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;
 c[g >> 2] = e;
 c[j >> 2] = h;
 if (!(l & 4)) m = f; else {
  l = c[g >> 2] | 0;
  h = f;
  if ((h - l | 0) > 2) if ((a[l >> 0] | 0) == -17) if ((a[l + 1 >> 0] | 0) == -69) if ((a[l + 2 >> 0] | 0) == -65) {
   c[g >> 2] = l + 3;
   m = h;
  } else m = h; else m = h; else m = h; else m = h;
 }
 h = i;
 a : while (1) {
  l = c[g >> 2] | 0;
  n = l >>> 0 < f >>> 0;
  if (!n) {
   o = 41;
   break;
  }
  e = c[j >> 2] | 0;
  if (e >>> 0 >= i >>> 0) {
   o = 41;
   break;
  }
  p = a[l >> 0] | 0;
  q = p & 255;
  if (q >>> 0 > k >>> 0) {
   r = 2;
   break;
  }
  do if (p << 24 >> 24 > -1) {
   b[e >> 1] = p & 255;
   s = 1;
   t = l;
  } else {
   if ((p & 255) < 194) {
    r = 2;
    break a;
   }
   if ((p & 255) < 224) {
    if ((m - l | 0) < 2) {
     r = 1;
     break a;
    }
    u = d[l + 1 >> 0] | 0;
    if ((u & 192 | 0) != 128) {
     r = 2;
     break a;
    }
    v = u & 63 | q << 6 & 1984;
    if (v >>> 0 > k >>> 0) {
     r = 2;
     break a;
    }
    b[e >> 1] = v;
    s = 2;
    t = l;
    break;
   }
   if ((p & 255) < 240) {
    if ((m - l | 0) < 3) {
     r = 1;
     break a;
    }
    v = a[l + 1 >> 0] | 0;
    u = a[l + 2 >> 0] | 0;
    switch (p << 24 >> 24) {
    case -32:
     {
      if ((v & -32) << 24 >> 24 != -96) {
       r = 2;
       break a;
      }
      break;
     }
    case -19:
     {
      if ((v & -32) << 24 >> 24 != -128) {
       r = 2;
       break a;
      }
      break;
     }
    default:
     if ((v & -64) << 24 >> 24 != -128) {
      r = 2;
      break a;
     }
    }
    w = u & 255;
    if ((w & 192 | 0) != 128) {
     r = 2;
     break a;
    }
    u = (v & 63) << 6 | q << 12 | w & 63;
    if ((u & 65535) >>> 0 > k >>> 0) {
     r = 2;
     break a;
    }
    b[e >> 1] = u;
    s = 3;
    t = l;
    break;
   }
   if ((p & 255) >= 245) {
    r = 2;
    break a;
   }
   if ((m - l | 0) < 4) {
    r = 1;
    break a;
   }
   u = a[l + 1 >> 0] | 0;
   w = a[l + 2 >> 0] | 0;
   v = a[l + 3 >> 0] | 0;
   switch (p << 24 >> 24) {
   case -16:
    {
     if ((u + 112 & 255) >= 48) {
      r = 2;
      break a;
     }
     break;
    }
   case -12:
    {
     if ((u & -16) << 24 >> 24 != -128) {
      r = 2;
      break a;
     }
     break;
    }
   default:
    if ((u & -64) << 24 >> 24 != -128) {
     r = 2;
     break a;
    }
   }
   x = w & 255;
   if ((x & 192 | 0) != 128) {
    r = 2;
    break a;
   }
   w = v & 255;
   if ((w & 192 | 0) != 128) {
    r = 2;
    break a;
   }
   if ((h - e | 0) < 4) {
    r = 1;
    break a;
   }
   v = q & 7;
   y = u & 255;
   u = x << 6;
   z = w & 63;
   if ((y << 12 & 258048 | v << 18 | u & 4032 | z) >>> 0 > k >>> 0) {
    r = 2;
    break a;
   }
   b[e >> 1] = y << 2 & 60 | x >>> 4 & 3 | ((y >>> 4 & 3 | v << 2) << 6) + 16320 | 55296;
   v = e + 2 | 0;
   c[j >> 2] = v;
   b[v >> 1] = z | u & 960 | 56320;
   s = 4;
   t = c[g >> 2] | 0;
  } while (0);
  c[g >> 2] = t + s;
  c[j >> 2] = (c[j >> 2] | 0) + 2;
 }
 if ((o | 0) == 41) r = n & 1;
 return r | 0;
}

function vt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0;
 f = l;
 l = l + 112 | 0;
 g = f + 88 | 0;
 h = f + 64 | 0;
 i = f + 36 | 0;
 j = f + 48 | 0;
 k = f + 24 | 0;
 m = f + 12 | 0;
 n = f;
 a : do if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 99) if ((a[b + 1 >> 0] | 0) == 118) {
  o = e + 63 | 0;
  p = a[o >> 0] | 0;
  a[o >> 0] = 0;
  q = b + 2 | 0;
  r = Is(q, d, e) | 0;
  a[o >> 0] = p;
  if ((r | 0) == (q | 0) | (r | 0) == (d | 0)) s = b; else {
   if ((a[r >> 0] | 0) == 95) {
    q = r + 1 | 0;
    if ((q | 0) == (d | 0)) {
     s = b;
     break;
    }
    p = a[q >> 0] | 0;
    b : do if (p << 24 >> 24 == 69) {
     o = e + 4 | 0;
     t = c[o >> 2] | 0;
     if (t >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      c[t >> 2] = 0;
      c[t + 4 >> 2] = 0;
      c[t + 8 >> 2] = 0;
      c[t + 12 >> 2] = 0;
      c[t + 16 >> 2] = 0;
      c[t + 20 >> 2] = 0;
      ju(t);
      c[o >> 2] = (c[o >> 2] | 0) + 24;
      u = q;
      break;
     } else {
      ku(e);
      u = q;
      break;
     }
    } else {
     o = q;
     t = p;
     while (1) {
      if (t << 24 >> 24 == 69) {
       u = o;
       break b;
      }
      v = kt(o, d, e) | 0;
      w = (v | 0) == (o | 0) | (v | 0) == (d | 0);
      if (w) {
       s = b;
       break a;
      }
      x = a[(w ? o : v) >> 0] | 0;
      o = v;
      t = x;
     }
    } while (0);
    y = u + 1 | 0;
   } else {
    p = kt(r, d, e) | 0;
    if ((p | 0) == (r | 0)) {
     s = b;
     break;
    } else y = p;
   }
   p = e + 4 | 0;
   q = c[p >> 2] | 0;
   if (((q - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) s = b; else {
    _s(g, q + -24 | 0);
    q = c[p >> 2] | 0;
    t = q + -24 | 0;
    o = q;
    while (1) {
     if ((o | 0) == (t | 0)) break;
     x = o + -24 | 0;
     c[p >> 2] = x;
     ns(x);
     o = c[p >> 2] | 0;
    }
    _s(n, q + -48 | 0);
    Ls(n, 0, 18908) | 0;
    c[m >> 2] = c[n >> 2];
    c[m + 4 >> 2] = c[n + 4 >> 2];
    c[m + 8 >> 2] = c[n + 8 >> 2];
    o = 0;
    while (1) {
     if ((o | 0) == 3) break;
     c[n + (o << 2) >> 2] = 0;
     o = o + 1 | 0;
    }
    Ms(m, 20072) | 0;
    c[k >> 2] = c[m >> 2];
    c[k + 4 >> 2] = c[m + 4 >> 2];
    c[k + 8 >> 2] = c[m + 8 >> 2];
    o = 0;
    while (1) {
     if ((o | 0) == 3) break;
     c[m + (o << 2) >> 2] = 0;
     o = o + 1 | 0;
    }
    o = a[g + 11 >> 0] | 0;
    q = o << 24 >> 24 < 0;
    qs(k, q ? c[g >> 2] | 0 : g, q ? c[g + 4 >> 2] | 0 : o & 255) | 0;
    c[j >> 2] = c[k >> 2];
    c[j + 4 >> 2] = c[k + 4 >> 2];
    c[j + 8 >> 2] = c[k + 8 >> 2];
    o = 0;
    while (1) {
     if ((o | 0) == 3) break;
     c[k + (o << 2) >> 2] = 0;
     o = o + 1 | 0;
    }
    Ms(j, 18906) | 0;
    c[i >> 2] = c[j >> 2];
    c[i + 4 >> 2] = c[j + 4 >> 2];
    c[i + 8 >> 2] = c[j + 8 >> 2];
    o = 0;
    while (1) {
     if ((o | 0) == 3) break;
     c[j + (o << 2) >> 2] = 0;
     o = o + 1 | 0;
    }
    bt(h, i);
    ct((c[p >> 2] | 0) + -24 | 0, h);
    ns(h);
    Es(i);
    Es(j);
    Es(k);
    Es(m);
    Es(n);
    Es(g);
    s = y;
   }
  }
 } else s = b; else s = b; else s = b; while (0);
 l = f;
 return s | 0;
}

function pt(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;
 g = l;
 l = l + 96 | 0;
 h = g + 84 | 0;
 i = g + 72 | 0;
 j = g + 60 | 0;
 k = g + 48 | 0;
 m = g + 36 | 0;
 n = g + 24 | 0;
 o = g + 12 | 0;
 p = g;
 q = kt(b, d, f) | 0;
 a : do if ((q | 0) == (b | 0)) r = b; else {
  s = kt(q, d, f) | 0;
  t = f + 4 | 0;
  if ((s | 0) == (q | 0)) {
   u = c[t >> 2] | 0;
   v = u + -24 | 0;
   w = u;
   while (1) {
    if ((w | 0) == (v | 0)) {
     r = b;
     break a;
    }
    u = w + -24 | 0;
    c[t >> 2] = u;
    ns(u);
    w = c[t >> 2] | 0;
   }
  }
  w = c[t >> 2] | 0;
  if (((w - (c[f >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) r = b; else {
   _s(i, w + -24 | 0);
   w = c[t >> 2] | 0;
   v = w + -24 | 0;
   u = w;
   while (1) {
    if ((u | 0) == (v | 0)) break;
    x = u + -24 | 0;
    c[t >> 2] = x;
    ns(x);
    u = c[t >> 2] | 0;
   }
   _s(j, w + -48 | 0);
   u = c[t >> 2] | 0;
   v = u + -24 | 0;
   x = v + 11 | 0;
   if ((a[x >> 0] | 0) < 0) {
    y = c[v >> 2] | 0;
    a[h >> 0] = 0;
    mh(y, h);
    c[u + -20 >> 2] = 0;
   } else {
    a[h >> 0] = 0;
    mh(v, h);
    a[x >> 0] = 0;
   }
   x = lh(18944) | 0;
   u = e + 11 | 0;
   y = a[u >> 0] | 0;
   z = e + 4 | 0;
   if ((x | 0) == ((y << 24 >> 24 < 0 ? c[z >> 2] | 0 : y & 255) | 0)) if (!(Ws(e, 18944, x) | 0)) du(v, 40);
   mt(p, 18908, j);
   Ms(p, 19194) | 0;
   c[o >> 2] = c[p >> 2];
   c[o + 4 >> 2] = c[p + 4 >> 2];
   c[o + 8 >> 2] = c[p + 8 >> 2];
   x = 0;
   while (1) {
    if ((x | 0) == 3) break;
    c[p + (x << 2) >> 2] = 0;
    x = x + 1 | 0;
   }
   x = a[u >> 0] | 0;
   t = x << 24 >> 24 < 0;
   qs(o, t ? c[e >> 2] | 0 : e, t ? c[z >> 2] | 0 : x & 255) | 0;
   c[n >> 2] = c[o >> 2];
   c[n + 4 >> 2] = c[o + 4 >> 2];
   c[n + 8 >> 2] = c[o + 8 >> 2];
   x = 0;
   while (1) {
    if ((x | 0) == 3) break;
    c[o + (x << 2) >> 2] = 0;
    x = x + 1 | 0;
   }
   Ms(n, 18903) | 0;
   c[m >> 2] = c[n >> 2];
   c[m + 4 >> 2] = c[n + 4 >> 2];
   c[m + 8 >> 2] = c[n + 8 >> 2];
   x = 0;
   while (1) {
    if ((x | 0) == 3) break;
    c[n + (x << 2) >> 2] = 0;
    x = x + 1 | 0;
   }
   x = a[i + 11 >> 0] | 0;
   t = x << 24 >> 24 < 0;
   qs(m, t ? c[i >> 2] | 0 : i, t ? c[i + 4 >> 2] | 0 : x & 255) | 0;
   c[k >> 2] = c[m >> 2];
   c[k + 4 >> 2] = c[m + 4 >> 2];
   c[k + 8 >> 2] = c[m + 8 >> 2];
   x = 0;
   while (1) {
    if ((x | 0) == 3) break;
    c[m + (x << 2) >> 2] = 0;
    x = x + 1 | 0;
   }
   Ms(k, 18906) | 0;
   c[h >> 2] = c[k >> 2];
   c[h + 4 >> 2] = c[k + 4 >> 2];
   c[h + 8 >> 2] = c[k + 8 >> 2];
   x = 0;
   while (1) {
    if ((x | 0) == 3) break;
    c[k + (x << 2) >> 2] = 0;
    x = x + 1 | 0;
   }
   x = a[h + 11 >> 0] | 0;
   t = x << 24 >> 24 < 0;
   qs(v, t ? c[h >> 2] | 0 : h, t ? c[h + 4 >> 2] | 0 : x & 255) | 0;
   Es(h);
   Es(k);
   Es(m);
   Es(n);
   Es(o);
   Es(p);
   x = lh(18944) | 0;
   t = a[u >> 0] | 0;
   if ((x | 0) == ((t << 24 >> 24 < 0 ? c[z >> 2] | 0 : t & 255) | 0)) if (!(Ws(e, 18944, x) | 0)) du(v, 41);
   Es(j);
   Es(i);
   r = s;
  }
 } while (0);
 l = g;
 return r | 0;
}

function Kf(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0;
 e = l;
 l = l + 272 | 0;
 f = e + 8 | 0;
 g = e;
 do if (!(a[d >> 0] | 0)) {
  h = mb(15223) | 0;
  if (h | 0) if (a[h >> 0] | 0) {
   i = h;
   break;
  }
  h = mb(15230 + (b * 12 | 0) | 0) | 0;
  if (h | 0) if (a[h >> 0] | 0) {
   i = h;
   break;
  }
  h = mb(15302) | 0;
  if (h | 0) if (a[h >> 0] | 0) {
   i = h;
   break;
  }
  i = 15307;
 } else i = d; while (0);
 d = 0;
 a : while (1) {
  switch (a[i + d >> 0] | 0) {
  case 47:
  case 0:
   {
    j = d;
    break a;
    break;
   }
  default:
   {}
  }
  h = d + 1 | 0;
  if (h >>> 0 < 15) d = h; else {
   j = h;
   break;
  }
 }
 d = a[i >> 0] | 0;
 if (d << 24 >> 24 == 46) {
  k = 15307;
  m = 15;
 } else if (!(a[i + j >> 0] | 0)) if (d << 24 >> 24 == 67) {
  k = i;
  m = 15;
 } else {
  n = i;
  m = 16;
 } else {
  k = 15307;
  m = 15;
 }
 if ((m | 0) == 15) if (!(a[k + 1 >> 0] | 0)) {
  o = k;
  m = 18;
 } else {
  n = k;
  m = 16;
 }
 b : do if ((m | 0) == 16) if (!(ke(n, 15307) | 0)) {
  o = n;
  m = 18;
 } else if (!(ke(n, 15315) | 0)) {
  o = n;
  m = 18;
 } else {
  k = c[5512] | 0;
  if (k | 0) {
   i = k;
   do {
    if (!(ke(n, i + 8 | 0) | 0)) {
     p = i;
     break b;
    }
    i = c[i + 24 >> 2] | 0;
   } while ((i | 0) != 0);
  }
  Fa(22052);
  i = c[5512] | 0;
  c : do if (i | 0) {
   k = i;
   while (1) {
    if (!(ke(n, k + 8 | 0) | 0)) break;
    d = c[k + 24 >> 2] | 0;
    if (!d) break c; else k = d;
   }
   Ta(22052);
   p = k;
   break b;
  } while (0);
  d : do if (!(c[5487] | 0)) {
   i = mb(15321) | 0;
   if (!i) m = 41; else if (!(a[i >> 0] | 0)) m = 41; else {
    d = 254 - j | 0;
    h = j + 1 | 0;
    q = i;
    while (1) {
     i = Ve(q, 58) | 0;
     r = a[i >> 0] | 0;
     s = i - q + ((r << 24 >> 24 != 0) << 31 >> 31) | 0;
     if (s >>> 0 < d >>> 0) {
      zv(f | 0, q | 0, s | 0) | 0;
      t = f + s | 0;
      a[t >> 0] = 47;
      zv(t + 1 | 0, n | 0, j | 0) | 0;
      a[f + (h + s) >> 0] = 0;
      u = Ga(f | 0, g | 0) | 0;
      if (u | 0) break;
      v = a[i >> 0] | 0;
     } else v = r;
     q = i + (v << 24 >> 24 != 0 & 1) | 0;
     if (!(a[q >> 0] | 0)) {
      m = 41;
      break d;
     }
    }
    q = xd(28) | 0;
    if (!q) {
     Lf(u, c[g >> 2] | 0) | 0;
     m = 41;
     break;
    } else {
     c[q >> 2] = u;
     c[q + 4 >> 2] = c[g >> 2];
     h = q + 8 | 0;
     zv(h | 0, n | 0, j | 0) | 0;
     a[h + j >> 0] = 0;
     c[q + 24 >> 2] = c[5512];
     c[5512] = q;
     w = q;
     break;
    }
   }
  } else m = 41; while (0);
  if ((m | 0) == 41) {
   q = xd(28) | 0;
   if (!q) w = q; else {
    c[q >> 2] = c[733];
    c[q + 4 >> 2] = c[734];
    h = q + 8 | 0;
    zv(h | 0, n | 0, j | 0) | 0;
    a[h + j >> 0] = 0;
    c[q + 24 >> 2] = c[5512];
    c[5512] = q;
    w = q;
   }
  }
  Ta(22052);
  p = (b | 0) == 0 & (w | 0) == 0 ? 2932 : w;
 } while (0);
 do if ((m | 0) == 18) {
  if (!b) if ((a[o + 1 >> 0] | 0) == 46) {
   p = 2932;
   break;
  }
  p = 0;
 } while (0);
 l = e;
 return p | 0;
}

function ot(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0;
 f = l;
 l = l + 80 | 0;
 g = f + 64 | 0;
 h = f + 60 | 0;
 i = f + 24 | 0;
 j = f + 48 | 0;
 k = f + 12 | 0;
 m = f;
 a : do if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 102) {
  switch (a[b + 1 >> 0] | 0) {
  case 112:
   {
    n = Js(b + 2 | 0, d, h) | 0;
    o = jt(n, d) | 0;
    if ((o | 0) == (d | 0)) p = b; else if ((a[o >> 0] | 0) == 95) {
     c[k >> 2] = 0;
     c[k + 4 >> 2] = 0;
     c[k + 8 >> 2] = 0;
     q = o - n | 0;
     if (q >>> 0 > 4294967279) _q(k);
     if (q >>> 0 < 11) {
      a[k + 11 >> 0] = q;
      r = k;
     } else {
      s = q + 16 & -16;
      t = Bs(s) | 0;
      c[k >> 2] = t;
      c[k + 8 >> 2] = s | -2147483648;
      c[k + 4 >> 2] = q;
      r = t;
     }
     t = n;
     n = r;
     while (1) {
      if ((t | 0) == (o | 0)) break;
      mh(n, t);
      t = t + 1 | 0;
      n = n + 1 | 0;
     }
     a[g >> 0] = 0;
     mh(r + q | 0, g);
     Ls(k, 0, 20097) | 0;
     c[j >> 2] = c[k >> 2];
     c[j + 4 >> 2] = c[k + 4 >> 2];
     c[j + 8 >> 2] = c[k + 8 >> 2];
     n = 0;
     while (1) {
      if ((n | 0) == 3) break;
      c[k + (n << 2) >> 2] = 0;
      n = n + 1 | 0;
     }
     bt(i, j);
     n = e + 4 | 0;
     q = c[n >> 2] | 0;
     if (q >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(q, i);
      c[n >> 2] = (c[n >> 2] | 0) + 24;
     } else et(e, i);
     ns(i);
     Es(j);
     Es(k);
     p = o + 1 | 0;
    } else p = b;
    u = p;
    break a;
    break;
   }
  case 76:
   break;
  default:
   {
    u = b;
    break a;
   }
  }
  n = jt(b + 2 | 0, d) | 0;
  if ((n | 0) == (d | 0)) v = b; else if ((a[n >> 0] | 0) == 112) {
   q = Js(n + 1 | 0, d, h) | 0;
   n = jt(q, d) | 0;
   if ((n | 0) == (d | 0)) v = b; else if ((a[n >> 0] | 0) == 95) {
    c[k >> 2] = 0;
    c[k + 4 >> 2] = 0;
    c[k + 8 >> 2] = 0;
    t = n - q | 0;
    if (t >>> 0 > 4294967279) _q(k);
    if (t >>> 0 < 11) {
     a[k + 11 >> 0] = t;
     w = k;
    } else {
     s = t + 16 & -16;
     x = Bs(s) | 0;
     c[k >> 2] = x;
     c[k + 8 >> 2] = s | -2147483648;
     c[k + 4 >> 2] = t;
     w = x;
    }
    x = q;
    q = w;
    while (1) {
     if ((x | 0) == (n | 0)) break;
     mh(q, x);
     x = x + 1 | 0;
     q = q + 1 | 0;
    }
    a[g >> 0] = 0;
    mh(w + t | 0, g);
    Ls(k, 0, 20097) | 0;
    c[m >> 2] = c[k >> 2];
    c[m + 4 >> 2] = c[k + 4 >> 2];
    c[m + 8 >> 2] = c[k + 8 >> 2];
    q = 0;
    while (1) {
     if ((q | 0) == 3) break;
     c[k + (q << 2) >> 2] = 0;
     q = q + 1 | 0;
    }
    bt(i, m);
    q = e + 4 | 0;
    t = c[q >> 2] | 0;
    if (t >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(t, i);
     c[q >> 2] = (c[q >> 2] | 0) + 24;
    } else et(e, i);
    ns(i);
    Es(m);
    Es(k);
    v = n + 1 | 0;
   } else v = b;
  } else v = b;
  u = v;
 } else u = b; else u = b; while (0);
 l = f;
 return u | 0;
}

function On(b, e, f, g, h, i, j, k) {
 b = b | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 var l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0;
 c[f >> 2] = b;
 c[i >> 2] = g;
 if (!(k & 4)) l = e; else {
  k = c[f >> 2] | 0;
  g = e;
  if ((g - k | 0) > 2) if ((a[k >> 0] | 0) == -17) if ((a[k + 1 >> 0] | 0) == -69) if ((a[k + 2 >> 0] | 0) == -65) {
   c[f >> 2] = k + 3;
   l = g;
  } else l = g; else l = g; else l = g; else l = g;
 }
 a : while (1) {
  g = c[f >> 2] | 0;
  m = g >>> 0 < e >>> 0;
  if (!m) {
   n = 36;
   break;
  }
  k = c[i >> 2] | 0;
  if (k >>> 0 >= h >>> 0) {
   n = 36;
   break;
  }
  b = a[g >> 0] | 0;
  o = b & 255;
  do if (b << 24 >> 24 > -1) if (o >>> 0 > j >>> 0) {
   p = 2;
   break a;
  } else {
   q = o;
   r = 1;
  } else {
   if ((b & 255) < 194) {
    p = 2;
    break a;
   }
   if ((b & 255) < 224) {
    if ((l - g | 0) < 2) {
     p = 1;
     break a;
    }
    s = d[g + 1 >> 0] | 0;
    if ((s & 192 | 0) != 128) {
     p = 2;
     break a;
    }
    t = s & 63 | o << 6 & 1984;
    if (t >>> 0 > j >>> 0) {
     p = 2;
     break a;
    } else {
     q = t;
     r = 2;
     break;
    }
   }
   if ((b & 255) < 240) {
    if ((l - g | 0) < 3) {
     p = 1;
     break a;
    }
    t = a[g + 1 >> 0] | 0;
    s = a[g + 2 >> 0] | 0;
    switch (b << 24 >> 24) {
    case -32:
     {
      if ((t & -32) << 24 >> 24 != -96) {
       p = 2;
       break a;
      }
      break;
     }
    case -19:
     {
      if ((t & -32) << 24 >> 24 != -128) {
       p = 2;
       break a;
      }
      break;
     }
    default:
     if ((t & -64) << 24 >> 24 != -128) {
      p = 2;
      break a;
     }
    }
    u = s & 255;
    if ((u & 192 | 0) != 128) {
     p = 2;
     break a;
    }
    s = (t & 63) << 6 | o << 12 & 61440 | u & 63;
    if (s >>> 0 > j >>> 0) {
     p = 2;
     break a;
    } else {
     q = s;
     r = 3;
     break;
    }
   }
   if ((b & 255) >= 245) {
    p = 2;
    break a;
   }
   if ((l - g | 0) < 4) {
    p = 1;
    break a;
   }
   s = a[g + 1 >> 0] | 0;
   u = a[g + 2 >> 0] | 0;
   t = a[g + 3 >> 0] | 0;
   switch (b << 24 >> 24) {
   case -16:
    {
     if ((s + 112 & 255) >= 48) {
      p = 2;
      break a;
     }
     break;
    }
   case -12:
    {
     if ((s & -16) << 24 >> 24 != -128) {
      p = 2;
      break a;
     }
     break;
    }
   default:
    if ((s & -64) << 24 >> 24 != -128) {
     p = 2;
     break a;
    }
   }
   v = u & 255;
   if ((v & 192 | 0) != 128) {
    p = 2;
    break a;
   }
   u = t & 255;
   if ((u & 192 | 0) != 128) {
    p = 2;
    break a;
   }
   t = (s & 63) << 12 | o << 18 & 1835008 | v << 6 & 4032 | u & 63;
   if (t >>> 0 > j >>> 0) {
    p = 2;
    break a;
   } else {
    q = t;
    r = 4;
   }
  } while (0);
  c[k >> 2] = q;
  c[f >> 2] = g + r;
  c[i >> 2] = (c[i >> 2] | 0) + 4;
 }
 if ((n | 0) == 36) p = m & 1;
 return p | 0;
}

function Ys(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0;
 f = l;
 l = l + 64 | 0;
 g = f + 40 | 0;
 h = f;
 i = f + 24 | 0;
 j = b;
 a : do if ((d - j | 0) > 1) if ((a[b >> 0] | 0) == 84) {
  k = a[b + 1 >> 0] | 0;
  if (k << 24 >> 24 == 95) {
   m = c[e + 36 >> 2] | 0;
   if ((c[e + 32 >> 2] | 0) == (m | 0)) {
    n = b;
    break;
   }
   o = c[m + -16 >> 2] | 0;
   if ((o | 0) == (c[m + -12 >> 2] | 0)) {
    Lu(g);
    m = e + 4 | 0;
    p = c[m >> 2] | 0;
    if (p >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(p, g);
     c[m >> 2] = (c[m >> 2] | 0) + 24;
    } else et(e, g);
    ns(g);
    a[e + 62 >> 0] = 1;
    n = b + 2 | 0;
    break;
   }
   m = c[o + 4 >> 2] | 0;
   p = e + 4 | 0;
   q = e + 8 | 0;
   r = c[o >> 2] | 0;
   while (1) {
    if ((r | 0) == (m | 0)) break;
    o = c[p >> 2] | 0;
    if ((o | 0) == (c[q >> 2] | 0)) Os(e, r); else {
     Ns(o, r);
     c[p >> 2] = (c[p >> 2] | 0) + 24;
    }
    r = r + 24 | 0;
   }
   n = b + 2 | 0;
   break;
  }
  r = (k << 24 >> 24) + -48 | 0;
  if (r >>> 0 < 10) {
   p = r;
   r = b + 2 | 0;
   while (1) {
    if ((r | 0) == (d | 0)) {
     n = b;
     break a;
    }
    s = a[r >> 0] | 0;
    q = (s << 24 >> 24) + -48 | 0;
    if (q >>> 0 >= 10) break;
    p = q + (p * 10 | 0) | 0;
    r = r + 1 | 0;
   }
   if (s << 24 >> 24 == 95) {
    k = c[e + 36 >> 2] | 0;
    if ((c[e + 32 >> 2] | 0) == (k | 0)) n = b; else {
     q = p + 1 | 0;
     m = c[k + -16 >> 2] | 0;
     o = m;
     if (q >>> 0 < (c[k + -12 >> 2] | 0) - m >> 4 >>> 0) {
      m = c[o + (q << 4) + 4 >> 2] | 0;
      k = e + 4 | 0;
      t = e + 8 | 0;
      u = c[o + (q << 4) >> 2] | 0;
      while (1) {
       if ((u | 0) == (m | 0)) break;
       q = c[k >> 2] | 0;
       if ((q | 0) == (c[t >> 2] | 0)) Os(e, u); else {
        Ns(q, u);
        c[k >> 2] = (c[k >> 2] | 0) + 24;
       }
       u = u + 24 | 0;
      }
      n = r + 1 | 0;
      break;
     }
     u = r + 1 | 0;
     c[i >> 2] = 0;
     c[i + 4 >> 2] = 0;
     c[i + 8 >> 2] = 0;
     k = u - j | 0;
     if (k >>> 0 > 4294967279) _q(i);
     if (k >>> 0 < 11) {
      a[i + 11 >> 0] = k;
      v = i;
     } else {
      t = k + 16 & -16;
      m = Bs(t) | 0;
      c[i >> 2] = m;
      c[i + 8 >> 2] = t | -2147483648;
      c[i + 4 >> 2] = k;
      v = m;
     }
     m = b;
     t = v;
     while (1) {
      if ((m | 0) == (u | 0)) break;
      mh(t, m);
      m = m + 1 | 0;
      t = t + 1 | 0;
     }
     a[g >> 0] = 0;
     mh(v + k | 0, g);
     bt(h, i);
     t = e + 4 | 0;
     m = c[t >> 2] | 0;
     if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(m, h);
      c[t >> 2] = (c[t >> 2] | 0) + 24;
     } else et(e, h);
     ns(h);
     Es(i);
     a[e + 62 >> 0] = 1;
     n = u;
    }
   } else n = b;
  } else n = b;
 } else n = b; else n = b; while (0);
 l = f;
 return n | 0;
}

function yu(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 a : do if ((b | 0) == (d | 0)) h = b; else if ((a[b >> 0] | 0) == 90) {
  i = b + 1 | 0;
  j = Fs(i, d, e) | 0;
  if ((j | 0) == (i | 0) | (j | 0) == (d | 0)) h = b; else if ((a[j >> 0] | 0) == 69) {
   i = j + 1 | 0;
   if ((i | 0) == (d | 0)) h = b; else switch (a[i >> 0] | 0) {
   case 115:
    {
     k = Au(j + 2 | 0, d) | 0;
     m = c[e + 4 >> 2] | 0;
     if ((c[e >> 2] | 0) == (m | 0)) {
      h = k;
      break a;
     }
     Ms(m + -24 | 0, 20267) | 0;
     h = k;
     break a;
     break;
    }
   case 100:
    {
     k = j + 2 | 0;
     if ((k | 0) == (d | 0)) {
      h = b;
      break a;
     }
     j = jt(k, d) | 0;
     if ((j | 0) == (d | 0)) {
      h = b;
      break a;
     }
     if ((a[j >> 0] | 0) != 95) {
      h = b;
      break a;
     }
     k = j + 1 | 0;
     j = ft(k, d, e) | 0;
     m = e + 4 | 0;
     if ((j | 0) == (k | 0)) {
      k = c[m >> 2] | 0;
      n = k + -24 | 0;
      o = k;
      while (1) {
       if ((o | 0) == (n | 0)) {
        h = b;
        break a;
       }
       k = o + -24 | 0;
       c[m >> 2] = k;
       ns(k);
       o = c[m >> 2] | 0;
      }
     }
     o = c[m >> 2] | 0;
     if (((o - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      h = b;
      break a;
     }
     _s(g, o + -24 | 0);
     o = c[m >> 2] | 0;
     n = o + -24 | 0;
     k = o;
     while (1) {
      if ((k | 0) == (n | 0)) break;
      p = k + -24 | 0;
      c[m >> 2] = p;
      ns(p);
      k = c[m >> 2] | 0;
     }
     Ms(o + -48 | 0, 18980) | 0;
     k = a[g + 11 >> 0] | 0;
     n = k << 24 >> 24 < 0;
     qs((c[m >> 2] | 0) + -24 | 0, n ? c[g >> 2] | 0 : g, n ? c[g + 4 >> 2] | 0 : k & 255) | 0;
     Es(g);
     h = j;
     break a;
     break;
    }
   default:
    {
     k = ft(i, d, e) | 0;
     if ((k | 0) == (i | 0)) {
      n = e + 4 | 0;
      p = c[n >> 2] | 0;
      q = p + -24 | 0;
      r = p;
      while (1) {
       if ((r | 0) == (q | 0)) {
        h = b;
        break a;
       }
       p = r + -24 | 0;
       c[n >> 2] = p;
       ns(p);
       r = c[n >> 2] | 0;
      }
     }
     n = Au(k, d) | 0;
     r = e + 4 | 0;
     q = c[r >> 2] | 0;
     if (((q - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      h = n;
      break a;
     }
     _s(g, q + -24 | 0);
     q = c[r >> 2] | 0;
     i = q + -24 | 0;
     j = q;
     while (1) {
      if ((j | 0) == (i | 0)) break;
      m = j + -24 | 0;
      c[r >> 2] = m;
      ns(m);
      j = c[r >> 2] | 0;
     }
     Ms(q + -48 | 0, 18980) | 0;
     j = a[g + 11 >> 0] | 0;
     i = j << 24 >> 24 < 0;
     qs((c[r >> 2] | 0) + -24 | 0, i ? c[g >> 2] | 0 : g, i ? c[g + 4 >> 2] | 0 : j & 255) | 0;
     Es(g);
     h = n;
     break a;
    }
   }
  } else h = b;
 } else h = b; while (0);
 l = f;
 return h | 0;
}

function hs(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;
 g = l;
 l = l + 4192 | 0;
 h = g + 4176 | 0;
 i = g;
 j = g + 4112 | 0;
 if (!b) k = 3; else {
  m = (d | 0) != 0;
  n = (e | 0) == 0;
  if (m & n) k = 3; else {
   if (m) o = c[e >> 2] | 0; else o = 0;
   is(i);
   js(j, i);
   m = j + 48 | 0;
   p = j + 61 | 0;
   c[m >> 2] = 0;
   c[m + 4 >> 2] = 0;
   c[m + 8 >> 2] = 0;
   a[m + 12 >> 0] = 0;
   a[p >> 0] = 1;
   m = j + 32 | 0;
   q = j + 36 | 0;
   r = c[q >> 2] | 0;
   if (r >>> 0 < (c[j + 40 >> 2] | 0) >>> 0) {
    ks(h, i);
    c[r >> 2] = 0;
    c[r + 4 >> 2] = 0;
    s = c[h >> 2] | 0;
    c[r + 8 >> 2] = 0;
    c[r + 12 >> 2] = s;
    c[q >> 2] = (c[q >> 2] | 0) + 16;
   } else ls(m, i);
   s = j + 62 | 0;
   a[s >> 0] = 0;
   a[j + 63 >> 0] = 1;
   c[h >> 2] = 0;
   r = b + (Qe(b) | 0) | 0;
   ms(b, r, j, h);
   t = c[h >> 2] | 0;
   do if ((t | 0) != 0 | (a[s >> 0] | 0) == 0) {
    u = t;
    k = 22;
   } else {
    v = c[m >> 2] | 0;
    if ((v | 0) == (c[q >> 2] | 0)) k = 23; else if ((c[v >> 2] | 0) == (c[v + 4 >> 2] | 0)) k = 23; else {
     a[s >> 0] = 0;
     a[p >> 0] = 0;
     v = c[j >> 2] | 0;
     w = j + 4 | 0;
     while (1) {
      x = c[w >> 2] | 0;
      if ((x | 0) == (v | 0)) break;
      y = x + -24 | 0;
      c[w >> 2] = y;
      ns(y);
     }
     w = c[j + 16 >> 2] | 0;
     v = j + 20 | 0;
     while (1) {
      y = c[v >> 2] | 0;
      if ((y | 0) == (w | 0)) break;
      x = y + -16 | 0;
      c[v >> 2] = x;
      os(x);
     }
     ms(b, r, j, h);
     if (!(a[s >> 0] | 0)) {
      u = c[h >> 2] | 0;
      k = 22;
      break;
     } else {
      c[h >> 2] = -2;
      z = 0;
      A = -2;
      break;
     }
    }
   } while (0);
   if ((k | 0) == 22) if (!u) k = 23; else {
    z = 0;
    A = u;
   }
   do if ((k | 0) == 23) {
    u = j + 4 | 0;
    s = ps((c[u >> 2] | 0) + -24 | 0) | 0;
    r = s + 1 | 0;
    if (r >>> 0 > o >>> 0) {
     b = zd(d, r) | 0;
     if (!b) {
      c[h >> 2] = -1;
      z = 0;
      A = -1;
      break;
     }
     if (n) B = b; else {
      c[e >> 2] = r;
      B = b;
     }
    } else if (!d) {
     z = 0;
     A = 0;
     break;
    } else B = d;
    b = c[u >> 2] | 0;
    r = b + -12 | 0;
    p = a[r + 11 >> 0] | 0;
    q = p << 24 >> 24 < 0;
    qs(b + -24 | 0, q ? c[r >> 2] | 0 : r, q ? c[b + -8 >> 2] | 0 : p & 255) | 0;
    p = (c[u >> 2] | 0) + -24 | 0;
    if ((a[p + 11 >> 0] | 0) < 0) C = c[p >> 2] | 0; else C = p;
    zv(B | 0, C | 0, s | 0) | 0;
    a[B + s >> 0] = 0;
    z = B;
    A = 0;
   } while (0);
   if (f | 0) c[f >> 2] = A;
   rs(j);
   ss(i);
   D = z;
  }
 }
 if ((k | 0) == 3) if (!f) D = 0; else {
  c[f >> 2] = -3;
  D = 0;
 }
 l = g;
 return D | 0;
}

function ft(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0;
 f = l;
 l = l + 32 | 0;
 g = f + 8 | 0;
 h = f;
 a : do if ((d - b | 0) > 1) {
  i = (a[b >> 0] | 0) == 76 ? b + 1 | 0 : b;
  switch (a[i >> 0] | 0) {
  case 78:
   {
    j = xu(i, d, e) | 0;
    k = (j | 0) == (i | 0) ? b : j;
    break a;
    break;
   }
  case 90:
   {
    j = yu(i, d, e) | 0;
    k = (j | 0) == (i | 0) ? b : j;
    break a;
    break;
   }
  default:
   {
    j = zu(i, d, e) | 0;
    if ((j | 0) == (i | 0)) {
     m = gt(i, d, e) | 0;
     if ((m | 0) == (i | 0) | (m | 0) == (d | 0)) {
      k = b;
      break a;
     }
     if ((a[m >> 0] | 0) != 73) {
      k = b;
      break a;
     }
     i = Zs(m, d, e) | 0;
     if ((i | 0) == (m | 0)) {
      k = b;
      break a;
     }
     m = e + 4 | 0;
     n = c[m >> 2] | 0;
     if (((n - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      k = b;
      break a;
     }
     _s(g, n + -24 | 0);
     n = c[m >> 2] | 0;
     o = n + -24 | 0;
     p = n;
     while (1) {
      if ((p | 0) == (o | 0)) break;
      q = p + -24 | 0;
      c[m >> 2] = q;
      ns(q);
      p = c[m >> 2] | 0;
     }
     m = a[g + 11 >> 0] | 0;
     p = m << 24 >> 24 < 0;
     qs(n + -48 | 0, p ? c[g >> 2] | 0 : g, p ? c[g + 4 >> 2] | 0 : m & 255) | 0;
     Es(g);
     k = i;
     break a;
    }
    if ((j | 0) == (d | 0)) {
     k = d;
     break a;
    }
    if ((a[j >> 0] | 0) != 73) {
     k = j;
     break a;
    }
    m = e + 4 | 0;
    p = c[m >> 2] | 0;
    if ((c[e >> 2] | 0) == (p | 0)) {
     k = b;
     break a;
    }
    c[h >> 2] = c[e + 12 >> 2];
    Rs(g, p + -24 | 0, h);
    p = e + 20 | 0;
    o = c[p >> 2] | 0;
    if (o >>> 0 < (c[e + 24 >> 2] | 0) >>> 0) {
     c[o >> 2] = 0;
     q = o + 4 | 0;
     c[q >> 2] = 0;
     r = c[g + 12 >> 2] | 0;
     c[o + 8 >> 2] = 0;
     c[o + 12 >> 2] = r;
     c[o >> 2] = c[g >> 2];
     r = g + 4 | 0;
     c[q >> 2] = c[r >> 2];
     q = g + 8 | 0;
     c[o + 8 >> 2] = c[q >> 2];
     c[q >> 2] = 0;
     c[r >> 2] = 0;
     c[g >> 2] = 0;
     c[p >> 2] = (c[p >> 2] | 0) + 16;
    } else Ss(e + 16 | 0, g);
    os(g);
    p = Zs(j, d, e) | 0;
    if ((p | 0) == (j | 0)) {
     k = b;
     break a;
    }
    r = c[m >> 2] | 0;
    if (((r - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     k = b;
     break a;
    }
    _s(g, r + -24 | 0);
    r = c[m >> 2] | 0;
    q = r + -24 | 0;
    o = r;
    while (1) {
     if ((o | 0) == (q | 0)) break;
     s = o + -24 | 0;
     c[m >> 2] = s;
     ns(s);
     o = c[m >> 2] | 0;
    }
    m = a[g + 11 >> 0] | 0;
    o = m << 24 >> 24 < 0;
    qs(r + -48 | 0, o ? c[g >> 2] | 0 : g, o ? c[g + 4 >> 2] | 0 : m & 255) | 0;
    Es(g);
    k = p;
    break a;
   }
  }
 } else k = b; while (0);
 l = f;
 return k | 0;
}

function cs(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0;
 a : do if (Ir(b, c[d + 8 >> 2] | 0, g) | 0) Kr(0, d, e, f); else {
  if (!(Ir(b, c[d >> 2] | 0, g) | 0)) {
   h = c[b + 12 >> 2] | 0;
   i = b + 16 + (h << 3) | 0;
   gs(b + 16 | 0, d, e, f, g);
   j = b + 24 | 0;
   if ((h | 0) <= 1) break;
   h = c[b + 8 >> 2] | 0;
   if (!(h & 2)) {
    k = d + 36 | 0;
    if ((c[k >> 2] | 0) != 1) {
     if (!(h & 1)) {
      h = d + 54 | 0;
      l = j;
      while (1) {
       if (a[h >> 0] | 0) break a;
       if ((c[k >> 2] | 0) == 1) break a;
       gs(l, d, e, f, g);
       l = l + 8 | 0;
       if (l >>> 0 >= i >>> 0) break a;
      }
     }
     l = d + 24 | 0;
     h = d + 54 | 0;
     m = j;
     while (1) {
      if (a[h >> 0] | 0) break a;
      if ((c[k >> 2] | 0) == 1) if ((c[l >> 2] | 0) == 1) break a;
      gs(m, d, e, f, g);
      m = m + 8 | 0;
      if (m >>> 0 >= i >>> 0) break a;
     }
    }
   }
   m = d + 54 | 0;
   l = j;
   while (1) {
    if (a[m >> 0] | 0) break a;
    gs(l, d, e, f, g);
    l = l + 8 | 0;
    if (l >>> 0 >= i >>> 0) break a;
   }
  }
  if ((c[d + 16 >> 2] | 0) != (e | 0)) {
   i = d + 20 | 0;
   if ((c[i >> 2] | 0) != (e | 0)) {
    c[d + 32 >> 2] = f;
    l = d + 44 | 0;
    if ((c[l >> 2] | 0) == 4) break;
    m = b + 16 + (c[b + 12 >> 2] << 3) | 0;
    j = d + 52 | 0;
    k = d + 53 | 0;
    h = d + 54 | 0;
    n = b + 8 | 0;
    o = d + 24 | 0;
    p = 0;
    q = b + 16 | 0;
    r = 0;
    b : while (1) {
     if (q >>> 0 >= m >>> 0) {
      s = p;
      t = 18;
      break;
     }
     a[j >> 0] = 0;
     a[k >> 0] = 0;
     fs(q, d, e, e, 1, g);
     if (a[h >> 0] | 0) {
      s = p;
      t = 18;
      break;
     }
     do if (!(a[k >> 0] | 0)) {
      u = p;
      v = r;
     } else {
      if (!(a[j >> 0] | 0)) if (!(c[n >> 2] & 1)) {
       s = 1;
       t = 18;
       break b;
      } else {
       u = 1;
       v = r;
       break;
      }
      if ((c[o >> 2] | 0) == 1) {
       t = 23;
       break b;
      }
      if (!(c[n >> 2] & 2)) {
       t = 23;
       break b;
      } else {
       u = 1;
       v = 1;
      }
     } while (0);
     p = u;
     q = q + 8 | 0;
     r = v;
    }
    do if ((t | 0) == 18) {
     if (!r) {
      c[i >> 2] = e;
      q = d + 40 | 0;
      c[q >> 2] = (c[q >> 2] | 0) + 1;
      if ((c[d + 36 >> 2] | 0) == 1) if ((c[o >> 2] | 0) == 2) {
       a[h >> 0] = 1;
       if (s) {
        t = 23;
        break;
       } else {
        w = 4;
        break;
       }
      }
     }
     if (s) t = 23; else w = 4;
    } while (0);
    if ((t | 0) == 23) w = 3;
    c[l >> 2] = w;
    break;
   }
  }
  if ((f | 0) == 1) c[d + 32 >> 2] = 1;
 } while (0);
 return;
}

function no(b, c, e, f, g) {
 b = b | 0;
 c = c | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0;
 h = c;
 if (!(g & 4)) {
  i = 0;
  j = b;
 } else if ((h - b | 0) > 2) if ((a[b >> 0] | 0) == -17) if ((a[b + 1 >> 0] | 0) == -69) {
  i = 0;
  j = (a[b + 2 >> 0] | 0) == -65 ? b + 3 | 0 : b;
 } else {
  i = 0;
  j = b;
 } else {
  i = 0;
  j = b;
 } else {
  i = 0;
  j = b;
 }
 a : while (1) {
  if (!(i >>> 0 < e >>> 0 & j >>> 0 < c >>> 0)) {
   k = 33;
   break;
  }
  g = a[j >> 0] | 0;
  l = g & 255;
  if (l >>> 0 > f >>> 0) {
   k = 33;
   break;
  }
  do if (g << 24 >> 24 > -1) {
   m = i;
   n = j + 1 | 0;
  } else {
   if ((g & 255) < 194) {
    k = 33;
    break a;
   }
   if ((g & 255) < 224) {
    if ((h - j | 0) < 2) {
     k = 33;
     break a;
    }
    o = d[j + 1 >> 0] | 0;
    if ((o & 192 | 0) != 128) {
     k = 33;
     break a;
    }
    if ((o & 63 | l << 6 & 1984) >>> 0 > f >>> 0) {
     k = 33;
     break a;
    } else {
     m = i;
     n = j + 2 | 0;
     break;
    }
   }
   if ((g & 255) < 240) {
    o = j;
    if ((h - o | 0) < 3) {
     k = 33;
     break a;
    }
    p = a[j + 1 >> 0] | 0;
    q = a[j + 2 >> 0] | 0;
    switch (g << 24 >> 24) {
    case -32:
     {
      if ((p & -32) << 24 >> 24 != -96) {
       r = o;
       break a;
      }
      break;
     }
    case -19:
     {
      if ((p & -32) << 24 >> 24 != -128) {
       r = o;
       break a;
      }
      break;
     }
    default:
     if ((p & -64) << 24 >> 24 != -128) {
      r = o;
      break a;
     }
    }
    o = q & 255;
    if ((o & 192 | 0) != 128) {
     k = 33;
     break a;
    }
    if (((p & 63) << 6 | l << 12 & 61440 | o & 63) >>> 0 > f >>> 0) {
     k = 33;
     break a;
    } else {
     m = i;
     n = j + 3 | 0;
     break;
    }
   }
   if ((g & 255) >= 245) {
    k = 33;
    break a;
   }
   o = j;
   if ((e - i | 0) >>> 0 < 2 | (h - o | 0) < 4) {
    k = 33;
    break a;
   }
   p = a[j + 1 >> 0] | 0;
   q = a[j + 2 >> 0] | 0;
   s = a[j + 3 >> 0] | 0;
   switch (g << 24 >> 24) {
   case -16:
    {
     if ((p + 112 & 255) >= 48) {
      r = o;
      break a;
     }
     break;
    }
   case -12:
    {
     if ((p & -16) << 24 >> 24 != -128) {
      r = o;
      break a;
     }
     break;
    }
   default:
    if ((p & -64) << 24 >> 24 != -128) {
     r = o;
     break a;
    }
   }
   o = q & 255;
   if ((o & 192 | 0) != 128) {
    k = 33;
    break a;
   }
   q = s & 255;
   if ((q & 192 | 0) != 128) {
    k = 33;
    break a;
   }
   if (((p & 63) << 12 | l << 18 & 1835008 | o << 6 & 4032 | q & 63) >>> 0 > f >>> 0) {
    k = 33;
    break a;
   } else {
    m = i + 1 | 0;
    n = j + 4 | 0;
   }
  } while (0);
  i = m + 1 | 0;
  j = n;
 }
 if ((k | 0) == 33) r = j;
 return r - b | 0;
}

function po(d, f, g, h, i, j, k, l) {
 d = d | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 l = l | 0;
 var m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 c[g >> 2] = d;
 c[j >> 2] = h;
 d = i;
 if (!(l & 2)) m = 4; else if ((d - h | 0) < 3) n = 1; else {
  c[j >> 2] = h + 1;
  a[h >> 0] = -17;
  h = c[j >> 2] | 0;
  c[j >> 2] = h + 1;
  a[h >> 0] = -69;
  h = c[j >> 2] | 0;
  c[j >> 2] = h + 1;
  a[h >> 0] = -65;
  m = 4;
 }
 a : do if ((m | 0) == 4) {
  h = f;
  l = c[g >> 2] | 0;
  while (1) {
   if (l >>> 0 >= f >>> 0) {
    n = 0;
    break a;
   }
   i = b[l >> 1] | 0;
   o = i & 65535;
   if (o >>> 0 > k >>> 0) {
    n = 2;
    break a;
   }
   do if ((i & 65535) < 128) {
    p = c[j >> 2] | 0;
    if ((d - p | 0) < 1) {
     n = 1;
     break a;
    }
    c[j >> 2] = p + 1;
    a[p >> 0] = i;
   } else {
    if ((i & 65535) < 2048) {
     p = c[j >> 2] | 0;
     if ((d - p | 0) < 2) {
      n = 1;
      break a;
     }
     c[j >> 2] = p + 1;
     a[p >> 0] = o >>> 6 | 192;
     p = c[j >> 2] | 0;
     c[j >> 2] = p + 1;
     a[p >> 0] = o & 63 | 128;
     break;
    }
    if ((i & 65535) < 55296) {
     p = c[j >> 2] | 0;
     if ((d - p | 0) < 3) {
      n = 1;
      break a;
     }
     c[j >> 2] = p + 1;
     a[p >> 0] = o >>> 12 | 224;
     p = c[j >> 2] | 0;
     c[j >> 2] = p + 1;
     a[p >> 0] = o >>> 6 & 63 | 128;
     p = c[j >> 2] | 0;
     c[j >> 2] = p + 1;
     a[p >> 0] = o & 63 | 128;
     break;
    }
    if ((i & 65535) >= 56320) {
     if ((i & 65535) < 57344) {
      n = 2;
      break a;
     }
     p = c[j >> 2] | 0;
     if ((d - p | 0) < 3) {
      n = 1;
      break a;
     }
     c[j >> 2] = p + 1;
     a[p >> 0] = o >>> 12 | 224;
     p = c[j >> 2] | 0;
     c[j >> 2] = p + 1;
     a[p >> 0] = o >>> 6 & 63 | 128;
     p = c[j >> 2] | 0;
     c[j >> 2] = p + 1;
     a[p >> 0] = o & 63 | 128;
     break;
    }
    if ((h - l | 0) < 4) {
     n = 1;
     break a;
    }
    p = l + 2 | 0;
    q = e[p >> 1] | 0;
    if ((q & 64512 | 0) != 56320) {
     n = 2;
     break a;
    }
    if ((d - (c[j >> 2] | 0) | 0) < 4) {
     n = 1;
     break a;
    }
    r = o & 960;
    if (((r << 10) + 65536 | o << 10 & 64512 | q & 1023) >>> 0 > k >>> 0) {
     n = 2;
     break a;
    }
    c[g >> 2] = p;
    p = (r >>> 6) + 1 | 0;
    r = c[j >> 2] | 0;
    c[j >> 2] = r + 1;
    a[r >> 0] = p >>> 2 | 240;
    r = c[j >> 2] | 0;
    c[j >> 2] = r + 1;
    a[r >> 0] = o >>> 2 & 15 | p << 4 & 48 | 128;
    p = c[j >> 2] | 0;
    c[j >> 2] = p + 1;
    a[p >> 0] = o << 4 & 48 | q >>> 6 & 15 | 128;
    p = c[j >> 2] | 0;
    c[j >> 2] = p + 1;
    a[p >> 0] = q & 63 | 128;
   } while (0);
   o = (c[g >> 2] | 0) + 2 | 0;
   c[g >> 2] = o;
   l = o;
  }
 } while (0);
 return n | 0;
}

function tk(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0;
 j = l;
 l = l + 16 | 0;
 k = j;
 m = Ji(i, 23140) | 0;
 n = Ji(i, 23148) | 0;
 Bc[c[(c[n >> 2] | 0) + 20 >> 2] & 63](k, n);
 i = k + 11 | 0;
 o = a[i >> 0] | 0;
 p = k + 4 | 0;
 if (!((o << 24 >> 24 < 0 ? c[p >> 2] | 0 : o & 255) | 0)) {
  sc[c[(c[m >> 2] | 0) + 48 >> 2] & 7](m, b, e, f) | 0;
  o = b;
  q = f + (e - o << 2) | 0;
  c[h >> 2] = q;
  r = o;
  s = q;
 } else {
  c[h >> 2] = f;
  q = a[b >> 0] | 0;
  switch (q << 24 >> 24) {
  case 43:
  case 45:
   {
    o = qc[c[(c[m >> 2] | 0) + 44 >> 2] & 31](m, q) | 0;
    q = c[h >> 2] | 0;
    c[h >> 2] = q + 4;
    c[q >> 2] = o;
    t = b + 1 | 0;
    break;
   }
  default:
   t = b;
  }
  a : do if ((e - t | 0) > 1) if ((a[t >> 0] | 0) == 48) {
   o = t + 1 | 0;
   switch (a[o >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     u = t;
     break a;
    }
   }
   q = qc[c[(c[m >> 2] | 0) + 44 >> 2] & 31](m, 48) | 0;
   v = c[h >> 2] | 0;
   c[h >> 2] = v + 4;
   c[v >> 2] = q;
   q = qc[c[(c[m >> 2] | 0) + 44 >> 2] & 31](m, a[o >> 0] | 0) | 0;
   o = c[h >> 2] | 0;
   c[h >> 2] = o + 4;
   c[o >> 2] = q;
   u = t + 2 | 0;
  } else u = t; else u = t; while (0);
  b : do if ((u | 0) != (e | 0)) {
   t = e;
   q = u;
   while (1) {
    o = t + -1 | 0;
    if (q >>> 0 >= o >>> 0) break b;
    v = a[q >> 0] | 0;
    a[q >> 0] = a[o >> 0] | 0;
    a[o >> 0] = v;
    t = o;
    q = q + 1 | 0;
   }
  } while (0);
  q = pc[c[(c[n >> 2] | 0) + 16 >> 2] & 63](n) | 0;
  n = u;
  t = 0;
  o = 0;
  while (1) {
   if (n >>> 0 >= e >>> 0) break;
   v = a[((a[i >> 0] | 0) < 0 ? c[k >> 2] | 0 : k) + t >> 0] | 0;
   if (v << 24 >> 24 != 0 & (o | 0) == (v << 24 >> 24 | 0)) {
    v = c[h >> 2] | 0;
    c[h >> 2] = v + 4;
    c[v >> 2] = q;
    v = a[i >> 0] | 0;
    w = t + (t >>> 0 < ((v << 24 >> 24 < 0 ? c[p >> 2] | 0 : v & 255) + -1 | 0) >>> 0 & 1) | 0;
    x = 0;
   } else {
    w = t;
    x = o;
   }
   v = qc[c[(c[m >> 2] | 0) + 44 >> 2] & 31](m, a[n >> 0] | 0) | 0;
   y = c[h >> 2] | 0;
   c[h >> 2] = y + 4;
   c[y >> 2] = v;
   n = n + 1 | 0;
   t = w;
   o = x + 1 | 0;
  }
  x = b;
  b = f + (u - x << 2) | 0;
  u = c[h >> 2] | 0;
  if ((b | 0) == (u | 0)) {
   r = x;
   s = b;
  } else {
   o = u;
   u = b;
   while (1) {
    b = o + -4 | 0;
    if (u >>> 0 >= b >>> 0) break;
    w = c[u >> 2] | 0;
    c[u >> 2] = c[b >> 2];
    c[b >> 2] = w;
    o = b;
    u = u + 4 | 0;
   }
   r = x;
   s = c[h >> 2] | 0;
  }
 }
 c[g >> 2] = (d | 0) == (e | 0) ? s : f + (d - r << 2) | 0;
 br(k);
 l = j;
 return;
}

function Nn(b, c, e, f, g) {
 b = b | 0;
 c = c | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 h = c;
 if (!(g & 4)) {
  i = 0;
  j = b;
 } else if ((h - b | 0) > 2) if ((a[b >> 0] | 0) == -17) if ((a[b + 1 >> 0] | 0) == -69) {
  i = 0;
  j = (a[b + 2 >> 0] | 0) == -65 ? b + 3 | 0 : b;
 } else {
  i = 0;
  j = b;
 } else {
  i = 0;
  j = b;
 } else {
  i = 0;
  j = b;
 }
 a : while (1) {
  if (!(i >>> 0 < e >>> 0 & j >>> 0 < c >>> 0)) {
   k = 34;
   break;
  }
  g = a[j >> 0] | 0;
  l = g & 255;
  do if (g << 24 >> 24 > -1) {
   if (l >>> 0 > f >>> 0) {
    k = 34;
    break a;
   }
   m = j + 1 | 0;
  } else {
   if ((g & 255) < 194) {
    k = 34;
    break a;
   }
   if ((g & 255) < 224) {
    if ((h - j | 0) < 2) {
     k = 34;
     break a;
    }
    n = d[j + 1 >> 0] | 0;
    if ((n & 192 | 0) != 128) {
     k = 34;
     break a;
    }
    if ((n & 63 | l << 6 & 1984) >>> 0 > f >>> 0) {
     k = 34;
     break a;
    }
    m = j + 2 | 0;
    break;
   }
   if ((g & 255) < 240) {
    n = j;
    if ((h - n | 0) < 3) {
     k = 34;
     break a;
    }
    o = a[j + 1 >> 0] | 0;
    p = a[j + 2 >> 0] | 0;
    switch (g << 24 >> 24) {
    case -32:
     {
      if ((o & -32) << 24 >> 24 != -96) {
       q = n;
       break a;
      }
      break;
     }
    case -19:
     {
      if ((o & -32) << 24 >> 24 != -128) {
       q = n;
       break a;
      }
      break;
     }
    default:
     if ((o & -64) << 24 >> 24 != -128) {
      q = n;
      break a;
     }
    }
    n = p & 255;
    if ((n & 192 | 0) != 128) {
     k = 34;
     break a;
    }
    if (((o & 63) << 6 | l << 12 & 61440 | n & 63) >>> 0 > f >>> 0) {
     k = 34;
     break a;
    } else {
     m = j + 3 | 0;
     break;
    }
   }
   if ((g & 255) >= 245) {
    k = 34;
    break a;
   }
   n = j;
   if ((h - n | 0) < 4) {
    k = 34;
    break a;
   }
   o = a[j + 1 >> 0] | 0;
   p = a[j + 2 >> 0] | 0;
   r = a[j + 3 >> 0] | 0;
   switch (g << 24 >> 24) {
   case -16:
    {
     if ((o + 112 & 255) >= 48) {
      q = n;
      break a;
     }
     break;
    }
   case -12:
    {
     if ((o & -16) << 24 >> 24 != -128) {
      q = n;
      break a;
     }
     break;
    }
   default:
    if ((o & -64) << 24 >> 24 != -128) {
     q = n;
     break a;
    }
   }
   n = p & 255;
   if ((n & 192 | 0) != 128) {
    k = 34;
    break a;
   }
   p = r & 255;
   if ((p & 192 | 0) != 128) {
    k = 34;
    break a;
   }
   if (((o & 63) << 12 | l << 18 & 1835008 | n << 6 & 4032 | p & 63) >>> 0 > f >>> 0) {
    k = 34;
    break a;
   } else m = j + 4 | 0;
  } while (0);
  i = i + 1 | 0;
  j = m;
 }
 if ((k | 0) == 34) q = j;
 return q - b | 0;
}

function fk(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0;
 j = l;
 l = l + 16 | 0;
 k = j;
 m = Ji(i, 23108) | 0;
 n = Ji(i, 23124) | 0;
 Bc[c[(c[n >> 2] | 0) + 20 >> 2] & 63](k, n);
 i = k + 11 | 0;
 o = a[i >> 0] | 0;
 p = k + 4 | 0;
 if (!((o << 24 >> 24 < 0 ? c[p >> 2] | 0 : o & 255) | 0)) {
  sc[c[(c[m >> 2] | 0) + 32 >> 2] & 7](m, b, e, f) | 0;
  o = b;
  q = f + (e - o) | 0;
  c[h >> 2] = q;
  r = o;
  s = q;
 } else {
  c[h >> 2] = f;
  q = a[b >> 0] | 0;
  switch (q << 24 >> 24) {
  case 43:
  case 45:
   {
    o = qc[c[(c[m >> 2] | 0) + 28 >> 2] & 31](m, q) | 0;
    q = c[h >> 2] | 0;
    c[h >> 2] = q + 1;
    a[q >> 0] = o;
    t = b + 1 | 0;
    break;
   }
  default:
   t = b;
  }
  a : do if ((e - t | 0) > 1) if ((a[t >> 0] | 0) == 48) {
   o = t + 1 | 0;
   switch (a[o >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     u = t;
     break a;
    }
   }
   q = qc[c[(c[m >> 2] | 0) + 28 >> 2] & 31](m, 48) | 0;
   v = c[h >> 2] | 0;
   c[h >> 2] = v + 1;
   a[v >> 0] = q;
   q = qc[c[(c[m >> 2] | 0) + 28 >> 2] & 31](m, a[o >> 0] | 0) | 0;
   o = c[h >> 2] | 0;
   c[h >> 2] = o + 1;
   a[o >> 0] = q;
   u = t + 2 | 0;
  } else u = t; else u = t; while (0);
  b : do if ((u | 0) != (e | 0)) {
   t = e;
   q = u;
   while (1) {
    o = t + -1 | 0;
    if (q >>> 0 >= o >>> 0) break b;
    v = a[q >> 0] | 0;
    a[q >> 0] = a[o >> 0] | 0;
    a[o >> 0] = v;
    t = o;
    q = q + 1 | 0;
   }
  } while (0);
  q = pc[c[(c[n >> 2] | 0) + 16 >> 2] & 63](n) | 0;
  n = u;
  t = 0;
  o = 0;
  while (1) {
   if (n >>> 0 >= e >>> 0) break;
   v = a[((a[i >> 0] | 0) < 0 ? c[k >> 2] | 0 : k) + t >> 0] | 0;
   if (v << 24 >> 24 != 0 & (o | 0) == (v << 24 >> 24 | 0)) {
    v = c[h >> 2] | 0;
    c[h >> 2] = v + 1;
    a[v >> 0] = q;
    v = a[i >> 0] | 0;
    w = t + (t >>> 0 < ((v << 24 >> 24 < 0 ? c[p >> 2] | 0 : v & 255) + -1 | 0) >>> 0 & 1) | 0;
    x = 0;
   } else {
    w = t;
    x = o;
   }
   v = qc[c[(c[m >> 2] | 0) + 28 >> 2] & 31](m, a[n >> 0] | 0) | 0;
   y = c[h >> 2] | 0;
   c[h >> 2] = y + 1;
   a[y >> 0] = v;
   n = n + 1 | 0;
   t = w;
   o = x + 1 | 0;
  }
  x = b;
  b = f + (u - x) | 0;
  u = c[h >> 2] | 0;
  if ((b | 0) == (u | 0)) {
   r = x;
   s = b;
  } else {
   o = u;
   u = b;
   while (1) {
    b = o + -1 | 0;
    if (u >>> 0 >= b >>> 0) break;
    w = a[u >> 0] | 0;
    a[u >> 0] = a[b >> 0] | 0;
    a[b >> 0] = w;
    o = b;
    u = u + 1 | 0;
   }
   r = x;
   s = c[h >> 2] | 0;
  }
 }
 c[g >> 2] = (d | 0) == (e | 0) ? s : f + (d - r) | 0;
 br(k);
 l = j;
 return;
}

function It(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;
 f = l;
 l = l + 64 | 0;
 g = f + 40 | 0;
 h = f + 24 | 0;
 i = f;
 j = f + 12 | 0;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 115) if ((a[b + 1 >> 0] | 0) == 90) {
  k = b + 2 | 0;
  if ((a[k >> 0] | 0) == 84) {
   m = e + 4 | 0;
   n = ((c[m >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
   o = Ys(k, d, e) | 0;
   d = ((c[m >> 2] | 0) - (c[e >> 2] | 0) | 0) / 24 | 0;
   if ((o | 0) == (k | 0)) p = b; else {
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    k = lh(19119) | 0;
    if (k >>> 0 > 4294967279) _q(h);
    if (k >>> 0 < 11) {
     a[h + 11 >> 0] = k;
     q = h;
    } else {
     r = k + 16 & -16;
     s = Bs(r) | 0;
     c[h >> 2] = s;
     c[h + 8 >> 2] = r | -2147483648;
     c[h + 4 >> 2] = k;
     q = s;
    }
    sg(q, 19119, k) | 0;
    a[g >> 0] = 0;
    mh(q + k | 0, g);
    a : do if ((n | 0) != (d | 0)) {
     _s(g, (c[e >> 2] | 0) + (n * 24 | 0) | 0);
     k = a[g + 11 >> 0] | 0;
     q = k << 24 >> 24 < 0;
     qs(h, q ? c[g >> 2] | 0 : g, q ? c[g + 4 >> 2] | 0 : k & 255) | 0;
     Es(g);
     k = g + 11 | 0;
     q = g + 4 | 0;
     s = n;
     while (1) {
      r = s + 1 | 0;
      if ((r | 0) == (d | 0)) break a;
      _s(i, (c[e >> 2] | 0) + (r * 24 | 0) | 0);
      Ls(i, 0, 19130) | 0;
      c[g >> 2] = c[i >> 2];
      c[g + 4 >> 2] = c[i + 4 >> 2];
      c[g + 8 >> 2] = c[i + 8 >> 2];
      t = 0;
      while (1) {
       if ((t | 0) == 3) break;
       c[i + (t << 2) >> 2] = 0;
       t = t + 1 | 0;
      }
      t = a[k >> 0] | 0;
      u = t << 24 >> 24 < 0;
      qs(h, u ? c[g >> 2] | 0 : g, u ? c[q >> 2] | 0 : t & 255) | 0;
      Es(g);
      Es(i);
      s = r;
     }
    } while (0);
    Ms(h, 18906) | 0;
    i = d;
    while (1) {
     if ((i | 0) == (n | 0)) break;
     d = c[m >> 2] | 0;
     s = d + -24 | 0;
     q = d;
     while (1) {
      if ((q | 0) == (s | 0)) break;
      d = q + -24 | 0;
      c[m >> 2] = d;
      ns(d);
      q = c[m >> 2] | 0;
     }
     i = i + -1 | 0;
    }
    c[j >> 2] = c[h >> 2];
    c[j + 4 >> 2] = c[h + 4 >> 2];
    c[j + 8 >> 2] = c[h + 8 >> 2];
    i = 0;
    while (1) {
     if ((i | 0) == 3) break;
     c[h + (i << 2) >> 2] = 0;
     i = i + 1 | 0;
    }
    bt(g, j);
    i = c[m >> 2] | 0;
    if (i >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(i, g);
     c[m >> 2] = (c[m >> 2] | 0) + 24;
    } else et(e, g);
    ns(g);
    Es(j);
    Es(h);
    p = o;
   }
  } else p = b;
 } else p = b; else p = b; else p = b;
 l = f;
 return p | 0;
}

function rn(b, d, e, f, g, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 i = +i;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0;
 b = l;
 l = l + 1008 | 0;
 j = b + 8 | 0;
 k = b;
 m = b + 896 | 0;
 n = b + 888 | 0;
 o = b + 488 | 0;
 p = b + 480 | 0;
 q = b + 892 | 0;
 r = b + 476 | 0;
 s = b + 472 | 0;
 t = b + 460 | 0;
 u = b + 448 | 0;
 v = b + 436 | 0;
 w = b + 432 | 0;
 x = b + 32 | 0;
 y = b + 24 | 0;
 z = b + 16 | 0;
 A = b + 20 | 0;
 c[n >> 2] = m;
 h[j >> 3] = i;
 B = qe(m, 100, 17483, j) | 0;
 if (B >>> 0 > 99) {
  m = Mi() | 0;
  h[k >> 3] = i;
  C = ck(n, m, 17483, k) | 0;
  k = c[n >> 2] | 0;
  if (!k) Wq();
  m = xd(C << 2) | 0;
  if (!m) Wq(); else {
   D = m;
   E = C;
   F = m;
   G = k;
  }
 } else {
  D = o;
  E = B;
  F = 0;
  G = 0;
 }
 qh(p, f);
 B = Ji(p, 23140) | 0;
 o = c[n >> 2] | 0;
 sc[c[(c[B >> 2] | 0) + 48 >> 2] & 7](B, o, o + E | 0, D) | 0;
 if (!E) H = 0; else H = (a[c[n >> 2] >> 0] | 0) == 45;
 c[t >> 2] = 0;
 c[t + 4 >> 2] = 0;
 c[t + 8 >> 2] = 0;
 n = 0;
 while (1) {
  if ((n | 0) == 3) break;
  c[t + (n << 2) >> 2] = 0;
  n = n + 1 | 0;
 }
 c[u >> 2] = 0;
 c[u + 4 >> 2] = 0;
 c[u + 8 >> 2] = 0;
 n = 0;
 while (1) {
  if ((n | 0) == 3) break;
  c[u + (n << 2) >> 2] = 0;
  n = n + 1 | 0;
 }
 c[v >> 2] = 0;
 c[v + 4 >> 2] = 0;
 c[v + 8 >> 2] = 0;
 n = 0;
 while (1) {
  if ((n | 0) == 3) break;
  c[v + (n << 2) >> 2] = 0;
  n = n + 1 | 0;
 }
 tn(e, H, p, q, r, s, t, u, v, w);
 e = c[w >> 2] | 0;
 if ((E | 0) > (e | 0)) {
  w = a[v + 8 + 3 >> 0] | 0;
  n = a[u + 8 + 3 >> 0] | 0;
  I = 1;
  J = (w << 24 >> 24 < 0 ? c[v + 4 >> 2] | 0 : w & 255) + (E - e << 1) | 0;
  K = n << 24 >> 24 < 0 ? c[u + 4 >> 2] | 0 : n & 255;
 } else {
  n = a[v + 8 + 3 >> 0] | 0;
  w = a[u + 8 + 3 >> 0] | 0;
  I = 2;
  J = w << 24 >> 24 < 0 ? c[u + 4 >> 2] | 0 : w & 255;
  K = n << 24 >> 24 < 0 ? c[v + 4 >> 2] | 0 : n & 255;
 }
 n = K + e + J + I | 0;
 if (n >>> 0 > 100) {
  I = xd(n << 2) | 0;
  if (!I) Wq(); else {
   L = I;
   M = I;
  }
 } else {
  L = x;
  M = 0;
 }
 un(L, y, z, c[f + 4 >> 2] | 0, D, D + (E << 2) | 0, B, H, q, c[r >> 2] | 0, c[s >> 2] | 0, t, u, v, e);
 c[A >> 2] = c[d >> 2];
 d = c[y >> 2] | 0;
 y = c[z >> 2] | 0;
 c[j >> 2] = c[A >> 2];
 A = qk(j, L, d, y, f, g) | 0;
 if (M | 0) yd(M);
 nr(v);
 nr(u);
 br(t);
 Ki(p);
 if (F | 0) yd(F);
 if (G | 0) yd(G);
 l = b;
 return A | 0;
}

function Zn(b, d, e, f, g, h, i, j) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 var k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0;
 k = l;
 l = l + 16 | 0;
 m = k;
 n = e;
 while (1) {
  if ((n | 0) == (f | 0)) {
   o = f;
   break;
  }
  if (!(a[n >> 0] | 0)) {
   o = n;
   break;
  }
  n = n + 1 | 0;
 }
 c[j >> 2] = h;
 c[g >> 2] = e;
 n = i;
 p = b + 8 | 0;
 b = e;
 e = h;
 h = o;
 while (1) {
  if ((e | 0) == (i | 0) | (b | 0) == (f | 0)) {
   q = b;
   r = 32;
   break;
  }
  o = d;
  s = c[o + 4 >> 2] | 0;
  t = m;
  c[t >> 2] = c[o >> 2];
  c[t + 4 >> 2] = s;
  u = h;
  s = Tf(c[p >> 2] | 0) | 0;
  t = ef(e, g, u - b | 0, n - e >> 2, d) | 0;
  if (s | 0) Tf(s) | 0;
  if ((t | 0) == -1) {
   v = b;
   w = e;
   r = 10;
   break;
  }
  s = (c[j >> 2] | 0) + (t << 2) | 0;
  c[j >> 2] = s;
  if ((s | 0) == (i | 0)) {
   r = 29;
   break;
  }
  t = c[g >> 2] | 0;
  if ((h | 0) == (f | 0)) {
   x = f;
   y = s;
   z = t;
  } else {
   o = Tf(c[p >> 2] | 0) | 0;
   A = Ae(s, t, 1, d) | 0;
   if (o | 0) Tf(o) | 0;
   if (A | 0) {
    B = 2;
    r = 28;
    break;
   }
   c[j >> 2] = (c[j >> 2] | 0) + 4;
   A = (c[g >> 2] | 0) + 1 | 0;
   c[g >> 2] = A;
   o = A;
   while (1) {
    if ((o | 0) == (f | 0)) {
     C = f;
     break;
    }
    if (!(a[o >> 0] | 0)) {
     C = o;
     break;
    }
    o = o + 1 | 0;
   }
   x = C;
   y = c[j >> 2] | 0;
   z = A;
  }
  b = z;
  e = y;
  h = x;
 }
 do if ((r | 0) == 10) {
  a : while (1) {
   r = 0;
   c[j >> 2] = w;
   if ((v | 0) == (c[g >> 2] | 0)) {
    r = 18;
    break;
   }
   x = Tf(c[p >> 2] | 0) | 0;
   h = Ae(w, v, u - v | 0, m) | 0;
   if (x | 0) Tf(x) | 0;
   switch (h | 0) {
   case -1:
    {
     r = 15;
     break a;
     break;
    }
   case -2:
    {
     r = 16;
     break a;
     break;
    }
   case 0:
    {
     D = 1;
     break;
    }
   default:
    D = h;
   }
   v = v + D | 0;
   w = (c[j >> 2] | 0) + 4 | 0;
   r = 10;
  }
  if ((r | 0) == 15) {
   c[g >> 2] = v;
   B = 2;
   r = 28;
   break;
  } else if ((r | 0) == 16) {
   c[g >> 2] = v;
   B = 1;
   r = 28;
   break;
  } else if ((r | 0) == 18) {
   c[g >> 2] = v;
   B = (v | 0) != (f | 0) & 1;
   r = 28;
   break;
  }
 } else if ((r | 0) == 29) {
  q = c[g >> 2] | 0;
  r = 32;
 } while (0);
 if ((r | 0) == 28) E = B; else if ((r | 0) == 32) E = (q | 0) != (f | 0) & 1;
 l = k;
 return E | 0;
}

function ln(b, d, e, f, g, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 i = +i;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0, K = 0, L = 0, M = 0;
 b = l;
 l = l + 384 | 0;
 j = b + 8 | 0;
 k = b;
 m = b + 284 | 0;
 n = b + 72 | 0;
 o = b + 184 | 0;
 p = b + 68 | 0;
 q = b + 180 | 0;
 r = b + 177 | 0;
 s = b + 176 | 0;
 t = b + 56 | 0;
 u = b + 44 | 0;
 v = b + 32 | 0;
 w = b + 28 | 0;
 x = b + 76 | 0;
 y = b + 24 | 0;
 z = b + 16 | 0;
 A = b + 20 | 0;
 c[n >> 2] = m;
 h[j >> 3] = i;
 B = qe(m, 100, 17483, j) | 0;
 if (B >>> 0 > 99) {
  m = Mi() | 0;
  h[k >> 3] = i;
  C = ck(n, m, 17483, k) | 0;
  k = c[n >> 2] | 0;
  if (!k) Wq();
  m = xd(C) | 0;
  if (!m) Wq(); else {
   D = m;
   E = C;
   F = m;
   G = k;
  }
 } else {
  D = o;
  E = B;
  F = 0;
  G = 0;
 }
 qh(p, f);
 B = Ji(p, 23108) | 0;
 o = c[n >> 2] | 0;
 sc[c[(c[B >> 2] | 0) + 32 >> 2] & 7](B, o, o + E | 0, D) | 0;
 if (!E) H = 0; else H = (a[c[n >> 2] >> 0] | 0) == 45;
 c[t >> 2] = 0;
 c[t + 4 >> 2] = 0;
 c[t + 8 >> 2] = 0;
 n = 0;
 while (1) {
  if ((n | 0) == 3) break;
  c[t + (n << 2) >> 2] = 0;
  n = n + 1 | 0;
 }
 c[u >> 2] = 0;
 c[u + 4 >> 2] = 0;
 c[u + 8 >> 2] = 0;
 n = 0;
 while (1) {
  if ((n | 0) == 3) break;
  c[u + (n << 2) >> 2] = 0;
  n = n + 1 | 0;
 }
 c[v >> 2] = 0;
 c[v + 4 >> 2] = 0;
 c[v + 8 >> 2] = 0;
 n = 0;
 while (1) {
  if ((n | 0) == 3) break;
  c[v + (n << 2) >> 2] = 0;
  n = n + 1 | 0;
 }
 nn(e, H, p, q, r, s, t, u, v, w);
 e = c[w >> 2] | 0;
 if ((E | 0) > (e | 0)) {
  w = a[v + 11 >> 0] | 0;
  n = a[u + 11 >> 0] | 0;
  I = 1;
  J = (w << 24 >> 24 < 0 ? c[v + 4 >> 2] | 0 : w & 255) + (E - e << 1) | 0;
  K = n << 24 >> 24 < 0 ? c[u + 4 >> 2] | 0 : n & 255;
 } else {
  n = a[v + 11 >> 0] | 0;
  w = a[u + 11 >> 0] | 0;
  I = 2;
  J = w << 24 >> 24 < 0 ? c[u + 4 >> 2] | 0 : w & 255;
  K = n << 24 >> 24 < 0 ? c[v + 4 >> 2] | 0 : n & 255;
 }
 n = K + e + J + I | 0;
 if (n >>> 0 > 100) {
  I = xd(n) | 0;
  if (!I) Wq(); else {
   L = I;
   M = I;
  }
 } else {
  L = x;
  M = 0;
 }
 on(L, y, z, c[f + 4 >> 2] | 0, D, D + E | 0, B, H, q, a[r >> 0] | 0, a[s >> 0] | 0, t, u, v, e);
 c[A >> 2] = c[d >> 2];
 d = c[y >> 2] | 0;
 y = c[z >> 2] | 0;
 c[j >> 2] = c[A >> 2];
 A = ed(j, L, d, y, f, g) | 0;
 if (M | 0) yd(M);
 br(v);
 br(u);
 br(t);
 Ki(p);
 if (F | 0) yd(F);
 if (G | 0) yd(G);
 l = b;
 return A | 0;
}

function Yn(b, d, e, f, g, h, i, j) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 var k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;
 k = l;
 l = l + 16 | 0;
 m = k;
 n = k + 8 | 0;
 o = e;
 while (1) {
  if ((o | 0) == (f | 0)) {
   p = f;
   break;
  }
  if (!(c[o >> 2] | 0)) {
   p = o;
   break;
  }
  o = o + 4 | 0;
 }
 c[j >> 2] = h;
 c[g >> 2] = e;
 o = i;
 q = b + 8 | 0;
 b = e;
 e = h;
 h = p;
 a : while (1) {
  if ((e | 0) == (i | 0) | (b | 0) == (f | 0)) {
   r = b;
   s = 35;
   break;
  }
  p = d;
  t = c[p + 4 >> 2] | 0;
  u = m;
  c[u >> 2] = c[p >> 2];
  c[u + 4 >> 2] = t;
  t = Tf(c[q >> 2] | 0) | 0;
  u = yf(e, g, h - b >> 2, o - e | 0, d) | 0;
  if (t | 0) Tf(t) | 0;
  switch (u | 0) {
  case -1:
   {
    s = 10;
    break a;
    break;
   }
  case 0:
   {
    v = 1;
    s = 32;
    break a;
    break;
   }
  default:
   {}
  }
  t = (c[j >> 2] | 0) + u | 0;
  c[j >> 2] = t;
  if ((t | 0) == (i | 0)) {
   s = 33;
   break;
  }
  if ((h | 0) == (f | 0)) {
   w = f;
   x = t;
   y = c[g >> 2] | 0;
  } else {
   t = Tf(c[q >> 2] | 0) | 0;
   u = be(n, 0, d) | 0;
   if (t | 0) Tf(t) | 0;
   if ((u | 0) == -1) {
    z = 2;
    s = 31;
    break;
   }
   if (u >>> 0 > (o - (c[j >> 2] | 0) | 0) >>> 0) {
    z = 1;
    s = 31;
    break;
   } else {
    A = n;
    B = u;
   }
   while (1) {
    if (!B) break;
    u = a[A >> 0] | 0;
    t = c[j >> 2] | 0;
    c[j >> 2] = t + 1;
    a[t >> 0] = u;
    A = A + 1 | 0;
    B = B + -1 | 0;
   }
   u = (c[g >> 2] | 0) + 4 | 0;
   c[g >> 2] = u;
   t = u;
   while (1) {
    if ((t | 0) == (f | 0)) {
     C = f;
     break;
    }
    if (!(c[t >> 2] | 0)) {
     C = t;
     break;
    }
    t = t + 4 | 0;
   }
   w = C;
   x = c[j >> 2] | 0;
   y = u;
  }
  b = y;
  e = x;
  h = w;
 }
 if ((s | 0) == 10) {
  c[j >> 2] = e;
  w = b;
  b = e;
  while (1) {
   if ((w | 0) == (c[g >> 2] | 0)) break;
   e = c[w >> 2] | 0;
   h = Tf(c[q >> 2] | 0) | 0;
   x = be(b, e, m) | 0;
   if (h | 0) Tf(h) | 0;
   if ((x | 0) == -1) break;
   h = (c[j >> 2] | 0) + x | 0;
   c[j >> 2] = h;
   w = w + 4 | 0;
   b = h;
  }
  c[g >> 2] = w;
  v = 2;
  s = 32;
 } else if ((s | 0) == 31) {
  v = z;
  s = 32;
 } else if ((s | 0) == 33) {
  r = c[g >> 2] | 0;
  s = 35;
 }
 if ((s | 0) == 32) D = v; else if ((s | 0) == 35) D = (r | 0) != (f | 0) & 1;
 l = k;
 return D | 0;
}

function ut(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0;
 f = l;
 l = l + 32 | 0;
 g = f + 12 | 0;
 h = f;
 a : do if ((d - b | 0) > 3) if ((a[b >> 0] | 0) == 99) if ((a[b + 1 >> 0] | 0) == 108) {
  i = b + 2 | 0;
  j = kt(i, d, e) | 0;
  if ((j | 0) == (i | 0) | (j | 0) == (d | 0)) k = b; else {
   i = e + 4 | 0;
   m = c[i >> 2] | 0;
   if ((c[e >> 2] | 0) == (m | 0)) k = b; else {
    n = m + -12 | 0;
    o = a[n + 11 >> 0] | 0;
    p = o << 24 >> 24 < 0;
    qs(m + -24 | 0, p ? c[n >> 2] | 0 : n, p ? c[m + -8 >> 2] | 0 : o & 255) | 0;
    c[h >> 2] = 0;
    c[h + 4 >> 2] = 0;
    c[h + 8 >> 2] = 0;
    o = 0;
    while (1) {
     if ((o | 0) == 3) break;
     c[h + (o << 2) >> 2] = 0;
     o = o + 1 | 0;
    }
    o = c[i >> 2] | 0;
    m = o + -12 | 0;
    p = m + 11 | 0;
    if ((a[p >> 0] | 0) < 0) {
     n = c[m >> 2] | 0;
     a[g >> 0] = 0;
     mh(n, g);
     c[o + -8 >> 2] = 0;
    } else {
     a[g >> 0] = 0;
     mh(m, g);
     a[p >> 0] = 0;
    }
    lt(m);
    c[m >> 2] = c[h >> 2];
    c[m + 4 >> 2] = c[h + 4 >> 2];
    c[m + 8 >> 2] = c[h + 8 >> 2];
    m = 0;
    while (1) {
     if ((m | 0) == 3) break;
     c[h + (m << 2) >> 2] = 0;
     m = m + 1 | 0;
    }
    Es(h);
    Ms((c[i >> 2] | 0) + -24 | 0, 18908) | 0;
    m = g + 11 | 0;
    p = g + 4 | 0;
    o = j;
    while (1) {
     if ((a[o >> 0] | 0) == 69) break;
     n = kt(o, d, e) | 0;
     if ((n | 0) == (o | 0) | (n | 0) == (d | 0)) {
      k = b;
      break a;
     }
     q = c[i >> 2] | 0;
     if ((c[e >> 2] | 0) == (q | 0)) {
      k = b;
      break a;
     }
     _s(g, q + -24 | 0);
     q = c[i >> 2] | 0;
     r = q + -24 | 0;
     s = q;
     while (1) {
      if ((s | 0) == (r | 0)) break;
      t = s + -24 | 0;
      c[i >> 2] = t;
      ns(t);
      s = c[i >> 2] | 0;
     }
     s = a[m >> 0] | 0;
     t = s << 24 >> 24 < 0;
     u = t ? c[p >> 2] | 0 : s & 255;
     if (u | 0) {
      if ((c[e >> 2] | 0) == (r | 0)) {
       v = 26;
       break;
      }
      qs(q + -48 | 0, t ? c[g >> 2] | 0 : g, u) | 0;
     }
     Es(g);
     o = n;
    }
    if ((v | 0) == 26) {
     Es(g);
     k = b;
     break;
    }
    p = c[i >> 2] | 0;
    if ((c[e >> 2] | 0) == (p | 0)) k = b; else {
     Ms(p + -24 | 0, 18906) | 0;
     k = o + 1 | 0;
    }
   }
  }
 } else k = b; else k = b; else k = b; while (0);
 l = f;
 return k | 0;
}

function Wi(b, d, e, f, g, h, i, j, k, l, m, n) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 l = l | 0;
 m = m | 0;
 n = n | 0;
 var o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;
 a : do if (b << 24 >> 24 == h << 24 >> 24) if (!(a[d >> 0] | 0)) o = -1; else {
  a[d >> 0] = 0;
  p = c[g >> 2] | 0;
  c[g >> 2] = p + 1;
  a[p >> 0] = 46;
  p = a[j + 11 >> 0] | 0;
  if (!((p << 24 >> 24 < 0 ? c[j + 4 >> 2] | 0 : p & 255) | 0)) o = 0; else {
   p = c[l >> 2] | 0;
   if ((p - k | 0) < 160) {
    q = c[m >> 2] | 0;
    c[l >> 2] = p + 4;
    c[p >> 2] = q;
    o = 0;
   } else o = 0;
  }
 } else {
  if (b << 24 >> 24 == i << 24 >> 24) {
   q = a[j + 11 >> 0] | 0;
   if ((q << 24 >> 24 < 0 ? c[j + 4 >> 2] | 0 : q & 255) | 0) {
    if (!(a[d >> 0] | 0)) {
     o = -1;
     break;
    }
    q = c[l >> 2] | 0;
    if ((q - k | 0) >= 160) {
     o = 0;
     break;
    }
    p = c[m >> 2] | 0;
    c[l >> 2] = q + 4;
    c[q >> 2] = p;
    c[m >> 2] = 0;
    o = 0;
    break;
   }
  }
  p = n + 32 | 0;
  q = 0;
  while (1) {
   r = n + q | 0;
   if ((q | 0) == 32) {
    s = p;
    break;
   }
   if ((a[r >> 0] | 0) == b << 24 >> 24) {
    s = r;
    break;
   } else q = q + 1 | 0;
  }
  q = s - n | 0;
  if ((q | 0) > 31) o = -1; else {
   p = a[15968 + q >> 0] | 0;
   switch (q | 0) {
   case 24:
   case 25:
    {
     r = c[g >> 2] | 0;
     if ((r | 0) != (f | 0)) if ((a[r + -1 >> 0] & 95) != (a[e >> 0] & 127)) {
      o = -1;
      break a;
     }
     c[g >> 2] = r + 1;
     a[r >> 0] = p;
     o = 0;
     break a;
     break;
    }
   case 23:
   case 22:
    {
     a[e >> 0] = 80;
     r = c[g >> 2] | 0;
     c[g >> 2] = r + 1;
     a[r >> 0] = p;
     o = 0;
     break a;
     break;
    }
   default:
    {
     r = p & 95;
     if ((r | 0) == (a[e >> 0] | 0)) {
      a[e >> 0] = r | 128;
      if (a[d >> 0] | 0) {
       a[d >> 0] = 0;
       r = a[j + 11 >> 0] | 0;
       if ((r << 24 >> 24 < 0 ? c[j + 4 >> 2] | 0 : r & 255) | 0) {
        r = c[l >> 2] | 0;
        if ((r - k | 0) < 160) {
         t = c[m >> 2] | 0;
         c[l >> 2] = r + 4;
         c[r >> 2] = t;
        }
       }
      }
     }
     t = c[g >> 2] | 0;
     c[g >> 2] = t + 1;
     a[t >> 0] = p;
     if ((q | 0) > 21) {
      o = 0;
      break a;
     }
     c[m >> 2] = (c[m >> 2] | 0) + 1;
     o = 0;
     break a;
    }
   }
  }
 } while (0);
 return o | 0;
}

function bn(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;
 b = l;
 l = l + 576 | 0;
 j = b + 424 | 0;
 k = b;
 m = b + 24 | 0;
 n = b + 16 | 0;
 o = b + 12 | 0;
 p = b + 8 | 0;
 q = b + 564 | 0;
 r = b + 4 | 0;
 s = b + 464 | 0;
 c[n >> 2] = m;
 t = n + 4 | 0;
 c[t >> 2] = 115;
 qh(p, g);
 u = Ji(p, 23140) | 0;
 a[q >> 0] = 0;
 c[r >> 2] = c[e >> 2];
 v = c[g + 4 >> 2] | 0;
 c[j >> 2] = c[r >> 2];
 if (dn(d, j, f, p, v, h, q, u, n, o, m + 400 | 0) | 0) {
  sc[c[(c[u >> 2] | 0) + 48 >> 2] & 7](u, 17377, 17387, j) | 0;
  u = c[o >> 2] | 0;
  m = c[n >> 2] | 0;
  v = u - m | 0;
  f = m;
  m = u;
  if ((v | 0) > 392) {
   u = xd((v >>> 2) + 2 | 0) | 0;
   if (!u) Wq(); else {
    w = u;
    x = u;
   }
  } else {
   w = s;
   x = 0;
  }
  if (!(a[q >> 0] | 0)) y = w; else {
   a[w >> 0] = 45;
   y = w + 1 | 0;
  }
  w = j + 40 | 0;
  q = j;
  u = f;
  f = y;
  y = m;
  while (1) {
   if (u >>> 0 >= y >>> 0) break;
   m = c[u >> 2] | 0;
   v = j;
   while (1) {
    if ((v | 0) == (w | 0)) {
     z = w;
     break;
    }
    if ((c[v >> 2] | 0) == (m | 0)) {
     z = v;
     break;
    }
    v = v + 4 | 0;
   }
   a[f >> 0] = a[17377 + (z - q >> 2) >> 0] | 0;
   u = u + 4 | 0;
   f = f + 1 | 0;
   y = c[o >> 2] | 0;
  }
  a[f >> 0] = 0;
  c[k >> 2] = i;
  if ((bf(s, 17278, k) | 0) != 1) Yl(0);
  if (x | 0) yd(x);
 }
 x = c[d >> 2] | 0;
 do if (!x) A = 1; else {
  k = c[x + 12 >> 2] | 0;
  if ((k | 0) == (c[x + 16 >> 2] | 0)) B = pc[c[(c[x >> 2] | 0) + 36 >> 2] & 63](x) | 0; else B = Jg(c[k >> 2] | 0) | 0;
  if (rh(B, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   A = 1;
   break;
  } else {
   A = (c[d >> 2] | 0) == 0;
   break;
  }
 } while (0);
 B = c[e >> 2] | 0;
 do if (!B) C = 32; else {
  x = c[B + 12 >> 2] | 0;
  if ((x | 0) == (c[B + 16 >> 2] | 0)) D = pc[c[(c[B >> 2] | 0) + 36 >> 2] & 63](B) | 0; else D = Jg(c[x >> 2] | 0) | 0;
  if (rh(D, Ig() | 0) | 0) {
   c[e >> 2] = 0;
   C = 32;
   break;
  } else if (A) break; else {
   C = 34;
   break;
  }
 } while (0);
 if ((C | 0) == 32) if (A) C = 34;
 if ((C | 0) == 34) c[h >> 2] = c[h >> 2] | 2;
 h = c[d >> 2] | 0;
 Ki(p);
 p = c[n >> 2] | 0;
 c[n >> 2] = 0;
 if (p | 0) Ac[c[t >> 2] & 127](p);
 l = b;
 return h | 0;
}

function Sm(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;
 b = l;
 l = l + 240 | 0;
 j = b + 24 | 0;
 k = b;
 m = b + 140 | 0;
 n = b + 16 | 0;
 o = b + 12 | 0;
 p = b + 8 | 0;
 q = b + 136 | 0;
 r = b + 4 | 0;
 s = b + 36 | 0;
 c[n >> 2] = m;
 t = n + 4 | 0;
 c[t >> 2] = 115;
 qh(p, g);
 u = Ji(p, 23108) | 0;
 a[q >> 0] = 0;
 c[r >> 2] = c[e >> 2];
 v = c[g + 4 >> 2] | 0;
 c[j >> 2] = c[r >> 2];
 if (Vm(d, j, f, p, v, h, q, u, n, o, m + 100 | 0) | 0) {
  sc[c[(c[u >> 2] | 0) + 32 >> 2] & 7](u, 17267, 17277, j) | 0;
  u = c[o >> 2] | 0;
  m = c[n >> 2] | 0;
  v = u - m | 0;
  f = m;
  m = u;
  if ((v | 0) > 98) {
   u = xd(v + 2 | 0) | 0;
   if (!u) Wq(); else {
    w = u;
    x = u;
   }
  } else {
   w = s;
   x = 0;
  }
  if (!(a[q >> 0] | 0)) y = w; else {
   a[w >> 0] = 45;
   y = w + 1 | 0;
  }
  w = j + 10 | 0;
  q = j;
  u = f;
  f = y;
  y = m;
  while (1) {
   if (u >>> 0 >= y >>> 0) break;
   m = a[u >> 0] | 0;
   v = j;
   while (1) {
    if ((v | 0) == (w | 0)) {
     z = w;
     break;
    }
    if ((a[v >> 0] | 0) == m << 24 >> 24) {
     z = v;
     break;
    }
    v = v + 1 | 0;
   }
   a[f >> 0] = a[17267 + (z - q) >> 0] | 0;
   u = u + 1 | 0;
   f = f + 1 | 0;
   y = c[o >> 2] | 0;
  }
  a[f >> 0] = 0;
  c[k >> 2] = i;
  if ((bf(s, 17278, k) | 0) != 1) Yl(0);
  if (x | 0) yd(x);
 }
 x = c[d >> 2] | 0;
 do if (!x) A = 1; else {
  k = c[x + 12 >> 2] | 0;
  if ((k | 0) == (c[x + 16 >> 2] | 0)) B = pc[c[(c[x >> 2] | 0) + 36 >> 2] & 63](x) | 0; else B = rg(a[k >> 0] | 0) | 0;
  if (ph(B, qg() | 0) | 0) {
   c[d >> 2] = 0;
   A = 1;
   break;
  } else {
   A = (c[d >> 2] | 0) == 0;
   break;
  }
 } while (0);
 B = c[e >> 2] | 0;
 do if (!B) C = 32; else {
  x = c[B + 12 >> 2] | 0;
  if ((x | 0) == (c[B + 16 >> 2] | 0)) D = pc[c[(c[B >> 2] | 0) + 36 >> 2] & 63](B) | 0; else D = rg(a[x >> 0] | 0) | 0;
  if (ph(D, qg() | 0) | 0) {
   c[e >> 2] = 0;
   C = 32;
   break;
  } else if (A) break; else {
   C = 34;
   break;
  }
 } while (0);
 if ((C | 0) == 32) if (A) C = 34;
 if ((C | 0) == 34) c[h >> 2] = c[h >> 2] | 2;
 h = c[d >> 2] | 0;
 Ki(p);
 p = c[n >> 2] | 0;
 c[n >> 2] = 0;
 if (p | 0) Ac[c[t >> 2] & 127](p);
 l = b;
 return h | 0;
}

function Ge(a, b) {
 a = a | 0;
 b = b | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0;
 e = a + 4 | 0;
 f = c[e >> 2] | 0;
 g = a + 100 | 0;
 if (f >>> 0 < (c[g >> 2] | 0) >>> 0) {
  c[e >> 2] = f + 1;
  h = d[f >> 0] | 0;
 } else h = xe(a) | 0;
 switch (h | 0) {
 case 43:
 case 45:
  {
   f = (h | 0) == 45 & 1;
   i = c[e >> 2] | 0;
   if (i >>> 0 < (c[g >> 2] | 0) >>> 0) {
    c[e >> 2] = i + 1;
    j = d[i >> 0] | 0;
   } else j = xe(a) | 0;
   if ((b | 0) != 0 & (j + -48 | 0) >>> 0 > 9) if (!(c[g >> 2] | 0)) {
    k = f;
    l = j;
   } else {
    c[e >> 2] = (c[e >> 2] | 0) + -1;
    k = f;
    l = j;
   } else {
    k = f;
    l = j;
   }
   break;
  }
 default:
  {
   k = 0;
   l = h;
  }
 }
 if ((l + -48 | 0) >>> 0 > 9) if (!(c[g >> 2] | 0)) {
  m = -2147483648;
  n = 0;
 } else {
  c[e >> 2] = (c[e >> 2] | 0) + -1;
  m = -2147483648;
  n = 0;
 } else {
  h = 0;
  j = l;
  while (1) {
   h = j + -48 + (h * 10 | 0) | 0;
   l = c[e >> 2] | 0;
   if (l >>> 0 < (c[g >> 2] | 0) >>> 0) {
    c[e >> 2] = l + 1;
    o = d[l >> 0] | 0;
   } else o = xe(a) | 0;
   if (!((o + -48 | 0) >>> 0 < 10 & (h | 0) < 214748364)) break; else j = o;
  }
  j = ((h | 0) < 0) << 31 >> 31;
  if ((o + -48 | 0) >>> 0 < 10) {
   l = o;
   f = h;
   b = j;
   while (1) {
    i = pv(f | 0, b | 0, 10, 0) | 0;
    p = z;
    q = qv(l | 0, ((l | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
    r = qv(q | 0, z | 0, i | 0, p | 0) | 0;
    p = z;
    i = c[e >> 2] | 0;
    if (i >>> 0 < (c[g >> 2] | 0) >>> 0) {
     c[e >> 2] = i + 1;
     s = d[i >> 0] | 0;
    } else s = xe(a) | 0;
    if ((s + -48 | 0) >>> 0 < 10 & ((p | 0) < 21474836 | (p | 0) == 21474836 & r >>> 0 < 2061584302)) {
     l = s;
     f = r;
     b = p;
    } else {
     t = s;
     u = r;
     v = p;
     break;
    }
   }
  } else {
   t = o;
   u = h;
   v = j;
  }
  if ((t + -48 | 0) >>> 0 < 10) do {
   t = c[e >> 2] | 0;
   if (t >>> 0 < (c[g >> 2] | 0) >>> 0) {
    c[e >> 2] = t + 1;
    w = d[t >> 0] | 0;
   } else w = xe(a) | 0;
  } while ((w + -48 | 0) >>> 0 < 10);
  if (c[g >> 2] | 0) c[e >> 2] = (c[e >> 2] | 0) + -1;
  e = (k | 0) != 0;
  k = rv(0, 0, u | 0, v | 0) | 0;
  m = e ? z : v;
  n = e ? k : u;
 }
 z = m;
 return n | 0;
}

function Wk(d, e, f, g, h) {
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;
 d = h + 8 | 0;
 a : while (1) {
  h = c[e >> 2] | 0;
  do if (!h) i = 1; else {
   j = c[h + 12 >> 2] | 0;
   if ((j | 0) == (c[h + 16 >> 2] | 0)) k = pc[c[(c[h >> 2] | 0) + 36 >> 2] & 63](h) | 0; else k = rg(a[j >> 0] | 0) | 0;
   if (ph(k, qg() | 0) | 0) {
    c[e >> 2] = 0;
    i = 1;
    break;
   } else {
    i = (c[e >> 2] | 0) == 0;
    break;
   }
  } while (0);
  h = c[f >> 2] | 0;
  do if (!h) l = 15; else {
   j = c[h + 12 >> 2] | 0;
   if ((j | 0) == (c[h + 16 >> 2] | 0)) m = pc[c[(c[h >> 2] | 0) + 36 >> 2] & 63](h) | 0; else m = rg(a[j >> 0] | 0) | 0;
   if (ph(m, qg() | 0) | 0) {
    c[f >> 2] = 0;
    l = 15;
    break;
   } else if (i) {
    n = h;
    break;
   } else {
    o = h;
    break a;
   }
  } while (0);
  if ((l | 0) == 15) {
   l = 0;
   if (i) {
    o = 0;
    break;
   } else n = 0;
  }
  h = c[e >> 2] | 0;
  j = c[h + 12 >> 2] | 0;
  if ((j | 0) == (c[h + 16 >> 2] | 0)) p = pc[c[(c[h >> 2] | 0) + 36 >> 2] & 63](h) | 0; else p = rg(a[j >> 0] | 0) | 0;
  if ((p & 255) << 24 >> 24 <= -1) {
   o = n;
   break;
  }
  if (!(b[(c[d >> 2] | 0) + (p << 24 >> 24 << 1) >> 1] & 8192)) {
   o = n;
   break;
  }
  j = c[e >> 2] | 0;
  h = j + 12 | 0;
  q = c[h >> 2] | 0;
  if ((q | 0) == (c[j + 16 >> 2] | 0)) {
   pc[c[(c[j >> 2] | 0) + 40 >> 2] & 63](j) | 0;
   continue;
  } else {
   c[h >> 2] = q + 1;
   rg(a[q >> 0] | 0) | 0;
   continue;
  }
 }
 n = c[e >> 2] | 0;
 do if (!n) r = 1; else {
  p = c[n + 12 >> 2] | 0;
  if ((p | 0) == (c[n + 16 >> 2] | 0)) s = pc[c[(c[n >> 2] | 0) + 36 >> 2] & 63](n) | 0; else s = rg(a[p >> 0] | 0) | 0;
  if (ph(s, qg() | 0) | 0) {
   c[e >> 2] = 0;
   r = 1;
   break;
  } else {
   r = (c[e >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!o) l = 38; else {
  e = c[o + 12 >> 2] | 0;
  if ((e | 0) == (c[o + 16 >> 2] | 0)) t = pc[c[(c[o >> 2] | 0) + 36 >> 2] & 63](o) | 0; else t = rg(a[e >> 0] | 0) | 0;
  if (ph(t, qg() | 0) | 0) {
   c[f >> 2] = 0;
   l = 38;
   break;
  } else if (r) break; else {
   l = 40;
   break;
  }
 } while (0);
 if ((l | 0) == 38) if (r) l = 40;
 if ((l | 0) == 40) c[g >> 2] = c[g >> 2] | 2;
 return;
}

function Gj(b, d, e, f, g, h, i, j, k, l, m, n) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 l = l | 0;
 m = m | 0;
 n = n | 0;
 var o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;
 a : do if ((b | 0) == (h | 0)) if (!(a[d >> 0] | 0)) o = -1; else {
  a[d >> 0] = 0;
  p = c[g >> 2] | 0;
  c[g >> 2] = p + 1;
  a[p >> 0] = 46;
  p = a[j + 11 >> 0] | 0;
  if (!((p << 24 >> 24 < 0 ? c[j + 4 >> 2] | 0 : p & 255) | 0)) o = 0; else {
   p = c[l >> 2] | 0;
   if ((p - k | 0) < 160) {
    q = c[m >> 2] | 0;
    c[l >> 2] = p + 4;
    c[p >> 2] = q;
    o = 0;
   } else o = 0;
  }
 } else {
  if ((b | 0) == (i | 0)) {
   q = a[j + 11 >> 0] | 0;
   if ((q << 24 >> 24 < 0 ? c[j + 4 >> 2] | 0 : q & 255) | 0) {
    if (!(a[d >> 0] | 0)) {
     o = -1;
     break;
    }
    q = c[l >> 2] | 0;
    if ((q - k | 0) >= 160) {
     o = 0;
     break;
    }
    p = c[m >> 2] | 0;
    c[l >> 2] = q + 4;
    c[q >> 2] = p;
    c[m >> 2] = 0;
    o = 0;
    break;
   }
  }
  p = n + 128 | 0;
  q = 0;
  while (1) {
   r = n + (q << 2) | 0;
   if ((q | 0) == 32) {
    s = p;
    break;
   }
   if ((c[r >> 2] | 0) == (b | 0)) {
    s = r;
    break;
   } else q = q + 1 | 0;
  }
  q = s - n | 0;
  p = q >> 2;
  if ((q | 0) > 124) o = -1; else {
   r = a[15968 + p >> 0] | 0;
   switch (p | 0) {
   case 24:
   case 25:
    {
     p = c[g >> 2] | 0;
     if ((p | 0) != (f | 0)) if ((a[p + -1 >> 0] & 95) != (a[e >> 0] & 127)) {
      o = -1;
      break a;
     }
     c[g >> 2] = p + 1;
     a[p >> 0] = r;
     o = 0;
     break a;
     break;
    }
   case 23:
   case 22:
    {
     a[e >> 0] = 80;
     break;
    }
   default:
    {
     p = r & 95;
     if ((p | 0) == (a[e >> 0] | 0)) {
      a[e >> 0] = p | 128;
      if (a[d >> 0] | 0) {
       a[d >> 0] = 0;
       p = a[j + 11 >> 0] | 0;
       if ((p << 24 >> 24 < 0 ? c[j + 4 >> 2] | 0 : p & 255) | 0) {
        p = c[l >> 2] | 0;
        if ((p - k | 0) < 160) {
         t = c[m >> 2] | 0;
         c[l >> 2] = p + 4;
         c[p >> 2] = t;
        }
       }
      }
     }
    }
   }
   t = c[g >> 2] | 0;
   c[g >> 2] = t + 1;
   a[t >> 0] = r;
   if ((q | 0) > 84) o = 0; else {
    c[m >> 2] = (c[m >> 2] | 0) + 1;
    o = 0;
   }
  }
 } while (0);
 return o | 0;
}

function sn(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0;
 b = l;
 l = l + 480 | 0;
 i = b + 468 | 0;
 j = b + 464 | 0;
 k = b + 472 | 0;
 m = b + 460 | 0;
 n = b + 456 | 0;
 o = b + 444 | 0;
 p = b + 432 | 0;
 q = b + 420 | 0;
 r = b + 416 | 0;
 s = b + 16 | 0;
 t = b + 8 | 0;
 u = b + 4 | 0;
 v = b;
 qh(j, f);
 w = Ji(j, 23140) | 0;
 x = h + 8 + 3 | 0;
 y = a[x >> 0] | 0;
 z = y << 24 >> 24 < 0;
 A = h + 4 | 0;
 if (!((z ? c[A >> 2] | 0 : y & 255) | 0)) B = 0; else {
  y = c[(z ? c[h >> 2] | 0 : h) >> 2] | 0;
  B = (y | 0) == (qc[c[(c[w >> 2] | 0) + 44 >> 2] & 31](w, 45) | 0);
 };
 c[o >> 2] = 0;
 c[o + 4 >> 2] = 0;
 c[o + 8 >> 2] = 0;
 y = 0;
 while (1) {
  if ((y | 0) == 3) break;
  c[o + (y << 2) >> 2] = 0;
  y = y + 1 | 0;
 }
 c[p >> 2] = 0;
 c[p + 4 >> 2] = 0;
 c[p + 8 >> 2] = 0;
 y = 0;
 while (1) {
  if ((y | 0) == 3) break;
  c[p + (y << 2) >> 2] = 0;
  y = y + 1 | 0;
 }
 c[q >> 2] = 0;
 c[q + 4 >> 2] = 0;
 c[q + 8 >> 2] = 0;
 y = 0;
 while (1) {
  if ((y | 0) == 3) break;
  c[q + (y << 2) >> 2] = 0;
  y = y + 1 | 0;
 }
 tn(e, B, j, k, m, n, o, p, q, r);
 e = a[x >> 0] | 0;
 x = e << 24 >> 24 < 0;
 y = x ? c[A >> 2] | 0 : e & 255;
 e = c[r >> 2] | 0;
 if ((y | 0) > (e | 0)) {
  r = a[q + 8 + 3 >> 0] | 0;
  A = a[p + 8 + 3 >> 0] | 0;
  C = 1;
  D = (r << 24 >> 24 < 0 ? c[q + 4 >> 2] | 0 : r & 255) + (y - e << 1) | 0;
  E = A << 24 >> 24 < 0 ? c[p + 4 >> 2] | 0 : A & 255;
 } else {
  A = a[q + 8 + 3 >> 0] | 0;
  r = a[p + 8 + 3 >> 0] | 0;
  C = 2;
  D = r << 24 >> 24 < 0 ? c[p + 4 >> 2] | 0 : r & 255;
  E = A << 24 >> 24 < 0 ? c[q + 4 >> 2] | 0 : A & 255;
 }
 A = E + e + D + C | 0;
 if (A >>> 0 > 100) {
  C = xd(A << 2) | 0;
  if (!C) Wq(); else {
   F = C;
   G = C;
  }
 } else {
  F = s;
  G = 0;
 }
 s = x ? c[h >> 2] | 0 : h;
 un(F, t, u, c[f + 4 >> 2] | 0, s, s + (y << 2) | 0, w, B, k, c[m >> 2] | 0, c[n >> 2] | 0, o, p, q, e);
 c[v >> 2] = c[d >> 2];
 d = c[t >> 2] | 0;
 t = c[u >> 2] | 0;
 c[i >> 2] = c[v >> 2];
 v = qk(i, F, d, t, f, g) | 0;
 if (G | 0) yd(G);
 nr(q);
 nr(p);
 br(o);
 Ki(j);
 l = b;
 return v | 0;
}

function $c(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 e = a;
 c[e >> 2] = 2133416006;
 c[e + 4 >> 2] = 1786498114;
 e = a + 8 | 0;
 f = e;
 c[f >> 2] = -2135587861;
 c[f + 4 >> 2] = 1640531526;
 f = 0;
 g = 2133416006;
 h = 1786498114;
 do {
  i = xv(g | 0, h | 0, 5) | 0;
  j = i ^ g;
  i = z ^ h;
  k = wv(j | 0, i | 0, 15) | 0;
  m = k ^ j;
  j = z ^ i;
  i = xv(m | 0, j | 0, 27) | 0;
  g = i ^ m;
  h = z ^ j;
  f = f + 1 | 0;
 } while ((f | 0) != 128);
 f = a;
 c[f >> 2] = g;
 c[f + 4 >> 2] = h;
 h = e;
 c[h >> 2] = -612927125;
 c[h + 4 >> 2] = 1175169414;
 h = a + 16 | 0;
 c[h >> 2] = 0;
 f = a + 20 | 0;
 c[f >> 2] = 0;
 c[a + 24 >> 2] = 0;
 g = lf() | 0;
 j = g + 1806063795 + (g >>> 3) + (g << 15) | 0;
 g = j << 17 ^ j;
 j = g >>> 13 ^ g;
 g = (vb(0) | 0) + (j << 5 ^ j) | 0;
 j = g << 17 ^ g;
 g = j >>> 13 ^ j;
 j = g << 5 ^ g;
 c[d >> 2] = (j | 0) == 0 ? 1780996440 : j & 2147483647;
 ad(h, 1, d);
 d = c[h >> 2] | 0;
 h = c[f >> 2] | 0;
 f = a;
 c[f >> 2] = 2133416006;
 c[f + 4 >> 2] = 1786498114;
 f = e;
 c[f >> 2] = -2135587861;
 c[f + 4 >> 2] = 1640531526;
 if ((d | 0) == (h | 0)) {
  n = -612927125;
  o = 1175169414;
  p = 2133416006;
  q = 1786498114;
 } else {
  f = (h + -4 - d | 0) >>> 2;
  j = d;
  d = 2133416006;
  g = 1786498114;
  do {
   m = xv(d | 0, g | 0, 5) | 0;
   i = m ^ d;
   m = z ^ g;
   k = wv(i | 0, m | 0, 15) | 0;
   r = k ^ i;
   i = z ^ m;
   m = xv(r | 0, i | 0, 27) | 0;
   d = r ^ c[j >> 2] ^ m;
   g = i ^ z;
   j = j + 4 | 0;
  } while ((j | 0) != (h | 0));
  h = pv(f | 0, 0, -2135587861, 1640531526) | 0;
  f = z;
  j = qv(h | 0, f | 0, 23791574, -1013904243) | 0;
  i = a;
  c[i >> 2] = d;
  c[i + 4 >> 2] = g;
  i = e;
  c[i >> 2] = j;
  c[i + 4 >> 2] = z;
  i = qv(h | 0, f | 0, 1546452310, -1479266355) | 0;
  n = i;
  o = z;
  p = d;
  q = g;
 }
 g = 0;
 d = p;
 p = q;
 do {
  q = xv(d | 0, p | 0, 5) | 0;
  i = q ^ d;
  q = z ^ p;
  f = wv(i | 0, q | 0, 15) | 0;
  h = f ^ i;
  i = z ^ q;
  q = xv(h | 0, i | 0, 27) | 0;
  d = q ^ h;
  p = z ^ i;
  g = g + 1 | 0;
 } while ((g | 0) != 128);
 g = a;
 c[g >> 2] = d;
 c[g + 4 >> 2] = p;
 p = e;
 c[p >> 2] = n;
 c[p + 4 >> 2] = o;
 l = b;
 return;
}

function al(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 b = c[d >> 2] | 0;
 do if (!b) h = 1; else {
  i = c[b + 12 >> 2] | 0;
  if ((i | 0) == (c[b + 16 >> 2] | 0)) j = pc[c[(c[b >> 2] | 0) + 36 >> 2] & 63](b) | 0; else j = rg(a[i >> 0] | 0) | 0;
  if (ph(j, qg() | 0) | 0) {
   c[d >> 2] = 0;
   h = 1;
   break;
  } else {
   h = (c[d >> 2] | 0) == 0;
   break;
  }
 } while (0);
 j = c[e >> 2] | 0;
 do if (!j) k = 14; else {
  b = c[j + 12 >> 2] | 0;
  if ((b | 0) == (c[j + 16 >> 2] | 0)) l = pc[c[(c[j >> 2] | 0) + 36 >> 2] & 63](j) | 0; else l = rg(a[b >> 0] | 0) | 0;
  if (ph(l, qg() | 0) | 0) {
   c[e >> 2] = 0;
   k = 14;
   break;
  } else if (h) {
   m = j;
   k = 16;
   break;
  } else {
   n = 6;
   k = 38;
   break;
  }
 } while (0);
 if ((k | 0) == 14) if (h) {
  n = 6;
  k = 38;
 } else {
  m = 0;
  k = 16;
 }
 a : do if ((k | 0) == 16) {
  h = c[d >> 2] | 0;
  j = c[h + 12 >> 2] | 0;
  if ((j | 0) == (c[h + 16 >> 2] | 0)) o = pc[c[(c[h >> 2] | 0) + 36 >> 2] & 63](h) | 0; else o = rg(a[j >> 0] | 0) | 0;
  if ((rc[c[(c[g >> 2] | 0) + 36 >> 2] & 31](g, o & 255, 0) | 0) << 24 >> 24 == 37) {
   j = c[d >> 2] | 0;
   h = j + 12 | 0;
   l = c[h >> 2] | 0;
   if ((l | 0) == (c[j + 16 >> 2] | 0)) pc[c[(c[j >> 2] | 0) + 40 >> 2] & 63](j) | 0; else {
    c[h >> 2] = l + 1;
    rg(a[l >> 0] | 0) | 0;
   }
   l = c[d >> 2] | 0;
   do if (!l) p = 1; else {
    h = c[l + 12 >> 2] | 0;
    if ((h | 0) == (c[l + 16 >> 2] | 0)) q = pc[c[(c[l >> 2] | 0) + 36 >> 2] & 63](l) | 0; else q = rg(a[h >> 0] | 0) | 0;
    if (ph(q, qg() | 0) | 0) {
     c[d >> 2] = 0;
     p = 1;
     break;
    } else {
     p = (c[d >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (m | 0) {
    l = c[m + 12 >> 2] | 0;
    if ((l | 0) == (c[m + 16 >> 2] | 0)) r = pc[c[(c[m >> 2] | 0) + 36 >> 2] & 63](m) | 0; else r = rg(a[l >> 0] | 0) | 0;
    if (ph(r, qg() | 0) | 0) {
     c[e >> 2] = 0;
     break;
    } else if (p) break a; else {
     n = 2;
     k = 38;
     break a;
    }
   } while (0);
   if (p) {
    n = 2;
    k = 38;
   }
  } else {
   n = 4;
   k = 38;
  }
 } while (0);
 if ((k | 0) == 38) c[f >> 2] = c[f >> 2] | n;
 return;
}

function mn(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0;
 b = l;
 l = l + 176 | 0;
 i = b + 56 | 0;
 j = b + 52 | 0;
 k = b + 164 | 0;
 m = b + 161 | 0;
 n = b + 160 | 0;
 o = b + 40 | 0;
 p = b + 28 | 0;
 q = b + 16 | 0;
 r = b + 12 | 0;
 s = b + 60 | 0;
 t = b + 8 | 0;
 u = b + 4 | 0;
 v = b;
 qh(j, f);
 w = Ji(j, 23108) | 0;
 x = h + 11 | 0;
 y = a[x >> 0] | 0;
 z = y << 24 >> 24 < 0;
 A = h + 4 | 0;
 if (!((z ? c[A >> 2] | 0 : y & 255) | 0)) B = 0; else {
  y = a[(z ? c[h >> 2] | 0 : h) >> 0] | 0;
  B = y << 24 >> 24 == (qc[c[(c[w >> 2] | 0) + 28 >> 2] & 31](w, 45) | 0) << 24 >> 24;
 };
 c[o >> 2] = 0;
 c[o + 4 >> 2] = 0;
 c[o + 8 >> 2] = 0;
 y = 0;
 while (1) {
  if ((y | 0) == 3) break;
  c[o + (y << 2) >> 2] = 0;
  y = y + 1 | 0;
 }
 c[p >> 2] = 0;
 c[p + 4 >> 2] = 0;
 c[p + 8 >> 2] = 0;
 y = 0;
 while (1) {
  if ((y | 0) == 3) break;
  c[p + (y << 2) >> 2] = 0;
  y = y + 1 | 0;
 }
 c[q >> 2] = 0;
 c[q + 4 >> 2] = 0;
 c[q + 8 >> 2] = 0;
 y = 0;
 while (1) {
  if ((y | 0) == 3) break;
  c[q + (y << 2) >> 2] = 0;
  y = y + 1 | 0;
 }
 nn(e, B, j, k, m, n, o, p, q, r);
 e = a[x >> 0] | 0;
 x = e << 24 >> 24 < 0;
 y = x ? c[A >> 2] | 0 : e & 255;
 e = c[r >> 2] | 0;
 if ((y | 0) > (e | 0)) {
  r = a[q + 11 >> 0] | 0;
  A = a[p + 11 >> 0] | 0;
  C = 1;
  D = (r << 24 >> 24 < 0 ? c[q + 4 >> 2] | 0 : r & 255) + (y - e << 1) | 0;
  E = A << 24 >> 24 < 0 ? c[p + 4 >> 2] | 0 : A & 255;
 } else {
  A = a[q + 11 >> 0] | 0;
  r = a[p + 11 >> 0] | 0;
  C = 2;
  D = r << 24 >> 24 < 0 ? c[p + 4 >> 2] | 0 : r & 255;
  E = A << 24 >> 24 < 0 ? c[q + 4 >> 2] | 0 : A & 255;
 }
 A = E + e + D + C | 0;
 if (A >>> 0 > 100) {
  C = xd(A) | 0;
  if (!C) Wq(); else {
   F = C;
   G = C;
  }
 } else {
  F = s;
  G = 0;
 }
 s = x ? c[h >> 2] | 0 : h;
 on(F, t, u, c[f + 4 >> 2] | 0, s, s + y | 0, w, B, k, a[m >> 0] | 0, a[n >> 0] | 0, o, p, q, e);
 c[v >> 2] = c[d >> 2];
 d = c[t >> 2] | 0;
 t = c[u >> 2] | 0;
 c[i >> 2] = c[v >> 2];
 v = ed(i, F, d, t, f, g) | 0;
 if (G | 0) yd(G);
 br(q);
 br(p);
 br(o);
 Ki(j);
 l = b;
 return v | 0;
}

function Ll(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0;
 a = c[b >> 2] | 0;
 do if (!a) g = 1; else {
  h = c[a + 12 >> 2] | 0;
  if ((h | 0) == (c[a + 16 >> 2] | 0)) i = pc[c[(c[a >> 2] | 0) + 36 >> 2] & 63](a) | 0; else i = Jg(c[h >> 2] | 0) | 0;
  if (rh(i, Ig() | 0) | 0) {
   c[b >> 2] = 0;
   g = 1;
   break;
  } else {
   g = (c[b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 i = c[d >> 2] | 0;
 do if (!i) j = 14; else {
  a = c[i + 12 >> 2] | 0;
  if ((a | 0) == (c[i + 16 >> 2] | 0)) k = pc[c[(c[i >> 2] | 0) + 36 >> 2] & 63](i) | 0; else k = Jg(c[a >> 2] | 0) | 0;
  if (rh(k, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   j = 14;
   break;
  } else if (g) {
   l = i;
   j = 16;
   break;
  } else {
   m = 6;
   j = 38;
   break;
  }
 } while (0);
 if ((j | 0) == 14) if (g) {
  m = 6;
  j = 38;
 } else {
  l = 0;
  j = 16;
 }
 a : do if ((j | 0) == 16) {
  g = c[b >> 2] | 0;
  i = c[g + 12 >> 2] | 0;
  if ((i | 0) == (c[g + 16 >> 2] | 0)) n = pc[c[(c[g >> 2] | 0) + 36 >> 2] & 63](g) | 0; else n = Jg(c[i >> 2] | 0) | 0;
  if ((rc[c[(c[f >> 2] | 0) + 52 >> 2] & 31](f, n, 0) | 0) << 24 >> 24 == 37) {
   i = c[b >> 2] | 0;
   g = i + 12 | 0;
   k = c[g >> 2] | 0;
   if ((k | 0) == (c[i + 16 >> 2] | 0)) pc[c[(c[i >> 2] | 0) + 40 >> 2] & 63](i) | 0; else {
    c[g >> 2] = k + 4;
    Jg(c[k >> 2] | 0) | 0;
   }
   k = c[b >> 2] | 0;
   do if (!k) o = 1; else {
    g = c[k + 12 >> 2] | 0;
    if ((g | 0) == (c[k + 16 >> 2] | 0)) p = pc[c[(c[k >> 2] | 0) + 36 >> 2] & 63](k) | 0; else p = Jg(c[g >> 2] | 0) | 0;
    if (rh(p, Ig() | 0) | 0) {
     c[b >> 2] = 0;
     o = 1;
     break;
    } else {
     o = (c[b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (l | 0) {
    k = c[l + 12 >> 2] | 0;
    if ((k | 0) == (c[l + 16 >> 2] | 0)) q = pc[c[(c[l >> 2] | 0) + 36 >> 2] & 63](l) | 0; else q = Jg(c[k >> 2] | 0) | 0;
    if (rh(q, Ig() | 0) | 0) {
     c[d >> 2] = 0;
     break;
    } else if (o) break a; else {
     m = 2;
     j = 38;
     break a;
    }
   } while (0);
   if (o) {
    m = 2;
    j = 38;
   }
  } else {
   m = 4;
   j = 38;
  }
 } while (0);
 if ((j | 0) == 38) c[e >> 2] = c[e >> 2] | m;
 return;
}

function ii(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0;
 e = l;
 l = l + 32 | 0;
 f = e + 16 | 0;
 g = e + 8 | 0;
 h = e + 4 | 0;
 i = e;
 j = b + 52 | 0;
 if (!(a[j >> 0] | 0)) {
  k = c[b + 44 >> 2] | 0;
  m = (k | 0) > 1 ? k : 1;
  k = b + 32 | 0;
  n = 0;
  while (1) {
   if ((n | 0) >= (m | 0)) {
    o = 9;
    break;
   }
   p = hf(c[k >> 2] | 0) | 0;
   if ((p | 0) == -1) {
    o = 8;
    break;
   }
   a[f + n >> 0] = p;
   n = n + 1 | 0;
  }
  if ((o | 0) == 8) q = qg() | 0; else if ((o | 0) == 9) {
   do if (!(a[b + 53 >> 0] | 0)) {
    n = b + 40 | 0;
    p = b + 36 | 0;
    r = g + 1 | 0;
    s = m;
    a : while (1) {
     t = c[n >> 2] | 0;
     u = t;
     v = c[u >> 2] | 0;
     w = c[u + 4 >> 2] | 0;
     u = c[p >> 2] | 0;
     x = f + s | 0;
     switch (yc[c[(c[u >> 2] | 0) + 16 >> 2] & 15](u, t, f, x, h, g, r, i) | 0) {
     case 3:
      {
       o = 16;
       break a;
       break;
      }
     case 2:
      {
       o = 18;
       break a;
       break;
      }
     case 1:
      break;
     default:
      break a;
     }
     t = c[n >> 2] | 0;
     c[t >> 2] = v;
     c[t + 4 >> 2] = w;
     if ((s | 0) == 8) {
      o = 18;
      break;
     }
     w = hf(c[k >> 2] | 0) | 0;
     if ((w | 0) == -1) {
      o = 18;
      break;
     }
     a[x >> 0] = w;
     s = s + 1 | 0;
    }
    if ((o | 0) == 16) a[g >> 0] = a[f >> 0] | 0; else if ((o | 0) == 18) {
     y = qg() | 0;
     break;
    }
    z = s;
    o = 19;
   } else {
    a[g >> 0] = a[f >> 0] | 0;
    z = m;
    o = 19;
   } while (0);
   b : do if ((o | 0) == 19) {
    c : do if (d) c[b + 48 >> 2] = rg(a[g >> 0] | 0) | 0; else {
     m = z;
     do {
      if ((m | 0) <= 0) break c;
      m = m + -1 | 0;
      i = rg(a[f + m >> 0] | 0) | 0;
     } while ((_e(i, c[k >> 2] | 0) | 0) != -1);
     y = qg() | 0;
     break b;
    } while (0);
    y = rg(a[g >> 0] | 0) | 0;
   } while (0);
   q = y;
  }
  A = q;
 } else {
  q = b + 48 | 0;
  b = c[q >> 2] | 0;
  if (d) {
   c[q >> 2] = qg() | 0;
   a[j >> 0] = 0;
   A = b;
  } else A = b;
 }
 l = e;
 return A | 0;
}

function Fl(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 a : while (1) {
  a = c[b >> 2] | 0;
  do if (!a) g = 1; else {
   h = c[a + 12 >> 2] | 0;
   if ((h | 0) == (c[a + 16 >> 2] | 0)) i = pc[c[(c[a >> 2] | 0) + 36 >> 2] & 63](a) | 0; else i = Jg(c[h >> 2] | 0) | 0;
   if (rh(i, Ig() | 0) | 0) {
    c[b >> 2] = 0;
    g = 1;
    break;
   } else {
    g = (c[b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  a = c[d >> 2] | 0;
  do if (!a) j = 15; else {
   h = c[a + 12 >> 2] | 0;
   if ((h | 0) == (c[a + 16 >> 2] | 0)) k = pc[c[(c[a >> 2] | 0) + 36 >> 2] & 63](a) | 0; else k = Jg(c[h >> 2] | 0) | 0;
   if (rh(k, Ig() | 0) | 0) {
    c[d >> 2] = 0;
    j = 15;
    break;
   } else if (g) {
    l = a;
    break;
   } else {
    m = a;
    break a;
   }
  } while (0);
  if ((j | 0) == 15) {
   j = 0;
   if (g) {
    m = 0;
    break;
   } else l = 0;
  }
  a = c[b >> 2] | 0;
  h = c[a + 12 >> 2] | 0;
  if ((h | 0) == (c[a + 16 >> 2] | 0)) n = pc[c[(c[a >> 2] | 0) + 36 >> 2] & 63](a) | 0; else n = Jg(c[h >> 2] | 0) | 0;
  if (!(rc[c[(c[f >> 2] | 0) + 12 >> 2] & 31](f, 8192, n) | 0)) {
   m = l;
   break;
  }
  h = c[b >> 2] | 0;
  a = h + 12 | 0;
  o = c[a >> 2] | 0;
  if ((o | 0) == (c[h + 16 >> 2] | 0)) {
   pc[c[(c[h >> 2] | 0) + 40 >> 2] & 63](h) | 0;
   continue;
  } else {
   c[a >> 2] = o + 4;
   Jg(c[o >> 2] | 0) | 0;
   continue;
  }
 }
 l = c[b >> 2] | 0;
 do if (!l) p = 1; else {
  n = c[l + 12 >> 2] | 0;
  if ((n | 0) == (c[l + 16 >> 2] | 0)) q = pc[c[(c[l >> 2] | 0) + 36 >> 2] & 63](l) | 0; else q = Jg(c[n >> 2] | 0) | 0;
  if (rh(q, Ig() | 0) | 0) {
   c[b >> 2] = 0;
   p = 1;
   break;
  } else {
   p = (c[b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!m) j = 37; else {
  b = c[m + 12 >> 2] | 0;
  if ((b | 0) == (c[m + 16 >> 2] | 0)) r = pc[c[(c[m >> 2] | 0) + 36 >> 2] & 63](m) | 0; else r = Jg(c[b >> 2] | 0) | 0;
  if (rh(r, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   j = 37;
   break;
  } else if (p) break; else {
   j = 39;
   break;
  }
 } while (0);
 if ((j | 0) == 37) if (p) j = 39;
 if ((j | 0) == 39) c[e >> 2] = c[e >> 2] | 2;
 return;
}

function bi(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0;
 e = l;
 l = l + 32 | 0;
 f = e + 16 | 0;
 g = e + 8 | 0;
 h = e + 4 | 0;
 i = e;
 j = b + 52 | 0;
 if (!(a[j >> 0] | 0)) {
  k = c[b + 44 >> 2] | 0;
  m = (k | 0) > 1 ? k : 1;
  k = b + 32 | 0;
  n = 0;
  while (1) {
   if ((n | 0) >= (m | 0)) {
    o = 9;
    break;
   }
   p = hf(c[k >> 2] | 0) | 0;
   if ((p | 0) == -1) {
    o = 8;
    break;
   }
   a[f + n >> 0] = p;
   n = n + 1 | 0;
  }
  if ((o | 0) == 8) q = Ig() | 0; else if ((o | 0) == 9) {
   do if (!(a[b + 53 >> 0] | 0)) {
    n = b + 40 | 0;
    p = b + 36 | 0;
    r = g + 4 | 0;
    s = m;
    a : while (1) {
     t = c[n >> 2] | 0;
     u = t;
     v = c[u >> 2] | 0;
     w = c[u + 4 >> 2] | 0;
     u = c[p >> 2] | 0;
     x = f + s | 0;
     switch (yc[c[(c[u >> 2] | 0) + 16 >> 2] & 15](u, t, f, x, h, g, r, i) | 0) {
     case 3:
      {
       o = 16;
       break a;
       break;
      }
     case 2:
      {
       o = 18;
       break a;
       break;
      }
     case 1:
      break;
     default:
      break a;
     }
     t = c[n >> 2] | 0;
     c[t >> 2] = v;
     c[t + 4 >> 2] = w;
     if ((s | 0) == 8) {
      o = 18;
      break;
     }
     w = hf(c[k >> 2] | 0) | 0;
     if ((w | 0) == -1) {
      o = 18;
      break;
     }
     a[x >> 0] = w;
     s = s + 1 | 0;
    }
    if ((o | 0) == 16) c[g >> 2] = a[f >> 0]; else if ((o | 0) == 18) {
     y = Ig() | 0;
     break;
    }
    z = s;
    o = 19;
   } else {
    c[g >> 2] = a[f >> 0];
    z = m;
    o = 19;
   } while (0);
   b : do if ((o | 0) == 19) {
    c : do if (d) c[b + 48 >> 2] = Jg(c[g >> 2] | 0) | 0; else {
     m = z;
     do {
      if ((m | 0) <= 0) break c;
      m = m + -1 | 0;
      i = Jg(a[f + m >> 0] | 0) | 0;
     } while ((_e(i, c[k >> 2] | 0) | 0) != -1);
     y = Ig() | 0;
     break b;
    } while (0);
    y = Jg(c[g >> 2] | 0) | 0;
   } while (0);
   q = y;
  }
  A = q;
 } else {
  q = b + 48 | 0;
  b = c[q >> 2] | 0;
  if (d) {
   c[q >> 2] = Ig() | 0;
   a[j >> 0] = 0;
   A = b;
  } else A = b;
 }
 l = e;
 return A | 0;
}

function eu(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0;
 g = l;
 l = l + 32 | 0;
 h = g + 16 | 0;
 i = g;
 j = g + 12 | 0;
 k = b + 11 | 0;
 m = a[k >> 0] | 0;
 n = m << 24 >> 24 < 0;
 if (n) o = c[b >> 2] | 0; else o = b;
 p = c[d >> 2] | 0;
 d = p - o | 0;
 o = f - e | 0;
 do if (!o) {
  q = m;
  r = 35;
 } else {
  if (n) {
   s = c[b >> 2] | 0;
   t = c[b + 4 >> 2] | 0;
  } else {
   s = b;
   t = m & 255;
  }
  if (Xm(e, s, s + t | 0) | 0) {
   c[i >> 2] = 0;
   c[i + 4 >> 2] = 0;
   c[i + 8 >> 2] = 0;
   if (o >>> 0 > 4294967279) _q(i);
   if (o >>> 0 < 11) {
    a[i + 11 >> 0] = o;
    u = i;
   } else {
    v = o + 16 & -16;
    w = Bs(v) | 0;
    c[i >> 2] = w;
    c[i + 8 >> 2] = v | -2147483648;
    c[i + 4 >> 2] = o;
    u = w;
   }
   w = e;
   v = u;
   while (1) {
    if ((w | 0) == (f | 0)) break;
    mh(v, w);
    w = w + 1 | 0;
    v = v + 1 | 0;
   }
   a[h >> 0] = 0;
   mh(u + o | 0, h);
   c[j >> 2] = p;
   v = a[i + 11 >> 0] | 0;
   w = v << 24 >> 24 < 0;
   x = w ? c[i >> 2] | 0 : i;
   y = x + (w ? c[i + 4 >> 2] | 0 : v & 255) | 0;
   c[h >> 2] = c[j >> 2];
   v = eu(b, h, x, y) | 0;
   Es(i);
   z = v;
   break;
  }
  v = a[k >> 0] | 0;
  y = v << 24 >> 24 < 0;
  if (y) {
   A = c[b + 4 >> 2] | 0;
   B = (c[b + 8 >> 2] & 2147483647) + -1 | 0;
  } else {
   A = v & 255;
   B = 10;
  }
  if ((B - A | 0) >>> 0 < o >>> 0) {
   fu(b, B, A + o - B | 0, A, d, o);
   C = c[b >> 2] | 0;
  } else {
   if (y) D = c[b >> 2] | 0; else D = b;
   y = A - d | 0;
   if (!y) C = D; else {
    v = D + d | 0;
    er(v + o | 0, v, y) | 0;
    C = D;
   }
  }
  y = A + o | 0;
  if ((a[k >> 0] | 0) < 0) c[b + 4 >> 2] = y; else a[k >> 0] = y;
  a[h >> 0] = 0;
  mh(C + y | 0, h);
  y = e;
  v = C + d | 0;
  while (1) {
   if ((y | 0) == (f | 0)) break;
   mh(v, y);
   y = y + 1 | 0;
   v = v + 1 | 0;
  }
  q = a[k >> 0] | 0;
  r = 35;
 } while (0);
 if ((r | 0) == 35) {
  if (q << 24 >> 24 < 0) E = c[b >> 2] | 0; else E = b;
  z = E + d | 0;
 }
 l = g;
 return z | 0;
}

function wt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0;
 f = l;
 l = l + 112 | 0;
 g = f + 88 | 0;
 h = f + 64 | 0;
 i = f + 36 | 0;
 j = f + 48 | 0;
 k = f + 24 | 0;
 m = f + 12 | 0;
 n = f;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 100) if ((a[b + 1 >> 0] | 0) == 99) {
  o = b + 2 | 0;
  p = Is(o, d, e) | 0;
  if ((p | 0) == (o | 0)) q = b; else {
   o = kt(p, d, e) | 0;
   if ((o | 0) == (p | 0)) q = b; else {
    p = e + 4 | 0;
    d = c[p >> 2] | 0;
    if (((d - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) q = b; else {
     _s(g, d + -24 | 0);
     d = c[p >> 2] | 0;
     e = d + -24 | 0;
     r = d;
     while (1) {
      if ((r | 0) == (e | 0)) break;
      s = r + -24 | 0;
      c[p >> 2] = s;
      ns(s);
      r = c[p >> 2] | 0;
     }
     _s(n, d + -48 | 0);
     Ls(n, 0, 20058) | 0;
     c[m >> 2] = c[n >> 2];
     c[m + 4 >> 2] = c[n + 4 >> 2];
     c[m + 8 >> 2] = c[n + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[n + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     Ms(m, 19155) | 0;
     c[k >> 2] = c[m >> 2];
     c[k + 4 >> 2] = c[m + 4 >> 2];
     c[k + 8 >> 2] = c[m + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[m + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     d = a[g + 11 >> 0] | 0;
     r = d << 24 >> 24 < 0;
     qs(k, r ? c[g >> 2] | 0 : g, r ? c[g + 4 >> 2] | 0 : d & 255) | 0;
     c[j >> 2] = c[k >> 2];
     c[j + 4 >> 2] = c[k + 4 >> 2];
     c[j + 8 >> 2] = c[k + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[k + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     Ms(j, 18906) | 0;
     c[i >> 2] = c[j >> 2];
     c[i + 4 >> 2] = c[j + 4 >> 2];
     c[i + 8 >> 2] = c[j + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[j + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     bt(h, i);
     ct((c[p >> 2] | 0) + -24 | 0, h);
     ns(h);
     Es(i);
     Es(j);
     Es(k);
     Es(m);
     Es(n);
     Es(g);
     q = o;
    }
   }
  }
 } else q = b; else q = b; else q = b;
 l = f;
 return q | 0;
}

function Et(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0;
 f = l;
 l = l + 112 | 0;
 g = f + 88 | 0;
 h = f + 64 | 0;
 i = f + 36 | 0;
 j = f + 48 | 0;
 k = f + 24 | 0;
 m = f + 12 | 0;
 n = f;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 115) if ((a[b + 1 >> 0] | 0) == 99) {
  o = b + 2 | 0;
  p = Is(o, d, e) | 0;
  if ((p | 0) == (o | 0)) q = b; else {
   o = kt(p, d, e) | 0;
   if ((o | 0) == (p | 0)) q = b; else {
    p = e + 4 | 0;
    d = c[p >> 2] | 0;
    if (((d - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) q = b; else {
     _s(g, d + -24 | 0);
     d = c[p >> 2] | 0;
     e = d + -24 | 0;
     r = d;
     while (1) {
      if ((r | 0) == (e | 0)) break;
      s = r + -24 | 0;
      c[p >> 2] = s;
      ns(s);
      r = c[p >> 2] | 0;
     }
     _s(n, d + -48 | 0);
     Ls(n, 0, 19142) | 0;
     c[m >> 2] = c[n >> 2];
     c[m + 4 >> 2] = c[n + 4 >> 2];
     c[m + 8 >> 2] = c[n + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[n + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     Ms(m, 19155) | 0;
     c[k >> 2] = c[m >> 2];
     c[k + 4 >> 2] = c[m + 4 >> 2];
     c[k + 8 >> 2] = c[m + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[m + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     d = a[g + 11 >> 0] | 0;
     r = d << 24 >> 24 < 0;
     qs(k, r ? c[g >> 2] | 0 : g, r ? c[g + 4 >> 2] | 0 : d & 255) | 0;
     c[j >> 2] = c[k >> 2];
     c[j + 4 >> 2] = c[k + 4 >> 2];
     c[j + 8 >> 2] = c[k + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[k + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     Ms(j, 18906) | 0;
     c[i >> 2] = c[j >> 2];
     c[i + 4 >> 2] = c[j + 4 >> 2];
     c[i + 8 >> 2] = c[j + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[j + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     bt(h, i);
     ct((c[p >> 2] | 0) + -24 | 0, h);
     ns(h);
     Es(i);
     Es(j);
     Es(k);
     Es(m);
     Es(n);
     Es(g);
     q = o;
    }
   }
  }
 } else q = b; else q = b; else q = b;
 l = f;
 return q | 0;
}

function Dt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0;
 f = l;
 l = l + 112 | 0;
 g = f + 88 | 0;
 h = f + 64 | 0;
 i = f + 36 | 0;
 j = f + 48 | 0;
 k = f + 24 | 0;
 m = f + 12 | 0;
 n = f;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 114) if ((a[b + 1 >> 0] | 0) == 99) {
  o = b + 2 | 0;
  p = Is(o, d, e) | 0;
  if ((p | 0) == (o | 0)) q = b; else {
   o = kt(p, d, e) | 0;
   if ((o | 0) == (p | 0)) q = b; else {
    p = e + 4 | 0;
    d = c[p >> 2] | 0;
    if (((d - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) q = b; else {
     _s(g, d + -24 | 0);
     d = c[p >> 2] | 0;
     e = d + -24 | 0;
     r = d;
     while (1) {
      if ((r | 0) == (e | 0)) break;
      s = r + -24 | 0;
      c[p >> 2] = s;
      ns(s);
      r = c[p >> 2] | 0;
     }
     _s(n, d + -48 | 0);
     Ls(n, 0, 19158) | 0;
     c[m >> 2] = c[n >> 2];
     c[m + 4 >> 2] = c[n + 4 >> 2];
     c[m + 8 >> 2] = c[n + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[n + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     Ms(m, 19155) | 0;
     c[k >> 2] = c[m >> 2];
     c[k + 4 >> 2] = c[m + 4 >> 2];
     c[k + 8 >> 2] = c[m + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[m + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     d = a[g + 11 >> 0] | 0;
     r = d << 24 >> 24 < 0;
     qs(k, r ? c[g >> 2] | 0 : g, r ? c[g + 4 >> 2] | 0 : d & 255) | 0;
     c[j >> 2] = c[k >> 2];
     c[j + 4 >> 2] = c[k + 4 >> 2];
     c[j + 8 >> 2] = c[k + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[k + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     Ms(j, 18906) | 0;
     c[i >> 2] = c[j >> 2];
     c[i + 4 >> 2] = c[j + 4 >> 2];
     c[i + 8 >> 2] = c[j + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[j + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     bt(h, i);
     ct((c[p >> 2] | 0) + -24 | 0, h);
     ns(h);
     Es(i);
     Es(j);
     Es(k);
     Es(m);
     Es(n);
     Es(g);
     q = o;
    }
   }
  }
 } else q = b; else q = b; else q = b;
 l = f;
 return q | 0;
}

function tt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0;
 f = l;
 l = l + 112 | 0;
 g = f + 88 | 0;
 h = f + 64 | 0;
 i = f + 36 | 0;
 j = f + 48 | 0;
 k = f + 24 | 0;
 m = f + 12 | 0;
 n = f;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 99) if ((a[b + 1 >> 0] | 0) == 99) {
  o = b + 2 | 0;
  p = Is(o, d, e) | 0;
  if ((p | 0) == (o | 0)) q = b; else {
   o = kt(p, d, e) | 0;
   if ((o | 0) == (p | 0)) q = b; else {
    p = e + 4 | 0;
    d = c[p >> 2] | 0;
    if (((d - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) q = b; else {
     _s(g, d + -24 | 0);
     d = c[p >> 2] | 0;
     e = d + -24 | 0;
     r = d;
     while (1) {
      if ((r | 0) == (e | 0)) break;
      s = r + -24 | 0;
      c[p >> 2] = s;
      ns(s);
      r = c[p >> 2] | 0;
     }
     _s(n, d + -48 | 0);
     Ls(n, 0, 20075) | 0;
     c[m >> 2] = c[n >> 2];
     c[m + 4 >> 2] = c[n + 4 >> 2];
     c[m + 8 >> 2] = c[n + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[n + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     Ms(m, 19155) | 0;
     c[k >> 2] = c[m >> 2];
     c[k + 4 >> 2] = c[m + 4 >> 2];
     c[k + 8 >> 2] = c[m + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[m + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     d = a[g + 11 >> 0] | 0;
     r = d << 24 >> 24 < 0;
     qs(k, r ? c[g >> 2] | 0 : g, r ? c[g + 4 >> 2] | 0 : d & 255) | 0;
     c[j >> 2] = c[k >> 2];
     c[j + 4 >> 2] = c[k + 4 >> 2];
     c[j + 8 >> 2] = c[k + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[k + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     Ms(j, 18906) | 0;
     c[i >> 2] = c[j >> 2];
     c[i + 4 >> 2] = c[j + 4 >> 2];
     c[i + 8 >> 2] = c[j + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[j + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     bt(h, i);
     ct((c[p >> 2] | 0) + -24 | 0, h);
     ns(h);
     Es(i);
     Es(j);
     Es(k);
     Es(m);
     Es(n);
     Es(g);
     q = o;
    }
   }
  }
 } else q = b; else q = b; else q = b;
 l = f;
 return q | 0;
}

function Se(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 a : do if (!b) {
  h = c[d >> 2] | 0;
  i = c[h >> 2] | 0;
  if (!i) j = 0; else {
   k = h;
   h = 0;
   m = i;
   while (1) {
    if (m >>> 0 > 127) {
     i = be(g, m, 0) | 0;
     if ((i | 0) == -1) {
      j = -1;
      break a;
     } else n = i;
    } else n = 1;
    i = n + h | 0;
    k = k + 4 | 0;
    m = c[k >> 2] | 0;
    if (!m) {
     j = i;
     break;
    } else h = i;
   }
  }
 } else {
  b : do if (e >>> 0 > 3) {
   h = b;
   m = e;
   k = c[d >> 2] | 0;
   while (1) {
    i = c[k >> 2] | 0;
    if ((i + -1 | 0) >>> 0 > 126) {
     if (!i) break;
     o = be(h, i, 0) | 0;
     if ((o | 0) == -1) {
      j = -1;
      break a;
     }
     p = h + o | 0;
     q = m - o | 0;
     r = k;
    } else {
     a[h >> 0] = i;
     p = h + 1 | 0;
     q = m + -1 | 0;
     r = c[d >> 2] | 0;
    }
    k = r + 4 | 0;
    c[d >> 2] = k;
    if (q >>> 0 <= 3) {
     s = p;
     t = q;
     break b;
    } else {
     h = p;
     m = q;
    }
   }
   a[h >> 0] = 0;
   c[d >> 2] = 0;
   j = e - m | 0;
   break a;
  } else {
   s = b;
   t = e;
  } while (0);
  if (!t) j = e; else {
   k = s;
   i = t;
   o = c[d >> 2] | 0;
   while (1) {
    u = c[o >> 2] | 0;
    if ((u + -1 | 0) >>> 0 > 126) {
     if (!u) {
      v = 19;
      break;
     }
     w = be(g, u, 0) | 0;
     if ((w | 0) == -1) {
      j = -1;
      break a;
     }
     if (i >>> 0 < w >>> 0) {
      v = 22;
      break;
     }
     be(k, c[o >> 2] | 0, 0) | 0;
     x = k + w | 0;
     y = i - w | 0;
     z = o;
    } else {
     a[k >> 0] = u;
     x = k + 1 | 0;
     y = i + -1 | 0;
     z = c[d >> 2] | 0;
    }
    o = z + 4 | 0;
    c[d >> 2] = o;
    if (!y) {
     j = e;
     break a;
    } else {
     k = x;
     i = y;
    }
   }
   if ((v | 0) == 19) {
    a[k >> 0] = 0;
    c[d >> 2] = 0;
    j = e - i | 0;
    break;
   } else if ((v | 0) == 22) {
    j = e - i | 0;
    break;
   }
  }
 } while (0);
 l = f;
 return j | 0;
}

function Rd(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, i = 0, j = 0.0;
 a : do if (b >>> 0 <= 20) do switch (b | 0) {
 case 9:
  {
   e = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);
   f = c[e >> 2] | 0;
   c[d >> 2] = e + 4;
   c[a >> 2] = f;
   break a;
   break;
  }
 case 10:
  {
   f = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);
   e = c[f >> 2] | 0;
   c[d >> 2] = f + 4;
   f = a;
   c[f >> 2] = e;
   c[f + 4 >> 2] = ((e | 0) < 0) << 31 >> 31;
   break a;
   break;
  }
 case 11:
  {
   e = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);
   f = c[e >> 2] | 0;
   c[d >> 2] = e + 4;
   e = a;
   c[e >> 2] = f;
   c[e + 4 >> 2] = 0;
   break a;
   break;
  }
 case 12:
  {
   e = (c[d >> 2] | 0) + (8 - 1) & ~(8 - 1);
   f = e;
   g = c[f >> 2] | 0;
   i = c[f + 4 >> 2] | 0;
   c[d >> 2] = e + 8;
   e = a;
   c[e >> 2] = g;
   c[e + 4 >> 2] = i;
   break a;
   break;
  }
 case 13:
  {
   i = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);
   e = c[i >> 2] | 0;
   c[d >> 2] = i + 4;
   i = (e & 65535) << 16 >> 16;
   e = a;
   c[e >> 2] = i;
   c[e + 4 >> 2] = ((i | 0) < 0) << 31 >> 31;
   break a;
   break;
  }
 case 14:
  {
   i = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);
   e = c[i >> 2] | 0;
   c[d >> 2] = i + 4;
   i = a;
   c[i >> 2] = e & 65535;
   c[i + 4 >> 2] = 0;
   break a;
   break;
  }
 case 15:
  {
   i = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);
   e = c[i >> 2] | 0;
   c[d >> 2] = i + 4;
   i = (e & 255) << 24 >> 24;
   e = a;
   c[e >> 2] = i;
   c[e + 4 >> 2] = ((i | 0) < 0) << 31 >> 31;
   break a;
   break;
  }
 case 16:
  {
   i = (c[d >> 2] | 0) + (4 - 1) & ~(4 - 1);
   e = c[i >> 2] | 0;
   c[d >> 2] = i + 4;
   i = a;
   c[i >> 2] = e & 255;
   c[i + 4 >> 2] = 0;
   break a;
   break;
  }
 case 17:
  {
   i = (c[d >> 2] | 0) + (8 - 1) & ~(8 - 1);
   j = +h[i >> 3];
   c[d >> 2] = i + 8;
   h[a >> 3] = j;
   break a;
   break;
  }
 case 18:
  {
   i = (c[d >> 2] | 0) + (8 - 1) & ~(8 - 1);
   j = +h[i >> 3];
   c[d >> 2] = i + 8;
   h[a >> 3] = j;
   break a;
   break;
  }
 default:
  break a;
 } while (0); while (0);
 return;
}

function id(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0;
 i = d + 44 | 0;
 j = c[i >> 2] | 0;
 k = d + 24 | 0;
 l = c[k >> 2] | 0;
 m = l;
 if (j >>> 0 < l >>> 0) {
  c[i >> 2] = l;
  n = m;
 } else n = j;
 j = h & 24;
 a : do if (!j) {
  o = -1;
  p = -1;
 } else if ((g | 0) == 1 & (j | 0) == 24) {
  o = -1;
  p = -1;
 } else {
  b : do switch (g | 0) {
  case 0:
   {
    q = 0;
    r = 0;
    break;
   }
  case 1:
   {
    if (!(h & 8)) {
     i = m - (c[d + 20 >> 2] | 0) | 0;
     q = i;
     r = ((i | 0) < 0) << 31 >> 31;
     break b;
    } else {
     i = (c[d + 12 >> 2] | 0) - (c[d + 8 >> 2] | 0) | 0;
     q = i;
     r = ((i | 0) < 0) << 31 >> 31;
     break b;
    }
    break;
   }
  case 2:
   {
    i = d + 32 | 0;
    if ((a[i + 11 >> 0] | 0) < 0) s = c[i >> 2] | 0; else s = i;
    i = n - s | 0;
    q = i;
    r = ((i | 0) < 0) << 31 >> 31;
    break;
   }
  default:
   {
    o = -1;
    p = -1;
    break a;
   }
  } while (0);
  i = qv(q | 0, r | 0, e | 0, f | 0) | 0;
  t = z;
  if ((t | 0) < 0) {
   o = -1;
   p = -1;
  } else {
   u = d + 32 | 0;
   if ((a[u + 11 >> 0] | 0) < 0) v = c[u >> 2] | 0; else v = u;
   u = n - v | 0;
   w = ((u | 0) < 0) << 31 >> 31;
   if ((t | 0) > (w | 0) | (t | 0) == (w | 0) & i >>> 0 > u >>> 0) {
    o = -1;
    p = -1;
   } else {
    u = h & 8;
    if (!((i | 0) == 0 & (t | 0) == 0)) {
     if (u | 0) if (!(c[d + 12 >> 2] | 0)) {
      o = -1;
      p = -1;
      break;
     }
     if ((h & 16 | 0) != 0 & (l | 0) == 0) {
      o = -1;
      p = -1;
      break;
     }
    }
    if (u | 0) {
     c[d + 12 >> 2] = (c[d + 8 >> 2] | 0) + i;
     c[d + 16 >> 2] = n;
    }
    if (!(h & 16)) {
     o = i;
     p = t;
    } else {
     c[k >> 2] = (c[d + 20 >> 2] | 0) + i;
     o = i;
     p = t;
    }
   }
  }
 } while (0);
 d = b;
 c[d >> 2] = 0;
 c[d + 4 >> 2] = 0;
 d = b + 8 | 0;
 c[d >> 2] = o;
 c[d + 4 >> 2] = p;
 return;
}

function $s(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0;
 f = l;
 l = l + 48 | 0;
 g = f + 24 | 0;
 h = f + 12 | 0;
 i = f;
 a : do if ((b | 0) == (d | 0)) j = b; else {
  k = (a[b >> 0] | 0) + -48 | 0;
  if (k >>> 0 < 10) {
   m = b + 1 | 0;
   if ((m | 0) == (d | 0)) j = b; else {
    n = k;
    k = m;
    while (1) {
     m = (a[k >> 0] | 0) + -48 | 0;
     if (m >>> 0 >= 10) break;
     o = k + 1 | 0;
     if ((o | 0) == (d | 0)) {
      j = b;
      break a;
     }
     n = m + (n * 10 | 0) | 0;
     k = o;
    }
    if ((d - k | 0) >>> 0 < n >>> 0) j = b; else {
     c[h >> 2] = 0;
     c[h + 4 >> 2] = 0;
     c[h + 8 >> 2] = 0;
     if (n >>> 0 > 4294967279) _q(h);
     if (n >>> 0 < 11) {
      a[h + 11 >> 0] = n;
      p = h;
     } else {
      o = n + 16 & -16;
      m = Bs(o) | 0;
      c[h >> 2] = m;
      c[h + 8 >> 2] = o | -2147483648;
      c[h + 4 >> 2] = n;
      p = m;
     }
     sg(p, k, n) | 0;
     a[g >> 0] = 0;
     mh(p + n | 0, g);
     Vs(g, h, 10);
     m = lh(20288) | 0;
     o = a[g + 11 >> 0] | 0;
     if ((m | 0) == ((o << 24 >> 24 < 0 ? c[g + 4 >> 2] | 0 : o & 255) | 0)) q = (Ws(g, 20288, m) | 0) == 0; else q = 0;
     Es(g);
     if (q) {
      Cu(g);
      m = e + 4 | 0;
      o = c[m >> 2] | 0;
      if (o >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
       dt(o, g);
       c[m >> 2] = (c[m >> 2] | 0) + 24;
      } else et(e, g);
      ns(g);
     } else {
      c[i >> 2] = c[h >> 2];
      c[i + 4 >> 2] = c[h + 4 >> 2];
      c[i + 8 >> 2] = c[h + 8 >> 2];
      m = 0;
      while (1) {
       if ((m | 0) == 3) break;
       c[h + (m << 2) >> 2] = 0;
       m = m + 1 | 0;
      }
      bt(g, i);
      m = e + 4 | 0;
      o = c[m >> 2] | 0;
      if (o >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
       dt(o, g);
       c[m >> 2] = (c[m >> 2] | 0) + 24;
      } else et(e, g);
      ns(g);
      Es(i);
     }
     Es(h);
     j = k + n | 0;
    }
   }
  } else j = b;
 } while (0);
 l = f;
 return j | 0;
}

function Pt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 a : do if ((d - b | 0) > 1) {
  h = a[b >> 0] | 0;
  switch (h << 24 >> 24) {
  case 100:
  case 111:
   {
    if ((a[b + 1 >> 0] | 0) == 110) {
     i = b + 2 | 0;
     if (h << 24 >> 24 != 111) {
      h = iu(i, d, e) | 0;
      j = (h | 0) == (i | 0) ? b : h;
      break a;
     }
     h = Wt(i, d, e) | 0;
     if ((h | 0) == (i | 0)) {
      j = b;
      break a;
     }
     i = Zs(h, d, e) | 0;
     if ((i | 0) == (h | 0)) {
      j = h;
      break a;
     }
     h = e + 4 | 0;
     k = c[h >> 2] | 0;
     if (((k - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      j = i;
      break a;
     }
     _s(g, k + -24 | 0);
     k = c[h >> 2] | 0;
     m = k + -24 | 0;
     n = k;
     while (1) {
      if ((n | 0) == (m | 0)) break;
      o = n + -24 | 0;
      c[h >> 2] = o;
      ns(o);
      n = c[h >> 2] | 0;
     }
     h = a[g + 11 >> 0] | 0;
     n = h << 24 >> 24 < 0;
     qs(k + -48 | 0, n ? c[g >> 2] | 0 : g, n ? c[g + 4 >> 2] | 0 : h & 255) | 0;
     Es(g);
     j = i;
     break a;
    }
    break;
   }
  default:
   {}
  }
  h = St(b, d, e) | 0;
  if ((h | 0) == (b | 0)) {
   n = Wt(b, d, e) | 0;
   if ((n | 0) == (b | 0)) j = b; else {
    m = Zs(n, d, e) | 0;
    if ((m | 0) == (n | 0)) j = n; else {
     n = e + 4 | 0;
     o = c[n >> 2] | 0;
     if (((o - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) j = m; else {
      _s(g, o + -24 | 0);
      o = c[n >> 2] | 0;
      p = o + -24 | 0;
      q = o;
      while (1) {
       if ((q | 0) == (p | 0)) break;
       r = q + -24 | 0;
       c[n >> 2] = r;
       ns(r);
       q = c[n >> 2] | 0;
      }
      n = a[g + 11 >> 0] | 0;
      q = n << 24 >> 24 < 0;
      qs(o + -48 | 0, q ? c[g >> 2] | 0 : g, q ? c[g + 4 >> 2] | 0 : n & 255) | 0;
      Es(g);
      j = m;
     }
    }
   }
  } else j = h;
 } else j = b; while (0);
 l = f;
 return j | 0;
}

function Dn(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0;
 d = l;
 l = l + 176 | 0;
 i = d + 168 | 0;
 j = d + 40 | 0;
 k = d + 36 | 0;
 m = d + 32 | 0;
 n = d;
 o = d + 24 | 0;
 p = d + 16 | 0;
 c[n >> 2] = 0;
 c[n + 4 >> 2] = 0;
 c[n + 8 >> 2] = 0;
 q = 0;
 while (1) {
  if ((q | 0) == 3) break;
  c[n + (q << 2) >> 2] = 0;
  q = q + 1 | 0;
 }
 c[o + 4 >> 2] = 0;
 c[o >> 2] = 9336;
 q = a[h + 8 + 3 >> 0] | 0;
 r = q << 24 >> 24 < 0;
 s = r ? c[h >> 2] | 0 : h;
 t = s + ((r ? c[h + 4 >> 2] | 0 : q & 255) << 2) | 0;
 q = j + 32 | 0;
 h = s;
 s = 0;
 while (1) {
  if (!((s | 0) != 2 & h >>> 0 < t >>> 0)) break;
  c[m >> 2] = h;
  r = yc[c[(c[o >> 2] | 0) + 12 >> 2] & 15](o, i, h, t, m, j, q, k) | 0;
  if ((r | 0) == 2 ? 1 : (c[m >> 2] | 0) == (h | 0)) {
   u = 7;
   break;
  } else v = j;
  while (1) {
   if (v >>> 0 >= (c[k >> 2] | 0) >>> 0) break;
   mr(n, a[v >> 0] | 0);
   v = v + 1 | 0;
  }
  h = c[m >> 2] | 0;
  s = r;
 }
 if ((u | 0) == 7) Yl(0);
 pi(o);
 o = (a[n + 11 >> 0] | 0) < 0 ? c[n >> 2] | 0 : n;
 s = Rf((e | 0) == -1 ? -1 : e << 1, f, g, o) | 0;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 g = 0;
 while (1) {
  if ((g | 0) == 3) break;
  c[b + (g << 2) >> 2] = 0;
  g = g + 1 | 0;
 }
 c[p + 4 >> 2] = 0;
 c[p >> 2] = 9384;
 g = o + (Qe(s) | 0) | 0;
 s = g;
 f = j + 128 | 0;
 e = o;
 o = 0;
 while (1) {
  if (!((o | 0) != 2 & e >>> 0 < g >>> 0)) {
   u = 21;
   break;
  }
  c[m >> 2] = e;
  h = yc[c[(c[p >> 2] | 0) + 16 >> 2] & 15](p, i, e, (s - e | 0) > 32 ? e + 32 | 0 : g, m, j, f, k) | 0;
  if ((h | 0) == 2 ? 1 : (c[m >> 2] | 0) == (e | 0)) {
   u = 17;
   break;
  } else w = j;
  while (1) {
   if (w >>> 0 >= (c[k >> 2] | 0) >>> 0) break;
   vr(b, c[w >> 2] | 0);
   w = w + 4 | 0;
  }
  e = c[m >> 2] | 0;
  o = h;
 }
 if ((u | 0) == 17) Yl(0); else if ((u | 0) == 21) {
  pi(p);
  br(n);
  l = d;
  return;
 }
}

function Tm(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0;
 b = l;
 l = l + 144 | 0;
 j = b + 24 | 0;
 k = b + 32 | 0;
 m = b + 16 | 0;
 n = b + 8 | 0;
 o = b;
 p = b + 28 | 0;
 q = b + 4 | 0;
 c[m >> 2] = k;
 r = m + 4 | 0;
 c[r >> 2] = 115;
 qh(o, g);
 s = Ji(o, 23108) | 0;
 a[p >> 0] = 0;
 t = c[e >> 2] | 0;
 c[q >> 2] = t;
 u = c[g + 4 >> 2] | 0;
 c[j >> 2] = c[q >> 2];
 q = t;
 if (Vm(d, j, f, o, u, h, p, s, m, n, k + 100 | 0) | 0) {
  k = i + 11 | 0;
  if ((a[k >> 0] | 0) < 0) {
   u = c[i >> 2] | 0;
   a[j >> 0] = 0;
   mh(u, j);
   c[i + 4 >> 2] = 0;
  } else {
   a[j >> 0] = 0;
   mh(i, j);
   a[k >> 0] = 0;
  }
  if (a[p >> 0] | 0) mr(i, qc[c[(c[s >> 2] | 0) + 28 >> 2] & 31](s, 45) | 0);
  p = qc[c[(c[s >> 2] | 0) + 28 >> 2] & 31](s, 48) | 0;
  s = c[n >> 2] | 0;
  n = s + -1 | 0;
  k = c[m >> 2] | 0;
  while (1) {
   if (k >>> 0 >= n >>> 0) break;
   if ((a[k >> 0] | 0) != p << 24 >> 24) break;
   k = k + 1 | 0;
  }
  Wm(i, k, s) | 0;
 }
 s = c[d >> 2] | 0;
 do if (!s) v = 1; else {
  k = c[s + 12 >> 2] | 0;
  if ((k | 0) == (c[s + 16 >> 2] | 0)) w = pc[c[(c[s >> 2] | 0) + 36 >> 2] & 63](s) | 0; else w = rg(a[k >> 0] | 0) | 0;
  if (ph(w, qg() | 0) | 0) {
   c[d >> 2] = 0;
   v = 1;
   break;
  } else {
   v = (c[d >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!t) x = 25; else {
  w = c[q + 12 >> 2] | 0;
  if ((w | 0) == (c[q + 16 >> 2] | 0)) y = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](q) | 0; else y = rg(a[w >> 0] | 0) | 0;
  if (ph(y, qg() | 0) | 0) {
   c[e >> 2] = 0;
   x = 25;
   break;
  } else if (v) break; else {
   x = 27;
   break;
  }
 } while (0);
 if ((x | 0) == 25) if (v) x = 27;
 if ((x | 0) == 27) c[h >> 2] = c[h >> 2] | 2;
 h = c[d >> 2] | 0;
 Ki(o);
 o = c[m >> 2] | 0;
 c[m >> 2] = 0;
 if (o | 0) Ac[c[r >> 2] & 127](o);
 l = b;
 return h | 0;
}

function cn(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0;
 b = l;
 l = l + 432 | 0;
 j = b + 424 | 0;
 k = b + 24 | 0;
 m = b + 16 | 0;
 n = b + 8 | 0;
 o = b;
 p = b + 428 | 0;
 q = b + 4 | 0;
 c[m >> 2] = k;
 r = m + 4 | 0;
 c[r >> 2] = 115;
 qh(o, g);
 s = Ji(o, 23140) | 0;
 a[p >> 0] = 0;
 t = c[e >> 2] | 0;
 c[q >> 2] = t;
 u = c[g + 4 >> 2] | 0;
 c[j >> 2] = c[q >> 2];
 q = t;
 if (dn(d, j, f, o, u, h, p, s, m, n, k + 400 | 0) | 0) {
  k = i + 8 + 3 | 0;
  if ((a[k >> 0] | 0) < 0) {
   u = c[i >> 2] | 0;
   c[j >> 2] = 0;
   vi(u, j);
   c[i + 4 >> 2] = 0;
  } else {
   c[j >> 2] = 0;
   vi(i, j);
   a[k >> 0] = 0;
  }
  if (a[p >> 0] | 0) vr(i, qc[c[(c[s >> 2] | 0) + 44 >> 2] & 31](s, 45) | 0);
  p = qc[c[(c[s >> 2] | 0) + 44 >> 2] & 31](s, 48) | 0;
  s = c[n >> 2] | 0;
  n = s + -4 | 0;
  k = c[m >> 2] | 0;
  while (1) {
   if (k >>> 0 >= n >>> 0) break;
   if ((c[k >> 2] | 0) != (p | 0)) break;
   k = k + 4 | 0;
  }
  en(i, k, s) | 0;
 }
 s = c[d >> 2] | 0;
 do if (!s) v = 1; else {
  k = c[s + 12 >> 2] | 0;
  if ((k | 0) == (c[s + 16 >> 2] | 0)) w = pc[c[(c[s >> 2] | 0) + 36 >> 2] & 63](s) | 0; else w = Jg(c[k >> 2] | 0) | 0;
  if (rh(w, Ig() | 0) | 0) {
   c[d >> 2] = 0;
   v = 1;
   break;
  } else {
   v = (c[d >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!t) x = 25; else {
  w = c[q + 12 >> 2] | 0;
  if ((w | 0) == (c[q + 16 >> 2] | 0)) y = pc[c[(c[t >> 2] | 0) + 36 >> 2] & 63](q) | 0; else y = Jg(c[w >> 2] | 0) | 0;
  if (rh(y, Ig() | 0) | 0) {
   c[e >> 2] = 0;
   x = 25;
   break;
  } else if (v) break; else {
   x = 27;
   break;
  }
 } while (0);
 if ((x | 0) == 25) if (v) x = 27;
 if ((x | 0) == 27) c[h >> 2] = c[h >> 2] | 2;
 h = c[d >> 2] | 0;
 Ki(o);
 o = c[m >> 2] | 0;
 c[m >> 2] = 0;
 if (o | 0) Ac[c[r >> 2] & 127](o);
 l = b;
 return h | 0;
}

function Pn(b, d, e, f, g, h, i, j) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 var k = 0, l = 0, m = 0, n = 0;
 c[e >> 2] = b;
 c[h >> 2] = f;
 b = g;
 if (!(j & 2)) k = 4; else if ((b - f | 0) < 3) l = 1; else {
  c[h >> 2] = f + 1;
  a[f >> 0] = -17;
  f = c[h >> 2] | 0;
  c[h >> 2] = f + 1;
  a[f >> 0] = -69;
  f = c[h >> 2] | 0;
  c[h >> 2] = f + 1;
  a[f >> 0] = -65;
  k = 4;
 }
 a : do if ((k | 0) == 4) {
  f = c[e >> 2] | 0;
  while (1) {
   if (f >>> 0 >= d >>> 0) {
    l = 0;
    break a;
   }
   j = c[f >> 2] | 0;
   if (j >>> 0 > i >>> 0 | (j & -2048 | 0) == 55296) {
    l = 2;
    break a;
   }
   do if (j >>> 0 < 128) {
    g = c[h >> 2] | 0;
    if ((b - g | 0) < 1) {
     l = 1;
     break a;
    }
    c[h >> 2] = g + 1;
    a[g >> 0] = j;
   } else {
    if (j >>> 0 < 2048) {
     g = c[h >> 2] | 0;
     if ((b - g | 0) < 2) {
      l = 1;
      break a;
     }
     c[h >> 2] = g + 1;
     a[g >> 0] = j >>> 6 | 192;
     g = c[h >> 2] | 0;
     c[h >> 2] = g + 1;
     a[g >> 0] = j & 63 | 128;
     break;
    }
    g = c[h >> 2] | 0;
    m = b - g | 0;
    if (j >>> 0 < 65536) {
     if ((m | 0) < 3) {
      l = 1;
      break a;
     }
     c[h >> 2] = g + 1;
     a[g >> 0] = j >>> 12 | 224;
     n = c[h >> 2] | 0;
     c[h >> 2] = n + 1;
     a[n >> 0] = j >>> 6 & 63 | 128;
     n = c[h >> 2] | 0;
     c[h >> 2] = n + 1;
     a[n >> 0] = j & 63 | 128;
     break;
    } else {
     if ((m | 0) < 4) {
      l = 1;
      break a;
     }
     c[h >> 2] = g + 1;
     a[g >> 0] = j >>> 18 | 240;
     g = c[h >> 2] | 0;
     c[h >> 2] = g + 1;
     a[g >> 0] = j >>> 12 & 63 | 128;
     g = c[h >> 2] | 0;
     c[h >> 2] = g + 1;
     a[g >> 0] = j >>> 6 & 63 | 128;
     g = c[h >> 2] | 0;
     c[h >> 2] = g + 1;
     a[g >> 0] = j & 63 | 128;
     break;
    }
   } while (0);
   j = (c[e >> 2] | 0) + 4 | 0;
   c[e >> 2] = j;
   f = j;
  }
 } while (0);
 return l | 0;
}

function ef(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;
 g = l;
 l = l + 1040 | 0;
 h = g + 8 | 0;
 i = g;
 j = c[b >> 2] | 0;
 c[i >> 2] = j;
 k = (a | 0) != 0;
 m = k ? e : 256;
 e = k ? a : h;
 a = j;
 a : do if ((m | 0) != 0 & (j | 0) != 0) {
  n = 0;
  o = d;
  p = m;
  q = e;
  r = a;
  while (1) {
   s = o >>> 2;
   t = s >>> 0 >= p >>> 0;
   if (!(o >>> 0 > 131 | t)) {
    u = q;
    v = n;
    w = o;
    x = p;
    y = r;
    break a;
   }
   z = t ? p : s;
   A = o - z | 0;
   s = ff(q, i, z, f) | 0;
   if ((s | 0) == -1) break;
   z = (q | 0) == (h | 0);
   t = p - (z ? 0 : s) | 0;
   B = z ? q : q + (s << 2) | 0;
   z = s + n | 0;
   s = c[i >> 2] | 0;
   if ((t | 0) != 0 & (s | 0) != 0) {
    n = z;
    o = A;
    p = t;
    q = B;
    r = s;
   } else {
    u = B;
    v = z;
    w = A;
    x = t;
    y = s;
    break a;
   }
  }
  u = q;
  v = -1;
  w = A;
  x = 0;
  y = c[i >> 2] | 0;
 } else {
  u = e;
  v = 0;
  w = d;
  x = m;
  y = a;
 } while (0);
 b : do if (!y) C = v; else if ((x | 0) != 0 & (w | 0) != 0) {
  a = v;
  m = w;
  d = u;
  e = x;
  A = y;
  while (1) {
   D = Ae(d, A, m, f) | 0;
   if ((D + 2 | 0) >>> 0 < 3) break;
   A = (c[i >> 2] | 0) + D | 0;
   c[i >> 2] = A;
   m = m - D | 0;
   e = e + -1 | 0;
   h = a + 1 | 0;
   if (!((e | 0) != 0 & (m | 0) != 0)) {
    C = h;
    break b;
   } else {
    a = h;
    d = d + 4 | 0;
   }
  }
  switch (D | 0) {
  case -1:
   {
    C = -1;
    break b;
    break;
   }
  case 0:
   {
    c[i >> 2] = 0;
    C = a;
    break b;
    break;
   }
  default:
   {
    c[f >> 2] = 0;
    C = a;
    break b;
   }
  }
 } else C = v; while (0);
 if (k) c[b >> 2] = c[i >> 2];
 l = g;
 return C | 0;
}

function vu(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0;
 f = l;
 l = l + 96 | 0;
 g = f + 8 | 0;
 i = f;
 j = f + 56 | 0;
 k = f + 16 | 0;
 m = f + 40 | 0;
 a : do if ((d - b | 0) >>> 0 > 20) {
  n = 0;
  o = i;
  while (1) {
   p = b + n | 0;
   q = a[p >> 0] | 0;
   r = q << 24 >> 24;
   if ((n | 0) == 20) {
    s = 6;
    break;
   }
   if (!(Ff(r) | 0)) break;
   t = a[b + (n | 1) >> 0] | 0;
   a[o >> 0] = (((r + -48 | 0) >>> 0 < 10 ? 0 : 9) + r << 4) + t + ((t + -48 | 0) >>> 0 < 10 ? 208 : 169);
   n = n + 2 | 0;
   o = o + 1 | 0;
  }
  do if ((s | 0) == 6) {
   if (q << 24 >> 24 == 69) {
    b : do if ((o | 0) != (i | 0)) {
     n = o;
     t = i;
     while (1) {
      r = n + -1 | 0;
      if (t >>> 0 >= r >>> 0) break b;
      u = a[t >> 0] | 0;
      a[t >> 0] = a[r >> 0] | 0;
      a[r >> 0] = u;
      n = r;
      t = t + 1 | 0;
     }
    } while (0);
    t = j;
    n = t + 40 | 0;
    do {
     a[t >> 0] = 0;
     t = t + 1 | 0;
    } while ((t | 0) < (n | 0));
    h[g >> 3] = +h[i >> 3];
    t = qe(j, 40, 20212, g) | 0;
    if (t >>> 0 > 39) break;
    c[m >> 2] = 0;
    c[m + 4 >> 2] = 0;
    c[m + 8 >> 2] = 0;
    if (t >>> 0 < 11) {
     a[m + 11 >> 0] = t;
     v = m;
    } else {
     n = t + 16 & -16;
     r = Bs(n) | 0;
     c[m >> 2] = r;
     c[m + 8 >> 2] = n | -2147483648;
     c[m + 4 >> 2] = t;
     v = r;
    }
    sg(v, j, t) | 0;
    a[g >> 0] = 0;
    mh(v + t | 0, g);
    bt(k, m);
    t = e + 4 | 0;
    r = c[t >> 2] | 0;
    if (r >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(r, k);
     c[t >> 2] = (c[t >> 2] | 0) + 24;
    } else et(e, k);
    ns(k);
    Es(m);
    w = p + 1 | 0;
   } else w = b;
   x = w;
   break a;
  } while (0);
  x = b;
 } else x = b; while (0);
 l = f;
 return x | 0;
}

function uu(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0;
 f = l;
 l = l + 96 | 0;
 g = f + 8 | 0;
 i = f;
 j = f + 56 | 0;
 k = f + 16 | 0;
 m = f + 40 | 0;
 a : do if ((d - b | 0) >>> 0 > 16) {
  n = 0;
  o = i;
  while (1) {
   p = b + n | 0;
   q = a[p >> 0] | 0;
   r = q << 24 >> 24;
   if ((n | 0) == 16) {
    s = 6;
    break;
   }
   if (!(Ff(r) | 0)) break;
   t = a[b + (n | 1) >> 0] | 0;
   a[o >> 0] = (((r + -48 | 0) >>> 0 < 10 ? 0 : 9) + r << 4) + t + ((t + -48 | 0) >>> 0 < 10 ? 208 : 169);
   n = n + 2 | 0;
   o = o + 1 | 0;
  }
  do if ((s | 0) == 6) {
   if (q << 24 >> 24 == 69) {
    b : do if ((o | 0) != (i | 0)) {
     n = o;
     t = i;
     while (1) {
      r = n + -1 | 0;
      if (t >>> 0 >= r >>> 0) break b;
      u = a[t >> 0] | 0;
      a[t >> 0] = a[r >> 0] | 0;
      a[r >> 0] = u;
      n = r;
      t = t + 1 | 0;
     }
    } while (0);
    t = j;
    n = t + 32 | 0;
    do {
     a[t >> 0] = 0;
     t = t + 1 | 0;
    } while ((t | 0) < (n | 0));
    h[g >> 3] = +h[i >> 3];
    t = qe(j, 32, 20217, g) | 0;
    if (t >>> 0 > 31) break;
    c[m >> 2] = 0;
    c[m + 4 >> 2] = 0;
    c[m + 8 >> 2] = 0;
    if (t >>> 0 < 11) {
     a[m + 11 >> 0] = t;
     v = m;
    } else {
     n = t + 16 & -16;
     r = Bs(n) | 0;
     c[m >> 2] = r;
     c[m + 8 >> 2] = n | -2147483648;
     c[m + 4 >> 2] = t;
     v = r;
    }
    sg(v, j, t) | 0;
    a[g >> 0] = 0;
    mh(v + t | 0, g);
    bt(k, m);
    t = e + 4 | 0;
    r = c[t >> 2] | 0;
    if (r >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(r, k);
     c[t >> 2] = (c[t >> 2] | 0) + 24;
    } else et(e, k);
    ns(k);
    Es(m);
    w = p + 1 | 0;
   } else w = b;
   x = w;
   break a;
  } while (0);
  x = b;
 } else x = b; while (0);
 l = f;
 return x | 0;
}

function tu(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0;
 f = l;
 l = l + 80 | 0;
 i = f;
 j = f + 44 | 0;
 k = f + 48 | 0;
 m = f + 8 | 0;
 n = f + 32 | 0;
 a : do if ((d - b | 0) >>> 0 > 8) {
  o = 0;
  p = j;
  while (1) {
   q = b + o | 0;
   r = a[q >> 0] | 0;
   s = r << 24 >> 24;
   if ((o | 0) == 8) {
    t = 6;
    break;
   }
   if (!(Ff(s) | 0)) break;
   u = a[b + (o | 1) >> 0] | 0;
   a[p >> 0] = (((s + -48 | 0) >>> 0 < 10 ? 0 : 9) + s << 4) + u + ((u + -48 | 0) >>> 0 < 10 ? 208 : 169);
   o = o + 2 | 0;
   p = p + 1 | 0;
  }
  do if ((t | 0) == 6) {
   if (r << 24 >> 24 == 69) {
    b : do if ((p | 0) != (j | 0)) {
     o = p;
     u = j;
     while (1) {
      s = o + -1 | 0;
      if (u >>> 0 >= s >>> 0) break b;
      v = a[u >> 0] | 0;
      a[u >> 0] = a[s >> 0] | 0;
      a[s >> 0] = v;
      o = s;
      u = u + 1 | 0;
     }
    } while (0);
    u = k;
    o = u + 24 | 0;
    do {
     a[u >> 0] = 0;
     u = u + 1 | 0;
    } while ((u | 0) < (o | 0));
    h[i >> 3] = +g[j >> 2];
    u = qe(k, 24, 20220, i) | 0;
    if (u >>> 0 > 23) break;
    c[n >> 2] = 0;
    c[n + 4 >> 2] = 0;
    c[n + 8 >> 2] = 0;
    if (u >>> 0 < 11) {
     a[n + 11 >> 0] = u;
     w = n;
    } else {
     o = u + 16 & -16;
     s = Bs(o) | 0;
     c[n >> 2] = s;
     c[n + 8 >> 2] = o | -2147483648;
     c[n + 4 >> 2] = u;
     w = s;
    }
    sg(w, k, u) | 0;
    a[i >> 0] = 0;
    mh(w + u | 0, i);
    bt(m, n);
    u = e + 4 | 0;
    s = c[u >> 2] | 0;
    if (s >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
     dt(s, m);
     c[u >> 2] = (c[u >> 2] | 0) + 24;
    } else et(e, m);
    ns(m);
    Es(n);
    x = q + 1 | 0;
   } else x = b;
   y = x;
   break a;
  } while (0);
  y = b;
 } else y = b; while (0);
 l = f;
 return y | 0;
}

function Li(b, d, e, f, g, h, i, j, k, l) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 l = l | 0;
 var m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;
 m = c[f >> 2] | 0;
 n = (m | 0) == (e | 0);
 do if (n) {
  o = (a[l + 24 >> 0] | 0) == b << 24 >> 24;
  if (!o) if ((a[l + 25 >> 0] | 0) != b << 24 >> 24) {
   p = 5;
   break;
  }
  c[f >> 2] = e + 1;
  a[e >> 0] = o ? 43 : 45;
  c[g >> 2] = 0;
  q = 0;
 } else p = 5; while (0);
 a : do if ((p | 0) == 5) {
  o = a[i + 11 >> 0] | 0;
  if (b << 24 >> 24 == h << 24 >> 24 ? ((o << 24 >> 24 < 0 ? c[i + 4 >> 2] | 0 : o & 255) | 0) != 0 : 0) {
   o = c[k >> 2] | 0;
   if ((o - j | 0) >= 160) {
    q = 0;
    break;
   }
   r = c[g >> 2] | 0;
   c[k >> 2] = o + 4;
   c[o >> 2] = r;
   c[g >> 2] = 0;
   q = 0;
   break;
  }
  r = l + 26 | 0;
  o = 0;
  while (1) {
   s = l + o | 0;
   if ((o | 0) == 26) {
    t = r;
    break;
   }
   if ((a[s >> 0] | 0) == b << 24 >> 24) {
    t = s;
    break;
   } else o = o + 1 | 0;
  }
  o = t - l | 0;
  if ((o | 0) > 23) q = -1; else {
   switch (d | 0) {
   case 10:
   case 8:
    {
     if ((o | 0) >= (d | 0)) {
      q = -1;
      break a;
     }
     break;
    }
   case 16:
    {
     if ((o | 0) >= 22) {
      if (n) {
       q = -1;
       break a;
      }
      if ((m - e | 0) >= 3) {
       q = -1;
       break a;
      }
      if ((a[m + -1 >> 0] | 0) != 48) {
       q = -1;
       break a;
      }
      c[g >> 2] = 0;
      r = a[15968 + o >> 0] | 0;
      c[f >> 2] = m + 1;
      a[m >> 0] = r;
      q = 0;
      break a;
     }
     break;
    }
   default:
    {}
   }
   r = a[15968 + o >> 0] | 0;
   c[f >> 2] = m + 1;
   a[m >> 0] = r;
   c[g >> 2] = (c[g >> 2] | 0) + 1;
   q = 0;
  }
 } while (0);
 return q | 0;
}

function Dj(b, d, e, f, g, h, i, j, k, l) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 k = k | 0;
 l = l | 0;
 var m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;
 m = c[f >> 2] | 0;
 n = (m | 0) == (e | 0);
 do if (n) {
  o = (c[l + 96 >> 2] | 0) == (b | 0);
  if (!o) if ((c[l + 100 >> 2] | 0) != (b | 0)) {
   p = 5;
   break;
  }
  c[f >> 2] = e + 1;
  a[e >> 0] = o ? 43 : 45;
  c[g >> 2] = 0;
  q = 0;
 } else p = 5; while (0);
 a : do if ((p | 0) == 5) {
  o = a[i + 11 >> 0] | 0;
  if ((b | 0) == (h | 0) ? ((o << 24 >> 24 < 0 ? c[i + 4 >> 2] | 0 : o & 255) | 0) != 0 : 0) {
   o = c[k >> 2] | 0;
   if ((o - j | 0) >= 160) {
    q = 0;
    break;
   }
   r = c[g >> 2] | 0;
   c[k >> 2] = o + 4;
   c[o >> 2] = r;
   c[g >> 2] = 0;
   q = 0;
   break;
  }
  r = l + 104 | 0;
  o = 0;
  while (1) {
   s = l + (o << 2) | 0;
   if ((o | 0) == 26) {
    t = r;
    break;
   }
   if ((c[s >> 2] | 0) == (b | 0)) {
    t = s;
    break;
   } else o = o + 1 | 0;
  }
  o = t - l | 0;
  r = o >> 2;
  if ((o | 0) > 92) q = -1; else {
   switch (d | 0) {
   case 10:
   case 8:
    {
     if ((r | 0) >= (d | 0)) {
      q = -1;
      break a;
     }
     break;
    }
   case 16:
    {
     if ((o | 0) >= 88) {
      if (n) {
       q = -1;
       break a;
      }
      if ((m - e | 0) >= 3) {
       q = -1;
       break a;
      }
      if ((a[m + -1 >> 0] | 0) != 48) {
       q = -1;
       break a;
      }
      c[g >> 2] = 0;
      o = a[15968 + r >> 0] | 0;
      c[f >> 2] = m + 1;
      a[m >> 0] = o;
      q = 0;
      break a;
     }
     break;
    }
   default:
    {}
   }
   o = a[15968 + r >> 0] | 0;
   c[f >> 2] = m + 1;
   a[m >> 0] = o;
   c[g >> 2] = (c[g >> 2] | 0) + 1;
   q = 0;
  }
 } while (0);
 return q | 0;
}

function en(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0;
 f = l;
 l = l + 16 | 0;
 g = f + 12 | 0;
 h = f;
 i = b + 8 | 0;
 j = i + 3 | 0;
 k = a[j >> 0] | 0;
 m = k << 24 >> 24 < 0;
 if (m) {
  n = c[b + 4 >> 2] | 0;
  o = (c[i >> 2] & 2147483647) + -1 | 0;
 } else {
  n = k & 255;
  o = 1;
 }
 i = e - d >> 2;
 do if (i | 0) {
  if (m) {
   p = c[b >> 2] | 0;
   q = c[b + 4 >> 2] | 0;
  } else {
   p = b;
   q = k & 255;
  }
  if (fn(d, p, p + (q << 2) | 0) | 0) {
   c[h >> 2] = 0;
   c[h + 4 >> 2] = 0;
   c[h + 8 >> 2] = 0;
   if (i >>> 0 > 1073741807) _q(h);
   do if (i >>> 0 < 2) {
    a[h + 8 + 3 >> 0] = i;
    r = d;
    s = h;
   } else {
    t = i + 4 & -4;
    if (t >>> 0 > 1073741823) jb(); else {
     u = Tq(t << 2) | 0;
     c[h >> 2] = u;
     c[h + 8 >> 2] = t | -2147483648;
     c[h + 4 >> 2] = i;
     r = d;
     s = u;
     break;
    }
   } while (0);
   while (1) {
    if ((r | 0) == (e | 0)) break;
    vi(s, r);
    r = r + 4 | 0;
    s = s + 4 | 0;
   }
   c[g >> 2] = 0;
   vi(s, g);
   u = a[h + 8 + 3 >> 0] | 0;
   t = u << 24 >> 24 < 0;
   ur(b, t ? c[h >> 2] | 0 : h, t ? c[h + 4 >> 2] | 0 : u & 255) | 0;
   nr(h);
   break;
  }
  if ((o - n | 0) >>> 0 < i >>> 0) tr(b, o, n + i - o | 0, n, n, 0, 0);
  if ((a[j >> 0] | 0) < 0) v = c[b >> 2] | 0; else v = b;
  u = v + (n << 2) | 0;
  t = d;
  while (1) {
   if ((t | 0) == (e | 0)) break;
   vi(u, t);
   u = u + 4 | 0;
   t = t + 4 | 0;
  }
  c[g >> 2] = 0;
  vi(u, g);
  t = n + i | 0;
  if ((a[j >> 0] | 0) < 0) {
   c[b + 4 >> 2] = t;
   break;
  } else {
   a[j >> 0] = t;
   break;
  }
 } while (0);
 l = f;
 return b | 0;
}

function md(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 if ((d | 0) == -1) {
  g = 0;
  l = e;
  return g | 0;
 }
 h = b + 12 | 0;
 i = b + 8 | 0;
 j = (c[h >> 2] | 0) - (c[i >> 2] | 0) | 0;
 k = b + 24 | 0;
 m = c[k >> 2] | 0;
 n = b + 28 | 0;
 o = c[n >> 2] | 0;
 if ((m | 0) == (o | 0)) {
  p = b + 48 | 0;
  if (!(c[p >> 2] & 16)) {
   g = -1;
   l = e;
   return g | 0;
  }
  q = b + 20 | 0;
  r = c[q >> 2] | 0;
  s = b + 44 | 0;
  t = (c[s >> 2] | 0) - r | 0;
  u = b + 32 | 0;
  mr(u, 0);
  v = u + 11 | 0;
  if ((a[v >> 0] | 0) < 0) w = (c[b + 40 >> 2] & 2147483647) + -1 | 0; else w = 10;
  ir(u, w, 0);
  w = a[v >> 0] | 0;
  if (w << 24 >> 24 < 0) {
   x = c[u >> 2] | 0;
   y = c[b + 36 >> 2] | 0;
  } else {
   x = u;
   y = w & 255;
  }
  w = x + y | 0;
  c[q >> 2] = x;
  c[n >> 2] = w;
  n = x + (m - r) | 0;
  c[k >> 2] = n;
  r = x + t | 0;
  c[s >> 2] = r;
  z = s;
  A = p;
  B = s;
  C = n;
  D = r;
  E = w;
 } else {
  w = b + 44 | 0;
  z = w;
  A = b + 48 | 0;
  B = w;
  C = m;
  D = c[w >> 2] | 0;
  E = o;
 }
 o = C + 1 | 0;
 c[f >> 2] = o;
 w = c[(o >>> 0 < D >>> 0 ? B : f) >> 2] | 0;
 c[z >> 2] = w;
 if (c[A >> 2] & 8 | 0) {
  A = b + 32 | 0;
  if ((a[A + 11 >> 0] | 0) < 0) F = c[A >> 2] | 0; else F = A;
  c[i >> 2] = F;
  c[h >> 2] = F + j;
  c[b + 16 >> 2] = w;
 }
 if ((C | 0) == (E | 0)) {
  g = qc[c[(c[b >> 2] | 0) + 52 >> 2] & 31](b, d & 255) | 0;
  l = e;
  return g | 0;
 } else {
  c[k >> 2] = o;
  a[C >> 0] = d;
  g = d & 255;
  l = e;
  return g | 0;
 }
 return 0;
}

function Ae(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0;
 g = l;
 l = l + 16 | 0;
 h = g;
 i = (f | 0) == 0 ? 22028 : f;
 f = c[i >> 2] | 0;
 a : do if (!d) if (!f) j = 0; else k = 17; else {
  m = (b | 0) == 0 ? h : b;
  if (!e) j = -2; else {
   if (!f) {
    n = a[d >> 0] | 0;
    if (n << 24 >> 24 > -1) {
     c[m >> 2] = n & 255;
     j = n << 24 >> 24 != 0 & 1;
     break;
    }
    n = (c[c[(Oe() | 0) + 188 >> 2] >> 2] | 0) == 0;
    o = a[d >> 0] | 0;
    if (n) {
     c[m >> 2] = o << 24 >> 24 & 57343;
     j = 1;
     break;
    }
    n = (o & 255) + -194 | 0;
    if (n >>> 0 > 50) {
     k = 17;
     break;
    }
    o = c[2728 + (n << 2) >> 2] | 0;
    n = e + -1 | 0;
    if (!n) p = o; else {
     q = d + 1 | 0;
     r = o;
     s = n;
     k = 11;
    }
   } else {
    q = d;
    r = f;
    s = e;
    k = 11;
   }
   b : do if ((k | 0) == 11) {
    n = a[q >> 0] | 0;
    o = (n & 255) >>> 3;
    if ((o + -16 | o + (r >> 26)) >>> 0 > 7) {
     k = 17;
     break a;
    } else {
     t = q;
     u = r;
     v = s;
     w = n;
    }
    while (1) {
     t = t + 1 | 0;
     u = (w & 255) + -128 | u << 6;
     v = v + -1 | 0;
     if ((u | 0) >= 0) break;
     if (!v) {
      p = u;
      break b;
     }
     w = a[t >> 0] | 0;
     if ((w & -64) << 24 >> 24 != -128) {
      k = 17;
      break a;
     }
    }
    c[i >> 2] = 0;
    c[m >> 2] = u;
    j = e - v | 0;
    break a;
   } while (0);
   c[i >> 2] = p;
   j = -2;
  }
 } while (0);
 if ((k | 0) == 17) {
  c[i >> 2] = 0;
  c[(Gd() | 0) >> 2] = 84;
  j = -1;
 }
 l = g;
 return j | 0;
}

function yf(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0;
 f = l;
 l = l + 272 | 0;
 g = f + 8 | 0;
 h = f;
 i = c[b >> 2] | 0;
 c[h >> 2] = i;
 j = (a | 0) != 0;
 k = j ? e : 256;
 e = j ? a : g;
 a = i;
 a : do if ((k | 0) != 0 & (i | 0) != 0) {
  m = 0;
  n = d;
  o = k;
  p = e;
  q = a;
  while (1) {
   r = n >>> 0 >= o >>> 0;
   if (!(r | n >>> 0 > 32)) {
    s = p;
    t = m;
    u = n;
    v = o;
    w = q;
    break a;
   }
   x = r ? o : n;
   y = n - x | 0;
   r = Se(p, h, x, 0) | 0;
   if ((r | 0) == -1) break;
   x = (p | 0) == (g | 0);
   z = o - (x ? 0 : r) | 0;
   A = x ? p : p + r | 0;
   x = r + m | 0;
   r = c[h >> 2] | 0;
   if ((z | 0) != 0 & (r | 0) != 0) {
    m = x;
    n = y;
    o = z;
    p = A;
    q = r;
   } else {
    s = A;
    t = x;
    u = y;
    v = z;
    w = r;
    break a;
   }
  }
  s = p;
  t = -1;
  u = y;
  v = 0;
  w = c[h >> 2] | 0;
 } else {
  s = e;
  t = 0;
  u = d;
  v = k;
  w = a;
 } while (0);
 b : do if (!w) B = t; else if ((v | 0) != 0 & (u | 0) != 0) {
  a = t;
  k = u;
  d = s;
  e = v;
  y = w;
  while (1) {
   C = be(d, c[y >> 2] | 0, 0) | 0;
   if ((C + 1 | 0) >>> 0 < 2) break;
   y = (c[h >> 2] | 0) + 4 | 0;
   c[h >> 2] = y;
   k = k + -1 | 0;
   e = e - C | 0;
   g = C + a | 0;
   if (!((e | 0) != 0 & (k | 0) != 0)) {
    B = g;
    break b;
   } else {
    a = g;
    d = d + C | 0;
   }
  }
  if (!C) {
   c[h >> 2] = 0;
   B = a;
  } else B = -1;
 } else B = t; while (0);
 if (j) c[b >> 2] = c[h >> 2];
 l = f;
 return B | 0;
}

function Mu(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 g = b + 11 | 0;
 h = a[g >> 0] | 0;
 i = h << 24 >> 24 < 0;
 if (i) {
  j = c[b + 4 >> 2] | 0;
  k = j >>> 0 < 11 ? j : 11;
  m = j;
  n = (c[b + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  j = h & 255;
  k = j >>> 0 < 11 ? j : 11;
  m = j;
  n = 10;
 }
 if ((k - m + n | 0) >>> 0 < d >>> 0) As(b, n, d - k + m - n | 0, m, 0, k, d, 20327); else {
  if (i) o = c[b >> 2] | 0; else o = b;
  do if ((k | 0) == (d | 0)) {
   p = d;
   q = 0;
   r = 20327;
   s = d;
   t = 17;
  } else {
   i = m - k | 0;
   if (!i) {
    p = k;
    q = 0;
    r = 20327;
    s = d;
    t = 17;
   } else {
    if (k >>> 0 > d >>> 0) {
     er(o, 20327, d) | 0;
     er(o + d | 0, o + k | 0, i) | 0;
     u = k;
     v = d;
     break;
    }
    do if (o >>> 0 < 20327 >>> 0 & (o + m | 0) >>> 0 > 20327 >>> 0) if ((o + k | 0) >>> 0 > 20327 >>> 0) {
     er(o, 20327, k) | 0;
     w = 0;
     x = k;
     y = 20327 + d | 0;
     z = d - k | 0;
     break;
    } else {
     w = k;
     x = 0;
     y = 20327 + (d - k) | 0;
     z = d;
     break;
    } else {
     w = k;
     x = 0;
     y = 20327;
     z = d;
    } while (0);
    n = o + x | 0;
    er(n + z | 0, n + w | 0, i) | 0;
    p = w;
    q = x;
    r = y;
    s = z;
    t = 17;
   }
  } while (0);
  if ((t | 0) == 17) {
   er(o + q | 0, r, s) | 0;
   u = p;
   v = s;
  }
  s = v - u + m | 0;
  if ((a[g >> 0] | 0) < 0) c[b + 4 >> 2] = s; else a[g >> 0] = s;
  a[f >> 0] = 0;
  mh(o + s | 0, f);
 }
 l = e;
 return;
}

function Wm(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0;
 f = l;
 l = l + 16 | 0;
 g = d;
 h = f + 12 | 0;
 i = f;
 j = b + 11 | 0;
 k = a[j >> 0] | 0;
 m = k << 24 >> 24 < 0;
 if (m) {
  n = c[b + 4 >> 2] | 0;
  o = (c[b + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  n = k & 255;
  o = 10;
 }
 p = e - g | 0;
 do if (p | 0) {
  if (m) {
   q = c[b >> 2] | 0;
   r = c[b + 4 >> 2] | 0;
  } else {
   q = b;
   r = k & 255;
  }
  if (Xm(d, q, q + r | 0) | 0) {
   c[i >> 2] = 0;
   c[i + 4 >> 2] = 0;
   c[i + 8 >> 2] = 0;
   if (p >>> 0 > 4294967279) _q(i);
   if (p >>> 0 < 11) {
    a[i + 11 >> 0] = p;
    s = i;
   } else {
    t = p + 16 & -16;
    u = Tq(t) | 0;
    c[i >> 2] = u;
    c[i + 8 >> 2] = t | -2147483648;
    c[i + 4 >> 2] = p;
    s = u;
   }
   u = d;
   t = s;
   while (1) {
    if ((u | 0) == (e | 0)) break;
    mh(t, u);
    u = u + 1 | 0;
    t = t + 1 | 0;
   }
   a[h >> 0] = 0;
   mh(s + p | 0, h);
   t = a[i + 11 >> 0] | 0;
   u = t << 24 >> 24 < 0;
   lr(b, u ? c[i >> 2] | 0 : i, u ? c[i + 4 >> 2] | 0 : t & 255) | 0;
   br(i);
   break;
  }
  if ((o - n | 0) >>> 0 < p >>> 0) kr(b, o, n + p - o | 0, n, n, 0, 0);
  if ((a[j >> 0] | 0) < 0) v = c[b >> 2] | 0; else v = b;
  t = e + (n - g) | 0;
  u = v + n | 0;
  w = d;
  while (1) {
   if ((w | 0) == (e | 0)) break;
   mh(u, w);
   u = u + 1 | 0;
   w = w + 1 | 0;
  }
  a[h >> 0] = 0;
  mh(v + t | 0, h);
  w = n + p | 0;
  if ((a[j >> 0] | 0) < 0) {
   c[b + 4 >> 2] = w;
   break;
  } else {
   a[j >> 0] = w;
   break;
  }
 } while (0);
 l = f;
 return b | 0;
}

function Wd(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0;
 f = d & 255;
 g = (e | 0) != 0;
 a : do if (g & (b & 3 | 0) != 0) {
  h = d & 255;
  i = b;
  j = e;
  while (1) {
   if ((a[i >> 0] | 0) == h << 24 >> 24) {
    k = i;
    l = j;
    m = 6;
    break a;
   }
   n = i + 1 | 0;
   o = j + -1 | 0;
   p = (o | 0) != 0;
   if (p & (n & 3 | 0) != 0) {
    i = n;
    j = o;
   } else {
    q = n;
    r = o;
    s = p;
    m = 5;
    break;
   }
  }
 } else {
  q = b;
  r = e;
  s = g;
  m = 5;
 } while (0);
 if ((m | 0) == 5) if (s) {
  k = q;
  l = r;
  m = 6;
 } else {
  t = q;
  u = 0;
 }
 b : do if ((m | 0) == 6) {
  q = d & 255;
  if ((a[k >> 0] | 0) == q << 24 >> 24) {
   t = k;
   u = l;
  } else {
   r = O(f, 16843009) | 0;
   c : do if (l >>> 0 > 3) {
    s = k;
    g = l;
    while (1) {
     e = c[s >> 2] ^ r;
     if ((e & -2139062144 ^ -2139062144) & e + -16843009 | 0) break;
     e = s + 4 | 0;
     b = g + -4 | 0;
     if (b >>> 0 > 3) {
      s = e;
      g = b;
     } else {
      v = e;
      w = b;
      m = 11;
      break c;
     }
    }
    x = s;
    y = g;
   } else {
    v = k;
    w = l;
    m = 11;
   } while (0);
   if ((m | 0) == 11) if (!w) {
    t = v;
    u = 0;
    break;
   } else {
    x = v;
    y = w;
   }
   while (1) {
    if ((a[x >> 0] | 0) == q << 24 >> 24) {
     t = x;
     u = y;
     break b;
    }
    r = x + 1 | 0;
    y = y + -1 | 0;
    if (!y) {
     t = r;
     u = 0;
     break;
    } else x = r;
   }
  }
 } while (0);
 return (u | 0 ? t : 0) | 0;
}

function cu(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0;
 f = l;
 l = l + 16 | 0;
 g = d;
 h = f + 12 | 0;
 i = f;
 j = b + 11 | 0;
 k = a[j >> 0] | 0;
 m = k << 24 >> 24 < 0;
 if (m) {
  n = c[b + 4 >> 2] | 0;
  o = (c[b + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  n = k & 255;
  o = 10;
 }
 p = e - g | 0;
 do if (p | 0) {
  if (m) {
   q = c[b >> 2] | 0;
   r = c[b + 4 >> 2] | 0;
  } else {
   q = b;
   r = k & 255;
  }
  if (Xm(d, q, q + r | 0) | 0) {
   c[i >> 2] = 0;
   c[i + 4 >> 2] = 0;
   c[i + 8 >> 2] = 0;
   if (p >>> 0 > 4294967279) _q(i);
   if (p >>> 0 < 11) {
    a[i + 11 >> 0] = p;
    s = i;
   } else {
    t = p + 16 & -16;
    u = Bs(t) | 0;
    c[i >> 2] = u;
    c[i + 8 >> 2] = t | -2147483648;
    c[i + 4 >> 2] = p;
    s = u;
   }
   u = d;
   t = s;
   while (1) {
    if ((u | 0) == (e | 0)) break;
    mh(t, u);
    u = u + 1 | 0;
    t = t + 1 | 0;
   }
   a[h >> 0] = 0;
   mh(s + p | 0, h);
   t = a[i + 11 >> 0] | 0;
   u = t << 24 >> 24 < 0;
   qs(b, u ? c[i >> 2] | 0 : i, u ? c[i + 4 >> 2] | 0 : t & 255) | 0;
   Es(i);
   break;
  }
  if ((o - n | 0) >>> 0 < p >>> 0) fu(b, o, n + p - o | 0, n, n, 0);
  if ((a[j >> 0] | 0) < 0) v = c[b >> 2] | 0; else v = b;
  t = e + (n - g) | 0;
  u = v + n | 0;
  w = d;
  while (1) {
   if ((w | 0) == (e | 0)) break;
   mh(u, w);
   u = u + 1 | 0;
   w = w + 1 | 0;
  }
  a[h >> 0] = 0;
  mh(v + t | 0, h);
  w = n + p | 0;
  if ((a[j >> 0] | 0) < 0) {
   c[b + 4 >> 2] = w;
   break;
  } else {
   a[j >> 0] = w;
   break;
  }
 } while (0);
 l = f;
 return;
}

function ru(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 g = l;
 l = l + 48 | 0;
 h = g + 24 | 0;
 i = g;
 j = g + 12 | 0;
 k = jt(b, d) | 0;
 if ((k | 0) == (b | 0) | (k | 0) == (d | 0)) m = b; else if ((a[k >> 0] | 0) == 69) {
  d = e + 11 | 0;
  n = a[d >> 0] | 0;
  o = e + 4 | 0;
  do if ((n << 24 >> 24 < 0 ? c[o >> 2] | 0 : n & 255) >>> 0 > 3) {
   mt(j, 18908, e);
   Ms(j, 18906) | 0;
   c[i >> 2] = c[j >> 2];
   c[i + 4 >> 2] = c[j + 4 >> 2];
   c[i + 8 >> 2] = c[j + 8 >> 2];
   p = 0;
   while (1) {
    if ((p | 0) == 3) break;
    c[j + (p << 2) >> 2] = 0;
    p = p + 1 | 0;
   }
   bt(h, i);
   p = f + 4 | 0;
   q = c[p >> 2] | 0;
   if (q >>> 0 < (c[f + 8 >> 2] | 0) >>> 0) {
    dt(q, h);
    c[p >> 2] = (c[p >> 2] | 0) + 24;
   } else et(f, h);
   ns(h);
   Es(i);
   Es(j);
  } else {
   p = f + 4 | 0;
   q = c[p >> 2] | 0;
   if (q >>> 0 < (c[f + 8 >> 2] | 0) >>> 0) {
    c[q >> 2] = 0;
    c[q + 4 >> 2] = 0;
    c[q + 8 >> 2] = 0;
    c[q + 12 >> 2] = 0;
    c[q + 16 >> 2] = 0;
    c[q + 20 >> 2] = 0;
    ju(q);
    c[p >> 2] = (c[p >> 2] | 0) + 24;
    break;
   } else {
    ku(f);
    break;
   }
  } while (0);
  j = f + 4 | 0;
  if ((a[b >> 0] | 0) == 110) {
   du((c[j >> 2] | 0) + -24 | 0, 45);
   r = b + 1 | 0;
  } else r = b;
  cu((c[j >> 2] | 0) + -24 | 0, r, k);
  r = a[d >> 0] | 0;
  d = r << 24 >> 24 < 0;
  f = d ? c[o >> 2] | 0 : r & 255;
  if (f >>> 0 < 4) qs((c[j >> 2] | 0) + -24 | 0, d ? c[e >> 2] | 0 : e, f) | 0;
  m = k + 1 | 0;
 } else m = b;
 l = g;
 return m | 0;
}

function qk(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0;
 i = l;
 l = l + 16 | 0;
 j = i + 12 | 0;
 k = i;
 m = c[b >> 2] | 0;
 a : do if (!m) n = 0; else {
  o = f;
  p = d;
  q = o - p >> 2;
  r = g + 12 | 0;
  s = c[r >> 2] | 0;
  t = (s | 0) > (q | 0) ? s - q | 0 : 0;
  q = e;
  s = q - p | 0;
  p = s >> 2;
  if ((s | 0) > 0) if ((rc[c[(c[m >> 2] | 0) + 48 >> 2] & 31](m, d, p) | 0) != (p | 0)) {
   c[b >> 2] = 0;
   n = 0;
   break;
  }
  do if ((t | 0) > 0) {
   c[k >> 2] = 0;
   c[k + 4 >> 2] = 0;
   c[k + 8 >> 2] = 0;
   if (t >>> 0 > 1073741807) _q(k);
   do if (t >>> 0 < 2) {
    p = k + 8 + 3 | 0;
    a[p >> 0] = t;
    u = k;
    v = p;
    w = k;
   } else {
    p = t + 4 & -4;
    if (p >>> 0 > 1073741823) jb(); else {
     s = Tq(p << 2) | 0;
     c[k >> 2] = s;
     x = k + 8 | 0;
     c[x >> 2] = p | -2147483648;
     c[k + 4 >> 2] = t;
     u = s;
     v = x + 3 | 0;
     w = k;
     break;
    }
   } while (0);
   rk(u, t, h) | 0;
   c[j >> 2] = 0;
   vi(u + (t << 2) | 0, j);
   if ((rc[c[(c[m >> 2] | 0) + 48 >> 2] & 31](m, (a[v >> 0] | 0) < 0 ? c[k >> 2] | 0 : w, t) | 0) == (t | 0)) {
    nr(k);
    break;
   } else {
    c[b >> 2] = 0;
    nr(k);
    n = 0;
    break a;
   }
  } while (0);
  t = o - q | 0;
  x = t >> 2;
  if ((t | 0) > 0) if ((rc[c[(c[m >> 2] | 0) + 48 >> 2] & 31](m, e, x) | 0) != (x | 0)) {
   c[b >> 2] = 0;
   n = 0;
   break;
  }
  c[r >> 2] = 0;
  n = m;
 } while (0);
 l = i;
 return n | 0;
}

function Ut(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 f = l;
 l = l + 64 | 0;
 g = f + 40 | 0;
 h = f + 24 | 0;
 i = f;
 j = f + 12 | 0;
 a : do if ((d - b | 0) > 1) {
  k = e + 4 | 0;
  m = c[k >> 2] | 0;
  if ((c[e >> 2] | 0) == (m | 0)) n = b; else {
   switch (a[b >> 0] | 0) {
   case 67:
    {
     switch (a[b + 1 >> 0] | 0) {
     case 53:
     case 51:
     case 50:
     case 49:
      break;
     default:
      {
       n = b;
       break a;
      }
     }
     gu(h, m + -24 | 0);
     bt(g, h);
     o = c[k >> 2] | 0;
     if (o >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
      dt(o, g);
      c[k >> 2] = (c[k >> 2] | 0) + 24;
     } else et(e, g);
     ns(g);
     Es(h);
     a[e + 60 >> 0] = 1;
     n = b + 2 | 0;
     break a;
     break;
    }
   case 68:
    break;
   default:
    {
     n = b;
     break a;
    }
   }
   switch (a[b + 1 >> 0] | 0) {
   case 53:
   case 50:
   case 49:
   case 48:
    break;
   default:
    {
     n = b;
     break a;
    }
   }
   gu(j, m + -24 | 0);
   Ls(j, 0, 18978) | 0;
   c[i >> 2] = c[j >> 2];
   c[i + 4 >> 2] = c[j + 4 >> 2];
   c[i + 8 >> 2] = c[j + 8 >> 2];
   m = 0;
   while (1) {
    if ((m | 0) == 3) break;
    c[j + (m << 2) >> 2] = 0;
    m = m + 1 | 0;
   }
   bt(g, i);
   m = c[k >> 2] | 0;
   if (m >>> 0 < (c[e + 8 >> 2] | 0) >>> 0) {
    dt(m, g);
    c[k >> 2] = (c[k >> 2] | 0) + 24;
   } else et(e, g);
   ns(g);
   Es(i);
   Es(j);
   a[e + 60 >> 0] = 1;
   n = b + 2 | 0;
  }
 } else n = b; while (0);
 l = f;
 return n | 0;
}

function ad(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0;
 e = a + 8 | 0;
 f = c[e >> 2] | 0;
 g = c[a >> 2] | 0;
 h = g;
 do if (f - g >> 2 >>> 0 < b >>> 0) {
  i = g;
  if (!g) j = f; else {
   k = a + 4 | 0;
   l = c[k >> 2] | 0;
   if ((l | 0) != (h | 0)) c[k >> 2] = l + (~((l + -4 - g | 0) >>> 2) << 2);
   Uq(i);
   c[e >> 2] = 0;
   c[k >> 2] = 0;
   c[a >> 2] = 0;
   j = 0;
  }
  if (b >>> 0 > 1073741823) np(a);
  k = j >> 1;
  i = j >> 2 >>> 0 < 536870911 ? (k >>> 0 < b >>> 0 ? b : k) : 1073741823;
  if (i >>> 0 > 1073741823) np(a);
  k = Tq(i << 2) | 0;
  l = a + 4 | 0;
  c[l >> 2] = k;
  c[a >> 2] = k;
  c[e >> 2] = k + (i << 2);
  i = b;
  m = k;
  while (1) {
   c[m >> 2] = c[d >> 2];
   i = i + -1 | 0;
   if (!i) break; else m = m + 4 | 0;
  }
  n = l;
  o = k + (b << 2) | 0;
 } else {
  m = a + 4 | 0;
  i = c[m >> 2] | 0;
  p = i - g >> 2;
  q = p >>> 0 < b >>> 0;
  r = q ? p : b;
  s = i;
  if (r | 0) {
   i = r;
   r = h;
   while (1) {
    c[r >> 2] = c[d >> 2];
    i = i + -1 | 0;
    if (!i) break; else r = r + 4 | 0;
   }
  }
  if (q) {
   r = b - p | 0;
   i = r;
   k = s;
   while (1) {
    c[k >> 2] = c[d >> 2];
    i = i + -1 | 0;
    if (!i) break; else k = k + 4 | 0;
   }
   n = m;
   o = s + (r << 2) | 0;
   break;
  } else {
   k = h + (b << 2) | 0;
   if ((k | 0) == (s | 0)) return; else {
    n = m;
    o = s + (~((s + -4 - k | 0) >>> 2) << 2) | 0;
    break;
   }
  }
 } while (0);
 c[n >> 2] = o;
 return;
}

function st(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 f = l;
 l = l + 48 | 0;
 g = f + 36 | 0;
 h = f + 24 | 0;
 i = f + 12 | 0;
 j = f;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 97) if ((a[b + 1 >> 0] | 0) == 122) {
  k = b + 2 | 0;
  m = kt(k, d, e) | 0;
  if ((m | 0) == (k | 0)) n = b; else {
   k = e + 4 | 0;
   d = c[k >> 2] | 0;
   if ((c[e >> 2] | 0) == (d | 0)) n = b; else {
    _s(j, d + -24 | 0);
    Ls(j, 0, 20087) | 0;
    c[i >> 2] = c[j >> 2];
    c[i + 4 >> 2] = c[j + 4 >> 2];
    c[i + 8 >> 2] = c[j + 8 >> 2];
    d = 0;
    while (1) {
     if ((d | 0) == 3) break;
     c[j + (d << 2) >> 2] = 0;
     d = d + 1 | 0;
    }
    Ms(i, 18906) | 0;
    c[h >> 2] = c[i >> 2];
    c[h + 4 >> 2] = c[i + 4 >> 2];
    c[h + 8 >> 2] = c[i + 8 >> 2];
    d = 0;
    while (1) {
     if ((d | 0) == 3) break;
     c[i + (d << 2) >> 2] = 0;
     d = d + 1 | 0;
    }
    d = c[k >> 2] | 0;
    k = d + -24 | 0;
    e = k + 11 | 0;
    if ((a[e >> 0] | 0) < 0) {
     o = c[k >> 2] | 0;
     a[g >> 0] = 0;
     mh(o, g);
     c[d + -20 >> 2] = 0;
    } else {
     a[g >> 0] = 0;
     mh(k, g);
     a[e >> 0] = 0;
    }
    lt(k);
    c[k >> 2] = c[h >> 2];
    c[k + 4 >> 2] = c[h + 4 >> 2];
    c[k + 8 >> 2] = c[h + 8 >> 2];
    k = 0;
    while (1) {
     if ((k | 0) == 3) break;
     c[h + (k << 2) >> 2] = 0;
     k = k + 1 | 0;
    }
    Es(h);
    Es(i);
    Es(j);
    n = m;
   }
  }
 } else n = b; else n = b; else n = b;
 l = f;
 return n | 0;
}

function rt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 f = l;
 l = l + 48 | 0;
 g = f + 36 | 0;
 h = f + 24 | 0;
 i = f + 12 | 0;
 j = f;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 97) if ((a[b + 1 >> 0] | 0) == 116) {
  k = b + 2 | 0;
  m = Is(k, d, e) | 0;
  if ((m | 0) == (k | 0)) n = b; else {
   k = e + 4 | 0;
   d = c[k >> 2] | 0;
   if ((c[e >> 2] | 0) == (d | 0)) n = b; else {
    _s(j, d + -24 | 0);
    Ls(j, 0, 20087) | 0;
    c[i >> 2] = c[j >> 2];
    c[i + 4 >> 2] = c[j + 4 >> 2];
    c[i + 8 >> 2] = c[j + 8 >> 2];
    d = 0;
    while (1) {
     if ((d | 0) == 3) break;
     c[j + (d << 2) >> 2] = 0;
     d = d + 1 | 0;
    }
    Ms(i, 18906) | 0;
    c[h >> 2] = c[i >> 2];
    c[h + 4 >> 2] = c[i + 4 >> 2];
    c[h + 8 >> 2] = c[i + 8 >> 2];
    d = 0;
    while (1) {
     if ((d | 0) == 3) break;
     c[i + (d << 2) >> 2] = 0;
     d = d + 1 | 0;
    }
    d = c[k >> 2] | 0;
    k = d + -24 | 0;
    e = k + 11 | 0;
    if ((a[e >> 0] | 0) < 0) {
     o = c[k >> 2] | 0;
     a[g >> 0] = 0;
     mh(o, g);
     c[d + -20 >> 2] = 0;
    } else {
     a[g >> 0] = 0;
     mh(k, g);
     a[e >> 0] = 0;
    }
    lt(k);
    c[k >> 2] = c[h >> 2];
    c[k + 4 >> 2] = c[h + 4 >> 2];
    c[k + 8 >> 2] = c[h + 8 >> 2];
    k = 0;
    while (1) {
     if ((k | 0) == 3) break;
     c[h + (k << 2) >> 2] = 0;
     k = k + 1 | 0;
    }
    Es(h);
    Es(i);
    Es(j);
    n = m;
   }
  }
 } else n = b; else n = b; else n = b;
 l = f;
 return n | 0;
}

function Yc(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 e = Tq(32) | 0;
 f = c[a >> 2] | 0;
 $c(e);
 c[d >> 2] = f;
 f = e + 16 | 0;
 ad(f, 1, d);
 d = c[f >> 2] | 0;
 f = c[e + 20 >> 2] | 0;
 a = e;
 c[a >> 2] = 2133416006;
 c[a + 4 >> 2] = 1786498114;
 a = e + 8 | 0;
 g = a;
 c[g >> 2] = -2135587861;
 c[g + 4 >> 2] = 1640531526;
 if ((d | 0) == (f | 0)) {
  h = -612927125;
  i = 1175169414;
  j = 2133416006;
  k = 1786498114;
 } else {
  g = (f + -4 - d | 0) >>> 2;
  m = 2133416006;
  n = 1786498114;
  o = d;
  do {
   d = xv(m | 0, n | 0, 5) | 0;
   p = d ^ m;
   d = z ^ n;
   q = wv(p | 0, d | 0, 15) | 0;
   r = q ^ p;
   p = z ^ d;
   d = xv(r | 0, p | 0, 27) | 0;
   m = r ^ c[o >> 2] ^ d;
   n = p ^ z;
   o = o + 4 | 0;
  } while ((o | 0) != (f | 0));
  f = pv(g | 0, 0, -2135587861, 1640531526) | 0;
  g = z;
  o = qv(f | 0, g | 0, 23791574, -1013904243) | 0;
  p = e;
  c[p >> 2] = m;
  c[p + 4 >> 2] = n;
  p = a;
  c[p >> 2] = o;
  c[p + 4 >> 2] = z;
  p = qv(f | 0, g | 0, 1546452310, -1479266355) | 0;
  h = p;
  i = z;
  j = m;
  k = n;
 }
 n = 0;
 m = j;
 j = k;
 do {
  k = xv(m | 0, j | 0, 5) | 0;
  p = k ^ m;
  k = z ^ j;
  g = wv(p | 0, k | 0, 15) | 0;
  f = g ^ p;
  p = z ^ k;
  k = xv(f | 0, p | 0, 27) | 0;
  m = k ^ f;
  j = z ^ p;
  n = n + 1 | 0;
 } while ((n | 0) != 128);
 n = e;
 c[n >> 2] = m;
 c[n + 4 >> 2] = j;
 j = a;
 c[j >> 2] = h;
 c[j + 4 >> 2] = i;
 l = b;
 return e | 0;
}

function Uc(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0;
 e = l;
 l = l + 160 | 0;
 f = e + 144 | 0;
 g = e;
 h = g + 64 | 0;
 i = g + 8 | 0;
 c[i >> 2] = 2208;
 j = g + 12 | 0;
 c[g >> 2] = 116;
 c[h >> 2] = 136;
 c[g + 4 >> 2] = 0;
 oh(g + 64 | 0, j);
 c[g + 136 >> 2] = 0;
 c[g + 140 >> 2] = -1;
 c[g >> 2] = 2188;
 c[h >> 2] = 2228;
 c[i >> 2] = 2208;
 sh(j);
 c[j >> 2] = 2244;
 i = g + 44 | 0;
 c[i >> 2] = 0;
 c[i + 4 >> 2] = 0;
 c[i + 8 >> 2] = 0;
 c[i + 12 >> 2] = 0;
 c[g + 60 >> 2] = 24;
 c[f >> 2] = 0;
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = 0;
 bd(j, f);
 if ((a[f + 11 >> 0] | 0) < 0) Uq(c[f >> 2] | 0);
 k = g + 8 | 0;
 m = cd(22404, 11056, 7) | 0;
 n = a[d + 11 >> 0] | 0;
 o = n << 24 >> 24 < 0;
 p = cd(m, o ? c[d >> 2] | 0 : d, o ? c[d + 4 >> 2] | 0 : n & 255) | 0;
 qh(f, p + (c[(c[p >> 2] | 0) + -12 >> 2] | 0) | 0);
 n = Ji(f, 23108) | 0;
 d = qc[c[(c[n >> 2] | 0) + 28 >> 2] & 31](n, 10) | 0;
 Ki(f);
 zh(p, d) | 0;
 uh(p) | 0;
 d = cd(yh(cd(cd(cd(p, 18908, 1) | 0, 11064, 17) | 0, 11082, 1) | 0, 27) | 0, 18906, 1) | 0;
 qh(f, d + (c[(c[d >> 2] | 0) + -12 >> 2] | 0) | 0);
 p = Ji(f, 23108) | 0;
 n = qc[c[(c[p >> 2] | 0) + 28 >> 2] & 31](p, 10) | 0;
 Ki(f);
 zh(d, n) | 0;
 uh(d) | 0;
 xh(k, 0) | 0;
 dd(b, j);
 c[g >> 2] = 2188;
 c[h >> 2] = 2228;
 c[k >> 2] = 2208;
 c[j >> 2] = 2244;
 if ((a[i + 11 >> 0] | 0) >= 0) {
  cg(j);
  kh(g, 2304);
  Zf(h);
  l = e;
  return;
 }
 Uq(c[i >> 2] | 0);
 cg(j);
 kh(g, 2304);
 Zf(h);
 l = e;
 return;
}

function Gs(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0;
 f = l;
 l = l + 48 | 0;
 g = f + 36 | 0;
 h = f + 24 | 0;
 i = f + 12 | 0;
 j = f;
 if ((b | 0) == (d | 0)) k = b; else if ((a[b >> 0] | 0) == 46) {
  m = e + 4 | 0;
  if ((c[e >> 2] | 0) == (c[m >> 2] | 0)) k = b; else {
   c[j >> 2] = 0;
   c[j + 4 >> 2] = 0;
   c[j + 8 >> 2] = 0;
   e = d - b | 0;
   if (e >>> 0 > 4294967279) _q(j);
   if (e >>> 0 < 11) {
    a[j + 11 >> 0] = e;
    n = j;
   } else {
    o = e + 16 & -16;
    p = Bs(o) | 0;
    c[j >> 2] = p;
    c[j + 8 >> 2] = o | -2147483648;
    c[j + 4 >> 2] = e;
    n = p;
   }
   p = b;
   o = n;
   while (1) {
    if ((p | 0) == (d | 0)) break;
    mh(o, p);
    p = p + 1 | 0;
    o = o + 1 | 0;
   }
   a[g >> 0] = 0;
   mh(n + e | 0, g);
   Ls(j, 0, 18903) | 0;
   c[i >> 2] = c[j >> 2];
   c[i + 4 >> 2] = c[j + 4 >> 2];
   c[i + 8 >> 2] = c[j + 8 >> 2];
   g = 0;
   while (1) {
    if ((g | 0) == 3) break;
    c[j + (g << 2) >> 2] = 0;
    g = g + 1 | 0;
   }
   Ms(i, 18906) | 0;
   c[h >> 2] = c[i >> 2];
   c[h + 4 >> 2] = c[i + 4 >> 2];
   c[h + 8 >> 2] = c[i + 8 >> 2];
   g = 0;
   while (1) {
    if ((g | 0) == 3) break;
    c[i + (g << 2) >> 2] = 0;
    g = g + 1 | 0;
   }
   g = a[h + 11 >> 0] | 0;
   e = g << 24 >> 24 < 0;
   qs((c[m >> 2] | 0) + -24 | 0, e ? c[h >> 2] | 0 : h, e ? c[h + 4 >> 2] | 0 : g & 255) | 0;
   Es(h);
   Es(i);
   Es(j);
   k = d;
  }
 } else k = b;
 l = f;
 return k | 0;
}

function dd(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0;
 e = c[d + 48 >> 2] | 0;
 if (e & 16 | 0) {
  f = d + 44 | 0;
  g = c[f >> 2] | 0;
  h = c[d + 24 >> 2] | 0;
  if (g >>> 0 < h >>> 0) {
   c[f >> 2] = h;
   i = h;
  } else i = g;
  g = c[d + 20 >> 2] | 0;
  c[b >> 2] = 0;
  c[b + 4 >> 2] = 0;
  c[b + 8 >> 2] = 0;
  h = i - g | 0;
  if (h >>> 0 > 4294967279) _q(b);
  if (h >>> 0 < 11) {
   a[b + 11 >> 0] = h;
   j = b;
  } else {
   f = h + 16 & -16;
   k = Tq(f) | 0;
   c[b >> 2] = k;
   c[b + 8 >> 2] = f | -2147483648;
   c[b + 4 >> 2] = h;
   j = k;
  }
  if ((g | 0) == (i | 0)) l = j; else {
   k = j;
   f = g;
   while (1) {
    a[k >> 0] = a[f >> 0] | 0;
    f = f + 1 | 0;
    if ((f | 0) == (i | 0)) break; else k = k + 1 | 0;
   }
   l = j + h | 0;
  }
  a[l >> 0] = 0;
  return;
 }
 if (!(e & 8)) {
  c[b >> 2] = 0;
  c[b + 4 >> 2] = 0;
  c[b + 8 >> 2] = 0;
  return;
 }
 e = c[d + 8 >> 2] | 0;
 l = c[d + 16 >> 2] | 0;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 d = l - e | 0;
 if (d >>> 0 > 4294967279) _q(b);
 if (d >>> 0 < 11) {
  a[b + 11 >> 0] = d;
  m = b;
 } else {
  h = d + 16 & -16;
  j = Tq(h) | 0;
  c[b >> 2] = j;
  c[b + 8 >> 2] = h | -2147483648;
  c[b + 4 >> 2] = d;
  m = j;
 }
 if ((e | 0) == (l | 0)) n = m; else {
  j = m;
  b = e;
  while (1) {
   a[j >> 0] = a[b >> 0] | 0;
   b = b + 1 | 0;
   if ((b | 0) == (l | 0)) break; else j = j + 1 | 0;
  }
  n = m + d | 0;
 }
 a[n >> 0] = 0;
 return;
}

function Eh(a) {
 a = a | 0;
 var b = 0;
 a = c[585] | 0;
 Fh(22740, a, 22796);
 c[5515] = 6652;
 c[5517] = 6672;
 c[5516] = 0;
 oh(22068, 22740);
 c[5535] = 0;
 c[5536] = qg() | 0;
 Gh(22804, a, 22860);
 c[5537] = 6700;
 c[5539] = 6720;
 c[5538] = 0;
 oh(22156, 22804);
 c[5557] = 0;
 c[5558] = Ig() | 0;
 a = c[649] | 0;
 Hh(22868, a, 22916);
 c[5559] = 28;
 c[5560] = 48;
 oh(22240, 22868);
 c[5578] = 0;
 c[5579] = qg() | 0;
 Ih(22924, a, 22972);
 c[5580] = 6756;
 c[5581] = 6776;
 oh(22324, 22924);
 c[5599] = 0;
 c[5600] = Ig() | 0;
 a = c[617] | 0;
 Hh(22980, a, 23028);
 c[5601] = 28;
 c[5602] = 48;
 oh(22408, 22980);
 c[5620] = 0;
 c[5621] = qg() | 0;
 b = c[22404 + (c[(c[5601] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 c[5643] = 28;
 c[5644] = 48;
 oh(22576, b);
 c[5662] = 0;
 c[5663] = qg() | 0;
 Ih(23036, a, 23084);
 c[5622] = 6756;
 c[5623] = 6776;
 oh(22492, 23036);
 c[5641] = 0;
 c[5642] = Ig() | 0;
 a = c[22488 + (c[(c[5622] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 c[5664] = 6756;
 c[5665] = 6776;
 oh(22660, a);
 c[5683] = 0;
 c[5684] = Ig() | 0;
 c[22060 + (c[(c[5515] | 0) + -12 >> 2] | 0) + 72 >> 2] = 22236;
 c[22148 + (c[(c[5537] | 0) + -12 >> 2] | 0) + 72 >> 2] = 22320;
 a = 22404 + (c[(c[5601] | 0) + -12 >> 2] | 0) + 4 | 0;
 c[a >> 2] = c[a >> 2] | 8192;
 a = 22488 + (c[(c[5622] | 0) + -12 >> 2] | 0) + 4 | 0;
 c[a >> 2] = c[a >> 2] | 8192;
 c[22404 + (c[(c[5601] | 0) + -12 >> 2] | 0) + 72 >> 2] = 22236;
 c[22488 + (c[(c[5622] | 0) + -12 >> 2] | 0) + 72 >> 2] = 22320;
 return;
}

function qt(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 g = l;
 l = l + 64 | 0;
 h = g + 48 | 0;
 i = g + 36 | 0;
 j = g + 24 | 0;
 k = g + 12 | 0;
 m = g;
 n = kt(b, d, f) | 0;
 if ((n | 0) == (b | 0)) o = b; else {
  d = f + 4 | 0;
  if ((c[f >> 2] | 0) == (c[d >> 2] | 0)) o = b; else {
   at(k, e, 18908);
   _s(m, (c[d >> 2] | 0) + -24 | 0);
   e = a[m + 11 >> 0] | 0;
   b = e << 24 >> 24 < 0;
   qs(k, b ? c[m >> 2] | 0 : m, b ? c[m + 4 >> 2] | 0 : e & 255) | 0;
   c[j >> 2] = c[k >> 2];
   c[j + 4 >> 2] = c[k + 4 >> 2];
   c[j + 8 >> 2] = c[k + 8 >> 2];
   e = 0;
   while (1) {
    if ((e | 0) == 3) break;
    c[k + (e << 2) >> 2] = 0;
    e = e + 1 | 0;
   }
   Ms(j, 18906) | 0;
   c[i >> 2] = c[j >> 2];
   c[i + 4 >> 2] = c[j + 4 >> 2];
   c[i + 8 >> 2] = c[j + 8 >> 2];
   e = 0;
   while (1) {
    if ((e | 0) == 3) break;
    c[j + (e << 2) >> 2] = 0;
    e = e + 1 | 0;
   }
   e = c[d >> 2] | 0;
   d = e + -24 | 0;
   b = d + 11 | 0;
   if ((a[b >> 0] | 0) < 0) {
    f = c[d >> 2] | 0;
    a[h >> 0] = 0;
    mh(f, h);
    c[e + -20 >> 2] = 0;
   } else {
    a[h >> 0] = 0;
    mh(d, h);
    a[b >> 0] = 0;
   }
   lt(d);
   c[d >> 2] = c[i >> 2];
   c[d + 4 >> 2] = c[i + 4 >> 2];
   c[d + 8 >> 2] = c[i + 8 >> 2];
   d = 0;
   while (1) {
    if ((d | 0) == 3) break;
    c[i + (d << 2) >> 2] = 0;
    d = d + 1 | 0;
   }
   Es(i);
   Es(j);
   Es(m);
   Es(k);
   o = n;
  }
 }
 l = g;
 return o | 0;
}

function ok(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = +f;
 var g = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;
 a = l;
 l = l + 336 | 0;
 g = a + 300 | 0;
 i = a + 48 | 0;
 j = a + 32 | 0;
 k = a + 24 | 0;
 m = a + 8 | 0;
 n = a;
 o = a + 304 | 0;
 p = a + 296 | 0;
 q = a + 68 | 0;
 r = a + 64 | 0;
 s = a + 60 | 0;
 t = a + 56 | 0;
 u = n;
 c[u >> 2] = 37;
 c[u + 4 >> 2] = 0;
 u = bk(n + 1 | 0, 16217, c[d + 4 >> 2] | 0) | 0;
 c[p >> 2] = o;
 v = Mi() | 0;
 if (u) {
  c[m >> 2] = c[d + 8 >> 2];
  h[m + 8 >> 3] = f;
  w = $j(o, 30, v, n, m) | 0;
 } else {
  h[k >> 3] = f;
  w = $j(o, 30, v, n, k) | 0;
 }
 if ((w | 0) > 29) {
  k = Mi() | 0;
  if (u) {
   c[j >> 2] = c[d + 8 >> 2];
   h[j + 8 >> 3] = f;
   x = ck(p, k, n, j) | 0;
  } else {
   h[i >> 3] = f;
   x = ck(p, k, n, i) | 0;
  }
  i = c[p >> 2] | 0;
  if (!i) Wq(); else {
   y = x;
   z = i;
   A = i;
  }
 } else {
  y = w;
  z = 0;
  A = c[p >> 2] | 0;
 }
 p = A + y | 0;
 w = ak(A, p, d) | 0;
 do if ((A | 0) == (o | 0)) {
  B = q;
  C = 1;
  D = 0;
 } else {
  i = xd(y << 3) | 0;
  if (!i) Wq(); else {
   B = i;
   C = 0;
   D = i;
   break;
  }
 } while (0);
 qh(g, d);
 sk(A, w, p, B, r, s, g);
 Ki(g);
 c[t >> 2] = c[b >> 2];
 p = c[r >> 2] | 0;
 r = c[s >> 2] | 0;
 c[g >> 2] = c[t >> 2];
 t = qk(g, B, p, r, d, e) | 0;
 c[b >> 2] = t;
 if (!C) yd(D);
 yd(z);
 l = a;
 return t | 0;
}

function nk(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = +f;
 var g = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0;
 a = l;
 l = l + 336 | 0;
 g = a + 300 | 0;
 i = a + 48 | 0;
 j = a + 32 | 0;
 k = a + 24 | 0;
 m = a + 8 | 0;
 n = a;
 o = a + 304 | 0;
 p = a + 296 | 0;
 q = a + 68 | 0;
 r = a + 64 | 0;
 s = a + 60 | 0;
 t = a + 56 | 0;
 u = n;
 c[u >> 2] = 37;
 c[u + 4 >> 2] = 0;
 u = bk(n + 1 | 0, 27108, c[d + 4 >> 2] | 0) | 0;
 c[p >> 2] = o;
 v = Mi() | 0;
 if (u) {
  c[m >> 2] = c[d + 8 >> 2];
  h[m + 8 >> 3] = f;
  w = $j(o, 30, v, n, m) | 0;
 } else {
  h[k >> 3] = f;
  w = $j(o, 30, v, n, k) | 0;
 }
 if ((w | 0) > 29) {
  k = Mi() | 0;
  if (u) {
   c[j >> 2] = c[d + 8 >> 2];
   h[j + 8 >> 3] = f;
   x = ck(p, k, n, j) | 0;
  } else {
   h[i >> 3] = f;
   x = ck(p, k, n, i) | 0;
  }
  i = c[p >> 2] | 0;
  if (!i) Wq(); else {
   y = x;
   z = i;
   A = i;
  }
 } else {
  y = w;
  z = 0;
  A = c[p >> 2] | 0;
 }
 p = A + y | 0;
 w = ak(A, p, d) | 0;
 do if ((A | 0) == (o | 0)) {
  B = q;
  C = 1;
  D = 0;
 } else {
  i = xd(y << 3) | 0;
  if (!i) Wq(); else {
   B = i;
   C = 0;
   D = i;
   break;
  }
 } while (0);
 qh(g, d);
 sk(A, w, p, B, r, s, g);
 Ki(g);
 c[t >> 2] = c[b >> 2];
 p = c[r >> 2] | 0;
 r = c[s >> 2] | 0;
 c[g >> 2] = c[t >> 2];
 t = qk(g, B, p, r, d, e) | 0;
 c[b >> 2] = t;
 if (!C) yd(D);
 yd(z);
 l = a;
 return t | 0;
}

function td(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0;
 a = c[d >> 2] | 0;
 e = (c[d + 4 >> 2] | 0) - a | 0;
 f = e + 1 | 0;
 if (!e) {
  g = a;
  return g | 0;
 }
 if (!f) {
  a = b + 2496 | 0;
  e = c[a >> 2] | 0;
  h = ((e + 1 | 0) >>> 0) % 624 | 0;
  i = b + (e << 2) | 0;
  j = c[b + (h << 2) >> 2] | 0;
  c[i >> 2] = 0 - (j & 1) & -1727483681 ^ c[b + ((((e + 397 | 0) >>> 0) % 624 | 0) << 2) >> 2] ^ (j & 2147483646 | c[i >> 2] & -2147483648) >>> 1;
  i = c[b + (c[a >> 2] << 2) >> 2] | 0;
  j = i >>> 11 ^ i;
  c[a >> 2] = h;
  h = j << 7 & -1658038656 ^ j;
  j = h << 15 & -272236544 ^ h;
  g = j >>> 18 ^ j;
  return g | 0;
 }
 j = 32 - (R(f | 0) | 0) | 0;
 h = j + (((-1 >>> (33 - j | 0) & f | 0) == 0) << 31 >> 31) | 0;
 j = (h >>> 5) + ((h & 31 | 0) != 0 & 1) | 0;
 a = j >>> 0 > h >>> 0 ? 0 : -1 >>> (32 - ((h >>> 0) / (j >>> 0) | 0) | 0);
 j = b + 2496 | 0;
 h = c[j >> 2] | 0;
 do {
  i = h;
  h = ((h + 1 | 0) >>> 0) % 624 | 0;
  e = b + (i << 2) | 0;
  k = c[b + (h << 2) >> 2] | 0;
  c[e >> 2] = 0 - (k & 1) & -1727483681 ^ c[b + ((((i + 397 | 0) >>> 0) % 624 | 0) << 2) >> 2] ^ (k & 2147483646 | c[e >> 2] & -2147483648) >>> 1;
  e = c[b + (c[j >> 2] << 2) >> 2] | 0;
  k = e >>> 11 ^ e;
  c[j >> 2] = h;
  e = k << 7 & -1658038656 ^ k;
  k = e << 15 & -272236544 ^ e;
  l = (k >>> 18 ^ k) & a;
 } while (l >>> 0 >= f >>> 0);
 g = (c[d >> 2] | 0) + l | 0;
 return g | 0;
}

function Id(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0;
 e = l;
 l = l + 48 | 0;
 f = e + 16 | 0;
 g = e;
 h = e + 32 | 0;
 i = a + 28 | 0;
 j = c[i >> 2] | 0;
 c[h >> 2] = j;
 k = a + 20 | 0;
 m = (c[k >> 2] | 0) - j | 0;
 c[h + 4 >> 2] = m;
 c[h + 8 >> 2] = b;
 c[h + 12 >> 2] = d;
 b = m + d | 0;
 m = a + 60 | 0;
 c[g >> 2] = c[m >> 2];
 c[g + 4 >> 2] = h;
 c[g + 8 >> 2] = 2;
 j = Fd(La(146, g | 0) | 0) | 0;
 a : do if ((b | 0) == (j | 0)) n = 3; else {
  g = 2;
  o = b;
  p = h;
  q = j;
  while (1) {
   if ((q | 0) < 0) break;
   o = o - q | 0;
   r = c[p + 4 >> 2] | 0;
   s = q >>> 0 > r >>> 0;
   t = s ? p + 8 | 0 : p;
   u = g + (s << 31 >> 31) | 0;
   v = q - (s ? r : 0) | 0;
   c[t >> 2] = (c[t >> 2] | 0) + v;
   r = t + 4 | 0;
   c[r >> 2] = (c[r >> 2] | 0) - v;
   c[f >> 2] = c[m >> 2];
   c[f + 4 >> 2] = t;
   c[f + 8 >> 2] = u;
   q = Fd(La(146, f | 0) | 0) | 0;
   if ((o | 0) == (q | 0)) {
    n = 3;
    break a;
   } else {
    g = u;
    p = t;
   }
  }
  c[a + 16 >> 2] = 0;
  c[i >> 2] = 0;
  c[k >> 2] = 0;
  c[a >> 2] = c[a >> 2] | 32;
  if ((g | 0) == 2) w = 0; else w = d - (c[p + 4 >> 2] | 0) | 0;
 } while (0);
 if ((n | 0) == 3) {
  n = c[a + 44 >> 2] | 0;
  c[a + 16 >> 2] = n + (c[a + 48 >> 2] | 0);
  a = n;
  c[i >> 2] = a;
  c[k >> 2] = a;
  w = d;
 }
 l = e;
 return w | 0;
}

function zv(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0;
 if ((e | 0) >= 8192) return lb(b | 0, d | 0, e | 0) | 0;
 f = b | 0;
 g = b + e | 0;
 if ((b & 3) == (d & 3)) {
  while (b & 3) {
   if (!e) return f | 0;
   a[b >> 0] = a[d >> 0] | 0;
   b = b + 1 | 0;
   d = d + 1 | 0;
   e = e - 1 | 0;
  }
  h = g & -4 | 0;
  e = h - 64 | 0;
  while ((b | 0) <= (e | 0)) {
   c[b >> 2] = c[d >> 2];
   c[b + 4 >> 2] = c[d + 4 >> 2];
   c[b + 8 >> 2] = c[d + 8 >> 2];
   c[b + 12 >> 2] = c[d + 12 >> 2];
   c[b + 16 >> 2] = c[d + 16 >> 2];
   c[b + 20 >> 2] = c[d + 20 >> 2];
   c[b + 24 >> 2] = c[d + 24 >> 2];
   c[b + 28 >> 2] = c[d + 28 >> 2];
   c[b + 32 >> 2] = c[d + 32 >> 2];
   c[b + 36 >> 2] = c[d + 36 >> 2];
   c[b + 40 >> 2] = c[d + 40 >> 2];
   c[b + 44 >> 2] = c[d + 44 >> 2];
   c[b + 48 >> 2] = c[d + 48 >> 2];
   c[b + 52 >> 2] = c[d + 52 >> 2];
   c[b + 56 >> 2] = c[d + 56 >> 2];
   c[b + 60 >> 2] = c[d + 60 >> 2];
   b = b + 64 | 0;
   d = d + 64 | 0;
  }
  while ((b | 0) < (h | 0)) {
   c[b >> 2] = c[d >> 2];
   b = b + 4 | 0;
   d = d + 4 | 0;
  }
 } else {
  h = g - 4 | 0;
  while ((b | 0) < (h | 0)) {
   a[b >> 0] = a[d >> 0] | 0;
   a[b + 1 >> 0] = a[d + 1 >> 0] | 0;
   a[b + 2 >> 0] = a[d + 2 >> 0] | 0;
   a[b + 3 >> 0] = a[d + 3 >> 0] | 0;
   b = b + 4 | 0;
   d = d + 4 | 0;
  }
 }
 while ((b | 0) < (g | 0)) {
  a[b >> 0] = a[d >> 0] | 0;
  b = b + 1 | 0;
  d = d + 1 | 0;
 }
 return f | 0;
}

function ed(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;
 i = l;
 l = l + 16 | 0;
 j = i;
 k = c[b >> 2] | 0;
 if (!k) {
  m = 0;
  l = i;
  return m | 0;
 }
 n = f;
 f = d;
 o = n - f | 0;
 p = g + 12 | 0;
 g = c[p >> 2] | 0;
 q = (g | 0) > (o | 0) ? g - o | 0 : 0;
 o = e;
 g = o - f | 0;
 if ((g | 0) > 0) if ((rc[c[(c[k >> 2] | 0) + 48 >> 2] & 31](k, d, g) | 0) != (g | 0)) {
  c[b >> 2] = 0;
  m = 0;
  l = i;
  return m | 0;
 }
 do if ((q | 0) > 0) {
  c[j >> 2] = 0;
  c[j + 4 >> 2] = 0;
  c[j + 8 >> 2] = 0;
  if (q >>> 0 < 11) {
   g = j + 11 | 0;
   a[g >> 0] = q;
   r = j;
   s = g;
   t = j;
  } else {
   g = q + 16 & -16;
   d = Tq(g) | 0;
   c[j >> 2] = d;
   c[j + 8 >> 2] = g | -2147483648;
   c[j + 4 >> 2] = q;
   r = d;
   s = j + 11 | 0;
   t = j;
  }
  Bv(r | 0, h | 0, q | 0) | 0;
  a[r + q >> 0] = 0;
  if ((rc[c[(c[k >> 2] | 0) + 48 >> 2] & 31](k, (a[s >> 0] | 0) < 0 ? c[t >> 2] | 0 : j, q) | 0) == (q | 0)) {
   if ((a[s >> 0] | 0) < 0) Uq(c[t >> 2] | 0);
   break;
  }
  c[b >> 2] = 0;
  if ((a[s >> 0] | 0) < 0) Uq(c[t >> 2] | 0);
  m = 0;
  l = i;
  return m | 0;
 } while (0);
 t = n - o | 0;
 if ((t | 0) > 0) if ((rc[c[(c[k >> 2] | 0) + 48 >> 2] & 31](k, e, t) | 0) != (t | 0)) {
  c[b >> 2] = 0;
  m = 0;
  l = i;
  return m | 0;
 }
 c[p >> 2] = 0;
 m = k;
 l = i;
 return m | 0;
}

function Zj(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = +f;
 var g = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0;
 a = l;
 l = l + 176 | 0;
 g = a + 72 | 0;
 i = a + 48 | 0;
 j = a + 32 | 0;
 k = a + 24 | 0;
 m = a + 8 | 0;
 n = a;
 o = a + 134 | 0;
 p = a + 68 | 0;
 q = a + 76 | 0;
 r = a + 64 | 0;
 s = a + 60 | 0;
 t = a + 56 | 0;
 u = n;
 c[u >> 2] = 37;
 c[u + 4 >> 2] = 0;
 u = bk(n + 1 | 0, 16217, c[d + 4 >> 2] | 0) | 0;
 c[p >> 2] = o;
 v = Mi() | 0;
 if (u) {
  c[m >> 2] = c[d + 8 >> 2];
  h[m + 8 >> 3] = f;
  w = $j(o, 30, v, n, m) | 0;
 } else {
  h[k >> 3] = f;
  w = $j(o, 30, v, n, k) | 0;
 }
 if ((w | 0) > 29) {
  k = Mi() | 0;
  if (u) {
   c[j >> 2] = c[d + 8 >> 2];
   h[j + 8 >> 3] = f;
   x = ck(p, k, n, j) | 0;
  } else {
   h[i >> 3] = f;
   x = ck(p, k, n, i) | 0;
  }
  i = c[p >> 2] | 0;
  if (!i) Wq(); else {
   y = x;
   z = i;
   A = i;
  }
 } else {
  y = w;
  z = 0;
  A = c[p >> 2] | 0;
 }
 p = A + y | 0;
 w = ak(A, p, d) | 0;
 if ((A | 0) == (o | 0)) {
  B = q;
  C = 0;
 } else {
  q = xd(y << 1) | 0;
  if (!q) Wq(); else {
   B = q;
   C = q;
  }
 }
 qh(g, d);
 dk(A, w, p, B, r, s, g);
 Ki(g);
 c[t >> 2] = c[b >> 2];
 b = c[r >> 2] | 0;
 r = c[s >> 2] | 0;
 c[g >> 2] = c[t >> 2];
 t = ed(g, B, b, r, d, e) | 0;
 yd(C);
 yd(z);
 l = a;
 return t | 0;
}

function Yj(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = +f;
 var g = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0;
 a = l;
 l = l + 176 | 0;
 g = a + 72 | 0;
 i = a + 48 | 0;
 j = a + 32 | 0;
 k = a + 24 | 0;
 m = a + 8 | 0;
 n = a;
 o = a + 134 | 0;
 p = a + 68 | 0;
 q = a + 76 | 0;
 r = a + 64 | 0;
 s = a + 60 | 0;
 t = a + 56 | 0;
 u = n;
 c[u >> 2] = 37;
 c[u + 4 >> 2] = 0;
 u = bk(n + 1 | 0, 27108, c[d + 4 >> 2] | 0) | 0;
 c[p >> 2] = o;
 v = Mi() | 0;
 if (u) {
  c[m >> 2] = c[d + 8 >> 2];
  h[m + 8 >> 3] = f;
  w = $j(o, 30, v, n, m) | 0;
 } else {
  h[k >> 3] = f;
  w = $j(o, 30, v, n, k) | 0;
 }
 if ((w | 0) > 29) {
  k = Mi() | 0;
  if (u) {
   c[j >> 2] = c[d + 8 >> 2];
   h[j + 8 >> 3] = f;
   x = ck(p, k, n, j) | 0;
  } else {
   h[i >> 3] = f;
   x = ck(p, k, n, i) | 0;
  }
  i = c[p >> 2] | 0;
  if (!i) Wq(); else {
   y = x;
   z = i;
   A = i;
  }
 } else {
  y = w;
  z = 0;
  A = c[p >> 2] | 0;
 }
 p = A + y | 0;
 w = ak(A, p, d) | 0;
 if ((A | 0) == (o | 0)) {
  B = q;
  C = 0;
 } else {
  q = xd(y << 1) | 0;
  if (!q) Wq(); else {
   B = q;
   C = q;
  }
 }
 qh(g, d);
 dk(A, w, p, B, r, s, g);
 Ki(g);
 c[t >> 2] = c[b >> 2];
 b = c[r >> 2] | 0;
 r = c[s >> 2] | 0;
 c[g >> 2] = c[t >> 2];
 t = ed(g, B, b, r, d, e) | 0;
 yd(C);
 yd(z);
 l = a;
 return t | 0;
}

function hi(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0;
 e = l;
 l = l + 32 | 0;
 f = e + 16 | 0;
 g = e + 4 | 0;
 h = e + 8 | 0;
 i = e;
 j = ph(d, qg() | 0) | 0;
 k = b + 52 | 0;
 m = (a[k >> 0] | 0) != 0;
 do if (j) if (m) n = d; else {
  o = c[b + 48 >> 2] | 0;
  a[k >> 0] = ((ph(o, qg() | 0) | 0) ^ 1) & 1;
  n = o;
 } else {
  if (m) {
   o = b + 48 | 0;
   a[h >> 0] = tg(c[o >> 2] | 0) | 0;
   p = c[b + 36 >> 2] | 0;
   switch (yc[c[(c[p >> 2] | 0) + 12 >> 2] & 15](p, c[b + 40 >> 2] | 0, h, h + 1 | 0, i, f, f + 8 | 0, g) | 0) {
   case 1:
   case 2:
    {
     q = 11;
     break;
    }
   case 3:
    {
     a[f >> 0] = c[o >> 2];
     c[g >> 2] = f + 1;
     q = 8;
     break;
    }
   default:
    q = 8;
   }
   a : do if ((q | 0) == 8) {
    p = b + 32 | 0;
    while (1) {
     r = c[g >> 2] | 0;
     if (r >>> 0 <= f >>> 0) {
      s = 1;
      t = 0;
      break a;
     }
     u = r + -1 | 0;
     c[g >> 2] = u;
     if ((_e(a[u >> 0] | 0, c[p >> 2] | 0) | 0) == -1) {
      q = 11;
      break;
     }
    }
   } while (0);
   if ((q | 0) == 11) {
    s = 0;
    t = qg() | 0;
   }
   if (s) v = o; else {
    n = t;
    break;
   }
  } else v = b + 48 | 0;
  c[v >> 2] = d;
  a[k >> 0] = 1;
  n = d;
 } while (0);
 l = e;
 return n | 0;
}

function ai(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0;
 e = l;
 l = l + 32 | 0;
 f = e + 16 | 0;
 g = e + 8 | 0;
 h = e + 4 | 0;
 i = e;
 j = rh(d, Ig() | 0) | 0;
 k = b + 52 | 0;
 m = (a[k >> 0] | 0) != 0;
 do if (j) if (m) n = d; else {
  o = c[b + 48 >> 2] | 0;
  a[k >> 0] = ((rh(o, Ig() | 0) | 0) ^ 1) & 1;
  n = o;
 } else {
  if (m) {
   o = b + 48 | 0;
   c[h >> 2] = Lg(c[o >> 2] | 0) | 0;
   p = c[b + 36 >> 2] | 0;
   switch (yc[c[(c[p >> 2] | 0) + 12 >> 2] & 15](p, c[b + 40 >> 2] | 0, h, h + 4 | 0, i, f, f + 8 | 0, g) | 0) {
   case 1:
   case 2:
    {
     q = 11;
     break;
    }
   case 3:
    {
     a[f >> 0] = c[o >> 2];
     c[g >> 2] = f + 1;
     q = 8;
     break;
    }
   default:
    q = 8;
   }
   a : do if ((q | 0) == 8) {
    p = b + 32 | 0;
    while (1) {
     r = c[g >> 2] | 0;
     if (r >>> 0 <= f >>> 0) {
      s = 1;
      t = 0;
      break a;
     }
     u = r + -1 | 0;
     c[g >> 2] = u;
     if ((_e(a[u >> 0] | 0, c[p >> 2] | 0) | 0) == -1) {
      q = 11;
      break;
     }
    }
   } while (0);
   if ((q | 0) == 11) {
    s = 0;
    t = Ig() | 0;
   }
   if (s) v = o; else {
    n = t;
    break;
   }
  } else v = b + 48 | 0;
  c[v >> 2] = d;
  a[k >> 0] = 1;
  n = d;
 } while (0);
 l = e;
 return n | 0;
}

function op(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b + 4 >> 2] = d + -1;
 c[b >> 2] = 9480;
 d = b + 8 | 0;
 pp(d, 28);
 g = b + 144 | 0;
 c[g >> 2] = 0;
 c[g + 4 >> 2] = 0;
 c[g + 8 >> 2] = 0;
 h = lh(16004) | 0;
 if (h >>> 0 > 4294967279) _q(g);
 if (h >>> 0 < 11) {
  a[g + 11 >> 0] = h;
  i = g;
 } else {
  j = h + 16 & -16;
  k = Tq(j) | 0;
  c[g >> 2] = k;
  c[b + 152 >> 2] = j | -2147483648;
  c[b + 148 >> 2] = h;
  i = k;
 }
 sg(i, 16004, h) | 0;
 a[f >> 0] = 0;
 mh(i + h | 0, f);
 f = c[d >> 2] | 0;
 d = b + 12 | 0;
 h = c[d >> 2] | 0;
 while (1) {
  if ((h | 0) == (f | 0)) break;
  i = h + -4 | 0;
  c[d >> 2] = i;
  h = i;
 }
 qp();
 rp(b, 20952);
 sp();
 tp(b, 20960);
 up();
 vp(b, 20968);
 wp();
 xp(b, 20984);
 yp();
 zp(b, 20992);
 Ap();
 Bp(b, 21e3);
 Cp();
 Dp(b, 21016);
 Ep();
 Fp(b, 21024);
 Gp();
 Hp(b, 21032);
 Ip();
 Jp(b, 21056);
 Kp();
 Lp(b, 21088);
 Mp();
 Np(b, 21096);
 Op();
 Pp(b, 21104);
 Qp();
 Rp(b, 21112);
 Sp();
 Tp(b, 21120);
 Up();
 Vp(b, 21128);
 Wp();
 Xp(b, 21136);
 Yp();
 Zp(b, 21144);
 _p();
 $p(b, 21152);
 aq();
 bq(b, 21160);
 cq();
 dq(b, 21168);
 eq();
 fq(b, 21176);
 gq();
 hq(b, 21184);
 iq();
 jq(b, 21200);
 kq();
 lq(b, 21216);
 mq();
 nq(b, 21232);
 oq();
 pq(b, 21248);
 qq();
 rq(b, 21256);
 l = e;
 return;
}

function Bt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 48 | 0;
 g = f + 36 | 0;
 h = f + 24 | 0;
 i = f + 12 | 0;
 j = f;
 k = kt(b, d, e) | 0;
 if ((k | 0) == (b | 0)) m = b; else {
  d = e + 4 | 0;
  n = c[d >> 2] | 0;
  if ((c[e >> 2] | 0) == (n | 0)) m = b; else {
   _s(j, n + -24 | 0);
   Ls(j, 0, 19179) | 0;
   c[i >> 2] = c[j >> 2];
   c[i + 4 >> 2] = c[j + 4 >> 2];
   c[i + 8 >> 2] = c[j + 8 >> 2];
   n = 0;
   while (1) {
    if ((n | 0) == 3) break;
    c[j + (n << 2) >> 2] = 0;
    n = n + 1 | 0;
   }
   Ms(i, 18906) | 0;
   c[h >> 2] = c[i >> 2];
   c[h + 4 >> 2] = c[i + 4 >> 2];
   c[h + 8 >> 2] = c[i + 8 >> 2];
   n = 0;
   while (1) {
    if ((n | 0) == 3) break;
    c[i + (n << 2) >> 2] = 0;
    n = n + 1 | 0;
   }
   n = c[d >> 2] | 0;
   d = n + -24 | 0;
   b = d + 11 | 0;
   if ((a[b >> 0] | 0) < 0) {
    e = c[d >> 2] | 0;
    a[g >> 0] = 0;
    mh(e, g);
    c[n + -20 >> 2] = 0;
   } else {
    a[g >> 0] = 0;
    mh(d, g);
    a[b >> 0] = 0;
   }
   lt(d);
   c[d >> 2] = c[h >> 2];
   c[d + 4 >> 2] = c[h + 4 >> 2];
   c[d + 8 >> 2] = c[h + 8 >> 2];
   d = 0;
   while (1) {
    if ((d | 0) == 3) break;
    c[h + (d << 2) >> 2] = 0;
    d = d + 1 | 0;
   }
   Es(h);
   Es(i);
   Es(j);
   m = k;
  }
 }
 l = f;
 return m | 0;
}

function rr(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;
 if (d >>> 0 > 1073741807) _q(b);
 e = b + 8 | 0;
 f = e + 3 | 0;
 g = a[f >> 0] | 0;
 h = g << 24 >> 24 < 0;
 if (h) {
  i = c[b + 4 >> 2] | 0;
  j = (c[e >> 2] & 2147483647) + -1 | 0;
 } else {
  i = g & 255;
  j = 1;
 }
 k = i >>> 0 > d >>> 0 ? i : d;
 d = k >>> 0 < 2;
 l = d ? 1 : (k + 4 & -4) + -1 | 0;
 do if ((l | 0) != (j | 0)) {
  do if (d) {
   k = c[b >> 2] | 0;
   if (h) {
    m = 0;
    n = k;
    o = b;
    p = 15;
   } else {
    Kg(b, k, (g & 255) + 1 | 0) | 0;
    Uq(k);
    p = 18;
   }
  } else {
   k = l + 1 | 0;
   if (k >>> 0 > 1073741823) jb();
   q = Tq(k << 2) | 0;
   if (h) {
    m = 1;
    n = c[b >> 2] | 0;
    o = q;
    p = 15;
    break;
   } else {
    Kg(q, b, (g & 255) + 1 | 0) | 0;
    r = q;
    s = k;
    t = b + 4 | 0;
    p = 17;
    break;
   }
  } while (0);
  if ((p | 0) == 15) {
   k = b + 4 | 0;
   Kg(o, n, (c[k >> 2] | 0) + 1 | 0) | 0;
   Uq(n);
   if (m) {
    r = o;
    s = l + 1 | 0;
    t = k;
    p = 17;
   } else p = 18;
  }
  if ((p | 0) == 17) {
   c[e >> 2] = s | -2147483648;
   c[t >> 2] = i;
   c[b >> 2] = r;
   break;
  } else if ((p | 0) == 18) {
   a[f >> 0] = i;
   break;
  }
 } while (0);
 return;
}

function ie(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;
 f = (c[b >> 2] | 0) + 1794895138 | 0;
 g = je(c[b + 8 >> 2] | 0, f) | 0;
 h = je(c[b + 12 >> 2] | 0, f) | 0;
 i = je(c[b + 16 >> 2] | 0, f) | 0;
 a : do if (g >>> 0 < d >>> 2 >>> 0) {
  j = d - (g << 2) | 0;
  if (h >>> 0 < j >>> 0 & i >>> 0 < j >>> 0) if (!((i | h) & 3)) {
   j = h >>> 2;
   k = i >>> 2;
   l = 0;
   m = g;
   while (1) {
    n = m >>> 1;
    o = l + n | 0;
    p = o << 1;
    q = p + j | 0;
    r = je(c[b + (q << 2) >> 2] | 0, f) | 0;
    s = je(c[b + (q + 1 << 2) >> 2] | 0, f) | 0;
    if (!(s >>> 0 < d >>> 0 & r >>> 0 < (d - s | 0) >>> 0)) {
     t = 0;
     break a;
    }
    if (a[b + (s + r) >> 0] | 0) {
     t = 0;
     break a;
    }
    r = ke(e, b + s | 0) | 0;
    if (!r) break;
    s = (r | 0) < 0;
    if ((m | 0) == 1) {
     t = 0;
     break a;
    } else {
     l = s ? l : o;
     m = s ? n : m - n | 0;
    }
   }
   m = p + k | 0;
   l = je(c[b + (m << 2) >> 2] | 0, f) | 0;
   j = je(c[b + (m + 1 << 2) >> 2] | 0, f) | 0;
   if (j >>> 0 < d >>> 0 & l >>> 0 < (d - j | 0) >>> 0) t = (a[b + (j + l) >> 0] | 0) == 0 ? b + j | 0 : 0; else t = 0;
  } else t = 0; else t = 0;
 } else t = 0; while (0);
 return t | 0;
}

function Vh(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;
 e = l;
 l = l + 32 | 0;
 f = e + 16 | 0;
 g = e + 8 | 0;
 h = e + 4 | 0;
 i = e;
 do if (ph(d, qg() | 0) | 0) j = 15; else {
  a[g >> 0] = tg(d) | 0;
  if (a[b + 44 >> 0] | 0) {
   if ((af(g, 1, 1, c[b + 32 >> 2] | 0) | 0) == 1) {
    j = 15;
    break;
   }
   k = qg() | 0;
   break;
  }
  c[h >> 2] = f;
  m = g + 1 | 0;
  n = b + 36 | 0;
  o = b + 40 | 0;
  p = f + 8 | 0;
  q = f;
  r = b + 32 | 0;
  s = g;
  while (1) {
   t = c[n >> 2] | 0;
   u = yc[c[(c[t >> 2] | 0) + 12 >> 2] & 15](t, c[o >> 2] | 0, s, m, i, f, p, h) | 0;
   if ((c[i >> 2] | 0) == (s | 0)) {
    j = 14;
    break;
   }
   if ((u | 0) == 3) {
    j = 8;
    break;
   }
   if (u >>> 0 >= 2) {
    j = 14;
    break;
   }
   t = (c[h >> 2] | 0) - q | 0;
   if ((af(f, 1, t, c[r >> 2] | 0) | 0) != (t | 0)) {
    j = 14;
    break;
   }
   if ((u | 0) == 1) s = c[i >> 2] | 0; else {
    j = 13;
    break;
   }
  }
  if ((j | 0) == 8) if ((af(s, 1, 1, c[r >> 2] | 0) | 0) == 1) j = 13; else j = 14;
  if ((j | 0) == 13) {
   j = 15;
   break;
  } else if ((j | 0) == 14) {
   k = qg() | 0;
   break;
  }
 } while (0);
 if ((j | 0) == 15) k = Wh(d) | 0;
 l = e;
 return k | 0;
}

function Oh(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;
 e = l;
 l = l + 32 | 0;
 f = e + 16 | 0;
 g = e + 8 | 0;
 h = e + 4 | 0;
 i = e;
 do if (rh(d, Ig() | 0) | 0) j = 15; else {
  c[g >> 2] = Lg(d) | 0;
  if (a[b + 44 >> 0] | 0) {
   if ((af(g, 4, 1, c[b + 32 >> 2] | 0) | 0) == 1) {
    j = 15;
    break;
   }
   k = Ig() | 0;
   break;
  }
  c[h >> 2] = f;
  m = g + 4 | 0;
  n = b + 36 | 0;
  o = b + 40 | 0;
  p = f + 8 | 0;
  q = f;
  r = b + 32 | 0;
  s = g;
  while (1) {
   t = c[n >> 2] | 0;
   u = yc[c[(c[t >> 2] | 0) + 12 >> 2] & 15](t, c[o >> 2] | 0, s, m, i, f, p, h) | 0;
   if ((c[i >> 2] | 0) == (s | 0)) {
    j = 14;
    break;
   }
   if ((u | 0) == 3) {
    j = 8;
    break;
   }
   if (u >>> 0 >= 2) {
    j = 14;
    break;
   }
   t = (c[h >> 2] | 0) - q | 0;
   if ((af(f, 1, t, c[r >> 2] | 0) | 0) != (t | 0)) {
    j = 14;
    break;
   }
   if ((u | 0) == 1) s = c[i >> 2] | 0; else {
    j = 13;
    break;
   }
  }
  if ((j | 0) == 8) if ((af(s, 1, 1, c[r >> 2] | 0) | 0) == 1) j = 13; else j = 14;
  if ((j | 0) == 13) {
   j = 15;
   break;
  } else if ((j | 0) == 14) {
   k = Ig() | 0;
   break;
  }
 } while (0);
 if ((j | 0) == 15) k = Ph(d) | 0;
 l = e;
 return k | 0;
}

function lt(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;
 d = b + 11 | 0;
 e = a[d >> 0] | 0;
 f = e << 24 >> 24 < 0;
 if (f) {
  g = c[b + 4 >> 2] | 0;
  h = (c[b + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  g = e & 255;
  h = 10;
 }
 i = g >>> 0 < 11;
 j = i ? 10 : (g + 16 & -16) + -1 | 0;
 a : do if ((j | 0) != (h | 0)) {
  do if (i) {
   k = c[b >> 2] | 0;
   if (f) {
    l = 0;
    m = k;
    n = b;
    o = 12;
   } else {
    sg(b, k, (e & 255) + 1 | 0) | 0;
    Cs(k);
    o = 15;
   }
  } else {
   k = j + 1 | 0;
   p = Bs(k) | 0;
   if (j >>> 0 <= h >>> 0 & (p | 0) == 0) break a;
   q = a[d >> 0] | 0;
   if (q << 24 >> 24 < 0) {
    l = 1;
    m = c[b >> 2] | 0;
    n = p;
    o = 12;
    break;
   } else {
    sg(p, b, (q & 255) + 1 | 0) | 0;
    r = p;
    s = k;
    t = b + 4 | 0;
    o = 14;
    break;
   }
  } while (0);
  if ((o | 0) == 12) {
   k = b + 4 | 0;
   sg(n, m, (c[k >> 2] | 0) + 1 | 0) | 0;
   Cs(m);
   if (l) {
    r = n;
    s = j + 1 | 0;
    t = k;
    o = 14;
   } else o = 15;
  }
  if ((o | 0) == 14) {
   c[b + 8 >> 2] = s | -2147483648;
   c[t >> 2] = g;
   c[b >> 2] = r;
   break;
  } else if ((o | 0) == 15) {
   a[d >> 0] = g;
   break;
  }
 } while (0);
 return;
}

function pe(b, e, f) {
 b = b | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 g = l;
 l = l + 16 | 0;
 h = g;
 a : do if (!e) i = 0; else {
  do if (f | 0) {
   j = (b | 0) == 0 ? h : b;
   k = a[e >> 0] | 0;
   if (k << 24 >> 24 > -1) {
    c[j >> 2] = k & 255;
    i = k << 24 >> 24 != 0 & 1;
    break a;
   }
   k = (c[c[(re() | 0) + 188 >> 2] >> 2] | 0) == 0;
   m = a[e >> 0] | 0;
   if (k) {
    c[j >> 2] = m << 24 >> 24 & 57343;
    i = 1;
    break a;
   }
   k = (m & 255) + -194 | 0;
   if (k >>> 0 <= 50) {
    m = e + 1 | 0;
    n = c[2728 + (k << 2) >> 2] | 0;
    if (f >>> 0 < 4) if (n & -2147483648 >>> ((f * 6 | 0) + -6 | 0) | 0) break;
    k = d[m >> 0] | 0;
    m = k >>> 3;
    if ((m + -16 | m + (n >> 26)) >>> 0 <= 7) {
     m = k + -128 | n << 6;
     if ((m | 0) >= 0) {
      c[j >> 2] = m;
      i = 2;
      break a;
     }
     n = (d[e + 2 >> 0] | 0) + -128 | 0;
     if (n >>> 0 <= 63) {
      k = n | m << 6;
      if ((k | 0) >= 0) {
       c[j >> 2] = k;
       i = 3;
       break a;
      }
      m = (d[e + 3 >> 0] | 0) + -128 | 0;
      if (m >>> 0 <= 63) {
       c[j >> 2] = m | k << 6;
       i = 4;
       break a;
      }
     }
    }
   }
  } while (0);
  c[(Gd() | 0) >> 2] = 84;
  i = -1;
 } while (0);
 l = g;
 return i | 0;
}

function Kt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 f = l;
 l = l + 64 | 0;
 g = f + 40 | 0;
 h = f + 12 | 0;
 i = f + 24 | 0;
 j = f;
 a : do if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 116) {
  k = a[b + 1 >> 0] | 0;
  switch (k << 24 >> 24) {
  case 105:
  case 101:
   break;
  default:
   {
    m = b;
    break a;
   }
  }
  n = b + 2 | 0;
  if (k << 24 >> 24 == 101) o = kt(n, d, e) | 0; else o = Is(n, d, e) | 0;
  if ((o | 0) == (n | 0)) m = b; else {
   n = e + 4 | 0;
   k = c[n >> 2] | 0;
   if ((c[e >> 2] | 0) == (k | 0)) m = b; else {
    _s(j, k + -24 | 0);
    Ls(j, 0, 19111) | 0;
    c[i >> 2] = c[j >> 2];
    c[i + 4 >> 2] = c[j + 4 >> 2];
    c[i + 8 >> 2] = c[j + 8 >> 2];
    k = 0;
    while (1) {
     if ((k | 0) == 3) break;
     c[j + (k << 2) >> 2] = 0;
     k = k + 1 | 0;
    }
    Ms(i, 18906) | 0;
    c[h >> 2] = c[i >> 2];
    c[h + 4 >> 2] = c[i + 4 >> 2];
    c[h + 8 >> 2] = c[i + 8 >> 2];
    k = 0;
    while (1) {
     if ((k | 0) == 3) break;
     c[i + (k << 2) >> 2] = 0;
     k = k + 1 | 0;
    }
    bt(g, h);
    ct((c[n >> 2] | 0) + -24 | 0, g);
    ns(g);
    Es(h);
    Es(i);
    Es(j);
    m = o;
   }
  }
 } else m = b; else m = b; while (0);
 l = f;
 return m | 0;
}

function ik(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 4 | 0;
 j = h;
 if (!(c[e + 4 >> 2] & 1)) {
  k = c[(c[b >> 2] | 0) + 24 >> 2] | 0;
  c[j >> 2] = c[d >> 2];
  c[i >> 2] = c[j >> 2];
  m = uc[k & 31](b, i, e, f, g & 1) | 0;
 } else {
  qh(i, e);
  e = Ji(i, 23148) | 0;
  Ki(i);
  f = c[e >> 2] | 0;
  if (g) Bc[c[f + 24 >> 2] & 63](i, e); else Bc[c[f + 28 >> 2] & 63](i, e);
  e = i + 8 + 3 | 0;
  f = a[e >> 0] | 0;
  g = c[i >> 2] | 0;
  b = i + 4 | 0;
  k = f << 24 >> 24 < 0 ? g : i;
  j = f;
  f = g;
  while (1) {
   g = j << 24 >> 24 < 0;
   if ((k | 0) == ((g ? f : i) + ((g ? c[b >> 2] | 0 : j & 255) << 2) | 0)) break;
   g = c[k >> 2] | 0;
   n = c[d >> 2] | 0;
   if (n | 0) {
    o = n + 24 | 0;
    p = c[o >> 2] | 0;
    if ((p | 0) == (c[n + 28 >> 2] | 0)) {
     q = c[(c[n >> 2] | 0) + 52 >> 2] | 0;
     r = Jg(g) | 0;
     s = qc[q & 31](n, r) | 0;
    } else {
     c[o >> 2] = p + 4;
     c[p >> 2] = g;
     s = Jg(g) | 0;
    }
    if (rh(s, Ig() | 0) | 0) c[d >> 2] = 0;
   }
   k = k + 4 | 0;
   j = a[e >> 0] | 0;
   f = c[i >> 2] | 0;
  }
  f = c[d >> 2] | 0;
  nr(i);
  m = f;
 }
 l = h;
 return m | 0;
}

function ht(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 f = l;
 l = l + 64 | 0;
 g = f + 40 | 0;
 h = f + 12 | 0;
 i = f + 24 | 0;
 j = f;
 a : do if ((d - b | 0) > 3) if ((a[b >> 0] | 0) == 68) {
  switch (a[b + 1 >> 0] | 0) {
  case 84:
  case 116:
   break;
  default:
   {
    k = b;
    break a;
   }
  }
  m = b + 2 | 0;
  n = kt(m, d, e) | 0;
  if ((n | 0) == (m | 0) | (n | 0) == (d | 0)) k = b; else if ((a[n >> 0] | 0) == 69) {
   m = e + 4 | 0;
   o = c[m >> 2] | 0;
   if ((c[e >> 2] | 0) == (o | 0)) k = b; else {
    _s(j, o + -24 | 0);
    Ls(j, 0, 20224) | 0;
    c[i >> 2] = c[j >> 2];
    c[i + 4 >> 2] = c[j + 4 >> 2];
    c[i + 8 >> 2] = c[j + 8 >> 2];
    o = 0;
    while (1) {
     if ((o | 0) == 3) break;
     c[j + (o << 2) >> 2] = 0;
     o = o + 1 | 0;
    }
    Ms(i, 18906) | 0;
    c[h >> 2] = c[i >> 2];
    c[h + 4 >> 2] = c[i + 4 >> 2];
    c[h + 8 >> 2] = c[i + 8 >> 2];
    o = 0;
    while (1) {
     if ((o | 0) == 3) break;
     c[i + (o << 2) >> 2] = 0;
     o = o + 1 | 0;
    }
    bt(g, h);
    ct((c[m >> 2] | 0) + -24 | 0, g);
    ns(g);
    Es(h);
    Es(i);
    Es(j);
    k = n + 1 | 0;
   }
  } else k = b;
 } else k = b; else k = b; while (0);
 l = f;
 return k | 0;
}

function gr(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0;
 if (d >>> 0 > 4294967279) _q(b);
 e = b + 11 | 0;
 f = a[e >> 0] | 0;
 g = f << 24 >> 24 < 0;
 if (g) {
  h = c[b + 4 >> 2] | 0;
  i = (c[b + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  h = f & 255;
  i = 10;
 }
 j = h >>> 0 > d >>> 0 ? h : d;
 d = j >>> 0 < 11;
 k = d ? 10 : (j + 16 & -16) + -1 | 0;
 do if ((k | 0) != (i | 0)) {
  do if (d) {
   j = c[b >> 2] | 0;
   if (g) {
    l = 0;
    m = j;
    n = b;
    o = 13;
   } else {
    sg(b, j, (f & 255) + 1 | 0) | 0;
    Uq(j);
    o = 16;
   }
  } else {
   j = k + 1 | 0;
   p = Tq(j) | 0;
   if (g) {
    l = 1;
    m = c[b >> 2] | 0;
    n = p;
    o = 13;
    break;
   } else {
    sg(p, b, (f & 255) + 1 | 0) | 0;
    q = p;
    r = j;
    s = b + 4 | 0;
    o = 15;
    break;
   }
  } while (0);
  if ((o | 0) == 13) {
   j = b + 4 | 0;
   sg(n, m, (c[j >> 2] | 0) + 1 | 0) | 0;
   Uq(m);
   if (l) {
    q = n;
    r = k + 1 | 0;
    s = j;
    o = 15;
   } else o = 16;
  }
  if ((o | 0) == 15) {
   c[b + 8 >> 2] = r | -2147483648;
   c[s >> 2] = h;
   c[b >> 2] = q;
   break;
  } else if ((o | 0) == 16) {
   a[e >> 0] = h;
   break;
  }
 } while (0);
 return;
}

function Tj(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 4 | 0;
 j = h;
 if (!(c[e + 4 >> 2] & 1)) {
  k = c[(c[b >> 2] | 0) + 24 >> 2] | 0;
  c[j >> 2] = c[d >> 2];
  c[i >> 2] = c[j >> 2];
  m = uc[k & 31](b, i, e, f, g & 1) | 0;
 } else {
  qh(i, e);
  e = Ji(i, 23124) | 0;
  Ki(i);
  f = c[e >> 2] | 0;
  if (g) Bc[c[f + 24 >> 2] & 63](i, e); else Bc[c[f + 28 >> 2] & 63](i, e);
  e = i + 11 | 0;
  f = a[e >> 0] | 0;
  g = c[i >> 2] | 0;
  b = i + 4 | 0;
  k = f << 24 >> 24 < 0 ? g : i;
  j = f;
  f = g;
  while (1) {
   g = j << 24 >> 24 < 0;
   if ((k | 0) == ((g ? f : i) + (g ? c[b >> 2] | 0 : j & 255) | 0)) break;
   g = a[k >> 0] | 0;
   n = c[d >> 2] | 0;
   if (n | 0) {
    o = n + 24 | 0;
    p = c[o >> 2] | 0;
    if ((p | 0) == (c[n + 28 >> 2] | 0)) {
     q = c[(c[n >> 2] | 0) + 52 >> 2] | 0;
     r = rg(g) | 0;
     s = qc[q & 31](n, r) | 0;
    } else {
     c[o >> 2] = p + 1;
     a[p >> 0] = g;
     s = rg(g) | 0;
    }
    if (ph(s, qg() | 0) | 0) c[d >> 2] = 0;
   }
   k = k + 1 | 0;
   j = a[e >> 0] | 0;
   f = c[i >> 2] | 0;
  }
  f = c[d >> 2] | 0;
  br(i);
  m = f;
 }
 l = h;
 return m | 0;
}

function _r(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;
 e = l;
 l = l + 64 | 0;
 f = e;
 c[d >> 2] = c[c[d >> 2] >> 2];
 if ($r(a, b, 0) | 0) g = 1; else if (!b) g = 0; else {
  h = Mr(b, 1904, 1960, 0) | 0;
  if (!h) g = 0; else if (!(c[h + 8 >> 2] & ~c[a + 8 >> 2])) {
   b = a + 12 | 0;
   a = h + 12 | 0;
   if (Ir(c[b >> 2] | 0, c[a >> 2] | 0, 0) | 0) g = 1; else if (Ir(c[b >> 2] | 0, 1992, 0) | 0) g = 1; else {
    h = c[b >> 2] | 0;
    if (!h) g = 0; else {
     b = Mr(h, 1904, 1888, 0) | 0;
     if (!b) g = 0; else {
      h = c[a >> 2] | 0;
      if (!h) g = 0; else {
       a = Mr(h, 1904, 1888, 0) | 0;
       if (!a) g = 0; else {
        h = f + 4 | 0;
        i = h + 52 | 0;
        do {
         c[h >> 2] = 0;
         h = h + 4 | 0;
        } while ((h | 0) < (i | 0));
        c[f >> 2] = a;
        c[f + 8 >> 2] = b;
        c[f + 12 >> 2] = -1;
        c[f + 48 >> 2] = 1;
        Dc[c[(c[a >> 2] | 0) + 28 >> 2] & 15](a, f, c[d >> 2] | 0, 1);
        if ((c[f + 24 >> 2] | 0) == 1) {
         c[d >> 2] = c[f + 16 >> 2];
         j = 1;
        } else j = 0;
        g = j;
       }
      }
     }
    }
   }
  } else g = 0;
 }
 l = e;
 return g | 0;
}

function Mr(d, e, f, g) {
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 h = l;
 l = l + 64 | 0;
 i = h;
 j = c[d >> 2] | 0;
 k = d + (c[j + -8 >> 2] | 0) | 0;
 m = c[j + -4 >> 2] | 0;
 c[i >> 2] = f;
 c[i + 4 >> 2] = d;
 c[i + 8 >> 2] = e;
 c[i + 12 >> 2] = g;
 g = i + 16 | 0;
 e = i + 20 | 0;
 d = i + 24 | 0;
 j = i + 28 | 0;
 n = i + 32 | 0;
 o = i + 40 | 0;
 p = g;
 q = p + 36 | 0;
 do {
  c[p >> 2] = 0;
  p = p + 4 | 0;
 } while ((p | 0) < (q | 0));
 b[g + 36 >> 1] = 0;
 a[g + 38 >> 0] = 0;
 a : do if (Ir(m, f, 0) | 0) {
  c[i + 48 >> 2] = 1;
  Fc[c[(c[m >> 2] | 0) + 20 >> 2] & 15](m, i, k, k, 1, 0);
  r = (c[d >> 2] | 0) == 1 ? k : 0;
 } else {
  Ec[c[(c[m >> 2] | 0) + 24 >> 2] & 3](m, i, k, 1, 0);
  switch (c[i + 36 >> 2] | 0) {
  case 0:
   {
    r = (c[o >> 2] | 0) == 1 & (c[j >> 2] | 0) == 1 & (c[n >> 2] | 0) == 1 ? c[e >> 2] | 0 : 0;
    break a;
    break;
   }
  case 1:
   break;
  default:
   {
    r = 0;
    break a;
   }
  }
  if ((c[d >> 2] | 0) != 1) if (!((c[o >> 2] | 0) == 0 & (c[j >> 2] | 0) == 1 & (c[n >> 2] | 0) == 1)) {
   r = 0;
   break;
  }
  r = c[g >> 2] | 0;
 } while (0);
 l = h;
 return r | 0;
}

function Ld(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;
 f = l;
 l = l + 224 | 0;
 g = f + 120 | 0;
 h = f + 80 | 0;
 i = f;
 j = f + 136 | 0;
 k = h;
 m = k + 40 | 0;
 do {
  c[k >> 2] = 0;
  k = k + 4 | 0;
 } while ((k | 0) < (m | 0));
 c[g >> 2] = c[e >> 2];
 if ((Md(0, d, g, i, h) | 0) < 0) n = -1; else {
  if ((c[b + 76 >> 2] | 0) > -1) o = Nd(b) | 0; else o = 0;
  e = c[b >> 2] | 0;
  k = e & 32;
  if ((a[b + 74 >> 0] | 0) < 1) c[b >> 2] = e & -33;
  e = b + 48 | 0;
  if (!(c[e >> 2] | 0)) {
   m = b + 44 | 0;
   p = c[m >> 2] | 0;
   c[m >> 2] = j;
   q = b + 28 | 0;
   c[q >> 2] = j;
   r = b + 20 | 0;
   c[r >> 2] = j;
   c[e >> 2] = 80;
   s = b + 16 | 0;
   c[s >> 2] = j + 80;
   j = Md(b, d, g, i, h) | 0;
   if (!p) t = j; else {
    rc[c[b + 36 >> 2] & 31](b, 0, 0) | 0;
    u = (c[r >> 2] | 0) == 0 ? -1 : j;
    c[m >> 2] = p;
    c[e >> 2] = 0;
    c[s >> 2] = 0;
    c[q >> 2] = 0;
    c[r >> 2] = 0;
    t = u;
   }
  } else t = Md(b, d, g, i, h) | 0;
  h = c[b >> 2] | 0;
  c[b >> 2] = h | k;
  if (o | 0) Od(b);
  n = (h & 32 | 0) == 0 ? t : -1;
 }
 l = f;
 return n | 0;
}

function Jt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 64 | 0;
 g = f + 40 | 0;
 h = f + 12 | 0;
 i = f + 24 | 0;
 j = f;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 115) if ((a[b + 1 >> 0] | 0) == 90) {
  k = b + 2 | 0;
  if ((a[k >> 0] | 0) == 102) {
   m = ot(k, d, e) | 0;
   if ((m | 0) == (k | 0)) n = b; else {
    k = e + 4 | 0;
    d = c[k >> 2] | 0;
    if ((c[e >> 2] | 0) == (d | 0)) n = b; else {
     _s(j, d + -24 | 0);
     Ls(j, 0, 19119) | 0;
     c[i >> 2] = c[j >> 2];
     c[i + 4 >> 2] = c[j + 4 >> 2];
     c[i + 8 >> 2] = c[j + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[j + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     Ms(i, 18906) | 0;
     c[h >> 2] = c[i >> 2];
     c[h + 4 >> 2] = c[i + 4 >> 2];
     c[h + 8 >> 2] = c[i + 8 >> 2];
     d = 0;
     while (1) {
      if ((d | 0) == 3) break;
      c[i + (d << 2) >> 2] = 0;
      d = d + 1 | 0;
     }
     bt(g, h);
     ct((c[k >> 2] | 0) + -24 | 0, g);
     ns(g);
     Es(h);
     Es(i);
     Es(j);
     n = m;
    }
   }
  } else n = b;
 } else n = b; else n = b; else n = b;
 l = f;
 return n | 0;
}

function yi(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 i = l;
 l = l + 48 | 0;
 j = i + 40 | 0;
 k = i + 16 | 0;
 m = i + 8 | 0;
 n = i + 12 | 0;
 o = i + 4 | 0;
 p = i;
 if (!(c[f + 4 >> 2] & 1)) {
  c[m >> 2] = -1;
  q = c[(c[b >> 2] | 0) + 16 >> 2] | 0;
  c[n >> 2] = c[d >> 2];
  c[o >> 2] = c[e >> 2];
  c[k >> 2] = c[n >> 2];
  c[j >> 2] = c[o >> 2];
  c[d >> 2] = wc[q & 63](b, k, j, f, g, m) | 0;
  switch (c[m >> 2] | 0) {
  case 0:
   {
    a[h >> 0] = 0;
    break;
   }
  case 1:
   {
    a[h >> 0] = 1;
    break;
   }
  default:
   {
    a[h >> 0] = 1;
    c[g >> 2] = 4;
   }
  }
  r = c[d >> 2] | 0;
 } else {
  qh(j, f);
  m = Ji(j, 23108) | 0;
  Ki(j);
  qh(j, f);
  f = Ji(j, 23124) | 0;
  Ki(j);
  Bc[c[(c[f >> 2] | 0) + 24 >> 2] & 63](k, f);
  Bc[c[(c[f >> 2] | 0) + 28 >> 2] & 63](k + 12 | 0, f);
  c[p >> 2] = c[e >> 2];
  e = k + 24 | 0;
  c[j >> 2] = c[p >> 2];
  a[h >> 0] = (pj(d, j, k, e, m, g, 1) | 0) == (k | 0) & 1;
  g = c[d >> 2] | 0;
  d = e;
  do {
   d = d + -12 | 0;
   br(d);
  } while ((d | 0) != (k | 0));
  r = g;
 }
 l = i;
 return r | 0;
}

function sj(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 i = l;
 l = l + 48 | 0;
 j = i + 40 | 0;
 k = i + 16 | 0;
 m = i + 8 | 0;
 n = i + 12 | 0;
 o = i + 4 | 0;
 p = i;
 if (!(c[f + 4 >> 2] & 1)) {
  c[m >> 2] = -1;
  q = c[(c[b >> 2] | 0) + 16 >> 2] | 0;
  c[n >> 2] = c[d >> 2];
  c[o >> 2] = c[e >> 2];
  c[k >> 2] = c[n >> 2];
  c[j >> 2] = c[o >> 2];
  c[d >> 2] = wc[q & 63](b, k, j, f, g, m) | 0;
  switch (c[m >> 2] | 0) {
  case 0:
   {
    a[h >> 0] = 0;
    break;
   }
  case 1:
   {
    a[h >> 0] = 1;
    break;
   }
  default:
   {
    a[h >> 0] = 1;
    c[g >> 2] = 4;
   }
  }
  r = c[d >> 2] | 0;
 } else {
  qh(j, f);
  m = Ji(j, 23140) | 0;
  Ki(j);
  qh(j, f);
  f = Ji(j, 23148) | 0;
  Ki(j);
  Bc[c[(c[f >> 2] | 0) + 24 >> 2] & 63](k, f);
  Bc[c[(c[f >> 2] | 0) + 28 >> 2] & 63](k + 12 | 0, f);
  c[p >> 2] = c[e >> 2];
  e = k + 24 | 0;
  c[j >> 2] = c[p >> 2];
  a[h >> 0] = (Qj(d, j, k, e, m, g, 1) | 0) == (k | 0) & 1;
  g = c[d >> 2] | 0;
  d = e;
  do {
   d = d + -12 | 0;
   nr(d);
  } while ((d | 0) != (k | 0));
  r = g;
 }
 l = i;
 return r | 0;
}

function Pr(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0;
 do if (Ir(b, c[d + 8 >> 2] | 0, g) | 0) Kr(0, d, e, f); else {
  if (!(Ir(b, c[d >> 2] | 0, g) | 0)) {
   h = c[b + 8 >> 2] | 0;
   Ec[c[(c[h >> 2] | 0) + 24 >> 2] & 3](h, d, e, f, g);
   break;
  }
  if ((c[d + 16 >> 2] | 0) != (e | 0)) {
   h = d + 20 | 0;
   if ((c[h >> 2] | 0) != (e | 0)) {
    c[d + 32 >> 2] = f;
    i = d + 44 | 0;
    if ((c[i >> 2] | 0) == 4) break;
    j = d + 52 | 0;
    a[j >> 0] = 0;
    k = d + 53 | 0;
    a[k >> 0] = 0;
    l = c[b + 8 >> 2] | 0;
    Fc[c[(c[l >> 2] | 0) + 20 >> 2] & 15](l, d, e, e, 1, g);
    if (!(a[k >> 0] | 0)) {
     m = 4;
     n = 11;
    } else if (!(a[j >> 0] | 0)) {
     m = 3;
     n = 11;
    } else o = 3;
    if ((n | 0) == 11) {
     c[h >> 2] = e;
     h = d + 40 | 0;
     c[h >> 2] = (c[h >> 2] | 0) + 1;
     if ((c[d + 36 >> 2] | 0) == 1) if ((c[d + 24 >> 2] | 0) == 2) {
      a[d + 54 >> 0] = 1;
      o = m;
     } else o = m; else o = m;
    }
    c[i >> 2] = o;
    break;
   }
  }
  if ((f | 0) == 1) c[d + 32 >> 2] = 1;
 } while (0);
 return;
}

function Yi(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;
 g = b + 11 | 0;
 h = a[g >> 0] | 0;
 i = b + 4 | 0;
 j = c[i >> 2] | 0;
 do if ((h << 24 >> 24 < 0 ? j : h & 255) | 0) {
  if ((d | 0) == (e | 0)) {
   k = h;
   l = j;
  } else {
   m = e;
   n = d;
   while (1) {
    o = m + -4 | 0;
    if (n >>> 0 >= o >>> 0) break;
    p = c[n >> 2] | 0;
    c[n >> 2] = c[o >> 2];
    c[o >> 2] = p;
    m = o;
    n = n + 4 | 0;
   }
   k = a[g >> 0] | 0;
   l = c[i >> 2] | 0;
  }
  n = k << 24 >> 24 < 0;
  m = n ? c[b >> 2] | 0 : b;
  o = e + -4 | 0;
  p = m + (n ? l : k & 255) | 0;
  n = d;
  q = m;
  while (1) {
   r = a[q >> 0] | 0;
   s = r << 24 >> 24 > 0 & r << 24 >> 24 != 127;
   if (n >>> 0 >= o >>> 0) break;
   if (s) if ((c[n >> 2] | 0) != (r << 24 >> 24 | 0)) {
    t = 10;
    break;
   }
   n = n + 4 | 0;
   q = (p - q | 0) > 1 ? q + 1 | 0 : q;
  }
  if ((t | 0) == 10) {
   c[f >> 2] = 4;
   break;
  }
  if (s) if (((c[o >> 2] | 0) + -1 | 0) >>> 0 >= r << 24 >> 24 >>> 0) c[f >> 2] = 4;
 } while (0);
 return;
}

function Ht(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 64 | 0;
 g = f + 40 | 0;
 h = f + 12 | 0;
 i = f + 24 | 0;
 j = f;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 115) if ((a[b + 1 >> 0] | 0) == 122) {
  k = b + 2 | 0;
  m = kt(k, d, e) | 0;
  if ((m | 0) == (k | 0)) n = b; else {
   k = e + 4 | 0;
   d = c[k >> 2] | 0;
   if ((c[e >> 2] | 0) == (d | 0)) n = b; else {
    _s(j, d + -24 | 0);
    Ls(j, 0, 19133) | 0;
    c[i >> 2] = c[j >> 2];
    c[i + 4 >> 2] = c[j + 4 >> 2];
    c[i + 8 >> 2] = c[j + 8 >> 2];
    d = 0;
    while (1) {
     if ((d | 0) == 3) break;
     c[j + (d << 2) >> 2] = 0;
     d = d + 1 | 0;
    }
    Ms(i, 18906) | 0;
    c[h >> 2] = c[i >> 2];
    c[h + 4 >> 2] = c[i + 4 >> 2];
    c[h + 8 >> 2] = c[i + 8 >> 2];
    d = 0;
    while (1) {
     if ((d | 0) == 3) break;
     c[i + (d << 2) >> 2] = 0;
     d = d + 1 | 0;
    }
    bt(g, h);
    ct((c[k >> 2] | 0) + -24 | 0, g);
    ns(g);
    Es(h);
    Es(i);
    Es(j);
    n = m;
   }
  }
 } else n = b; else n = b; else n = b;
 l = f;
 return n | 0;
}
function Gt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 64 | 0;
 g = f + 40 | 0;
 h = f + 12 | 0;
 i = f + 24 | 0;
 j = f;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 115) if ((a[b + 1 >> 0] | 0) == 116) {
  k = b + 2 | 0;
  m = Is(k, d, e) | 0;
  if ((m | 0) == (k | 0)) n = b; else {
   k = e + 4 | 0;
   d = c[k >> 2] | 0;
   if ((c[e >> 2] | 0) == (d | 0)) n = b; else {
    _s(j, d + -24 | 0);
    Ls(j, 0, 19133) | 0;
    c[i >> 2] = c[j >> 2];
    c[i + 4 >> 2] = c[j + 4 >> 2];
    c[i + 8 >> 2] = c[j + 8 >> 2];
    d = 0;
    while (1) {
     if ((d | 0) == 3) break;
     c[j + (d << 2) >> 2] = 0;
     d = d + 1 | 0;
    }
    Ms(i, 18906) | 0;
    c[h >> 2] = c[i >> 2];
    c[h + 4 >> 2] = c[i + 4 >> 2];
    c[h + 8 >> 2] = c[i + 8 >> 2];
    d = 0;
    while (1) {
     if ((d | 0) == 3) break;
     c[i + (d << 2) >> 2] = 0;
     d = d + 1 | 0;
    }
    bt(g, h);
    ct((c[k >> 2] | 0) + -24 | 0, g);
    ns(g);
    Es(h);
    Es(i);
    Es(j);
    n = m;
   }
  }
 } else n = b; else n = b; else n = b;
 l = f;
 return n | 0;
}

function ms(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0;
 a : do if (b >>> 0 < d >>> 0) {
  b : do if ((a[b >> 0] | 0) == 95) {
   if ((d - b | 0) <= 3) {
    c[f >> 2] = -2;
    break a;
   }
   switch (a[b + 1 >> 0] | 0) {
   case 90:
    {
     g = b + 2 | 0;
     h = Fs(g, d, e) | 0;
     if ((h | 0) == (g | 0) | (h | 0) == (d | 0)) i = h; else if ((a[h >> 0] | 0) == 46) i = Gs(h, d, e) | 0; else i = h;
     if ((i | 0) == (d | 0)) break b;
     c[f >> 2] = -2;
     break a;
     break;
    }
   case 95:
    {
     if ((a[b + 2 >> 0] | 0) == 95) if ((a[b + 3 >> 0] | 0) == 90) {
      h = b + 4 | 0;
      g = Fs(h, d, e) | 0;
      if (!((g | 0) == (h | 0) | (g | 0) == (d | 0))) if ((Hs(g, d, e) | 0) == (d | 0)) break b;
      c[f >> 2] = -2;
      break a;
     }
     break;
    }
   default:
    {}
   }
   c[f >> 2] = -2;
   break a;
  } else if ((Is(b, d, e) | 0) != (d | 0)) {
   c[f >> 2] = -2;
   break a;
  } while (0);
  if (!(c[f >> 2] | 0)) if ((c[e >> 2] | 0) == (c[e + 4 >> 2] | 0)) c[f >> 2] = -2;
 } else c[f >> 2] = -2; while (0);
 return;
}

function Tc(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 e = l;
 l = l + 32 | 0;
 f = e + 12 | 0;
 g = e;
 h = d + 4 | 0;
 i = c[d >> 2] | 0;
 c[g >> 2] = 0;
 c[g + 4 >> 2] = 0;
 c[g + 8 >> 2] = 0;
 if (i >>> 0 > 4294967279) _q(g);
 if (i >>> 0 < 11) {
  a[g + 11 >> 0] = i;
  if (!i) j = g; else {
   k = g;
   m = 6;
  }
 } else {
  d = i + 16 & -16;
  n = Tq(d) | 0;
  c[g >> 2] = n;
  c[g + 8 >> 2] = d | -2147483648;
  c[g + 4 >> 2] = i;
  k = n;
  m = 6;
 }
 if ((m | 0) == 6) {
  zv(k | 0, h | 0, i | 0) | 0;
  j = k;
 }
 a[j + i >> 0] = 0;
 Bc[b & 63](f, g);
 b = a[f + 11 >> 0] | 0;
 i = b << 24 >> 24 < 0;
 if (i) {
  j = c[f + 4 >> 2] | 0;
  o = xd(j + 4 | 0) | 0;
  p = b & 255;
  q = j;
  r = j;
 } else {
  j = b & 255;
  b = xd(j + 4 | 0) | 0;
  o = b;
  p = j;
  q = j;
  r = c[f + 4 >> 2] | 0;
 }
 c[o >> 2] = q;
 q = c[f >> 2] | 0;
 zv(o + 4 | 0, (i ? q : f) | 0, (i ? r : p) | 0) | 0;
 if (i) Uq(q);
 if ((a[g + 11 >> 0] | 0) >= 0) {
  l = e;
  return o | 0;
 }
 Uq(c[g >> 2] | 0);
 l = e;
 return o | 0;
}

function Ve(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0;
 e = d & 255;
 a : do if (!e) f = b + (Qe(b) | 0) | 0; else {
  if (!(b & 3)) g = b; else {
   h = d & 255;
   i = b;
   while (1) {
    j = a[i >> 0] | 0;
    if (j << 24 >> 24 == 0 ? 1 : j << 24 >> 24 == h << 24 >> 24) {
     f = i;
     break a;
    }
    j = i + 1 | 0;
    if (!(j & 3)) {
     g = j;
     break;
    } else i = j;
   }
  }
  i = O(e, 16843009) | 0;
  h = c[g >> 2] | 0;
  b : do if (!((h & -2139062144 ^ -2139062144) & h + -16843009)) {
   j = g;
   k = h;
   while (1) {
    l = k ^ i;
    if ((l & -2139062144 ^ -2139062144) & l + -16843009 | 0) {
     m = j;
     break b;
    }
    l = j + 4 | 0;
    k = c[l >> 2] | 0;
    if ((k & -2139062144 ^ -2139062144) & k + -16843009 | 0) {
     m = l;
     break;
    } else j = l;
   }
  } else m = g; while (0);
  i = d & 255;
  h = m;
  while (1) {
   j = a[h >> 0] | 0;
   if (j << 24 >> 24 == 0 ? 1 : j << 24 >> 24 == i << 24 >> 24) {
    f = h;
    break;
   } else h = h + 1 | 0;
  }
 } while (0);
 return f | 0;
}

function bd(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0;
 e = b + 32 | 0;
 cr(e, d) | 0;
 d = b + 44 | 0;
 c[d >> 2] = 0;
 f = b + 48 | 0;
 g = c[f >> 2] | 0;
 if (g & 8 | 0) {
  h = a[e + 11 >> 0] | 0;
  if (h << 24 >> 24 < 0) {
   i = c[e >> 2] | 0;
   j = i;
   k = i;
   l = i + (c[b + 36 >> 2] | 0) | 0;
  } else {
   j = e;
   k = e;
   l = e + (h & 255) | 0;
  }
  c[d >> 2] = l;
  c[b + 8 >> 2] = j;
  c[b + 12 >> 2] = k;
  c[b + 16 >> 2] = l;
 }
 if (!(g & 16)) return;
 g = e + 11 | 0;
 l = a[g >> 0] | 0;
 if (l << 24 >> 24 < 0) {
  k = c[b + 36 >> 2] | 0;
  c[d >> 2] = (c[e >> 2] | 0) + k;
  m = (c[b + 40 >> 2] & 2147483647) + -1 | 0;
  n = k;
 } else {
  k = l & 255;
  c[d >> 2] = e + k;
  m = 10;
  n = k;
 }
 ir(e, m, 0);
 m = a[g >> 0] | 0;
 if (m << 24 >> 24 < 0) {
  o = c[e >> 2] | 0;
  p = c[b + 36 >> 2] | 0;
 } else {
  o = e;
  p = m & 255;
 }
 m = b + 24 | 0;
 c[m >> 2] = o;
 c[b + 20 >> 2] = o;
 c[b + 28 >> 2] = o + p;
 if (!(c[f >> 2] & 3)) return;
 c[m >> 2] = o + n;
 return;
}

function Fu(b, c, d) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0;
 a : do if ((b | 0) == (c | 0)) e = b; else switch (a[b >> 0] | 0) {
 case 88:
  {
   f = b + 1 | 0;
   g = kt(f, c, d) | 0;
   if ((g | 0) == (f | 0) | (g | 0) == (c | 0)) {
    e = b;
    break a;
   }
   e = (a[g >> 0] | 0) == 69 ? g + 1 | 0 : b;
   break a;
   break;
  }
 case 74:
  {
   g = b + 1 | 0;
   if ((g | 0) == (c | 0)) {
    e = b;
    break a;
   } else h = g;
   while (1) {
    if ((a[h >> 0] | 0) == 69) break;
    g = Fu(h, c, d) | 0;
    if ((g | 0) == (h | 0)) {
     e = b;
     break a;
    } else h = g;
   }
   e = h + 1 | 0;
   break a;
   break;
  }
 case 76:
  {
   g = b + 1 | 0;
   if ((g | 0) != (c | 0)) if ((a[g >> 0] | 0) == 90) {
    g = b + 2 | 0;
    f = Fs(g, c, d) | 0;
    if ((f | 0) == (g | 0) | (f | 0) == (c | 0)) {
     e = b;
     break a;
    }
    e = (a[f >> 0] | 0) == 69 ? f + 1 | 0 : b;
    break a;
   }
   e = nt(b, c, d) | 0;
   break a;
   break;
  }
 default:
  {
   e = Is(b, c, d) | 0;
   break a;
  }
 } while (0);
 return e | 0;
}

function le(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0;
 f = e + 16 | 0;
 g = c[f >> 2] | 0;
 if (!g) if (!(me(e) | 0)) {
  h = c[f >> 2] | 0;
  i = 5;
 } else j = 0; else {
  h = g;
  i = 5;
 }
 a : do if ((i | 0) == 5) {
  g = e + 20 | 0;
  f = c[g >> 2] | 0;
  k = f;
  if ((h - f | 0) >>> 0 < d >>> 0) {
   j = rc[c[e + 36 >> 2] & 31](e, b, d) | 0;
   break;
  }
  b : do if ((a[e + 75 >> 0] | 0) > -1) {
   f = d;
   while (1) {
    if (!f) {
     l = 0;
     m = b;
     n = d;
     o = k;
     break b;
    }
    p = f + -1 | 0;
    if ((a[b + p >> 0] | 0) == 10) break; else f = p;
   }
   p = rc[c[e + 36 >> 2] & 31](e, b, f) | 0;
   if (p >>> 0 < f >>> 0) {
    j = p;
    break a;
   }
   l = f;
   m = b + f | 0;
   n = d - f | 0;
   o = c[g >> 2] | 0;
  } else {
   l = 0;
   m = b;
   n = d;
   o = k;
  } while (0);
  zv(o | 0, m | 0, n | 0) | 0;
  c[g >> 2] = (c[g >> 2] | 0) + n;
  j = l + n | 0;
 } while (0);
 return j | 0;
}

function zt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 f = l;
 l = l + 32 | 0;
 g = f + 12 | 0;
 h = f;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 100) if ((a[b + 1 >> 0] | 0) == 116) {
  i = b + 2 | 0;
  j = kt(i, d, e) | 0;
  if ((j | 0) == (i | 0)) k = b; else {
   i = xt(j, d, e) | 0;
   if ((i | 0) == (j | 0)) k = b; else {
    j = e + 4 | 0;
    d = c[j >> 2] | 0;
    if (((d - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) k = b; else {
     _s(g, d + -24 | 0);
     d = c[j >> 2] | 0;
     e = d + -24 | 0;
     m = d;
     while (1) {
      if ((m | 0) == (e | 0)) break;
      d = m + -24 | 0;
      c[j >> 2] = d;
      ns(d);
      m = c[j >> 2] | 0;
     }
     mt(h, 19197, g);
     m = a[h + 11 >> 0] | 0;
     e = m << 24 >> 24 < 0;
     qs((c[j >> 2] | 0) + -24 | 0, e ? c[h >> 2] | 0 : h, e ? c[h + 4 >> 2] | 0 : m & 255) | 0;
     Es(h);
     Es(g);
     k = i;
    }
   }
  }
 } else k = b; else k = b; else k = b;
 l = f;
 return k | 0;
}

function yt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 f = l;
 l = l + 32 | 0;
 g = f + 12 | 0;
 h = f;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 100) if ((a[b + 1 >> 0] | 0) == 115) {
  i = b + 2 | 0;
  j = kt(i, d, e) | 0;
  if ((j | 0) == (i | 0)) k = b; else {
   i = kt(j, d, e) | 0;
   if ((i | 0) == (j | 0)) k = b; else {
    j = e + 4 | 0;
    d = c[j >> 2] | 0;
    if (((d - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) k = b; else {
     _s(g, d + -24 | 0);
     d = c[j >> 2] | 0;
     e = d + -24 | 0;
     m = d;
     while (1) {
      if ((m | 0) == (e | 0)) break;
      d = m + -24 | 0;
      c[j >> 2] = d;
      ns(d);
      m = c[j >> 2] | 0;
     }
     mt(h, 19199, g);
     m = a[h + 11 >> 0] | 0;
     e = m << 24 >> 24 < 0;
     qs((c[j >> 2] | 0) + -24 | 0, e ? c[h >> 2] | 0 : h, e ? c[h + 4 >> 2] | 0 : m & 255) | 0;
     Es(h);
     Es(g);
     k = i;
    }
   }
  }
 } else k = b; else k = b; else k = b;
 l = f;
 return k | 0;
}

function Ct(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 112) if ((a[b + 1 >> 0] | 0) == 116) {
  h = b + 2 | 0;
  i = kt(h, d, e) | 0;
  if ((i | 0) == (h | 0)) j = b; else {
   h = kt(i, d, e) | 0;
   if ((h | 0) == (i | 0)) j = b; else {
    i = e + 4 | 0;
    d = c[i >> 2] | 0;
    if (((d - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) j = b; else {
     _s(g, d + -24 | 0);
     d = c[i >> 2] | 0;
     e = d + -24 | 0;
     k = d;
     while (1) {
      if ((k | 0) == (e | 0)) break;
      m = k + -24 | 0;
      c[i >> 2] = m;
      ns(m);
      k = c[i >> 2] | 0;
     }
     Ms(d + -48 | 0, 19176) | 0;
     d = a[g + 11 >> 0] | 0;
     k = d << 24 >> 24 < 0;
     qs((c[i >> 2] | 0) + -24 | 0, k ? c[g >> 2] | 0 : g, k ? c[g + 4 >> 2] | 0 : d & 255) | 0;
     Es(g);
     j = h;
    }
   }
  }
 } else j = b; else j = b; else j = b;
 l = f;
 return j | 0;
}

function xe(b) {
 b = b | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0;
 e = b + 104 | 0;
 f = c[e >> 2] | 0;
 if (!f) g = 3; else if ((c[b + 108 >> 2] | 0) < (f | 0)) g = 3; else g = 4;
 if ((g | 0) == 3) {
  f = Pe(b) | 0;
  if ((f | 0) < 0) g = 4; else {
   h = c[e >> 2] | 0;
   e = b + 8 | 0;
   if (!h) {
    i = c[e >> 2] | 0;
    j = i;
    k = i;
   } else {
    i = c[e >> 2] | 0;
    e = c[b + 4 >> 2] | 0;
    l = h - (c[b + 108 >> 2] | 0) | 0;
    h = i;
    if ((i - e | 0) < (l | 0)) {
     j = h;
     k = h;
    } else {
     j = e + (l + -1) | 0;
     k = h;
    }
   }
   c[b + 100 >> 2] = j;
   j = b + 4 | 0;
   if (!k) m = c[j >> 2] | 0; else {
    h = c[j >> 2] | 0;
    j = b + 108 | 0;
    c[j >> 2] = k + 1 - h + (c[j >> 2] | 0);
    m = h;
   }
   h = m + -1 | 0;
   if ((f | 0) == (d[h >> 0] | 0 | 0)) n = f; else {
    a[h >> 0] = f;
    n = f;
   }
  }
 }
 if ((g | 0) == 4) {
  c[b + 100 >> 2] = 0;
  n = -1;
 }
 return n | 0;
}

function Au(b, c) {
 b = b | 0;
 c = c | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0;
 a : do if ((b | 0) == (c | 0)) d = b; else {
  e = a[b >> 0] | 0;
  if (e << 24 >> 24 != 95) {
   if (((e << 24 >> 24) + -48 | 0) >>> 0 < 10) f = b; else {
    d = b;
    break;
   }
   while (1) {
    e = f + 1 | 0;
    if ((e | 0) == (c | 0)) {
     d = c;
     break a;
    }
    if (((a[e >> 0] | 0) + -48 | 0) >>> 0 < 10) f = e; else {
     d = e;
     break a;
    }
   }
  }
  e = b + 1 | 0;
  if ((e | 0) == (c | 0)) d = b; else {
   g = a[e >> 0] | 0;
   if (((g << 24 >> 24) + -48 | 0) >>> 0 < 10) {
    d = b + 2 | 0;
    break;
   }
   if (g << 24 >> 24 == 95) {
    g = b + 2 | 0;
    while (1) {
     if ((g | 0) == (c | 0)) {
      d = b;
      break a;
     }
     h = a[g >> 0] | 0;
     if (((h << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
     g = g + 1 | 0;
    }
    return (h << 24 >> 24 == 95 ? g + 1 | 0 : b) | 0;
   } else d = b;
  }
 } while (0);
 return d | 0;
}

function oj(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 if ((a | 0) == (b | 0)) {
  c[d >> 2] = 4;
  h = 0;
 } else {
  i = c[(Gd() | 0) >> 2] | 0;
  c[(Gd() | 0) >> 2] = 0;
  j = Wf(a, g, e, Mi() | 0) | 0;
  e = z;
  a = c[(Gd() | 0) >> 2] | 0;
  if (!a) c[(Gd() | 0) >> 2] = i;
  a : do if ((c[g >> 2] | 0) == (b | 0)) {
   do if ((a | 0) == 34) {
    c[d >> 2] = 4;
    if ((e | 0) > 0 | (e | 0) == 0 & j >>> 0 > 0) {
     k = 2147483647;
     break a;
    }
   } else {
    if ((e | 0) < -1 | (e | 0) == -1 & j >>> 0 < 2147483648) {
     c[d >> 2] = 4;
     break;
    }
    if ((e | 0) > 0 | (e | 0) == 0 & j >>> 0 > 2147483647) {
     c[d >> 2] = 4;
     k = 2147483647;
     break a;
    } else {
     k = j;
     break a;
    }
   } while (0);
   k = -2147483648;
  } else {
   c[d >> 2] = 4;
   k = 0;
  } while (0);
  h = k;
 }
 l = f;
 return h | 0;
}

function yn(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0;
 d = l;
 l = l + 16 | 0;
 i = d;
 c[i >> 2] = 0;
 c[i + 4 >> 2] = 0;
 c[i + 8 >> 2] = 0;
 j = 0;
 while (1) {
  if ((j | 0) == 3) break;
  c[i + (j << 2) >> 2] = 0;
  j = j + 1 | 0;
 }
 j = a[h + 11 >> 0] | 0;
 k = j << 24 >> 24 < 0;
 m = k ? c[h >> 2] | 0 : h;
 n = m + (k ? c[h + 4 >> 2] | 0 : j & 255) | 0;
 j = m;
 while (1) {
  if (j >>> 0 >= n >>> 0) break;
  mr(i, a[j >> 0] | 0);
  j = j + 1 | 0;
 }
 j = (a[i + 11 >> 0] | 0) < 0 ? c[i >> 2] | 0 : i;
 n = Rf((e | 0) == -1 ? -1 : e << 1, f, g, j) | 0;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 g = 0;
 while (1) {
  if ((g | 0) == 3) break;
  c[b + (g << 2) >> 2] = 0;
  g = g + 1 | 0;
 }
 g = j + (Qe(n) | 0) | 0;
 n = j;
 while (1) {
  if (n >>> 0 >= g >>> 0) break;
  mr(b, a[n >> 0] | 0);
  n = n + 1 | 0;
 }
 br(i);
 l = d;
 return;
}

function Hs(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0;
 a : do if ((d - b | 0) > 12) {
  f = 0;
  g = b;
  while (1) {
   if ((f | 0) >= 13) break;
   if ((a[g >> 0] | 0) != (a[20539 + f >> 0] | 0)) {
    h = b;
    break a;
   }
   f = f + 1 | 0;
   g = g + 1 | 0;
  }
  b : do if ((g | 0) == (d | 0)) i = d; else {
   if ((a[g >> 0] | 0) == 95) {
    f = g + 1 | 0;
    if ((f | 0) == (d | 0)) {
     h = b;
     break a;
    }
    if (((a[f >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
     h = b;
     break a;
    }
    j = g + 2 | 0;
   } else j = g;
   while (1) {
    if ((j | 0) == (d | 0)) {
     i = d;
     break b;
    }
    if (((a[j >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
     i = j;
     break b;
    }
    j = j + 1 | 0;
   }
  } while (0);
  g = c[e + 4 >> 2] | 0;
  if ((c[e >> 2] | 0) == (g | 0)) h = b; else {
   Ls(g + -24 | 0, 0, 20553) | 0;
   h = i;
  }
 } else h = b; while (0);
 return h | 0;
}

function bs(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 if (Ir(b, c[d + 8 >> 2] | 0, h) | 0) Lr(0, d, e, f, g); else {
  i = d + 52 | 0;
  j = a[i >> 0] | 0;
  k = d + 53 | 0;
  l = a[k >> 0] | 0;
  m = c[b + 12 >> 2] | 0;
  n = b + 16 + (m << 3) | 0;
  a[i >> 0] = 0;
  a[k >> 0] = 0;
  fs(b + 16 | 0, d, e, f, g, h);
  a : do if ((m | 0) > 1) {
   o = d + 24 | 0;
   p = b + 8 | 0;
   q = d + 54 | 0;
   r = b + 24 | 0;
   do {
    if (a[q >> 0] | 0) break a;
    if (!(a[i >> 0] | 0)) {
     if (a[k >> 0] | 0) if (!(c[p >> 2] & 1)) break a;
    } else {
     if ((c[o >> 2] | 0) == 1) break a;
     if (!(c[p >> 2] & 2)) break a;
    }
    a[i >> 0] = 0;
    a[k >> 0] = 0;
    fs(r, d, e, f, g, h);
    r = r + 8 | 0;
   } while (r >>> 0 < n >>> 0);
  } while (0);
  a[i >> 0] = j;
  a[k >> 0] = l;
 }
 return;
}

function be(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0;
 do if (!b) f = 1; else {
  if (d >>> 0 < 128) {
   a[b >> 0] = d;
   f = 1;
   break;
  }
  if (!(c[c[(ce() | 0) + 188 >> 2] >> 2] | 0)) if ((d & -128 | 0) == 57216) {
   a[b >> 0] = d;
   f = 1;
   break;
  } else {
   c[(Gd() | 0) >> 2] = 84;
   f = -1;
   break;
  }
  if (d >>> 0 < 2048) {
   a[b >> 0] = d >>> 6 | 192;
   a[b + 1 >> 0] = d & 63 | 128;
   f = 2;
   break;
  }
  if (d >>> 0 < 55296 | (d & -8192 | 0) == 57344) {
   a[b >> 0] = d >>> 12 | 224;
   a[b + 1 >> 0] = d >>> 6 & 63 | 128;
   a[b + 2 >> 0] = d & 63 | 128;
   f = 3;
   break;
  }
  if ((d + -65536 | 0) >>> 0 < 1048576) {
   a[b >> 0] = d >>> 18 | 240;
   a[b + 1 >> 0] = d >>> 12 & 63 | 128;
   a[b + 2 >> 0] = d >>> 6 & 63 | 128;
   a[b + 3 >> 0] = d & 63 | 128;
   f = 4;
   break;
  } else {
   c[(Gd() | 0) >> 2] = 84;
   f = -1;
   break;
  }
 } while (0);
 return f | 0;
}

function xr() {
 var a = 0, b = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 a = l;
 l = l + 48 | 0;
 b = a + 32 | 0;
 d = a + 24 | 0;
 e = a + 16 | 0;
 f = a;
 g = a + 36 | 0;
 a = yr() | 0;
 if (a | 0) {
  h = c[a >> 2] | 0;
  if (h | 0) {
   a = h + 48 | 0;
   i = c[a >> 2] | 0;
   j = c[a + 4 >> 2] | 0;
   if (!((i & -256 | 0) == 1126902528 & (j | 0) == 1129074247)) {
    c[d >> 2] = 18347;
    zr(18297, d);
   }
   if ((i | 0) == 1126902529 & (j | 0) == 1129074247) k = c[h + 44 >> 2] | 0; else k = h + 80 | 0;
   c[g >> 2] = k;
   k = c[h >> 2] | 0;
   h = c[k + 4 >> 2] | 0;
   if (rc[c[(c[470] | 0) + 16 >> 2] & 31](1880, k, g) | 0) {
    k = c[g >> 2] | 0;
    g = pc[c[(c[k >> 2] | 0) + 8 >> 2] & 63](k) | 0;
    c[f >> 2] = 18347;
    c[f + 4 >> 2] = h;
    c[f + 8 >> 2] = g;
    zr(18211, f);
   } else {
    c[e >> 2] = 18347;
    c[e + 4 >> 2] = h;
    zr(18256, e);
   }
  }
 }
 zr(18335, b);
}

function Sc(b, d) {
 b = +b;
 d = +d;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 e = l;
 l = l + 2512 | 0;
 f = e + 2500 | 0;
 g = e;
 h = Tq(16) | 0;
 c[g >> 2] = h;
 c[g + 8 >> 2] = -2147483632;
 c[g + 4 >> 2] = 12;
 i = h;
 j = 11320;
 k = i + 12 | 0;
 do {
  a[i >> 0] = a[j >> 0] | 0;
  i = i + 1 | 0;
  j = j + 1 | 0;
 } while ((i | 0) < (k | 0));
 a[h + 12 >> 0] = 0;
 Xq(f, g);
 if ((a[g + 11 >> 0] | 0) < 0) Uq(c[g >> 2] | 0);
 h = Zq(f) | 0;
 c[g >> 2] = h;
 j = 1;
 i = h;
 do {
  i = (O(i >>> 30 ^ i, 1812433253) | 0) + j | 0;
  c[g + (j << 2) >> 2] = i;
  j = j + 1 | 0;
 } while ((j | 0) != 624);
 j = c[g + 4 >> 2] | 0;
 i = 0 - (j & 1) & -1727483681 ^ c[g + 1588 >> 2] ^ (j & 2147483646 | c[g >> 2] & -2147483648) >>> 1;
 g = i >>> 11 ^ i;
 i = g << 7 & -1658038656 ^ g;
 g = i << 15 & -272236544 ^ i;
 Yq(f);
 l = e;
 return +((d - b) * (+((g >>> 18 ^ g) >>> 0) * 2.3283064365386963e-10) + b);
}

function qr(b, d, e, f, g, h, i, j) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 var k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0;
 k = l;
 l = l + 16 | 0;
 m = k;
 if ((1073741806 - d | 0) >>> 0 < e >>> 0) _q(b);
 n = b + 8 | 0;
 if ((a[n + 3 >> 0] | 0) < 0) o = c[b >> 2] | 0; else o = b;
 if (d >>> 0 < 536870887) {
  p = e + d | 0;
  e = d << 1;
  q = p >>> 0 < e >>> 0 ? e : p;
  p = q >>> 0 < 2 ? 2 : q + 4 & -4;
  if (p >>> 0 > 1073741823) jb(); else r = p;
 } else r = 1073741807;
 p = Tq(r << 2) | 0;
 if (g | 0) Kg(p, o, g) | 0;
 if (i | 0) Kg(p + (g << 2) | 0, j, i) | 0;
 j = f - h | 0;
 f = j - g | 0;
 if (f | 0) Kg(p + (g << 2) + (i << 2) | 0, o + (g << 2) + (h << 2) | 0, f) | 0;
 if ((d | 0) != 1) Uq(o);
 c[b >> 2] = p;
 c[n >> 2] = r | -2147483648;
 r = j + i | 0;
 c[b + 4 >> 2] = r;
 c[m >> 2] = 0;
 vi(p + (r << 2) | 0, m);
 l = k;
 return;
}

function ct(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 g = b + 11 | 0;
 if ((a[g >> 0] | 0) < 0) {
  h = c[b >> 2] | 0;
  a[f >> 0] = 0;
  mh(h, f);
  c[b + 4 >> 2] = 0;
 } else {
  a[f >> 0] = 0;
  mh(b, f);
  a[g >> 0] = 0;
 }
 lt(b);
 c[b >> 2] = c[d >> 2];
 c[b + 4 >> 2] = c[d + 4 >> 2];
 c[b + 8 >> 2] = c[d + 8 >> 2];
 g = 0;
 while (1) {
  if ((g | 0) == 3) break;
  c[d + (g << 2) >> 2] = 0;
  g = g + 1 | 0;
 }
 g = b + 12 | 0;
 h = d + 12 | 0;
 d = g + 11 | 0;
 if ((a[d >> 0] | 0) < 0) {
  i = c[g >> 2] | 0;
  a[f >> 0] = 0;
  mh(i, f);
  c[b + 16 >> 2] = 0;
 } else {
  a[f >> 0] = 0;
  mh(g, f);
  a[d >> 0] = 0;
 }
 lt(g);
 c[g >> 2] = c[h >> 2];
 c[g + 4 >> 2] = c[h + 4 >> 2];
 c[g + 8 >> 2] = c[h + 8 >> 2];
 g = 0;
 while (1) {
  if ((g | 0) == 3) break;
  c[h + (g << 2) >> 2] = 0;
  g = g + 1 | 0;
 }
 l = e;
 return;
}

function Kd(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0;
 g = l;
 l = l + 128 | 0;
 h = g + 124 | 0;
 i = g;
 j = i;
 k = 3004;
 m = j + 124 | 0;
 do {
  c[j >> 2] = c[k >> 2];
  j = j + 4 | 0;
  k = k + 4 | 0;
 } while ((j | 0) < (m | 0));
 if ((d + -1 | 0) >>> 0 > 2147483646) if (!d) {
  n = h;
  o = 1;
  p = 4;
 } else {
  c[(Gd() | 0) >> 2] = 75;
  q = -1;
 } else {
  n = b;
  o = d;
  p = 4;
 }
 if ((p | 0) == 4) {
  p = -2 - n | 0;
  d = o >>> 0 > p >>> 0 ? p : o;
  c[i + 48 >> 2] = d;
  o = i + 20 | 0;
  c[o >> 2] = n;
  c[i + 44 >> 2] = n;
  p = n + d | 0;
  n = i + 16 | 0;
  c[n >> 2] = p;
  c[i + 28 >> 2] = p;
  p = Ld(i, e, f) | 0;
  if (!d) q = p; else {
   d = c[o >> 2] | 0;
   a[d + (((d | 0) == (c[n >> 2] | 0)) << 31 >> 31) >> 0] = 0;
   q = p;
  }
 }
 l = g;
 return q | 0;
}

function Qu(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0;
 d = c[a >> 2] | 0;
 e = a + 4 | 0;
 f = b + 4 | 0;
 g = c[e >> 2] | 0;
 while (1) {
  if ((g | 0) == (d | 0)) break;
  h = c[f >> 2] | 0;
  i = h + -16 | 0;
  j = g + -16 | 0;
  c[i >> 2] = 0;
  k = h + -12 | 0;
  c[k >> 2] = 0;
  l = c[g + -4 >> 2] | 0;
  c[h + -8 >> 2] = 0;
  c[h + -4 >> 2] = l;
  c[i >> 2] = c[j >> 2];
  i = g + -12 | 0;
  c[k >> 2] = c[i >> 2];
  k = g + -8 | 0;
  c[h + -8 >> 2] = c[k >> 2];
  c[k >> 2] = 0;
  c[i >> 2] = 0;
  c[j >> 2] = 0;
  c[f >> 2] = (c[f >> 2] | 0) + -16;
  g = j;
 }
 g = c[a >> 2] | 0;
 c[a >> 2] = c[f >> 2];
 c[f >> 2] = g;
 g = b + 8 | 0;
 d = c[e >> 2] | 0;
 c[e >> 2] = c[g >> 2];
 c[g >> 2] = d;
 d = a + 8 | 0;
 a = b + 12 | 0;
 g = c[d >> 2] | 0;
 c[d >> 2] = c[a >> 2];
 c[a >> 2] = g;
 c[b >> 2] = c[f >> 2];
 return;
}

function Iu(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0;
 d = c[a >> 2] | 0;
 e = a + 4 | 0;
 f = b + 4 | 0;
 g = c[e >> 2] | 0;
 while (1) {
  if ((g | 0) == (d | 0)) break;
  h = c[f >> 2] | 0;
  i = h + -16 | 0;
  j = g + -16 | 0;
  c[i >> 2] = 0;
  k = h + -12 | 0;
  c[k >> 2] = 0;
  l = c[g + -4 >> 2] | 0;
  c[h + -8 >> 2] = 0;
  c[h + -4 >> 2] = l;
  c[i >> 2] = c[j >> 2];
  i = g + -12 | 0;
  c[k >> 2] = c[i >> 2];
  k = g + -8 | 0;
  c[h + -8 >> 2] = c[k >> 2];
  c[k >> 2] = 0;
  c[i >> 2] = 0;
  c[j >> 2] = 0;
  c[f >> 2] = (c[f >> 2] | 0) + -16;
  g = j;
 }
 g = c[a >> 2] | 0;
 c[a >> 2] = c[f >> 2];
 c[f >> 2] = g;
 g = b + 8 | 0;
 d = c[e >> 2] | 0;
 c[e >> 2] = c[g >> 2];
 c[g >> 2] = d;
 d = a + 8 | 0;
 a = b + 12 | 0;
 g = c[d >> 2] | 0;
 c[d >> 2] = c[a >> 2];
 c[a >> 2] = g;
 c[b >> 2] = c[f >> 2];
 return;
}

function yh(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0;
 e = l;
 l = l + 16 | 0;
 f = e + 12 | 0;
 g = e + 8 | 0;
 h = e;
 vh(h, b);
 if (a[h >> 0] | 0) {
  qh(f, b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) | 0);
  i = Ji(f, 23164) | 0;
  Ki(f);
  j = b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) | 0;
  k = c[j + 24 >> 2] | 0;
  m = qg() | 0;
  n = j + 76 | 0;
  if (ph(m, c[n >> 2] | 0) | 0) {
   qh(f, j);
   m = Ji(f, 23108) | 0;
   o = qc[c[(c[m >> 2] | 0) + 28 >> 2] & 31](m, 32) | 0;
   Ki(f);
   m = o << 24 >> 24;
   c[n >> 2] = m;
   p = m;
  } else p = c[n >> 2] | 0;
  n = c[(c[i >> 2] | 0) + 16 >> 2] | 0;
  c[g >> 2] = k;
  c[f >> 2] = c[g >> 2];
  if (!(uc[n & 31](i, f, j, p & 255, d) | 0)) {
   d = b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) | 0;
   nh(d, c[d + 16 >> 2] | 5);
  }
 }
 wh(h);
 l = e;
 return b | 0;
}

function xh(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0;
 e = l;
 l = l + 16 | 0;
 f = e + 12 | 0;
 g = e + 8 | 0;
 h = e;
 vh(h, b);
 if (a[h >> 0] | 0) {
  qh(f, b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) | 0);
  i = Ji(f, 23164) | 0;
  Ki(f);
  j = b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) | 0;
  k = c[j + 24 >> 2] | 0;
  m = qg() | 0;
  n = j + 76 | 0;
  if (ph(m, c[n >> 2] | 0) | 0) {
   qh(f, j);
   m = Ji(f, 23108) | 0;
   o = qc[c[(c[m >> 2] | 0) + 28 >> 2] & 31](m, 32) | 0;
   Ki(f);
   m = o << 24 >> 24;
   c[n >> 2] = m;
   p = m;
  } else p = c[n >> 2] | 0;
  n = c[(c[i >> 2] | 0) + 12 >> 2] | 0;
  c[g >> 2] = k;
  c[f >> 2] = c[g >> 2];
  if (!(uc[n & 31](i, f, j, p & 255, d) | 0)) {
   d = b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) | 0;
   nh(d, c[d + 16 >> 2] | 5);
  }
 }
 wh(h);
 l = e;
 return b | 0;
}

function cd(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0;
 f = l;
 l = l + 16 | 0;
 g = f + 12 | 0;
 h = f;
 i = f + 8 | 0;
 vh(h, b);
 if (!(a[h >> 0] | 0)) {
  wh(h);
  l = f;
  return b | 0;
 }
 j = (c[b >> 2] | 0) + -12 | 0;
 c[i >> 2] = c[b + (c[j >> 2] | 0) + 24 >> 2];
 k = b + (c[j >> 2] | 0) | 0;
 j = c[k + 4 >> 2] | 0;
 m = d + e | 0;
 e = k + 76 | 0;
 n = c[e >> 2] | 0;
 if ((n | 0) == -1) {
  qh(g, k);
  o = Ji(g, 23108) | 0;
  p = qc[c[(c[o >> 2] | 0) + 28 >> 2] & 31](o, 32) | 0;
  Ki(g);
  o = p << 24 >> 24;
  c[e >> 2] = o;
  q = o;
 } else q = n;
 c[g >> 2] = c[i >> 2];
 if (ed(g, d, (j & 176 | 0) == 32 ? m : d, m, k, q & 255) | 0) {
  wh(h);
  l = f;
  return b | 0;
 }
 q = b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) | 0;
 nh(q, c[q + 16 >> 2] | 5);
 wh(h);
 l = f;
 return b | 0;
}

function Lk() {
 var b = 0, d = 0;
 if (!(a[20848] | 0)) if (iv(20848) | 0) {
  b = 23520;
  do {
   c[b >> 2] = 0;
   c[b + 4 >> 2] = 0;
   c[b + 8 >> 2] = 0;
   d = 0;
   while (1) {
    if ((d | 0) == 3) break;
    c[b + (d << 2) >> 2] = 0;
    d = d + 1 | 0;
   }
   b = b + 12 | 0;
  } while ((b | 0) != 23808);
 }
 hr(23520, 16487) | 0;
 hr(23532, 16495) | 0;
 hr(23544, 16504) | 0;
 hr(23556, 16510) | 0;
 hr(23568, 16516) | 0;
 hr(23580, 16520) | 0;
 hr(23592, 16525) | 0;
 hr(23604, 16530) | 0;
 hr(23616, 16537) | 0;
 hr(23628, 16547) | 0;
 hr(23640, 16555) | 0;
 hr(23652, 16564) | 0;
 hr(23664, 16573) | 0;
 hr(23676, 16577) | 0;
 hr(23688, 16581) | 0;
 hr(23700, 16585) | 0;
 hr(23712, 16516) | 0;
 hr(23724, 16589) | 0;
 hr(23736, 16593) | 0;
 hr(23748, 16597) | 0;
 hr(23760, 16601) | 0;
 hr(23772, 16605) | 0;
 hr(23784, 16609) | 0;
 hr(23796, 16613) | 0;
 return;
}

function vd(a) {
 a = a | 0;
 fb(1992, 20345);
 Wa(2008, 20350, 1, 1, 0);
 bb(2016, 20119, 1, -128, 127);
 bb(2032, 20124, 1, -128, 127);
 bb(2024, 20136, 1, 0, 255);
 bb(2040, 20150, 2, -32768, 32767);
 bb(2048, 20156, 2, 0, 65535);
 bb(2056, 20355, 4, -2147483648, 2147483647);
 bb(2064, 20359, 4, 0, -1);
 bb(2072, 20372, 4, -2147483648, 2147483647);
 bb(2080, 20377, 4, 0, -1);
 $a(2088, 20401, 4);
 $a(2096, 20513, 8);
 db(280, 19728);
 db(312, 11333);
 eb(336, 4, 11366);
 _a(360, 11379);
 cb(368, 0, 11395);
 cb(376, 0, 11425);
 cb(384, 1, 11462);
 cb(392, 2, 11501);
 cb(400, 3, 11532);
 cb(408, 4, 11572);
 cb(416, 5, 11601);
 cb(424, 4, 11639);
 cb(432, 5, 11669);
 cb(376, 0, 11708);
 cb(384, 1, 11740);
 cb(392, 2, 11773);
 cb(400, 3, 11806);
 cb(408, 4, 11840);
 cb(416, 5, 11873);
 cb(440, 6, 11907);
 cb(448, 7, 11938);
 cb(456, 7, 11970);
 return;
}

function Mt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 f = l;
 l = l + 48 | 0;
 g = f + 24 | 0;
 h = f;
 i = f + 12 | 0;
 if ((d - b | 0) > 2) if ((a[b >> 0] | 0) == 116) if ((a[b + 1 >> 0] | 0) == 119) {
  j = b + 2 | 0;
  k = kt(j, d, e) | 0;
  if ((k | 0) == (j | 0)) m = b; else {
   j = e + 4 | 0;
   d = c[j >> 2] | 0;
   if ((c[e >> 2] | 0) == (d | 0)) m = b; else {
    _s(i, d + -24 | 0);
    Ls(i, 0, 19104) | 0;
    c[h >> 2] = c[i >> 2];
    c[h + 4 >> 2] = c[i + 4 >> 2];
    c[h + 8 >> 2] = c[i + 8 >> 2];
    d = 0;
    while (1) {
     if ((d | 0) == 3) break;
     c[i + (d << 2) >> 2] = 0;
     d = d + 1 | 0;
    }
    bt(g, h);
    ct((c[j >> 2] | 0) + -24 | 0, g);
    ns(g);
    Es(h);
    Es(i);
    m = k;
   }
  }
 } else m = b; else m = b; else m = b;
 l = f;
 return m | 0;
}

function ul() {
 var b = 0, d = 0;
 if (!(a[20928] | 0)) if (iv(20928) | 0) {
  b = 24332;
  do {
   c[b >> 2] = 0;
   c[b + 4 >> 2] = 0;
   c[b + 8 >> 2] = 0;
   d = 0;
   while (1) {
    if ((d | 0) == 3) break;
    c[b + (d << 2) >> 2] = 0;
    d = d + 1 | 0;
   }
   b = b + 12 | 0;
  } while ((b | 0) != 24620);
 }
 sr(24332, 7828) | 0;
 sr(24344, 7860) | 0;
 sr(24356, 7896) | 0;
 sr(24368, 7920) | 0;
 sr(24380, 7944) | 0;
 sr(24392, 7960) | 0;
 sr(24404, 7980) | 0;
 sr(24416, 8e3) | 0;
 sr(24428, 8028) | 0;
 sr(24440, 8068) | 0;
 sr(24452, 8100) | 0;
 sr(24464, 8136) | 0;
 sr(24476, 8172) | 0;
 sr(24488, 8188) | 0;
 sr(24500, 8204) | 0;
 sr(24512, 8220) | 0;
 sr(24524, 7944) | 0;
 sr(24536, 8236) | 0;
 sr(24548, 8252) | 0;
 sr(24560, 8268) | 0;
 sr(24572, 8284) | 0;
 sr(24584, 8300) | 0;
 sr(24596, 8316) | 0;
 sr(24608, 8332) | 0;
 return;
}

function Bv(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0;
 f = b + e | 0;
 d = d & 255;
 if ((e | 0) >= 67) {
  while (b & 3) {
   a[b >> 0] = d;
   b = b + 1 | 0;
  }
  g = f & -4 | 0;
  h = g - 64 | 0;
  i = d | d << 8 | d << 16 | d << 24;
  while ((b | 0) <= (h | 0)) {
   c[b >> 2] = i;
   c[b + 4 >> 2] = i;
   c[b + 8 >> 2] = i;
   c[b + 12 >> 2] = i;
   c[b + 16 >> 2] = i;
   c[b + 20 >> 2] = i;
   c[b + 24 >> 2] = i;
   c[b + 28 >> 2] = i;
   c[b + 32 >> 2] = i;
   c[b + 36 >> 2] = i;
   c[b + 40 >> 2] = i;
   c[b + 44 >> 2] = i;
   c[b + 48 >> 2] = i;
   c[b + 52 >> 2] = i;
   c[b + 56 >> 2] = i;
   c[b + 60 >> 2] = i;
   b = b + 64 | 0;
  }
  while ((b | 0) < (g | 0)) {
   c[b >> 2] = i;
   b = b + 4 | 0;
  }
 }
 while ((b | 0) < (f | 0)) {
  a[b >> 0] = d;
  b = b + 1 | 0;
 }
 return f - e | 0;
}

function St(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 if ((b | 0) == (d | 0)) h = b; else {
  i = $s(b, d, e) | 0;
  if ((i | 0) == (b | 0)) h = b; else {
   j = Zs(i, d, e) | 0;
   if ((j | 0) == (i | 0)) h = i; else {
    i = e + 4 | 0;
    d = c[i >> 2] | 0;
    if (((d - (c[e >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) h = b; else {
     _s(g, d + -24 | 0);
     d = c[i >> 2] | 0;
     b = d + -24 | 0;
     e = d;
     while (1) {
      if ((e | 0) == (b | 0)) break;
      k = e + -24 | 0;
      c[i >> 2] = k;
      ns(k);
      e = c[i >> 2] | 0;
     }
     i = a[g + 11 >> 0] | 0;
     e = i << 24 >> 24 < 0;
     qs(d + -48 | 0, e ? c[g >> 2] | 0 : g, e ? c[g + 4 >> 2] | 0 : i & 255) | 0;
     Es(g);
     h = j;
    }
   }
  }
 }
 l = f;
 return h | 0;
}

function Nu(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0;
 g = l;
 l = l + 16 | 0;
 h = g;
 i = b + 11 | 0;
 j = a[i >> 0] | 0;
 k = j << 24 >> 24 < 0;
 if (k) m = c[b + 4 >> 2] | 0; else m = j & 255;
 if (m >>> 0 < d >>> 0) $q(b);
 if (k) n = (c[b + 8 >> 2] & 2147483647) + -1 | 0; else n = 10;
 if ((n - m | 0) >>> 0 < f >>> 0) As(b, n, m + f - n | 0, m, d, 0, f, e); else if (f | 0) {
  if (k) o = c[b >> 2] | 0; else o = b;
  k = m - d | 0;
  n = o + d | 0;
  if (!k) p = e; else {
   er(n + f | 0, n, k) | 0;
   p = n >>> 0 <= e >>> 0 & (o + m | 0) >>> 0 > e >>> 0 ? e + f | 0 : e;
  }
  er(n, p, f) | 0;
  p = m + f | 0;
  if ((a[i >> 0] | 0) < 0) c[b + 4 >> 2] = p; else a[i >> 0] = p;
  a[h >> 0] = 0;
  mh(o + p | 0, h);
 }
 l = g;
 return b | 0;
}

function Of(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 e = l;
 l = l + 32 | 0;
 f = e;
 a : do if (!(Nf(d) | 0)) {
  g = (d | 0) != 0;
  h = 0;
  i = 0;
  do {
   j = 1 << i & a;
   if (g & (j | 0) == 0) k = c[d + (i << 2) >> 2] | 0; else k = Kf(i, j | 0 ? b : 27108) | 0;
   h = h + ((k | 0) != 0 & 1) | 0;
   c[f + (i << 2) >> 2] = k;
   i = i + 1 | 0;
  } while ((i | 0) != 6);
  switch (h | 0) {
  case 0:
   {
    m = 22004;
    break a;
    break;
   }
  case 1:
   {
    if ((c[f >> 2] | 0) == 2932) {
     m = 2980;
     break a;
    }
    break;
   }
  default:
   {}
  }
  m = d;
 } else {
  i = 0;
  do {
   if (1 << i & a | 0) c[d + (i << 2) >> 2] = Kf(i, b) | 0;
   i = i + 1 | 0;
  } while ((i | 0) != 6);
  m = d;
 } while (0);
 l = e;
 return m | 0;
}

function Dd(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 32 | 0;
 g = f;
 h = f + 16 | 0;
 c[h >> 2] = d;
 i = h + 4 | 0;
 j = b + 48 | 0;
 k = c[j >> 2] | 0;
 c[i >> 2] = e - ((k | 0) != 0 & 1);
 m = b + 44 | 0;
 c[h + 8 >> 2] = c[m >> 2];
 c[h + 12 >> 2] = k;
 c[g >> 2] = c[b + 60 >> 2];
 c[g + 4 >> 2] = h;
 c[g + 8 >> 2] = 2;
 h = Fd(Ka(145, g | 0) | 0) | 0;
 if ((h | 0) < 1) {
  c[b >> 2] = c[b >> 2] | h & 48 ^ 16;
  n = h;
 } else {
  g = c[i >> 2] | 0;
  if (h >>> 0 > g >>> 0) {
   i = c[m >> 2] | 0;
   m = b + 4 | 0;
   c[m >> 2] = i;
   k = i;
   c[b + 8 >> 2] = k + (h - g);
   if (!(c[j >> 2] | 0)) n = e; else {
    c[m >> 2] = k + 1;
    a[d + (e + -1) >> 0] = a[k >> 0] | 0;
    n = e;
   }
  } else n = h;
 }
 l = f;
 return n | 0;
}

function Ss(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 d = l;
 l = l + 32 | 0;
 e = d;
 f = a + 4 | 0;
 g = ((c[f >> 2] | 0) - (c[a >> 2] | 0) >> 4) + 1 | 0;
 h = Ou(a) | 0;
 if (h >>> 0 < g >>> 0) np(a); else {
  i = c[a >> 2] | 0;
  j = (c[a + 8 >> 2] | 0) - i | 0;
  k = j >> 3;
  Pu(e, j >> 4 >>> 0 < h >>> 1 >>> 0 ? (k >>> 0 < g >>> 0 ? g : k) : h, (c[f >> 2] | 0) - i >> 4, a + 12 | 0);
  i = e + 8 | 0;
  f = c[i >> 2] | 0;
  c[f >> 2] = 0;
  h = f + 4 | 0;
  c[h >> 2] = 0;
  k = c[b + 12 >> 2] | 0;
  c[f + 8 >> 2] = 0;
  c[f + 12 >> 2] = k;
  c[f >> 2] = c[b >> 2];
  k = b + 4 | 0;
  c[h >> 2] = c[k >> 2];
  h = b + 8 | 0;
  c[f + 8 >> 2] = c[h >> 2];
  c[h >> 2] = 0;
  c[k >> 2] = 0;
  c[b >> 2] = 0;
  c[i >> 2] = f + 16;
  Qu(a, e);
  Ru(e);
  l = d;
  return;
 }
}

function bk(b, c, d) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0;
 if (!(d & 2048)) e = b; else {
  a[b >> 0] = 43;
  e = b + 1 | 0;
 }
 if (!(d & 1024)) f = e; else {
  a[e >> 0] = 35;
  f = e + 1 | 0;
 }
 e = d & 260;
 b = (d & 16384 | 0) != 0;
 d = (e | 0) == 260;
 if (d) {
  g = 0;
  h = f;
 } else {
  a[f >> 0] = 46;
  a[f + 1 >> 0] = 42;
  g = 1;
  h = f + 2 | 0;
 }
 f = c;
 c = h;
 while (1) {
  h = a[f >> 0] | 0;
  if (!(h << 24 >> 24)) break;
  a[c >> 0] = h;
  f = f + 1 | 0;
  c = c + 1 | 0;
 }
 a : do switch (e & 511) {
 case 4:
  {
   i = b ? 70 : 102;
   break;
  }
 case 256:
  {
   i = b ? 69 : 101;
   break;
  }
 default:
  if (d) {
   i = b ? 65 : 97;
   break a;
  } else {
   i = b ? 71 : 103;
   break a;
  }
 } while (0);
 a[c >> 0] = i;
 return g | 0;
}

function ej(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;
 g = l;
 l = l + 16 | 0;
 h = g;
 do if ((b | 0) == (d | 0)) {
  c[e >> 2] = 4;
  i = 0;
  j = 0;
 } else {
  if ((a[b >> 0] | 0) == 45) {
   c[e >> 2] = 4;
   i = 0;
   j = 0;
   break;
  }
  k = c[(Gd() | 0) >> 2] | 0;
  c[(Gd() | 0) >> 2] = 0;
  m = Vf(b, h, f, Mi() | 0) | 0;
  n = z;
  o = c[(Gd() | 0) >> 2] | 0;
  if (!o) c[(Gd() | 0) >> 2] = k;
  if ((c[h >> 2] | 0) == (d | 0)) if ((o | 0) == 34) {
   p = -1;
   q = -1;
   r = 8;
  } else {
   s = m;
   t = n;
  } else {
   p = 0;
   q = 0;
   r = 8;
  }
  if ((r | 0) == 8) {
   c[e >> 2] = 4;
   s = p;
   t = q;
  }
  i = t;
  j = s;
 } while (0);
 z = i;
 l = g;
 return j | 0;
}

function Gl(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0;
 i = l;
 l = l + 16 | 0;
 j = i + 4 | 0;
 k = i;
 m = b + 8 | 0;
 b = pc[c[(c[m >> 2] | 0) + 8 >> 2] & 63](m) | 0;
 m = a[b + 8 + 3 >> 0] | 0;
 if (m << 24 >> 24 < 0) n = c[b + 4 >> 2] | 0; else n = m & 255;
 m = a[b + 20 + 3 >> 0] | 0;
 if (m << 24 >> 24 < 0) o = c[b + 16 >> 2] | 0; else o = m & 255;
 do if ((n | 0) == (0 - o | 0)) c[g >> 2] = c[g >> 2] | 4; else {
  c[k >> 2] = c[f >> 2];
  c[j >> 2] = c[k >> 2];
  m = (Qj(e, j, b, b + 24 | 0, h, g, 0) | 0) - b | 0;
  p = c[d >> 2] | 0;
  if ((p | 0) == 12 & (m | 0) == 0) {
   c[d >> 2] = 0;
   break;
  }
  if ((p | 0) < 12 & (m | 0) == 12) c[d >> 2] = p + 12;
 } while (0);
 l = i;
 return;
}

function Xk(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0;
 i = l;
 l = l + 16 | 0;
 j = i + 4 | 0;
 k = i;
 m = b + 8 | 0;
 b = pc[c[(c[m >> 2] | 0) + 8 >> 2] & 63](m) | 0;
 m = a[b + 11 >> 0] | 0;
 if (m << 24 >> 24 < 0) n = c[b + 4 >> 2] | 0; else n = m & 255;
 m = a[b + 12 + 11 >> 0] | 0;
 if (m << 24 >> 24 < 0) o = c[b + 16 >> 2] | 0; else o = m & 255;
 do if ((n | 0) == (0 - o | 0)) c[g >> 2] = c[g >> 2] | 4; else {
  c[k >> 2] = c[f >> 2];
  c[j >> 2] = c[k >> 2];
  m = (pj(e, j, b, b + 24 | 0, h, g, 0) | 0) - b | 0;
  p = c[d >> 2] | 0;
  if ((p | 0) == 12 & (m | 0) == 0) {
   c[d >> 2] = 0;
   break;
  }
  if ((p | 0) < 12 & (m | 0) == 12) c[d >> 2] = p + 12;
 } while (0);
 l = i;
 return;
}

function fr(b, d, e, f, g, h, i, j) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 var k = 0, m = 0, n = 0, o = 0, p = 0, q = 0;
 k = l;
 l = l + 16 | 0;
 m = k;
 if ((-18 - d | 0) >>> 0 < e >>> 0) _q(b);
 if ((a[b + 11 >> 0] | 0) < 0) n = c[b >> 2] | 0; else n = b;
 if (d >>> 0 < 2147483623) {
  o = e + d | 0;
  e = d << 1;
  p = o >>> 0 < e >>> 0 ? e : o;
  q = p >>> 0 < 11 ? 11 : p + 16 & -16;
 } else q = -17;
 p = Tq(q) | 0;
 if (g | 0) sg(p, n, g) | 0;
 if (i | 0) sg(p + g | 0, j, i) | 0;
 j = f - h | 0;
 f = j - g | 0;
 if (f | 0) sg(p + g + i | 0, n + g + h | 0, f) | 0;
 if ((d | 0) != 10) Uq(n);
 c[b >> 2] = p;
 c[b + 8 >> 2] = q | -2147483648;
 q = j + i | 0;
 c[b + 4 >> 2] = q;
 a[m >> 0] = 0;
 mh(p + q | 0, m);
 l = k;
 return;
}

function As(b, d, e, f, g, h, i, j) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 j = j | 0;
 var k = 0, m = 0, n = 0, o = 0, p = 0, q = 0;
 k = l;
 l = l + 16 | 0;
 m = k;
 if ((-18 - d | 0) >>> 0 < e >>> 0) _q(b);
 if ((a[b + 11 >> 0] | 0) < 0) n = c[b >> 2] | 0; else n = b;
 if (d >>> 0 < 2147483623) {
  o = e + d | 0;
  e = d << 1;
  p = o >>> 0 < e >>> 0 ? e : o;
  q = p >>> 0 < 11 ? 11 : p + 16 & -16;
 } else q = -17;
 p = Bs(q) | 0;
 if (g | 0) sg(p, n, g) | 0;
 if (i | 0) sg(p + g | 0, j, i) | 0;
 j = f - h | 0;
 f = j - g | 0;
 if (f | 0) sg(p + g + i | 0, n + g + h | 0, f) | 0;
 if ((d | 0) != 10) Cs(n);
 c[b >> 2] = p;
 c[b + 8 >> 2] = q | -2147483648;
 q = j + i | 0;
 c[b + 4 >> 2] = q;
 a[m >> 0] = 0;
 mh(p + q | 0, m);
 l = k;
 return;
}

function pk(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 b = l;
 l = l + 192 | 0;
 h = b;
 i = b + 176 | 0;
 j = b + 156 | 0;
 k = b + 4 | 0;
 m = b + 152 | 0;
 a[i >> 0] = a[16211] | 0;
 a[i + 1 >> 0] = a[16212] | 0;
 a[i + 2 >> 0] = a[16213] | 0;
 a[i + 3 >> 0] = a[16214] | 0;
 a[i + 4 >> 0] = a[16215] | 0;
 a[i + 5 >> 0] = a[16216] | 0;
 n = Mi() | 0;
 c[h >> 2] = g;
 g = $j(j, 20, n, i, h) | 0;
 i = j + g | 0;
 n = ak(j, i, e) | 0;
 qh(h, e);
 o = Ji(h, 23140) | 0;
 Ki(h);
 sc[c[(c[o >> 2] | 0) + 48 >> 2] & 7](o, j, i, k) | 0;
 o = k + (g << 2) | 0;
 c[m >> 2] = c[d >> 2];
 c[h >> 2] = c[m >> 2];
 m = qk(h, k, (n | 0) == (i | 0) ? o : k + (n - j << 2) | 0, o, e, f) | 0;
 l = b;
 return m | 0;
}

function lk(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0;
 b = l;
 l = l + 128 | 0;
 h = b;
 i = b + 112 | 0;
 j = b + 100 | 0;
 k = b + 16 | 0;
 m = b + 12 | 0;
 n = b + 4 | 0;
 o = b + 8 | 0;
 a[i >> 0] = a[16219] | 0;
 a[i + 1 >> 0] = a[16220] | 0;
 a[i + 2 >> 0] = a[16221] | 0;
 a[i + 3 >> 0] = a[16222] | 0;
 a[i + 4 >> 0] = a[16223] | 0;
 a[i + 5 >> 0] = a[16224] | 0;
 ek(i + 1 | 0, 20173, 0, c[e + 4 >> 2] | 0);
 p = Mi() | 0;
 c[h >> 2] = g;
 g = j + ($j(j, 12, p, i, h) | 0) | 0;
 i = ak(j, g, e) | 0;
 qh(h, e);
 tk(j, i, g, k, m, n, h);
 Ki(h);
 c[o >> 2] = c[d >> 2];
 d = c[m >> 2] | 0;
 m = c[n >> 2] | 0;
 c[h >> 2] = c[o >> 2];
 o = qk(h, k, d, m, e, f) | 0;
 l = b;
 return o | 0;
}

function jk(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0;
 b = l;
 l = l + 128 | 0;
 h = b;
 i = b + 122 | 0;
 j = b + 108 | 0;
 k = b + 16 | 0;
 m = b + 12 | 0;
 n = b + 4 | 0;
 o = b + 8 | 0;
 a[i >> 0] = a[16219] | 0;
 a[i + 1 >> 0] = a[16220] | 0;
 a[i + 2 >> 0] = a[16221] | 0;
 a[i + 3 >> 0] = a[16222] | 0;
 a[i + 4 >> 0] = a[16223] | 0;
 a[i + 5 >> 0] = a[16224] | 0;
 ek(i + 1 | 0, 20173, 1, c[e + 4 >> 2] | 0);
 p = Mi() | 0;
 c[h >> 2] = g;
 g = j + ($j(j, 13, p, i, h) | 0) | 0;
 i = ak(j, g, e) | 0;
 qh(h, e);
 tk(j, i, g, k, m, n, h);
 Ki(h);
 c[o >> 2] = c[d >> 2];
 d = c[m >> 2] | 0;
 m = c[n >> 2] | 0;
 c[h >> 2] = c[o >> 2];
 o = qk(h, k, d, m, e, f) | 0;
 l = b;
 return o | 0;
}

function Wj(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0;
 b = l;
 l = l + 64 | 0;
 h = b;
 i = b + 52 | 0;
 j = b + 40 | 0;
 k = b + 16 | 0;
 m = b + 12 | 0;
 n = b + 4 | 0;
 o = b + 8 | 0;
 a[i >> 0] = a[16219] | 0;
 a[i + 1 >> 0] = a[16220] | 0;
 a[i + 2 >> 0] = a[16221] | 0;
 a[i + 3 >> 0] = a[16222] | 0;
 a[i + 4 >> 0] = a[16223] | 0;
 a[i + 5 >> 0] = a[16224] | 0;
 ek(i + 1 | 0, 20173, 0, c[e + 4 >> 2] | 0);
 p = Mi() | 0;
 c[h >> 2] = g;
 g = j + ($j(j, 12, p, i, h) | 0) | 0;
 i = ak(j, g, e) | 0;
 qh(h, e);
 fk(j, i, g, k, m, n, h);
 Ki(h);
 c[o >> 2] = c[d >> 2];
 d = c[m >> 2] | 0;
 m = c[n >> 2] | 0;
 c[h >> 2] = c[o >> 2];
 o = ed(h, k, d, m, e, f) | 0;
 l = b;
 return o | 0;
}

function Uj(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0;
 b = l;
 l = l + 64 | 0;
 h = b;
 i = b + 52 | 0;
 j = b + 39 | 0;
 k = b + 16 | 0;
 m = b + 12 | 0;
 n = b + 4 | 0;
 o = b + 8 | 0;
 a[i >> 0] = a[16219] | 0;
 a[i + 1 >> 0] = a[16220] | 0;
 a[i + 2 >> 0] = a[16221] | 0;
 a[i + 3 >> 0] = a[16222] | 0;
 a[i + 4 >> 0] = a[16223] | 0;
 a[i + 5 >> 0] = a[16224] | 0;
 ek(i + 1 | 0, 20173, 1, c[e + 4 >> 2] | 0);
 p = Mi() | 0;
 c[h >> 2] = g;
 g = j + ($j(j, 13, p, i, h) | 0) | 0;
 i = ak(j, g, e) | 0;
 qh(h, e);
 fk(j, i, g, k, m, n, h);
 Ki(h);
 c[o >> 2] = c[d >> 2];
 d = c[m >> 2] | 0;
 m = c[n >> 2] | 0;
 c[h >> 2] = c[o >> 2];
 o = ed(h, k, d, m, e, f) | 0;
 l = b;
 return o | 0;
}

function Ze(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 if ((c[d + 76 >> 2] | 0) < 0) e = 3; else if (!(Nd(d) | 0)) e = 3; else {
  f = b & 255;
  g = b & 255;
  if ((g | 0) == (a[d + 75 >> 0] | 0)) e = 10; else {
   h = d + 20 | 0;
   i = c[h >> 2] | 0;
   if (i >>> 0 < (c[d + 16 >> 2] | 0) >>> 0) {
    c[h >> 2] = i + 1;
    a[i >> 0] = f;
    j = g;
   } else e = 10;
  }
  if ((e | 0) == 10) j = se(d, b) | 0;
  Od(d);
  k = j;
 }
 do if ((e | 0) == 3) {
  j = b & 255;
  g = b & 255;
  if ((g | 0) != (a[d + 75 >> 0] | 0)) {
   f = d + 20 | 0;
   i = c[f >> 2] | 0;
   if (i >>> 0 < (c[d + 16 >> 2] | 0) >>> 0) {
    c[f >> 2] = i + 1;
    a[i >> 0] = j;
    k = g;
    break;
   }
  }
  k = se(d, b) | 0;
 } while (0);
 return k | 0;
}

function _j(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 b = l;
 l = l + 80 | 0;
 h = b;
 i = b + 68 | 0;
 j = b + 48 | 0;
 k = b + 8 | 0;
 m = b + 4 | 0;
 a[i >> 0] = a[16211] | 0;
 a[i + 1 >> 0] = a[16212] | 0;
 a[i + 2 >> 0] = a[16213] | 0;
 a[i + 3 >> 0] = a[16214] | 0;
 a[i + 4 >> 0] = a[16215] | 0;
 a[i + 5 >> 0] = a[16216] | 0;
 n = Mi() | 0;
 c[h >> 2] = g;
 g = $j(j, 20, n, i, h) | 0;
 i = j + g | 0;
 n = ak(j, i, e) | 0;
 qh(h, e);
 o = Ji(h, 23108) | 0;
 Ki(h);
 sc[c[(c[o >> 2] | 0) + 32 >> 2] & 7](o, j, i, k) | 0;
 o = k + g | 0;
 c[m >> 2] = c[d >> 2];
 c[h >> 2] = c[m >> 2];
 m = ed(h, k, (n | 0) == (i | 0) ? o : k + (n - j) | 0, o, e, f) | 0;
 l = b;
 return m | 0;
}

function at(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 h = 0;
 while (1) {
  if ((h | 0) == 3) break;
  c[b + (h << 2) >> 2] = 0;
  h = h + 1 | 0;
 }
 h = d + 11 | 0;
 i = a[h >> 0] | 0;
 j = i << 24 >> 24 < 0 ? c[d + 4 >> 2] | 0 : i & 255;
 i = lh(e) | 0;
 k = (a[h >> 0] | 0) < 0 ? c[d >> 2] | 0 : d;
 d = j + i | 0;
 if (d >>> 0 > 4294967279) _q(b);
 if (d >>> 0 < 11) {
  a[b + 11 >> 0] = j;
  m = b;
 } else {
  h = d + 16 & -16;
  d = Bs(h) | 0;
  c[b >> 2] = d;
  c[b + 8 >> 2] = h | -2147483648;
  c[b + 4 >> 2] = j;
  m = d;
 }
 sg(m, k, j) | 0;
 a[g >> 0] = 0;
 mh(m + j | 0, g);
 qs(b, e, i) | 0;
 l = f;
 return;
}

function mt(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 h = 0;
 while (1) {
  if ((h | 0) == 3) break;
  c[b + (h << 2) >> 2] = 0;
  h = h + 1 | 0;
 }
 h = lh(d) | 0;
 i = e + 11 | 0;
 j = a[i >> 0] | 0;
 k = j << 24 >> 24 < 0 ? c[e + 4 >> 2] | 0 : j & 255;
 j = k + h | 0;
 if (j >>> 0 > 4294967279) _q(b);
 if (j >>> 0 < 11) {
  a[b + 11 >> 0] = h;
  m = b;
 } else {
  n = j + 16 & -16;
  j = Bs(n) | 0;
  c[b >> 2] = j;
  c[b + 8 >> 2] = n | -2147483648;
  c[b + 4 >> 2] = h;
  m = j;
 }
 sg(m, d, h) | 0;
 a[g >> 0] = 0;
 mh(m + h | 0, g);
 qs(b, (a[i >> 0] | 0) < 0 ? c[e >> 2] | 0 : e, k) | 0;
 l = f;
 return;
}

function mp(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 h = 0;
 while (1) {
  if ((h | 0) == 3) break;
  c[b + (h << 2) >> 2] = 0;
  h = h + 1 | 0;
 }
 h = lh(d) | 0;
 i = e + 11 | 0;
 j = a[i >> 0] | 0;
 k = j << 24 >> 24 < 0 ? c[e + 4 >> 2] | 0 : j & 255;
 j = k + h | 0;
 if (j >>> 0 > 4294967279) _q(b);
 if (j >>> 0 < 11) {
  a[b + 11 >> 0] = h;
  m = b;
 } else {
  n = j + 16 & -16;
  j = Tq(n) | 0;
  c[b >> 2] = j;
  c[b + 8 >> 2] = n | -2147483648;
  c[b + 4 >> 2] = h;
  m = j;
 }
 sg(m, d, h) | 0;
 a[g >> 0] = 0;
 mh(m + h | 0, g);
 lr(b, (a[i >> 0] | 0) < 0 ? c[e >> 2] | 0 : e, k) | 0;
 l = f;
 return;
}

function Qc(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 e = l;
 l = l + 2512 | 0;
 f = e + 2508 | 0;
 g = e + 8 | 0;
 h = e;
 i = Tq(16) | 0;
 c[g >> 2] = i;
 c[g + 8 >> 2] = -2147483632;
 c[g + 4 >> 2] = 12;
 j = i;
 k = 11320;
 m = j + 12 | 0;
 do {
  a[j >> 0] = a[k >> 0] | 0;
  j = j + 1 | 0;
  k = k + 1 | 0;
 } while ((j | 0) < (m | 0));
 a[i + 12 >> 0] = 0;
 Xq(f, g);
 if ((a[g + 11 >> 0] | 0) < 0) Uq(c[g >> 2] | 0);
 i = Zq(f) | 0;
 c[g >> 2] = i;
 k = 1;
 j = i;
 do {
  j = (O(j >>> 30 ^ j, 1812433253) | 0) + k | 0;
  c[g + (k << 2) >> 2] = j;
  k = k + 1 | 0;
 } while ((k | 0) != 624);
 c[g + 2496 >> 2] = 0;
 c[h >> 2] = b;
 c[h + 4 >> 2] = d;
 d = td(h, g, h) | 0;
 Yq(f);
 l = e;
 return d | 0;
}

function kj(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 g = l;
 l = l + 16 | 0;
 h = g;
 do if ((b | 0) == (d | 0)) {
  c[e >> 2] = 4;
  i = 0;
 } else {
  if ((a[b >> 0] | 0) == 45) {
   c[e >> 2] = 4;
   i = 0;
   break;
  }
  j = c[(Gd() | 0) >> 2] | 0;
  c[(Gd() | 0) >> 2] = 0;
  k = Vf(b, h, f, Mi() | 0) | 0;
  m = z;
  n = c[(Gd() | 0) >> 2] | 0;
  if (!n) c[(Gd() | 0) >> 2] = j;
  do if ((c[h >> 2] | 0) == (d | 0)) if (m >>> 0 > 0 | (m | 0) == 0 & k >>> 0 > 65535 | (n | 0) == 34) {
   c[e >> 2] = 4;
   o = -1;
   break;
  } else {
   o = k & 65535;
   break;
  } else {
   c[e >> 2] = 4;
   o = 0;
  } while (0);
  i = o;
 } while (0);
 l = g;
 return i | 0;
}

function ij(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 g = l;
 l = l + 16 | 0;
 h = g;
 do if ((b | 0) == (d | 0)) {
  c[e >> 2] = 4;
  i = 0;
 } else {
  if ((a[b >> 0] | 0) == 45) {
   c[e >> 2] = 4;
   i = 0;
   break;
  }
  j = c[(Gd() | 0) >> 2] | 0;
  c[(Gd() | 0) >> 2] = 0;
  k = Vf(b, h, f, Mi() | 0) | 0;
  m = z;
  n = c[(Gd() | 0) >> 2] | 0;
  if (!n) c[(Gd() | 0) >> 2] = j;
  do if ((c[h >> 2] | 0) == (d | 0)) if (m >>> 0 > 0 | (m | 0) == 0 & k >>> 0 > 4294967295 | (n | 0) == 34) {
   c[e >> 2] = 4;
   o = -1;
   break;
  } else {
   o = k;
   break;
  } else {
   c[e >> 2] = 4;
   o = 0;
  } while (0);
  i = o;
 } while (0);
 l = g;
 return i | 0;
}

function gj(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 g = l;
 l = l + 16 | 0;
 h = g;
 do if ((b | 0) == (d | 0)) {
  c[e >> 2] = 4;
  i = 0;
 } else {
  if ((a[b >> 0] | 0) == 45) {
   c[e >> 2] = 4;
   i = 0;
   break;
  }
  j = c[(Gd() | 0) >> 2] | 0;
  c[(Gd() | 0) >> 2] = 0;
  k = Vf(b, h, f, Mi() | 0) | 0;
  m = z;
  n = c[(Gd() | 0) >> 2] | 0;
  if (!n) c[(Gd() | 0) >> 2] = j;
  do if ((c[h >> 2] | 0) == (d | 0)) if (m >>> 0 > 0 | (m | 0) == 0 & k >>> 0 > 4294967295 | (n | 0) == 34) {
   c[e >> 2] = 4;
   o = -1;
   break;
  } else {
   o = k;
   break;
  } else {
   c[e >> 2] = 4;
   o = 0;
  } while (0);
  i = o;
 } while (0);
 l = g;
 return i | 0;
}

function Vl(a, b, d, e, f, g, h) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0;
 e = l;
 l = l + 416 | 0;
 d = e + 8 | 0;
 i = e;
 c[i >> 2] = d + 400;
 Wl(a + 8 | 0, d, i, f, g, h);
 h = c[i >> 2] | 0;
 i = d;
 d = c[b >> 2] | 0;
 while (1) {
  if ((i | 0) == (h | 0)) break;
  b = c[i >> 2] | 0;
  if (!d) j = 0; else {
   g = d + 24 | 0;
   f = c[g >> 2] | 0;
   if ((f | 0) == (c[d + 28 >> 2] | 0)) {
    a = c[(c[d >> 2] | 0) + 52 >> 2] | 0;
    k = Jg(b) | 0;
    m = qc[a & 31](d, k) | 0;
   } else {
    c[g >> 2] = f + 4;
    c[f >> 2] = b;
    m = Jg(b) | 0;
   }
   b = rh(m, Ig() | 0) | 0;
   j = b ? 0 : d;
  }
  i = i + 4 | 0;
  d = j;
 }
 l = e;
 return d | 0;
}

function Pl(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 112 | 0;
 e = f + 4 | 0;
 j = f;
 c[j >> 2] = e + 100;
 Ql(b + 8 | 0, e, j, g, h, i);
 i = c[j >> 2] | 0;
 j = e;
 e = c[d >> 2] | 0;
 while (1) {
  if ((j | 0) == (i | 0)) break;
  d = a[j >> 0] | 0;
  if (!e) k = 0; else {
   h = e + 24 | 0;
   g = c[h >> 2] | 0;
   if ((g | 0) == (c[e + 28 >> 2] | 0)) {
    b = c[(c[e >> 2] | 0) + 52 >> 2] | 0;
    m = rg(d) | 0;
    n = qc[b & 31](e, m) | 0;
   } else {
    c[h >> 2] = g + 1;
    a[g >> 0] = d;
    n = rg(d) | 0;
   }
   d = ph(n, qg() | 0) | 0;
   k = d ? 0 : e;
  }
  j = j + 1 | 0;
  e = k;
 }
 l = f;
 return e | 0;
}

function ld(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0;
 e = b + 44 | 0;
 f = c[e >> 2] | 0;
 g = c[b + 24 >> 2] | 0;
 if (f >>> 0 < g >>> 0) {
  c[e >> 2] = g;
  h = g;
 } else h = f;
 f = h;
 h = b + 12 | 0;
 g = c[h >> 2] | 0;
 if ((c[b + 8 >> 2] | 0) >>> 0 >= g >>> 0) {
  i = -1;
  return i | 0;
 }
 if ((d | 0) == -1) {
  c[h >> 2] = g + -1;
  c[b + 16 >> 2] = f;
  i = 0;
  return i | 0;
 }
 if (!(c[b + 48 >> 2] & 16)) {
  e = d & 255;
  j = g + -1 | 0;
  if ((a[j >> 0] | 0) == e << 24 >> 24) {
   k = e;
   l = j;
  } else {
   i = -1;
   return i | 0;
  }
 } else {
  k = d & 255;
  l = g + -1 | 0;
 }
 c[h >> 2] = l;
 c[b + 16 >> 2] = f;
 a[l >> 0] = k;
 i = d;
 return i | 0;
}

function vr(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 g = e + 4 | 0;
 c[f >> 2] = d;
 d = b + 8 | 0;
 h = d + 3 | 0;
 i = a[h >> 0] | 0;
 j = i << 24 >> 24 < 0;
 if (j) {
  k = c[b + 4 >> 2] | 0;
  m = (c[d >> 2] & 2147483647) + -1 | 0;
 } else {
  k = i & 255;
  m = 1;
 }
 if ((k | 0) == (m | 0)) {
  tr(b, m, 1, m, m, 0, 0);
  if ((a[h >> 0] | 0) < 0) n = 8; else n = 7;
 } else if (j) n = 8; else n = 7;
 if ((n | 0) == 7) {
  a[h >> 0] = k + 1;
  o = b;
 } else if ((n | 0) == 8) {
  n = c[b >> 2] | 0;
  c[b + 4 >> 2] = k + 1;
  o = n;
 }
 n = o + (k << 2) | 0;
 vi(n, f);
 c[g >> 2] = 0;
 vi(n + 4 | 0, g);
 l = e;
 return;
}

function dv(b, c) {
 b = b | 0;
 c = c | 0;
 var d = 0, e = 0, f = 0;
 a : do if ((b | 0) == (c | 0)) d = b; else {
  switch (a[b >> 0] | 0) {
  case 104:
   {
    e = b + 1 | 0;
    f = jt(e, c) | 0;
    if ((f | 0) == (e | 0) | (f | 0) == (c | 0)) {
     d = b;
     break a;
    }
    return ((a[f >> 0] | 0) == 95 ? f + 1 | 0 : b) | 0;
   }
  case 118:
   break;
  default:
   {
    d = b;
    break a;
   }
  }
  f = b + 1 | 0;
  e = jt(f, c) | 0;
  if ((e | 0) == (f | 0) | (e | 0) == (c | 0)) d = b; else if ((a[e >> 0] | 0) == 95) {
   f = e + 1 | 0;
   e = jt(f, c) | 0;
   if ((e | 0) == (f | 0) | (e | 0) == (c | 0)) d = b; else d = (a[e >> 0] | 0) == 95 ? e + 1 | 0 : b;
  } else d = b;
 } while (0);
 return d | 0;
}

function Xe(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;
 do if (!a) {
  if (!(c[681] | 0)) b = 0; else b = Xe(c[681] | 0) | 0;
  d = c[(Te() | 0) >> 2] | 0;
  if (!d) e = b; else {
   f = d;
   d = b;
   while (1) {
    if ((c[f + 76 >> 2] | 0) > -1) g = Nd(f) | 0; else g = 0;
    if ((c[f + 20 >> 2] | 0) >>> 0 > (c[f + 28 >> 2] | 0) >>> 0) h = Ye(f) | 0 | d; else h = d;
    if (g | 0) Od(f);
    f = c[f + 56 >> 2] | 0;
    if (!f) {
     e = h;
     break;
    } else d = h;
   }
  }
  Ue();
  i = e;
 } else {
  if ((c[a + 76 >> 2] | 0) <= -1) {
   i = Ye(a) | 0;
   break;
  }
  d = (Nd(a) | 0) == 0;
  f = Ye(a) | 0;
  if (d) i = f; else {
   Od(a);
   i = f;
  }
 } while (0);
 return i | 0;
}

function Lr(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a[d + 53 >> 0] = 1;
 do if ((c[d + 4 >> 2] | 0) == (f | 0)) {
  a[d + 52 >> 0] = 1;
  b = d + 16 | 0;
  h = c[b >> 2] | 0;
  if (!h) {
   c[b >> 2] = e;
   c[d + 24 >> 2] = g;
   c[d + 36 >> 2] = 1;
   if (!((g | 0) == 1 ? (c[d + 48 >> 2] | 0) == 1 : 0)) break;
   a[d + 54 >> 0] = 1;
   break;
  }
  if ((h | 0) != (e | 0)) {
   h = d + 36 | 0;
   c[h >> 2] = (c[h >> 2] | 0) + 1;
   a[d + 54 >> 0] = 1;
   break;
  }
  h = d + 24 | 0;
  b = c[h >> 2] | 0;
  if ((b | 0) == 2) {
   c[h >> 2] = g;
   i = g;
  } else i = b;
  if ((i | 0) == 1 ? (c[d + 48 >> 2] | 0) == 1 : 0) a[d + 54 >> 0] = 1;
 } while (0);
 return;
}

function tr(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, l = 0, m = 0, n = 0;
 if ((1073741807 - d | 0) >>> 0 < e >>> 0) _q(b);
 j = b + 8 | 0;
 if ((a[j + 3 >> 0] | 0) < 0) k = c[b >> 2] | 0; else k = b;
 if (d >>> 0 < 536870887) {
  l = e + d | 0;
  e = d << 1;
  m = l >>> 0 < e >>> 0 ? e : l;
  l = m >>> 0 < 2 ? 2 : m + 4 & -4;
  if (l >>> 0 > 1073741823) jb(); else n = l;
 } else n = 1073741807;
 l = Tq(n << 2) | 0;
 if (g | 0) Kg(l, k, g) | 0;
 m = f - h - g | 0;
 if (m | 0) Kg(l + (g << 2) + (i << 2) | 0, k + (g << 2) + (h << 2) | 0, m) | 0;
 if ((d | 0) != 1) Uq(k);
 c[b >> 2] = l;
 c[j >> 2] = n | -2147483648;
 return;
}

function mj(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 if ((a | 0) == (b | 0)) {
  c[d >> 2] = 4;
  h = 0;
  i = 0;
 } else {
  j = c[(Gd() | 0) >> 2] | 0;
  c[(Gd() | 0) >> 2] = 0;
  k = Wf(a, g, e, Mi() | 0) | 0;
  e = z;
  a = c[(Gd() | 0) >> 2] | 0;
  if (!a) c[(Gd() | 0) >> 2] = j;
  if ((c[g >> 2] | 0) == (b | 0)) if ((a | 0) == 34) {
   c[d >> 2] = 4;
   a = (e | 0) > 0 | (e | 0) == 0 & k >>> 0 > 0;
   m = a ? -1 : 0;
   n = a ? 2147483647 : -2147483648;
  } else {
   m = k;
   n = e;
  } else {
   c[d >> 2] = 4;
   m = 0;
   n = 0;
  }
  h = n;
  i = m;
 }
 z = h;
 l = f;
 return i | 0;
}

function Qe(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0;
 d = b;
 a : do if (!(d & 3)) {
  e = b;
  f = 4;
 } else {
  g = b;
  h = d;
  while (1) {
   if (!(a[g >> 0] | 0)) {
    i = h;
    break a;
   }
   j = g + 1 | 0;
   h = j;
   if (!(h & 3)) {
    e = j;
    f = 4;
    break;
   } else g = j;
  }
 } while (0);
 if ((f | 0) == 4) {
  f = e;
  while (1) {
   k = c[f >> 2] | 0;
   if (!((k & -2139062144 ^ -2139062144) & k + -16843009)) f = f + 4 | 0; else break;
  }
  if (!((k & 255) << 24 >> 24)) l = f; else {
   k = f;
   while (1) {
    f = k + 1 | 0;
    if (!(a[f >> 0] | 0)) {
     l = f;
     break;
    } else k = f;
   }
  }
  i = l;
 }
 return i - d | 0;
}

function mr(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 g = e + 1 | 0;
 a[f >> 0] = d;
 d = b + 11 | 0;
 h = a[d >> 0] | 0;
 i = h << 24 >> 24 < 0;
 if (i) {
  j = c[b + 4 >> 2] | 0;
  k = (c[b + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  j = h & 255;
  k = 10;
 }
 if ((j | 0) == (k | 0)) {
  kr(b, k, 1, k, k, 0, 0);
  if ((a[d >> 0] | 0) < 0) m = 8; else m = 7;
 } else if (i) m = 8; else m = 7;
 if ((m | 0) == 7) {
  a[d >> 0] = j + 1;
  n = b;
 } else if ((m | 0) == 8) {
  m = c[b >> 2] | 0;
  c[b + 4 >> 2] = j + 1;
  n = m;
 }
 m = n + j | 0;
 mh(m, f);
 a[g >> 0] = 0;
 mh(m + 1 | 0, g);
 l = e;
 return;
}

function mk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0;
 a = l;
 l = l + 224 | 0;
 h = a + 8 | 0;
 i = a;
 j = a + 200 | 0;
 k = a + 28 | 0;
 m = a + 24 | 0;
 n = a + 16 | 0;
 o = a + 20 | 0;
 p = i;
 c[p >> 2] = 37;
 c[p + 4 >> 2] = 0;
 ek(i + 1 | 0, 20178, 0, c[d + 4 >> 2] | 0);
 p = Mi() | 0;
 q = h;
 c[q >> 2] = f;
 c[q + 4 >> 2] = g;
 g = j + ($j(j, 23, p, i, h) | 0) | 0;
 i = ak(j, g, d) | 0;
 qh(h, d);
 tk(j, i, g, k, m, n, h);
 Ki(h);
 c[o >> 2] = c[b >> 2];
 b = c[m >> 2] | 0;
 m = c[n >> 2] | 0;
 c[h >> 2] = c[o >> 2];
 o = qk(h, k, b, m, d, e) | 0;
 l = a;
 return o | 0;
}

function kk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0;
 a = l;
 l = l + 224 | 0;
 h = a + 8 | 0;
 i = a;
 j = a + 200 | 0;
 k = a + 28 | 0;
 m = a + 24 | 0;
 n = a + 16 | 0;
 o = a + 20 | 0;
 p = i;
 c[p >> 2] = 37;
 c[p + 4 >> 2] = 0;
 ek(i + 1 | 0, 20178, 1, c[d + 4 >> 2] | 0);
 p = Mi() | 0;
 q = h;
 c[q >> 2] = f;
 c[q + 4 >> 2] = g;
 g = j + ($j(j, 23, p, i, h) | 0) | 0;
 i = ak(j, g, d) | 0;
 qh(h, d);
 tk(j, i, g, k, m, n, h);
 Ki(h);
 c[o >> 2] = c[b >> 2];
 b = c[m >> 2] | 0;
 m = c[n >> 2] | 0;
 c[h >> 2] = c[o >> 2];
 o = qk(h, k, b, m, d, e) | 0;
 l = a;
 return o | 0;
}

function Ud(b, c, d) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;
 if (c >>> 0 > 0 | (c | 0) == 0 & b >>> 0 > 4294967295) {
  e = d;
  f = b;
  g = c;
  while (1) {
   c = vv(f | 0, g | 0, 10, 0) | 0;
   e = e + -1 | 0;
   a[e >> 0] = c & 255 | 48;
   c = f;
   f = uv(f | 0, g | 0, 10, 0) | 0;
   if (!(g >>> 0 > 9 | (g | 0) == 9 & c >>> 0 > 4294967295)) break; else g = z;
  }
  h = f;
  i = e;
 } else {
  h = b;
  i = d;
 }
 if (!h) j = i; else {
  d = h;
  h = i;
  while (1) {
   i = h + -1 | 0;
   a[i >> 0] = (d >>> 0) % 10 | 0 | 48;
   if (d >>> 0 < 10) {
    j = i;
    break;
   } else {
    d = (d >>> 0) / 10 | 0;
    h = i;
   }
  }
 }
 return j | 0;
}

function du(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 g = e + 1 | 0;
 a[f >> 0] = d;
 d = b + 11 | 0;
 h = a[d >> 0] | 0;
 i = h << 24 >> 24 < 0;
 if (i) {
  j = c[b + 4 >> 2] | 0;
  k = (c[b + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  j = h & 255;
  k = 10;
 }
 if ((j | 0) == (k | 0)) {
  fu(b, k, 1, k, k, 0);
  if ((a[d >> 0] | 0) < 0) m = 8; else m = 7;
 } else if (i) m = 8; else m = 7;
 if ((m | 0) == 7) {
  a[d >> 0] = j + 1;
  n = b;
 } else if ((m | 0) == 8) {
  m = c[b >> 2] | 0;
  c[b + 4 >> 2] = j + 1;
  n = m;
 }
 m = n + j | 0;
 mh(m, f);
 a[g >> 0] = 0;
 mh(m + 1 | 0, g);
 l = e;
 return;
}

function Xj(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0;
 a = l;
 l = l + 96 | 0;
 h = a + 8 | 0;
 i = a;
 j = a + 71 | 0;
 k = a + 28 | 0;
 m = a + 24 | 0;
 n = a + 16 | 0;
 o = a + 20 | 0;
 p = i;
 c[p >> 2] = 37;
 c[p + 4 >> 2] = 0;
 ek(i + 1 | 0, 20178, 0, c[d + 4 >> 2] | 0);
 p = Mi() | 0;
 q = h;
 c[q >> 2] = f;
 c[q + 4 >> 2] = g;
 g = j + ($j(j, 23, p, i, h) | 0) | 0;
 i = ak(j, g, d) | 0;
 qh(h, d);
 fk(j, i, g, k, m, n, h);
 Ki(h);
 c[o >> 2] = c[b >> 2];
 b = c[m >> 2] | 0;
 m = c[n >> 2] | 0;
 c[h >> 2] = c[o >> 2];
 o = ed(h, k, b, m, d, e) | 0;
 l = a;
 return o | 0;
}

function Vj(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0;
 a = l;
 l = l + 96 | 0;
 h = a + 8 | 0;
 i = a;
 j = a + 71 | 0;
 k = a + 28 | 0;
 m = a + 24 | 0;
 n = a + 16 | 0;
 o = a + 20 | 0;
 p = i;
 c[p >> 2] = 37;
 c[p + 4 >> 2] = 0;
 ek(i + 1 | 0, 20178, 1, c[d + 4 >> 2] | 0);
 p = Mi() | 0;
 q = h;
 c[q >> 2] = f;
 c[q + 4 >> 2] = g;
 g = j + ($j(j, 23, p, i, h) | 0) | 0;
 i = ak(j, g, d) | 0;
 qh(h, d);
 fk(j, i, g, k, m, n, h);
 Ki(h);
 c[o >> 2] = c[b >> 2];
 b = c[m >> 2] | 0;
 m = c[n >> 2] | 0;
 c[h >> 2] = c[o >> 2];
 o = ed(h, k, b, m, d, e) | 0;
 l = a;
 return o | 0;
}

function Th(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 b = l;
 l = l + 16 | 0;
 d = b + 8 | 0;
 e = b;
 f = a + 36 | 0;
 g = a + 40 | 0;
 h = d + 8 | 0;
 i = d;
 j = a + 32 | 0;
 a : while (1) {
  a = c[f >> 2] | 0;
  k = uc[c[(c[a >> 2] | 0) + 20 >> 2] & 31](a, c[g >> 2] | 0, d, h, e) | 0;
  a = (c[e >> 2] | 0) - i | 0;
  if ((af(d, 1, a, c[j >> 2] | 0) | 0) != (a | 0)) {
   m = -1;
   break;
  }
  switch (k | 0) {
  case 1:
   break;
  case 2:
   {
    m = -1;
    break a;
    break;
   }
  default:
   {
    n = 4;
    break a;
   }
  }
 }
 if ((n | 0) == 4) m = ((Xe(c[j >> 2] | 0) | 0) != 0) << 31 >> 31;
 l = b;
 return m | 0;
}

function Mh(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 b = l;
 l = l + 16 | 0;
 d = b + 8 | 0;
 e = b;
 f = a + 36 | 0;
 g = a + 40 | 0;
 h = d + 8 | 0;
 i = d;
 j = a + 32 | 0;
 a : while (1) {
  a = c[f >> 2] | 0;
  k = uc[c[(c[a >> 2] | 0) + 20 >> 2] & 31](a, c[g >> 2] | 0, d, h, e) | 0;
  a = (c[e >> 2] | 0) - i | 0;
  if ((af(d, 1, a, c[j >> 2] | 0) | 0) != (a | 0)) {
   m = -1;
   break;
  }
  switch (k | 0) {
  case 1:
   break;
  case 2:
   {
    m = -1;
    break a;
    break;
   }
  default:
   {
    n = 4;
    break a;
   }
  }
 }
 if ((n | 0) == 4) m = ((Xe(c[j >> 2] | 0) | 0) != 0) << 31 >> 31;
 l = b;
 return m | 0;
}

function ku(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;
 b = l;
 l = l + 32 | 0;
 d = b;
 e = a + 4 | 0;
 f = (((c[e >> 2] | 0) - (c[a >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 g = lu(a) | 0;
 if (g >>> 0 < f >>> 0) np(a); else {
  h = c[a >> 2] | 0;
  i = ((c[a + 8 >> 2] | 0) - h | 0) / 24 | 0;
  j = i << 1;
  mu(d, i >>> 0 < g >>> 1 >>> 0 ? (j >>> 0 < f >>> 0 ? f : j) : g, ((c[e >> 2] | 0) - h | 0) / 24 | 0, a + 12 | 0);
  h = d + 8 | 0;
  e = c[h >> 2] | 0;
  c[e >> 2] = 0;
  c[e + 4 >> 2] = 0;
  c[e + 8 >> 2] = 0;
  c[e + 12 >> 2] = 0;
  c[e + 16 >> 2] = 0;
  c[e + 20 >> 2] = 0;
  ju(e);
  c[h >> 2] = e + 24;
  nu(a, d);
  ou(d);
  l = b;
  return;
 }
}

function jr(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 if (d | 0) {
  h = b + 11 | 0;
  i = a[h >> 0] | 0;
  if (i << 24 >> 24 < 0) {
   j = c[b + 4 >> 2] | 0;
   k = (c[b + 8 >> 2] & 2147483647) + -1 | 0;
  } else {
   j = i & 255;
   k = 10;
  }
  if ((k - j | 0) >>> 0 < d >>> 0) {
   kr(b, k, d - k + j | 0, j, j, 0, 0);
   m = a[h >> 0] | 0;
  } else m = i;
  if (m << 24 >> 24 < 0) n = c[b >> 2] | 0; else n = b;
  im(n + j | 0, d, e) | 0;
  e = j + d | 0;
  if ((a[h >> 0] | 0) < 0) c[b + 4 >> 2] = e; else a[h >> 0] = e;
  a[g >> 0] = 0;
  mh(n + e | 0, g);
 }
 l = f;
 return b | 0;
}

function ls(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 d = l;
 l = l + 32 | 0;
 e = d + 20 | 0;
 f = d;
 g = a + 4 | 0;
 h = ((c[g >> 2] | 0) - (c[a >> 2] | 0) >> 4) + 1 | 0;
 i = Gu(a) | 0;
 if (i >>> 0 < h >>> 0) np(a); else {
  j = c[a >> 2] | 0;
  k = (c[a + 8 >> 2] | 0) - j | 0;
  m = k >> 3;
  Hu(f, k >> 4 >>> 0 < i >>> 1 >>> 0 ? (m >>> 0 < h >>> 0 ? h : m) : i, (c[g >> 2] | 0) - j >> 4, a + 12 | 0);
  j = f + 8 | 0;
  g = c[j >> 2] | 0;
  ks(e, b);
  c[g >> 2] = 0;
  c[g + 4 >> 2] = 0;
  b = c[e >> 2] | 0;
  c[g + 8 >> 2] = 0;
  c[g + 12 >> 2] = b;
  c[j >> 2] = g + 16;
  Iu(a, f);
  Ju(f);
  l = d;
  return;
 }
}

function Eu(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 d = l;
 l = l + 32 | 0;
 e = d + 20 | 0;
 f = d;
 g = a + 4 | 0;
 h = ((c[g >> 2] | 0) - (c[a >> 2] | 0) >> 4) + 1 | 0;
 i = Gu(a) | 0;
 if (i >>> 0 < h >>> 0) np(a); else {
  j = c[a >> 2] | 0;
  k = (c[a + 8 >> 2] | 0) - j | 0;
  m = k >> 3;
  Hu(f, k >> 4 >>> 0 < i >>> 1 >>> 0 ? (m >>> 0 < h >>> 0 ? h : m) : i, (c[g >> 2] | 0) - j >> 4, a + 12 | 0);
  j = f + 8 | 0;
  g = c[j >> 2] | 0;
  Du(e, b);
  c[g >> 2] = 0;
  c[g + 4 >> 2] = 0;
  b = c[e >> 2] | 0;
  c[g + 8 >> 2] = 0;
  c[g + 12 >> 2] = b;
  c[j >> 2] = g + 16;
  Iu(a, f);
  Ju(f);
  l = d;
  return;
 }
}

function ti(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 d = l;
 l = l + 16 | 0;
 g = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 h = f - e >> 2;
 if (h >>> 0 > 1073741807) _q(b);
 do if (h >>> 0 < 2) {
  a[b + 8 + 3 >> 0] = h;
  i = e;
  j = b;
 } else {
  k = h + 4 & -4;
  if (k >>> 0 > 1073741823) jb(); else {
   m = Tq(k << 2) | 0;
   c[b >> 2] = m;
   c[b + 8 >> 2] = k | -2147483648;
   c[b + 4 >> 2] = h;
   i = e;
   j = m;
   break;
  }
 } while (0);
 while (1) {
  if ((i | 0) == (f | 0)) break;
  vi(j, i);
  i = i + 4 | 0;
  j = j + 4 | 0;
 }
 c[g >> 2] = 0;
 vi(j, g);
 l = d;
 return;
}

function zh(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 vh(f, b);
 do if (a[f >> 0] | 0) {
  g = c[b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  h = g;
  if (g | 0) {
   i = h + 24 | 0;
   j = c[i >> 2] | 0;
   if ((j | 0) == (c[h + 28 >> 2] | 0)) {
    k = c[(c[g >> 2] | 0) + 52 >> 2] | 0;
    g = rg(d) | 0;
    m = qc[k & 31](h, g) | 0;
   } else {
    c[i >> 2] = j + 1;
    a[j >> 0] = d;
    m = rg(d) | 0;
   }
   if (!(ph(m, qg() | 0) | 0)) break;
  }
  j = b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) | 0;
  nh(j, c[j + 16 >> 2] | 1);
 } while (0);
 wh(f);
 l = e;
 return b | 0;
}

function Zc(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0;
 e = a;
 f = c[e >> 2] | 0;
 g = c[e + 4 >> 2] | 0;
 e = xv(f | 0, g | 0, 5) | 0;
 h = e ^ f;
 f = z ^ g;
 g = wv(h | 0, f | 0, 15) | 0;
 e = g ^ h;
 h = z ^ f;
 f = xv(e | 0, h | 0, 27) | 0;
 g = f ^ e;
 e = z ^ h;
 h = a;
 c[h >> 2] = g;
 c[h + 4 >> 2] = e;
 h = a + 8 | 0;
 a = h;
 f = qv(c[a >> 2] | 0, c[a + 4 >> 2] | 0, -2135587861, 1640531526) | 0;
 a = z;
 i = h;
 c[i >> 2] = f;
 c[i + 4 >> 2] = a;
 i = wv(f | 0, a | 0, 27) | 0;
 h = qv(g | 0, e | 0, i ^ f | 0, z ^ a | 0) | 0;
 a = vv(h | 0, z | 0, d | 0, 0) | 0;
 d = qv(a | 0, z | 0, b | 0, 0) | 0;
 return d | 0;
}

function _e(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 do if ((b | 0) == -1) e = -1; else {
  if ((c[d + 76 >> 2] | 0) > -1) f = Nd(d) | 0; else f = 0;
  g = d + 4 | 0;
  h = c[g >> 2] | 0;
  if (!h) {
   oe(d) | 0;
   i = c[g >> 2] | 0;
   if (i | 0) {
    j = i;
    k = 6;
   }
  } else {
   j = h;
   k = 6;
  }
  if ((k | 0) == 6) if (j >>> 0 > ((c[d + 44 >> 2] | 0) + -8 | 0) >>> 0) {
   h = j + -1 | 0;
   c[g >> 2] = h;
   a[h >> 0] = b;
   c[d >> 2] = c[d >> 2] & -17;
   if (!f) {
    e = b;
    break;
   }
   Od(d);
   e = b;
   break;
  }
  if (!f) e = -1; else {
   Od(d);
   e = -1;
  }
 } while (0);
 return e | 0;
}

function hu(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 if ((a[d + 11 >> 0] | 0) < 0) {
  g = c[d >> 2] | 0;
  h = c[d + 4 >> 2] | 0;
  if (h >>> 0 > 4294967279) _q(b);
  if (h >>> 0 < 11) {
   a[b + 11 >> 0] = h;
   i = b;
  } else {
   j = h + 16 & -16;
   k = Bs(j) | 0;
   c[b >> 2] = k;
   c[b + 8 >> 2] = j | -2147483648;
   c[b + 4 >> 2] = h;
   i = k;
  }
  sg(i, g, h) | 0;
  a[f >> 0] = 0;
  mh(i + h | 0, f);
 } else {
  c[b >> 2] = c[d >> 2];
  c[b + 4 >> 2] = c[d + 4 >> 2];
  c[b + 8 >> 2] = c[d + 8 >> 2];
 }
 l = e;
 return;
}

function ar(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 if ((a[d + 11 >> 0] | 0) < 0) {
  g = c[d >> 2] | 0;
  h = c[d + 4 >> 2] | 0;
  if (h >>> 0 > 4294967279) _q(b);
  if (h >>> 0 < 11) {
   a[b + 11 >> 0] = h;
   i = b;
  } else {
   j = h + 16 & -16;
   k = Tq(j) | 0;
   c[b >> 2] = k;
   c[b + 8 >> 2] = j | -2147483648;
   c[b + 4 >> 2] = h;
   i = k;
  }
  sg(i, g, h) | 0;
  a[f >> 0] = 0;
  mh(i + h | 0, f);
 } else {
  c[b >> 2] = c[d >> 2];
  c[b + 4 >> 2] = c[d + 4 >> 2];
  c[b + 8 >> 2] = c[d + 8 >> 2];
 }
 l = e;
 return;
}

function ur(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 h = b + 8 | 0;
 i = h + 3 | 0;
 j = a[i >> 0] | 0;
 k = j << 24 >> 24 < 0;
 if (k) {
  m = c[b + 4 >> 2] | 0;
  n = (c[h >> 2] & 2147483647) + -1 | 0;
 } else {
  m = j & 255;
  n = 1;
 }
 if ((n - m | 0) >>> 0 < e >>> 0) qr(b, n, e - n + m | 0, m, m, 0, e, d); else if (e | 0) {
  if (k) o = c[b >> 2] | 0; else o = b;
  Kg(o + (m << 2) | 0, d, e) | 0;
  d = m + e | 0;
  if ((a[i >> 0] | 0) < 0) c[b + 4 >> 2] = d; else a[i >> 0] = d;
  c[g >> 2] = 0;
  vi(o + (d << 2) | 0, g);
 }
 l = f;
 return b | 0;
}

function or(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 h = b + 8 | 0;
 i = h + 3 | 0;
 j = a[i >> 0] | 0;
 k = j << 24 >> 24 < 0;
 if (k) m = (c[h >> 2] & 2147483647) + -1 | 0; else m = 1;
 do if (m >>> 0 < e >>> 0) {
  if (k) n = c[b + 4 >> 2] | 0; else n = j & 255;
  qr(b, m, e - m | 0, n, 0, n, e, d);
 } else {
  if (k) o = c[b >> 2] | 0; else o = b;
  pr(o, d, e) | 0;
  c[g >> 2] = 0;
  vi(o + (e << 2) | 0, g);
  if ((a[i >> 0] | 0) < 0) {
   c[b + 4 >> 2] = e;
   break;
  } else {
   a[i >> 0] = e;
   break;
  }
 } while (0);
 l = f;
 return b | 0;
}

function Gg(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0;
 e = Ig() | 0;
 f = a + 24 | 0;
 g = a + 28 | 0;
 h = b;
 b = 0;
 while (1) {
  if ((b | 0) >= (d | 0)) break;
  i = c[f >> 2] | 0;
  j = c[g >> 2] | 0;
  if (i >>> 0 < j >>> 0) {
   k = j - i >> 2;
   j = d - b | 0;
   l = (j | 0) < (k | 0) ? j : k;
   Kg(i, h, l) | 0;
   c[f >> 2] = (c[f >> 2] | 0) + (l << 2);
   h = h + (l << 2) | 0;
   b = l + b | 0;
   continue;
  }
  l = c[(c[a >> 2] | 0) + 52 >> 2] | 0;
  i = Jg(c[h >> 2] | 0) | 0;
  if ((qc[l & 31](a, i) | 0) == (e | 0)) break;
  h = h + 4 | 0;
  b = b + 1 | 0;
 }
 return b | 0;
}

function se(b, e) {
 b = b | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0, o = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 h = e & 255;
 a[g >> 0] = h;
 i = b + 16 | 0;
 j = c[i >> 2] | 0;
 if (!j) if (!(me(b) | 0)) {
  k = c[i >> 2] | 0;
  m = 4;
 } else n = -1; else {
  k = j;
  m = 4;
 }
 do if ((m | 0) == 4) {
  j = b + 20 | 0;
  i = c[j >> 2] | 0;
  if (i >>> 0 < k >>> 0) {
   o = e & 255;
   if ((o | 0) != (a[b + 75 >> 0] | 0)) {
    c[j >> 2] = i + 1;
    a[i >> 0] = h;
    n = o;
    break;
   }
  }
  if ((rc[c[b + 36 >> 2] & 31](b, g, 1) | 0) == 1) n = d[g >> 0] | 0; else n = -1;
 } while (0);
 l = f;
 return n | 0;
}

function Er(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;
 e = l;
 l = l + 64 | 0;
 f = e;
 if (Ir(a, b, 0) | 0) g = 1; else if (!b) g = 0; else {
  h = Mr(b, 1904, 1888, 0) | 0;
  if (!h) g = 0; else {
   b = f + 4 | 0;
   i = b + 52 | 0;
   do {
    c[b >> 2] = 0;
    b = b + 4 | 0;
   } while ((b | 0) < (i | 0));
   c[f >> 2] = h;
   c[f + 8 >> 2] = a;
   c[f + 12 >> 2] = -1;
   c[f + 48 >> 2] = 1;
   Dc[c[(c[h >> 2] | 0) + 28 >> 2] & 15](h, f, c[d >> 2] | 0, 1);
   if ((c[f + 24 >> 2] | 0) == 1) {
    c[d >> 2] = c[f + 16 >> 2];
    j = 1;
   } else j = 0;
   g = j;
  }
 }
 l = e;
 return g | 0;
}

function ak(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0;
 a : do switch ((c[e + 4 >> 2] & 176) << 24 >> 24) {
 case 16:
  {
   f = a[b >> 0] | 0;
   switch (f << 24 >> 24) {
   case 43:
   case 45:
    {
     g = b + 1 | 0;
     break a;
     break;
    }
   default:
    {}
   }
   if ((d - b | 0) > 1 & f << 24 >> 24 == 48) {
    switch (a[b + 1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      h = 7;
      break a;
     }
    }
    g = b + 2 | 0;
   } else h = 7;
   break;
  }
 case 32:
  {
   g = d;
   break;
  }
 default:
  h = 7;
 } while (0);
 if ((h | 0) == 7) g = b;
 return g | 0;
}

function Mk() {
 var b = 0, d = 0;
 if (!(a[20864] | 0)) if (iv(20864) | 0) {
  b = 23812;
  do {
   c[b >> 2] = 0;
   c[b + 4 >> 2] = 0;
   c[b + 8 >> 2] = 0;
   d = 0;
   while (1) {
    if ((d | 0) == 3) break;
    c[b + (d << 2) >> 2] = 0;
    d = d + 1 | 0;
   }
   b = b + 12 | 0;
  } while ((b | 0) != 23980);
 }
 hr(23812, 16617) | 0;
 hr(23824, 16624) | 0;
 hr(23836, 16631) | 0;
 hr(23848, 16639) | 0;
 hr(23860, 16649) | 0;
 hr(23872, 16658) | 0;
 hr(23884, 16665) | 0;
 hr(23896, 16674) | 0;
 hr(23908, 16678) | 0;
 hr(23920, 16682) | 0;
 hr(23932, 16686) | 0;
 hr(23944, 16690) | 0;
 hr(23956, 16694) | 0;
 hr(23968, 16698) | 0;
 return;
}

function Ks(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 d = l;
 l = l + 32 | 0;
 e = d;
 f = a + 4 | 0;
 g = ((c[f >> 2] | 0) - (c[a >> 2] | 0) >> 4) + 1 | 0;
 h = Ou(a) | 0;
 if (h >>> 0 < g >>> 0) np(a); else {
  i = c[a >> 2] | 0;
  j = (c[a + 8 >> 2] | 0) - i | 0;
  k = j >> 3;
  Pu(e, j >> 4 >>> 0 < h >>> 1 >>> 0 ? (k >>> 0 < g >>> 0 ? g : k) : h, (c[f >> 2] | 0) - i >> 4, a + 12 | 0);
  i = e + 8 | 0;
  f = c[i >> 2] | 0;
  c[f >> 2] = 0;
  c[f + 4 >> 2] = 0;
  h = c[b >> 2] | 0;
  c[f + 8 >> 2] = 0;
  c[f + 12 >> 2] = h;
  c[i >> 2] = f + 16;
  Qu(a, e);
  Ru(e);
  l = d;
  return;
 }
}

function og(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0;
 f = qg() | 0;
 g = b + 24 | 0;
 h = b + 28 | 0;
 i = d;
 d = 0;
 while (1) {
  if ((d | 0) >= (e | 0)) break;
  j = c[g >> 2] | 0;
  k = c[h >> 2] | 0;
  if (j >>> 0 < k >>> 0) {
   l = k - j | 0;
   k = e - d | 0;
   m = (k | 0) < (l | 0) ? k : l;
   sg(j, i, m) | 0;
   c[g >> 2] = (c[g >> 2] | 0) + m;
   i = i + m | 0;
   d = m + d | 0;
   continue;
  }
  m = c[(c[b >> 2] | 0) + 52 >> 2] | 0;
  j = rg(a[i >> 0] | 0) | 0;
  if ((qc[m & 31](b, j) | 0) == (f | 0)) break;
  i = i + 1 | 0;
  d = d + 1 | 0;
 }
 return d | 0;
}

function He(a, b) {
 a = +a;
 b = b | 0;
 var d = 0.0, e = 0, f = 0, g = 0.0, i = 0;
 if ((b | 0) > 1023) {
  d = a * 8988465674311579538646525.0e283;
  e = (b | 0) > 2046;
  f = b + -2046 | 0;
  g = e ? d * 8988465674311579538646525.0e283 : d;
  i = e ? ((f | 0) < 1023 ? f : 1023) : b + -1023 | 0;
 } else if ((b | 0) < -1022) {
  d = a * 2.2250738585072014e-308;
  f = (b | 0) < -2044;
  e = b + 2044 | 0;
  g = f ? d * 2.2250738585072014e-308 : d;
  i = f ? ((e | 0) > -1022 ? e : -1022) : b + 1022 | 0;
 } else {
  g = a;
  i = b;
 }
 b = xv(i + 1023 | 0, 0, 52) | 0;
 i = z;
 c[j >> 2] = b;
 c[j + 4 >> 2] = i;
 return +(g * +h[j >> 3]);
}

function dr(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 h = b + 11 | 0;
 i = a[h >> 0] | 0;
 j = i << 24 >> 24 < 0;
 if (j) k = (c[b + 8 >> 2] & 2147483647) + -1 | 0; else k = 10;
 do if (k >>> 0 < e >>> 0) {
  if (j) m = c[b + 4 >> 2] | 0; else m = i & 255;
  fr(b, k, e - k | 0, m, 0, m, e, d);
 } else {
  if (j) n = c[b >> 2] | 0; else n = b;
  er(n, d, e) | 0;
  a[g >> 0] = 0;
  mh(n + e | 0, g);
  if ((a[h >> 0] | 0) < 0) {
   c[b + 4 >> 2] = e;
   break;
  } else {
   a[h >> 0] = e;
   break;
  }
 } while (0);
 l = f;
 return b | 0;
}

function Zq(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0, g = 0, h = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 e = 4;
 f = d;
 a : while (1) {
  if (!e) {
   g = 8;
   break;
  }
  b : while (1) {
   h = kf(c[a >> 2] | 0, f, e) | 0;
   switch (h | 0) {
   case 0:
    {
     g = 4;
     break a;
     break;
    }
   case -1:
    break;
   default:
    break b;
   }
   if ((c[(Gd() | 0) >> 2] | 0) != 4) {
    g = 6;
    break a;
   }
  }
  e = e - h | 0;
  f = f + h | 0;
 }
 if ((g | 0) == 4) wr(61, 18151); else if ((g | 0) == 6) wr(c[(Gd() | 0) >> 2] | 0, 18173); else if ((g | 0) == 8) {
  l = b;
  return c[d >> 2] | 0;
 }
 return 0;
}

function Cg(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 Ig() | 0;
 e = a + 12 | 0;
 f = a + 16 | 0;
 g = b;
 b = 0;
 while (1) {
  if ((b | 0) >= (d | 0)) break;
  h = c[e >> 2] | 0;
  i = c[f >> 2] | 0;
  if (h >>> 0 < i >>> 0) {
   j = i - h >> 2;
   i = d - b | 0;
   k = (i | 0) < (j | 0) ? i : j;
   Kg(g, h, k) | 0;
   c[e >> 2] = (c[e >> 2] | 0) + (k << 2);
   g = g + (k << 2) | 0;
   b = k + b | 0;
   continue;
  }
  k = pc[c[(c[a >> 2] | 0) + 40 >> 2] & 63](a) | 0;
  if ((k | 0) == -1) break;
  c[g >> 2] = Lg(k) | 0;
  g = g + 4 | 0;
  b = b + 1 | 0;
 }
 return b | 0;
}

function _n(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h;
 c[g >> 2] = e;
 e = Tf(c[b + 8 >> 2] | 0) | 0;
 b = be(i, 0, d) | 0;
 if (e | 0) Tf(e) | 0;
 a : do if ((b + 1 | 0) >>> 0 < 2) j = 2; else {
  e = b + -1 | 0;
  if (e >>> 0 > (f - (c[g >> 2] | 0) | 0) >>> 0) j = 1; else {
   d = i;
   k = e;
   while (1) {
    if (!k) {
     j = 0;
     break a;
    }
    e = a[d >> 0] | 0;
    m = c[g >> 2] | 0;
    c[g >> 2] = m + 1;
    a[m >> 0] = e;
    d = d + 1 | 0;
    k = k + -1 | 0;
   }
  }
 } while (0);
 l = h;
 return j | 0;
}

function vl() {
 var b = 0, d = 0;
 if (!(a[20944] | 0)) if (iv(20944) | 0) {
  b = 24624;
  do {
   c[b >> 2] = 0;
   c[b + 4 >> 2] = 0;
   c[b + 8 >> 2] = 0;
   d = 0;
   while (1) {
    if ((d | 0) == 3) break;
    c[b + (d << 2) >> 2] = 0;
    d = d + 1 | 0;
   }
   b = b + 12 | 0;
  } while ((b | 0) != 24792);
 }
 sr(24624, 8348) | 0;
 sr(24636, 8376) | 0;
 sr(24648, 8404) | 0;
 sr(24660, 8436) | 0;
 sr(24672, 8476) | 0;
 sr(24684, 8512) | 0;
 sr(24696, 8540) | 0;
 sr(24708, 8576) | 0;
 sr(24720, 8592) | 0;
 sr(24732, 8608) | 0;
 sr(24744, 8624) | 0;
 sr(24756, 8640) | 0;
 sr(24768, 8656) | 0;
 sr(24780, 8672) | 0;
 return;
}

function lr(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 h = b + 11 | 0;
 i = a[h >> 0] | 0;
 j = i << 24 >> 24 < 0;
 if (j) {
  k = c[b + 4 >> 2] | 0;
  m = (c[b + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  k = i & 255;
  m = 10;
 }
 if ((m - k | 0) >>> 0 < e >>> 0) fr(b, m, e - m + k | 0, k, k, 0, e, d); else if (e | 0) {
  if (j) n = c[b >> 2] | 0; else n = b;
  sg(n + k | 0, d, e) | 0;
  d = k + e | 0;
  if ((a[h >> 0] | 0) < 0) c[b + 4 >> 2] = d; else a[h >> 0] = d;
  a[g >> 0] = 0;
  mh(n + d | 0, g);
 }
 l = f;
 return b | 0;
}
function qs(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 h = b + 11 | 0;
 i = a[h >> 0] | 0;
 j = i << 24 >> 24 < 0;
 if (j) {
  k = c[b + 4 >> 2] | 0;
  m = (c[b + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  k = i & 255;
  m = 10;
 }
 if ((m - k | 0) >>> 0 < e >>> 0) As(b, m, e - m + k | 0, k, k, 0, e, d); else if (e | 0) {
  if (j) n = c[b >> 2] | 0; else n = b;
  sg(n + k | 0, d, e) | 0;
  d = k + e | 0;
  if ((a[h >> 0] | 0) < 0) c[b + 4 >> 2] = d; else a[h >> 0] = d;
  a[g >> 0] = 0;
  mh(n + d | 0, g);
 }
 l = f;
 return b | 0;
}

function Ot(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 h = b + 11 | 0;
 i = a[h >> 0] | 0;
 j = i << 24 >> 24 < 0;
 if (j) k = (c[b + 8 >> 2] & 2147483647) + -1 | 0; else k = 10;
 do if (k >>> 0 < e >>> 0) {
  if (j) m = c[b + 4 >> 2] | 0; else m = i & 255;
  As(b, k, e - k | 0, m, 0, m, e, d);
 } else {
  if (j) n = c[b >> 2] | 0; else n = b;
  er(n, d, e) | 0;
  a[g >> 0] = 0;
  mh(n + e | 0, g);
  if ((a[h >> 0] | 0) < 0) {
   c[b + 4 >> 2] = e;
   break;
  } else {
   a[h >> 0] = e;
   break;
  }
 } while (0);
 l = f;
 return;
}

function zu(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0;
 if ((d - b | 0) > 1) {
  if ((a[b >> 0] | 0) == 83) if ((a[b + 1 >> 0] | 0) == 116) {
   f = b + 2 | 0;
   if ((f | 0) == (d | 0)) {
    g = 0;
    h = d;
   } else {
    g = 0;
    h = (a[f >> 0] | 0) == 76 ? b + 3 | 0 : f;
   }
  } else {
   g = 1;
   h = b;
  } else {
   g = 1;
   h = b;
  }
  f = Tt(h, d, e) | 0;
  d = (f | 0) == (h | 0);
  if (g | d) i = d ? b : f; else {
   d = c[e + 4 >> 2] | 0;
   if ((c[e >> 2] | 0) == (d | 0)) i = b; else {
    Ls(d + -24 | 0, 0, 19202) | 0;
    i = f;
   }
  }
 } else i = b;
 return i | 0;
}

function uq(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0, n = 0;
 d = l;
 l = l + 32 | 0;
 e = d;
 f = a + 8 | 0;
 g = a + 4 | 0;
 h = c[g >> 2] | 0;
 do if ((c[f >> 2] | 0) - h >> 2 >>> 0 < b >>> 0) {
  i = (h - (c[a >> 2] | 0) >> 2) + b | 0;
  j = wq(a) | 0;
  if (j >>> 0 < i >>> 0) np(a); else {
   k = c[a >> 2] | 0;
   m = (c[f >> 2] | 0) - k | 0;
   n = m >> 1;
   xq(e, m >> 2 >>> 0 < j >>> 1 >>> 0 ? (n >>> 0 < i >>> 0 ? i : n) : j, (c[g >> 2] | 0) - k >> 2, a + 16 | 0);
   yq(e, b);
   zq(a, e);
   Aq(e);
   break;
  }
 } else vq(a, b); while (0);
 l = d;
 return;
}

function Vs(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 h = a[d + 11 >> 0] | 0;
 i = h << 24 >> 24 < 0;
 j = i ? c[d + 4 >> 2] | 0 : h & 255;
 h = i ? c[d >> 2] | 0 : d;
 d = j >>> 0 < e >>> 0 ? j : e;
 if (d >>> 0 > 4294967279) _q(b);
 if (d >>> 0 < 11) {
  a[b + 11 >> 0] = d;
  k = b;
 } else {
  e = d + 16 & -16;
  j = Bs(e) | 0;
  c[b >> 2] = j;
  c[b + 8 >> 2] = e | -2147483648;
  c[b + 4 >> 2] = d;
  k = j;
 }
 sg(k, h, d) | 0;
 a[g >> 0] = 0;
 mh(k + d | 0, g);
 l = f;
 return;
}

function kg(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0;
 qg() | 0;
 f = b + 12 | 0;
 g = b + 16 | 0;
 h = d;
 d = 0;
 while (1) {
  if ((d | 0) >= (e | 0)) break;
  i = c[f >> 2] | 0;
  j = c[g >> 2] | 0;
  if (i >>> 0 < j >>> 0) {
   k = j - i | 0;
   j = e - d | 0;
   l = (j | 0) < (k | 0) ? j : k;
   sg(h, i, l) | 0;
   c[f >> 2] = (c[f >> 2] | 0) + l;
   h = h + l | 0;
   d = l + d | 0;
   continue;
  }
  l = pc[c[(c[b >> 2] | 0) + 40 >> 2] & 63](b) | 0;
  if ((l | 0) == -1) break;
  a[h >> 0] = tg(l) | 0;
  h = h + 1 | 0;
  d = d + 1 | 0;
 }
 return d | 0;
}

function Js(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0;
 c[e >> 2] = 0;
 if ((b | 0) == (d | 0)) f = b; else {
  d = a[b >> 0] | 0;
  if (d << 24 >> 24 == 114) {
   c[e >> 2] = 4;
   g = b + 1 | 0;
   h = g;
   i = 4;
   j = a[g >> 0] | 0;
  } else {
   h = b;
   i = 0;
   j = d;
  }
  if (j << 24 >> 24 == 86) {
   d = i | 2;
   c[e >> 2] = d;
   b = h + 1 | 0;
   k = b;
   l = a[b >> 0] | 0;
   m = d;
  } else {
   k = h;
   l = j;
   m = i;
  }
  if (l << 24 >> 24 == 75) {
   c[e >> 2] = m | 1;
   f = k + 1 | 0;
  } else f = k;
 }
 return f | 0;
}

function hn(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 e = a + 4 | 0;
 f = (c[e >> 2] | 0) != 115;
 g = c[a >> 2] | 0;
 h = (c[d >> 2] | 0) - g | 0;
 i = h >>> 0 < 2147483647 ? h << 1 : -1;
 h = (i | 0) == 0 ? 4 : i;
 i = (c[b >> 2] | 0) - g >> 2;
 j = zd(f ? g : 0, h) | 0;
 if (!j) Wq();
 if (f) {
  c[a >> 2] = j;
  k = j;
 } else {
  f = c[a >> 2] | 0;
  c[a >> 2] = j;
  if (!f) k = j; else {
   Ac[c[e >> 2] & 127](f);
   k = c[a >> 2] | 0;
  }
 }
 c[e >> 2] = 116;
 c[b >> 2] = k + (i << 2);
 c[d >> 2] = (c[a >> 2] | 0) + (h >>> 2 << 2);
 return;
}

function _m(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 e = a + 4 | 0;
 f = (c[e >> 2] | 0) != 115;
 g = c[a >> 2] | 0;
 h = (c[d >> 2] | 0) - g | 0;
 i = h >>> 0 < 2147483647 ? h << 1 : -1;
 h = (i | 0) == 0 ? 4 : i;
 i = (c[b >> 2] | 0) - g >> 2;
 j = zd(f ? g : 0, h) | 0;
 if (!j) Wq();
 if (f) {
  c[a >> 2] = j;
  k = j;
 } else {
  f = c[a >> 2] | 0;
  c[a >> 2] = j;
  if (!f) k = j; else {
   Ac[c[e >> 2] & 127](f);
   k = c[a >> 2] | 0;
  }
 }
 c[e >> 2] = 116;
 c[b >> 2] = k + (i << 2);
 c[d >> 2] = (c[a >> 2] | 0) + (h >>> 2 << 2);
 return;
}

function kr(b, d, e, f, g, h, i) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0, l = 0, m = 0;
 if ((-17 - d | 0) >>> 0 < e >>> 0) _q(b);
 if ((a[b + 11 >> 0] | 0) < 0) j = c[b >> 2] | 0; else j = b;
 if (d >>> 0 < 2147483623) {
  k = e + d | 0;
  e = d << 1;
  l = k >>> 0 < e >>> 0 ? e : k;
  m = l >>> 0 < 11 ? 11 : l + 16 & -16;
 } else m = -17;
 l = Tq(m) | 0;
 if (g | 0) sg(l, j, g) | 0;
 k = f - h - g | 0;
 if (k | 0) sg(l + g + i | 0, j + g + h | 0, k) | 0;
 if ((d | 0) != 10) Uq(j);
 c[b >> 2] = l;
 c[b + 8 >> 2] = m | -2147483648;
 return;
}

function zq(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;
 d = c[a >> 2] | 0;
 e = a + 4 | 0;
 f = b + 4 | 0;
 g = (c[e >> 2] | 0) - d | 0;
 h = (c[f >> 2] | 0) + (0 - (g >> 2) << 2) | 0;
 c[f >> 2] = h;
 if ((g | 0) > 0) {
  zv(h | 0, d | 0, g | 0) | 0;
  i = f;
  j = c[f >> 2] | 0;
 } else {
  i = f;
  j = h;
 }
 h = c[a >> 2] | 0;
 c[a >> 2] = j;
 c[i >> 2] = h;
 h = b + 8 | 0;
 j = c[e >> 2] | 0;
 c[e >> 2] = c[h >> 2];
 c[h >> 2] = j;
 j = a + 8 | 0;
 a = b + 12 | 0;
 h = c[j >> 2] | 0;
 c[j >> 2] = c[a >> 2];
 c[a >> 2] = h;
 c[b >> 2] = c[i >> 2];
 return;
}

function ae(a, b) {
 a = +a;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0.0, i = 0.0, k = 0, l = 0.0;
 h[j >> 3] = a;
 d = c[j >> 2] | 0;
 e = c[j + 4 >> 2] | 0;
 f = wv(d | 0, e | 0, 52) | 0;
 switch (f & 2047) {
 case 0:
  {
   if (a != 0.0) {
    g = +ae(a * 18446744073709551616.0, b);
    i = g;
    k = (c[b >> 2] | 0) + -64 | 0;
   } else {
    i = a;
    k = 0;
   }
   c[b >> 2] = k;
   l = i;
   break;
  }
 case 2047:
  {
   l = a;
   break;
  }
 default:
  {
   c[b >> 2] = (f & 2047) + -1022;
   c[j >> 2] = d;
   c[j + 4 >> 2] = e & -2146435073 | 1071644672;
   l = +h[j >> 3];
  }
 }
 return +l;
}

function fe(b, e) {
 b = b | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 f = 0;
 while (1) {
  if ((d[13052 + f >> 0] | 0) == (b | 0)) {
   g = 2;
   break;
  }
  h = f + 1 | 0;
  if ((h | 0) == 87) {
   i = 13140;
   j = 87;
   g = 5;
   break;
  } else f = h;
 }
 if ((g | 0) == 2) if (!f) k = 13140; else {
  i = 13140;
  j = f;
  g = 5;
 }
 if ((g | 0) == 5) while (1) {
  g = 0;
  f = i;
  do {
   b = f;
   f = f + 1 | 0;
  } while ((a[b >> 0] | 0) != 0);
  j = j + -1 | 0;
  if (!j) {
   k = f;
   break;
  } else {
   i = f;
   g = 5;
  }
 }
 return ge(k, c[e + 20 >> 2] | 0) | 0;
}

function gl(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0;
 i = l;
 l = l + 16 | 0;
 j = i + 12 | 0;
 k = i + 8 | 0;
 m = i + 4 | 0;
 n = i;
 o = b + 8 | 0;
 p = pc[c[(c[o >> 2] | 0) + 20 >> 2] & 63](o) | 0;
 c[m >> 2] = c[d >> 2];
 c[n >> 2] = c[e >> 2];
 e = a[p + 8 + 3 >> 0] | 0;
 d = e << 24 >> 24 < 0;
 o = d ? c[p >> 2] | 0 : p;
 q = o + ((d ? c[p + 4 >> 2] | 0 : e & 255) << 2) | 0;
 c[k >> 2] = c[m >> 2];
 c[j >> 2] = c[n >> 2];
 n = yl(b, k, j, f, g, h, o, q) | 0;
 l = i;
 return n | 0;
}

function ni(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0;
 d = l;
 l = l + 16 | 0;
 g = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 h = f - e | 0;
 if (h >>> 0 > 4294967279) _q(b);
 if (h >>> 0 < 11) {
  a[b + 11 >> 0] = h;
  i = b;
 } else {
  j = h + 16 & -16;
  k = Tq(j) | 0;
  c[b >> 2] = k;
  c[b + 8 >> 2] = j | -2147483648;
  c[b + 4 >> 2] = h;
  i = k;
 }
 k = e;
 e = i;
 while (1) {
  if ((k | 0) == (f | 0)) break;
  mh(e, k);
  k = k + 1 | 0;
  e = e + 1 | 0;
 }
 a[g >> 0] = 0;
 mh(i + h | 0, g);
 l = d;
 return;
}

function ql(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 if (!(a[20880] | 0)) if (iv(20880) | 0) {
  c[6001] = 0;
  c[6002] = 0;
  c[6003] = 0;
  e = sl(7636) | 0;
  if (e >>> 0 > 1073741807) _q(24004);
  do if (e >>> 0 < 2) {
   a[24015] = e;
   f = 24004;
  } else {
   g = e + 4 & -4;
   if (g >>> 0 > 1073741823) jb(); else {
    h = Tq(g << 2) | 0;
    c[6001] = h;
    c[6003] = g | -2147483648;
    c[6002] = e;
    f = h;
    break;
   }
  } while (0);
  Kg(f, 7636, e) | 0;
  c[d >> 2] = 0;
  vi(f + (e << 2) | 0, d);
 }
 l = b;
 return 24004;
}

function pl(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 if (!(a[20888] | 0)) if (iv(20888) | 0) {
  c[6004] = 0;
  c[6005] = 0;
  c[6006] = 0;
  e = sl(7672) | 0;
  if (e >>> 0 > 1073741807) _q(24016);
  do if (e >>> 0 < 2) {
   a[24027] = e;
   f = 24016;
  } else {
   g = e + 4 & -4;
   if (g >>> 0 > 1073741823) jb(); else {
    h = Tq(g << 2) | 0;
    c[6004] = h;
    c[6006] = g | -2147483648;
    c[6005] = e;
    f = h;
    break;
   }
  } while (0);
  Kg(f, 7672, e) | 0;
  c[d >> 2] = 0;
  vi(f + (e << 2) | 0, d);
 }
 l = b;
 return 24016;
}

function ol(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 if (!(a[20896] | 0)) if (iv(20896) | 0) {
  c[6007] = 0;
  c[6008] = 0;
  c[6009] = 0;
  e = sl(7720) | 0;
  if (e >>> 0 > 1073741807) _q(24028);
  do if (e >>> 0 < 2) {
   a[24039] = e;
   f = 24028;
  } else {
   g = e + 4 & -4;
   if (g >>> 0 > 1073741823) jb(); else {
    h = Tq(g << 2) | 0;
    c[6007] = h;
    c[6009] = g | -2147483648;
    c[6008] = e;
    f = h;
    break;
   }
  } while (0);
  Kg(f, 7720, e) | 0;
  c[d >> 2] = 0;
  vi(f + (e << 2) | 0, d);
 }
 l = b;
 return 24028;
}

function rl(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 if (!(a[20872] | 0)) if (iv(20872) | 0) {
  c[5998] = 0;
  c[5999] = 0;
  c[6e3] = 0;
  e = sl(7600) | 0;
  if (e >>> 0 > 1073741807) _q(23992);
  do if (e >>> 0 < 2) {
   a[24003] = e;
   f = 23992;
  } else {
   g = e + 4 & -4;
   if (g >>> 0 > 1073741823) jb(); else {
    h = Tq(g << 2) | 0;
    c[5998] = h;
    c[6e3] = g | -2147483648;
    c[5999] = e;
    f = h;
    break;
   }
  } while (0);
  Kg(f, 7600, e) | 0;
  c[d >> 2] = 0;
  vi(f + (e << 2) | 0, d);
 }
 l = b;
 return 23992;
}

function yk(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0, n = 0, o = 0, p = 0, q = 0;
 i = l;
 l = l + 16 | 0;
 j = i + 12 | 0;
 k = i + 8 | 0;
 m = i + 4 | 0;
 n = i;
 o = b + 8 | 0;
 p = pc[c[(c[o >> 2] | 0) + 20 >> 2] & 63](o) | 0;
 c[m >> 2] = c[d >> 2];
 c[n >> 2] = c[e >> 2];
 e = a[p + 11 >> 0] | 0;
 d = e << 24 >> 24 < 0;
 o = d ? c[p >> 2] | 0 : p;
 q = o + (d ? c[p + 4 >> 2] | 0 : e & 255) | 0;
 c[k >> 2] = c[m >> 2];
 c[j >> 2] = c[n >> 2];
 n = Pk(b, k, j, f, g, h, o, q) | 0;
 l = i;
 return n | 0;
}

function Zm(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 e = a + 4 | 0;
 f = (c[e >> 2] | 0) != 115;
 g = c[a >> 2] | 0;
 h = (c[d >> 2] | 0) - g | 0;
 i = h >>> 0 < 2147483647 ? h << 1 : -1;
 h = (i | 0) == 0 ? 1 : i;
 i = (c[b >> 2] | 0) - g | 0;
 j = zd(f ? g : 0, h) | 0;
 if (!j) Wq();
 if (f) {
  c[a >> 2] = j;
  k = j;
 } else {
  f = c[a >> 2] | 0;
  c[a >> 2] = j;
  if (!f) k = j; else {
   Ac[c[e >> 2] & 127](f);
   k = c[a >> 2] | 0;
  }
 }
 c[e >> 2] = 116;
 c[b >> 2] = k + i;
 c[d >> 2] = (c[a >> 2] | 0) + h;
 return;
}

function fu(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, l = 0;
 if ((-17 - d | 0) >>> 0 < e >>> 0) _q(b);
 if ((a[b + 11 >> 0] | 0) < 0) i = c[b >> 2] | 0; else i = b;
 if (d >>> 0 < 2147483623) {
  j = e + d | 0;
  e = d << 1;
  k = j >>> 0 < e >>> 0 ? e : j;
  l = k >>> 0 < 11 ? 11 : k + 16 & -16;
 } else l = -17;
 k = Bs(l) | 0;
 if (g | 0) sg(k, i, g) | 0;
 j = f - g | 0;
 if (j | 0) sg(k + g + h | 0, i + g | 0, j) | 0;
 if ((d | 0) != 10) Cs(i);
 c[b >> 2] = k;
 c[b + 8 >> 2] = l | -2147483648;
 return;
}

function Gr(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0;
 do if (Ir(b, c[d + 8 >> 2] | 0, g) | 0) Kr(0, d, e, f); else if (Ir(b, c[d >> 2] | 0, g) | 0) {
  if ((c[d + 16 >> 2] | 0) != (e | 0)) {
   h = d + 20 | 0;
   if ((c[h >> 2] | 0) != (e | 0)) {
    c[d + 32 >> 2] = f;
    c[h >> 2] = e;
    h = d + 40 | 0;
    c[h >> 2] = (c[h >> 2] | 0) + 1;
    if ((c[d + 36 >> 2] | 0) == 1) if ((c[d + 24 >> 2] | 0) == 2) a[d + 54 >> 0] = 1;
    c[d + 44 >> 2] = 4;
    break;
   }
  }
  if ((f | 0) == 1) c[d + 32 >> 2] = 1;
 } while (0);
 return;
}

function et(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 d = l;
 l = l + 32 | 0;
 e = d;
 f = a + 4 | 0;
 g = (((c[f >> 2] | 0) - (c[a >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 h = lu(a) | 0;
 if (h >>> 0 < g >>> 0) np(a); else {
  i = c[a >> 2] | 0;
  j = ((c[a + 8 >> 2] | 0) - i | 0) / 24 | 0;
  k = j << 1;
  mu(e, j >>> 0 < h >>> 1 >>> 0 ? (k >>> 0 < g >>> 0 ? g : k) : h, ((c[f >> 2] | 0) - i | 0) / 24 | 0, a + 12 | 0);
  i = e + 8 | 0;
  f = c[i >> 2] | 0;
  dt(f, b);
  c[i >> 2] = f + 24;
  nu(a, e);
  ou(e);
  l = d;
  return;
 }
}

function Os(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 d = l;
 l = l + 32 | 0;
 e = d;
 f = a + 4 | 0;
 g = (((c[f >> 2] | 0) - (c[a >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 h = lu(a) | 0;
 if (h >>> 0 < g >>> 0) np(a); else {
  i = c[a >> 2] | 0;
  j = ((c[a + 8 >> 2] | 0) - i | 0) / 24 | 0;
  k = j << 1;
  mu(e, j >>> 0 < h >>> 1 >>> 0 ? (k >>> 0 < g >>> 0 ? g : k) : h, ((c[f >> 2] | 0) - i | 0) / 24 | 0, a + 12 | 0);
  i = e + 8 | 0;
  f = c[i >> 2] | 0;
  Ns(f, b);
  c[i >> 2] = f + 24;
  nu(a, e);
  ou(e);
  l = d;
  return;
 }
}

function jt(b, c) {
 b = b | 0;
 c = c | 0;
 var d = 0, e = 0, f = 0;
 a : do if ((b | 0) == (c | 0)) d = b; else {
  e = (a[b >> 0] | 0) == 110 ? b + 1 | 0 : b;
  if ((e | 0) == (c | 0)) d = b; else {
   f = a[e >> 0] | 0;
   if (f << 24 >> 24 == 48) {
    d = e + 1 | 0;
    break;
   }
   if ((f + -49 & 255) < 9) {
    f = e;
    while (1) {
     e = f + 1 | 0;
     if ((e | 0) == (c | 0)) {
      d = c;
      break a;
     }
     if (((a[e >> 0] | 0) + -48 | 0) >>> 0 < 10) f = e; else {
      d = e;
      break;
     }
    }
   } else d = b;
  }
 } while (0);
 return d | 0;
}

function aj(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0.0, h = 0, i = 0.0, j = 0.0, k = 0, m = 0.0;
 e = l;
 l = l + 16 | 0;
 f = e;
 if ((a | 0) == (b | 0)) {
  c[d >> 2] = 4;
  g = 0.0;
 } else {
  h = c[(Gd() | 0) >> 2] | 0;
  c[(Gd() | 0) >> 2] = 0;
  i = +vf(a, f, Mi() | 0);
  a = c[(Gd() | 0) >> 2] | 0;
  if (!a) c[(Gd() | 0) >> 2] = h;
  if ((c[f >> 2] | 0) == (b | 0)) if ((a | 0) == 34) {
   j = i;
   k = 6;
  } else m = i; else {
   j = 0.0;
   k = 6;
  }
  if ((k | 0) == 6) {
   c[d >> 2] = 4;
   m = j;
  }
  g = m;
 }
 l = e;
 return +g;
}

function _i(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0.0, h = 0, i = 0.0, j = 0.0, k = 0, m = 0.0;
 e = l;
 l = l + 16 | 0;
 f = e;
 if ((a | 0) == (b | 0)) {
  c[d >> 2] = 4;
  g = 0.0;
 } else {
  h = c[(Gd() | 0) >> 2] | 0;
  c[(Gd() | 0) >> 2] = 0;
  i = +wf(a, f, Mi() | 0);
  a = c[(Gd() | 0) >> 2] | 0;
  if (!a) c[(Gd() | 0) >> 2] = h;
  if ((c[f >> 2] | 0) == (b | 0)) if ((a | 0) == 34) {
   j = i;
   k = 6;
  } else m = i; else {
   j = 0.0;
   k = 6;
  }
  if ((k | 0) == 6) {
   c[d >> 2] = 4;
   m = j;
  }
  g = m;
 }
 l = e;
 return +g;
}

function Xi(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0.0, h = 0, i = 0.0, j = 0.0, k = 0, m = 0.0;
 e = l;
 l = l + 16 | 0;
 f = e;
 if ((a | 0) == (b | 0)) {
  c[d >> 2] = 4;
  g = 0.0;
 } else {
  h = c[(Gd() | 0) >> 2] | 0;
  c[(Gd() | 0) >> 2] = 0;
  i = +xf(a, f, Mi() | 0);
  a = c[(Gd() | 0) >> 2] | 0;
  if (!a) c[(Gd() | 0) >> 2] = h;
  if ((c[f >> 2] | 0) == (b | 0)) if ((a | 0) == 34) {
   j = i;
   k = 6;
  } else m = i; else {
   j = 0.0;
   k = 6;
  }
  if ((k | 0) == 6) {
   c[d >> 2] = 4;
   m = j;
  }
  g = m;
 }
 l = e;
 return +g;
}

function mf(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;
 e = l;
 l = l + 48 | 0;
 f = e + 16 | 0;
 g = e;
 h = e + 32 | 0;
 if (!(b & 4194368)) i = 0; else {
  c[h >> 2] = d;
  d = (c[h >> 2] | 0) + (4 - 1) & ~(4 - 1);
  j = c[d >> 2] | 0;
  c[h >> 2] = d + 4;
  i = j;
 }
 c[g >> 2] = a;
 c[g + 4 >> 2] = b | 32768;
 c[g + 8 >> 2] = i;
 i = Pa(5, g | 0) | 0;
 if (!((b & 524288 | 0) == 0 | (i | 0) < 0)) {
  c[f >> 2] = i;
  c[f + 4 >> 2] = 2;
  c[f + 8 >> 2] = 1;
  Na(221, f | 0) | 0;
 }
 f = Fd(i) | 0;
 l = e;
 return f | 0;
}

function To(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 f = sl(9624) | 0;
 if (f >>> 0 > 1073741807) _q(b);
 do if (f >>> 0 < 2) {
  a[b + 8 + 3 >> 0] = f;
  g = b;
 } else {
  h = f + 4 & -4;
  if (h >>> 0 > 1073741823) jb(); else {
   i = Tq(h << 2) | 0;
   c[b >> 2] = i;
   c[b + 8 >> 2] = h | -2147483648;
   c[b + 4 >> 2] = f;
   g = i;
   break;
  }
 } while (0);
 Kg(g, 9624, f) | 0;
 c[e >> 2] = 0;
 vi(g + (f << 2) | 0, e);
 l = d;
 return;
}

function So(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 f = sl(9648) | 0;
 if (f >>> 0 > 1073741807) _q(b);
 do if (f >>> 0 < 2) {
  a[b + 8 + 3 >> 0] = f;
  g = b;
 } else {
  h = f + 4 & -4;
  if (h >>> 0 > 1073741823) jb(); else {
   i = Tq(h << 2) | 0;
   c[b >> 2] = i;
   c[b + 8 >> 2] = h | -2147483648;
   c[b + 4 >> 2] = f;
   g = i;
   break;
  }
 } while (0);
 Kg(g, 9648, f) | 0;
 c[e >> 2] = 0;
 vi(g + (f << 2) | 0, e);
 l = d;
 return;
}

function nu(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0;
 d = c[a >> 2] | 0;
 e = a + 4 | 0;
 f = b + 4 | 0;
 g = c[e >> 2] | 0;
 while (1) {
  if ((g | 0) == (d | 0)) break;
  h = g + -24 | 0;
  dt((c[f >> 2] | 0) + -24 | 0, h);
  c[f >> 2] = (c[f >> 2] | 0) + -24;
  g = h;
 }
 g = c[a >> 2] | 0;
 c[a >> 2] = c[f >> 2];
 c[f >> 2] = g;
 g = b + 8 | 0;
 d = c[e >> 2] | 0;
 c[e >> 2] = c[g >> 2];
 c[g >> 2] = d;
 d = a + 8 | 0;
 a = b + 12 | 0;
 g = c[d >> 2] | 0;
 c[d >> 2] = c[a >> 2];
 c[a >> 2] = g;
 c[b >> 2] = c[f >> 2];
 return;
}

function ek(b, c, d, e) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0;
 if (!(e & 2048)) f = b; else {
  a[b >> 0] = 43;
  f = b + 1 | 0;
 }
 if (!(e & 512)) {
  g = c;
  h = f;
 } else {
  a[f >> 0] = 35;
  g = c;
  h = f + 1 | 0;
 }
 while (1) {
  f = a[g >> 0] | 0;
  if (!(f << 24 >> 24)) break;
  a[h >> 0] = f;
  g = g + 1 | 0;
  h = h + 1 | 0;
 }
 switch (e & 74) {
 case 64:
  {
   i = 111;
   break;
  }
 case 8:
  {
   i = e & 16384 | 0 ? 88 : 120;
   break;
  }
 default:
  i = d ? 100 : 117;
 }
 a[h >> 0] = i;
 return;
}

function Ye(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;
 b = a + 20 | 0;
 d = a + 28 | 0;
 if ((c[b >> 2] | 0) >>> 0 > (c[d >> 2] | 0) >>> 0) {
  rc[c[a + 36 >> 2] & 31](a, 0, 0) | 0;
  if (!(c[b >> 2] | 0)) e = -1; else f = 3;
 } else f = 3;
 if ((f | 0) == 3) {
  f = a + 4 | 0;
  g = c[f >> 2] | 0;
  h = a + 8 | 0;
  i = c[h >> 2] | 0;
  if (g >>> 0 < i >>> 0) rc[c[a + 40 >> 2] & 31](a, g - i | 0, 1) | 0;
  c[a + 16 >> 2] = 0;
  c[d >> 2] = 0;
  c[b >> 2] = 0;
  c[h >> 2] = 0;
  c[f >> 2] = 0;
  e = 0;
 }
 return e | 0;
}

function bo(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0;
 g = e;
 h = a + 8 | 0;
 a = 0;
 i = 0;
 j = d;
 a : while (1) {
  if ((j | 0) == (e | 0) | a >>> 0 >= f >>> 0) break;
  d = Tf(c[h >> 2] | 0) | 0;
  k = zf(j, g - j | 0, b) | 0;
  if (d | 0) Tf(d) | 0;
  switch (k | 0) {
  case -2:
  case -1:
   {
    break a;
    break;
   }
  case 0:
   {
    l = 1;
    break;
   }
  default:
   l = k;
  }
  a = a + 1 | 0;
  i = l + i | 0;
  j = j + l | 0;
 }
 return i | 0;
}

function hf(a) {
 a = a | 0;
 var b = 0, e = 0, f = 0, g = 0, h = 0;
 if ((c[a + 76 >> 2] | 0) < 0) b = 3; else if (!(Nd(a) | 0)) b = 3; else {
  e = a + 4 | 0;
  f = c[e >> 2] | 0;
  if (f >>> 0 < (c[a + 8 >> 2] | 0) >>> 0) {
   c[e >> 2] = f + 1;
   g = d[f >> 0] | 0;
  } else g = Pe(a) | 0;
  h = g;
 }
 do if ((b | 0) == 3) {
  g = a + 4 | 0;
  f = c[g >> 2] | 0;
  if (f >>> 0 < (c[a + 8 >> 2] | 0) >>> 0) {
   c[g >> 2] = f + 1;
   h = d[f >> 0] | 0;
   break;
  } else {
   h = Pe(a) | 0;
   break;
  }
 } while (0);
 return h | 0;
}

function zd(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0;
 if (!a) {
  d = xd(b) | 0;
  return d | 0;
 }
 if (b >>> 0 > 4294967231) {
  c[(Gd() | 0) >> 2] = 12;
  d = 0;
  return d | 0;
 }
 e = Ad(a + -8 | 0, b >>> 0 < 11 ? 16 : b + 11 & -8) | 0;
 if (e | 0) {
  d = e + 8 | 0;
  return d | 0;
 }
 e = xd(b) | 0;
 if (!e) {
  d = 0;
  return d | 0;
 }
 f = c[a + -4 >> 2] | 0;
 g = (f & -8) - ((f & 3 | 0) == 0 ? 8 : 4) | 0;
 zv(e | 0, a | 0, (g >>> 0 < b >>> 0 ? g : b) | 0) | 0;
 yd(a);
 d = e;
 return d | 0;
}

function Wl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 128 | 0;
 i = h + 16 | 0;
 j = h + 12 | 0;
 k = h;
 m = h + 8 | 0;
 c[j >> 2] = i + 100;
 Ql(a, i, j, e, f, g);
 g = k;
 c[g >> 2] = 0;
 c[g + 4 >> 2] = 0;
 c[m >> 2] = i;
 i = Xl(b, c[d >> 2] | 0) | 0;
 g = Tf(c[a >> 2] | 0) | 0;
 a = ff(b, m, i, k) | 0;
 if (g | 0) Tf(g) | 0;
 if ((a | 0) == -1) Yl(0); else {
  c[d >> 2] = b + (a << 2);
  l = h;
  return;
 }
}

function mi(b, c, d, e, f) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0;
 b = e;
 e = c;
 while (1) {
  if ((b | 0) == (f | 0)) {
   g = 7;
   break;
  }
  if ((e | 0) == (d | 0)) {
   h = -1;
   break;
  }
  c = a[e >> 0] | 0;
  i = a[b >> 0] | 0;
  if (c << 24 >> 24 < i << 24 >> 24) {
   h = -1;
   break;
  }
  if (i << 24 >> 24 < c << 24 >> 24) {
   h = 1;
   break;
  }
  b = b + 1 | 0;
  e = e + 1 | 0;
 }
 if ((g | 0) == 7) h = (e | 0) != (d | 0) & 1;
 return h | 0;
}

function Jk(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 if (!(a[20792] | 0)) if (iv(20792) | 0) {
  c[5795] = 0;
  c[5796] = 0;
  c[5797] = 0;
  e = lh(16430) | 0;
  if (e >>> 0 > 4294967279) _q(23180);
  if (e >>> 0 < 11) {
   a[23191] = e;
   f = 23180;
  } else {
   g = e + 16 & -16;
   h = Tq(g) | 0;
   c[5795] = h;
   c[5797] = g | -2147483648;
   c[5796] = e;
   f = h;
  }
  sg(f, 16430, e) | 0;
  a[d >> 0] = 0;
  mh(f + e | 0, d);
 }
 l = b;
 return 23180;
}

function Ik(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 if (!(a[20800] | 0)) if (iv(20800) | 0) {
  c[5798] = 0;
  c[5799] = 0;
  c[5800] = 0;
  e = lh(16439) | 0;
  if (e >>> 0 > 4294967279) _q(23192);
  if (e >>> 0 < 11) {
   a[23203] = e;
   f = 23192;
  } else {
   g = e + 16 & -16;
   h = Tq(g) | 0;
   c[5798] = h;
   c[5800] = g | -2147483648;
   c[5799] = e;
   f = h;
  }
  sg(f, 16439, e) | 0;
  a[d >> 0] = 0;
  mh(f + e | 0, d);
 }
 l = b;
 return 23192;
}

function Hk(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 if (!(a[20808] | 0)) if (iv(20808) | 0) {
  c[5801] = 0;
  c[5802] = 0;
  c[5803] = 0;
  e = lh(16448) | 0;
  if (e >>> 0 > 4294967279) _q(23204);
  if (e >>> 0 < 11) {
   a[23215] = e;
   f = 23204;
  } else {
   g = e + 16 & -16;
   h = Tq(g) | 0;
   c[5801] = h;
   c[5803] = g | -2147483648;
   c[5802] = e;
   f = h;
  }
  sg(f, 16448, e) | 0;
  a[d >> 0] = 0;
  mh(f + e | 0, d);
 }
 l = b;
 return 23204;
}

function Gk(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 if (!(a[20816] | 0)) if (iv(20816) | 0) {
  c[5804] = 0;
  c[5805] = 0;
  c[5806] = 0;
  e = lh(16460) | 0;
  if (e >>> 0 > 4294967279) _q(23216);
  if (e >>> 0 < 11) {
   a[23227] = e;
   f = 23216;
  } else {
   g = e + 16 & -16;
   h = Tq(g) | 0;
   c[5804] = h;
   c[5806] = g | -2147483648;
   c[5805] = e;
   f = h;
  }
  sg(f, 16460, e) | 0;
  a[d >> 0] = 0;
  mh(f + e | 0, d);
 }
 l = b;
 return 23216;
}

function oe(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = b + 74 | 0;
 e = a[d >> 0] | 0;
 a[d >> 0] = e + 255 | e;
 e = b + 20 | 0;
 d = b + 28 | 0;
 if ((c[e >> 2] | 0) >>> 0 > (c[d >> 2] | 0) >>> 0) rc[c[b + 36 >> 2] & 31](b, 0, 0) | 0;
 c[b + 16 >> 2] = 0;
 c[d >> 2] = 0;
 c[e >> 2] = 0;
 e = c[b >> 2] | 0;
 if (!(e & 4)) {
  d = (c[b + 44 >> 2] | 0) + (c[b + 48 >> 2] | 0) | 0;
  c[b + 8 >> 2] = d;
  c[b + 4 >> 2] = d;
  f = e << 27 >> 31;
 } else {
  c[b >> 2] = e | 32;
  f = -1;
 }
 return f | 0;
}

function ir(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 h = b + 11 | 0;
 i = a[h >> 0] | 0;
 j = i << 24 >> 24 < 0;
 if (j) k = c[b + 4 >> 2] | 0; else k = i & 255;
 do if (k >>> 0 < d >>> 0) jr(b, d - k | 0, e) | 0; else if (j) {
  i = (c[b >> 2] | 0) + d | 0;
  a[g >> 0] = 0;
  mh(i, g);
  c[b + 4 >> 2] = d;
  break;
 } else {
  a[g >> 0] = 0;
  mh(b + d | 0, g);
  a[h >> 0] = d;
  break;
 } while (0);
 l = f;
 return;
}

function Uh(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 a : do if (!(a[b + 44 >> 0] | 0)) {
  f = 0;
  g = d;
  while (1) {
   if ((f | 0) >= (e | 0)) {
    h = f;
    break a;
   }
   i = c[(c[b >> 2] | 0) + 52 >> 2] | 0;
   j = rg(a[g >> 0] | 0) | 0;
   k = qc[i & 31](b, j) | 0;
   if ((k | 0) == (qg() | 0)) {
    h = f;
    break a;
   }
   f = f + 1 | 0;
   g = g + 1 | 0;
  }
 } else h = af(d, 1, e, c[b + 32 >> 2] | 0) | 0; while (0);
 return h | 0;
}

function Nh(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
 a : do if (!(a[b + 44 >> 0] | 0)) {
  f = 0;
  g = d;
  while (1) {
   if ((f | 0) >= (e | 0)) {
    h = f;
    break a;
   }
   i = c[(c[b >> 2] | 0) + 52 >> 2] | 0;
   j = Jg(c[g >> 2] | 0) | 0;
   k = qc[i & 31](b, j) | 0;
   if ((k | 0) == (Ig() | 0)) {
    h = f;
    break a;
   }
   f = f + 1 | 0;
   g = g + 4 | 0;
  }
 } else h = af(d, 4, e, c[b + 32 >> 2] | 0) | 0; while (0);
 return h | 0;
}

function sf(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0.0;
 e = l;
 l = l + 128 | 0;
 f = e;
 g = f;
 h = g + 124 | 0;
 do {
  c[g >> 2] = 0;
  g = g + 4 | 0;
 } while ((g | 0) < (h | 0));
 g = f + 4 | 0;
 c[g >> 2] = a;
 h = f + 8 | 0;
 c[h >> 2] = -1;
 c[f + 44 >> 2] = a;
 c[f + 76 >> 2] = -1;
 we(f, 0);
 i = +De(f, d, 1);
 d = (c[g >> 2] | 0) - (c[h >> 2] | 0) + (c[f + 108 >> 2] | 0) | 0;
 if (b | 0) c[b >> 2] = d | 0 ? a + d | 0 : a;
 l = e;
 return +i;
}

function Uu(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, m = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 f = b + 11 | 0;
 g = a[f >> 0] | 0;
 if (g << 24 >> 24 < 0) {
  h = c[b + 4 >> 2] | 0;
  i = c[b >> 2] | 0;
 } else {
  h = g & 255;
  i = b;
 }
 j = (h | 0) != 0 & 1;
 k = h - j | 0;
 if (!k) m = g; else {
  er(i, i + j | 0, k) | 0;
  m = a[f >> 0] | 0;
 }
 if (m << 24 >> 24 < 0) c[b + 4 >> 2] = k; else a[f >> 0] = k;
 a[e >> 0] = 0;
 mh(i + k | 0, e);
 l = d;
 return;
}

function wh(a) {
 a = a | 0;
 var b = 0, d = 0;
 b = a + 4 | 0;
 a = c[b >> 2] | 0;
 d = a + (c[(c[a >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (c[d + 24 >> 2] | 0) if (!(c[d + 16 >> 2] | 0)) if (c[d + 4 >> 2] & 8192 | 0) if (!(Aa() | 0)) {
  d = c[b >> 2] | 0;
  a = c[d + (c[(c[d >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  if ((pc[c[(c[a >> 2] | 0) + 24 >> 2] & 63](a) | 0) == -1) {
   a = c[b >> 2] | 0;
   b = a + (c[(c[a >> 2] | 0) + -12 >> 2] | 0) | 0;
   nh(b, c[b + 16 >> 2] | 1);
  }
 }
 return;
}

function si(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0;
 a = e;
 e = b;
 while (1) {
  if ((a | 0) == (f | 0)) {
   g = 7;
   break;
  }
  if ((e | 0) == (d | 0)) {
   h = -1;
   break;
  }
  b = c[e >> 2] | 0;
  i = c[a >> 2] | 0;
  if ((b | 0) < (i | 0)) {
   h = -1;
   break;
  }
  if ((i | 0) < (b | 0)) {
   h = 1;
   break;
  }
  a = a + 4 | 0;
  e = e + 4 | 0;
 }
 if ((g | 0) == 7) h = (e | 0) != (d | 0) & 1;
 return h | 0;
}

function Tt(b, c, d) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var e = 0;
 a : do if ((b | 0) == (c | 0)) e = b; else switch (a[b >> 0] | 0) {
 case 68:
 case 67:
  {
   e = Ut(b, c, d) | 0;
   break a;
   break;
  }
 case 85:
  {
   e = Vt(b, c, d) | 0;
   break a;
   break;
  }
 case 57:
 case 56:
 case 55:
 case 54:
 case 53:
 case 52:
 case 51:
 case 50:
 case 49:
  {
   e = $s(b, c, d) | 0;
   break a;
   break;
  }
 default:
  return Wt(b, c, d) | 0;
 } while (0);
 return e | 0;
}

function ze(d, e, f, g) {
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0;
 a : do if (d | 0) switch (e | 0) {
 case -2:
  {
   a[d >> 0] = f;
   break a;
   break;
  }
 case -1:
  {
   b[d >> 1] = f;
   break a;
   break;
  }
 case 0:
  {
   c[d >> 2] = f;
   break a;
   break;
  }
 case 1:
  {
   c[d >> 2] = f;
   break a;
   break;
  }
 case 3:
  {
   h = d;
   c[h >> 2] = f;
   c[h + 4 >> 2] = g;
   break a;
   break;
  }
 default:
  break a;
 } while (0);
 return;
}

function Mo(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 f = lh(20108) | 0;
 if (f >>> 0 > 4294967279) _q(b);
 if (f >>> 0 < 11) {
  a[b + 11 >> 0] = f;
  g = b;
 } else {
  h = f + 16 & -16;
  i = Tq(h) | 0;
  c[b >> 2] = i;
  c[b + 8 >> 2] = h | -2147483648;
  c[b + 4 >> 2] = f;
  g = i;
 }
 sg(g, 20108, f) | 0;
 a[e >> 0] = 0;
 mh(g + f | 0, e);
 l = d;
 return;
}

function Lo(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 f = lh(20114) | 0;
 if (f >>> 0 > 4294967279) _q(b);
 if (f >>> 0 < 11) {
  a[b + 11 >> 0] = f;
  g = b;
 } else {
  h = f + 16 & -16;
  i = Tq(h) | 0;
  c[b >> 2] = i;
  c[b + 8 >> 2] = h | -2147483648;
  c[b + 4 >> 2] = f;
  g = i;
 }
 sg(g, 20114, f) | 0;
 a[e >> 0] = 0;
 mh(g + f | 0, e);
 l = d;
 return;
}

function wu(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 g = Bs(16) | 0;
 c[b >> 2] = g;
 c[b + 8 >> 2] = -2147483632;
 c[b + 4 >> 2] = 13;
 sg(g, d, 13) | 0;
 a[f >> 0] = 0;
 mh(g + 13 | 0, f);
 f = b + 12 | 0;
 c[f >> 2] = 0;
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[f + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = e;
 return;
}

function kd(a) {
 a = a | 0;
 var b = 0, e = 0, f = 0, g = 0, h = 0, i = 0;
 b = a + 44 | 0;
 e = c[b >> 2] | 0;
 f = c[a + 24 >> 2] | 0;
 if (e >>> 0 < f >>> 0) {
  c[b >> 2] = f;
  g = f;
 } else g = e;
 if (!(c[a + 48 >> 2] & 8)) {
  h = -1;
  return h | 0;
 }
 e = a + 16 | 0;
 f = c[e >> 2] | 0;
 if (f >>> 0 < g >>> 0) {
  c[e >> 2] = g;
  i = g;
 } else i = f;
 f = c[a + 12 >> 2] | 0;
 if (f >>> 0 >= i >>> 0) {
  h = -1;
  return h | 0;
 }
 h = d[f >> 0] | 0;
 return h | 0;
}

function bu(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 g = Bs(16) | 0;
 c[b >> 2] = g;
 c[b + 8 >> 2] = -2147483632;
 c[b + 4 >> 2] = 12;
 sg(g, d, 12) | 0;
 a[f >> 0] = 0;
 mh(g + 12 | 0, f);
 f = b + 12 | 0;
 c[f >> 2] = 0;
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[f + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = e;
 return;
}

function au(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 g = Bs(16) | 0;
 c[b >> 2] = g;
 c[b + 8 >> 2] = -2147483632;
 c[b + 4 >> 2] = 14;
 sg(g, d, 14) | 0;
 a[f >> 0] = 0;
 mh(g + 14 | 0, f);
 f = b + 12 | 0;
 c[f >> 2] = 0;
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[f + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = e;
 return;
}

function Zt(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 g = Bs(32) | 0;
 c[b >> 2] = g;
 c[b + 8 >> 2] = -2147483616;
 c[b + 4 >> 2] = 17;
 sg(g, d, 17) | 0;
 a[f >> 0] = 0;
 mh(g + 17 | 0, f);
 f = b + 12 | 0;
 c[f >> 2] = 0;
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[f + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = e;
 return;
}

function $t(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 g = Bs(16) | 0;
 c[b >> 2] = g;
 c[b + 8 >> 2] = -2147483632;
 c[b + 4 >> 2] = 11;
 sg(g, d, 11) | 0;
 a[f >> 0] = 0;
 mh(g + 11 | 0, f);
 f = b + 12 | 0;
 c[f >> 2] = 0;
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[f + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = e;
 return;
}

function pf(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0, j = 0, k = 0;
 g = l;
 l = l + 128 | 0;
 h = g;
 c[h >> 2] = 0;
 i = h + 4 | 0;
 c[i >> 2] = a;
 c[h + 44 >> 2] = a;
 j = h + 8 | 0;
 c[j >> 2] = (a | 0) < 0 ? -1 : a + 2147483647 | 0;
 c[h + 76 >> 2] = -1;
 we(h, 0);
 k = Ce(h, d, 1, e, f) | 0;
 if (b | 0) c[b >> 2] = a + ((c[i >> 2] | 0) + (c[h + 108 >> 2] | 0) - (c[j >> 2] | 0));
 l = g;
 return k | 0;
}

function _t(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 f = Bs(16) | 0;
 c[b >> 2] = f;
 c[b + 8 >> 2] = -2147483632;
 c[b + 4 >> 2] = 15;
 sg(f, 19693, 15) | 0;
 a[e >> 0] = 0;
 mh(f + 15 | 0, e);
 e = b + 12 | 0;
 c[e >> 2] = 0;
 c[e + 4 >> 2] = 0;
 c[e + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[e + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = d;
 return;
}

function Xu(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 f = Bs(32) | 0;
 c[b >> 2] = f;
 c[b + 8 >> 2] = -2147483616;
 c[b + 4 >> 2] = 18;
 sg(f, 20520, 18) | 0;
 a[e >> 0] = 0;
 mh(f + 18 | 0, e);
 e = b + 12 | 0;
 c[e >> 2] = 0;
 c[e + 4 >> 2] = 0;
 c[e + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[e + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = d;
 return;
}

function Cu(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 f = Bs(32) | 0;
 c[b >> 2] = f;
 c[b + 8 >> 2] = -2147483616;
 c[b + 4 >> 2] = 21;
 sg(f, 20299, 21) | 0;
 a[e >> 0] = 0;
 mh(f + 21 | 0, e);
 e = b + 12 | 0;
 c[e >> 2] = 0;
 c[e + 4 >> 2] = 0;
 c[e + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[e + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = d;
 return;
}

function dt(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 c[a >> 2] = c[b >> 2];
 c[a + 4 >> 2] = c[b + 4 >> 2];
 c[a + 8 >> 2] = c[b + 8 >> 2];
 d = 0;
 while (1) {
  if ((d | 0) == 3) break;
  c[b + (d << 2) >> 2] = 0;
  d = d + 1 | 0;
 }
 d = a + 12 | 0;
 a = b + 12 | 0;
 c[d >> 2] = c[a >> 2];
 c[d + 4 >> 2] = c[a + 4 >> 2];
 c[d + 8 >> 2] = c[a + 8 >> 2];
 d = 0;
 while (1) {
  if ((d | 0) == 3) break;
  c[a + (d << 2) >> 2] = 0;
  d = d + 1 | 0;
 }
 return;
}

function Xd(a, b, c, d, e) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0;
 f = l;
 l = l + 256 | 0;
 g = f;
 if ((c | 0) > (d | 0) & (e & 73728 | 0) == 0) {
  e = c - d | 0;
  Bv(g | 0, b | 0, (e >>> 0 < 256 ? e : 256) | 0) | 0;
  if (e >>> 0 > 255) {
   b = c - d | 0;
   d = e;
   do {
    Pd(a, g, 256);
    d = d + -256 | 0;
   } while (d >>> 0 > 255);
   h = b & 255;
  } else h = e;
  Pd(a, g, h);
 }
 l = f;
 return;
}

function Vi(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 h = l;
 l = l + 16 | 0;
 i = h;
 qh(i, d);
 d = Ji(i, 23108) | 0;
 sc[c[(c[d >> 2] | 0) + 32 >> 2] & 7](d, 15968, 16e3, e) | 0;
 e = Ji(i, 23124) | 0;
 a[f >> 0] = pc[c[(c[e >> 2] | 0) + 12 >> 2] & 63](e) | 0;
 a[g >> 0] = pc[c[(c[e >> 2] | 0) + 16 >> 2] & 63](e) | 0;
 Bc[c[(c[e >> 2] | 0) + 20 >> 2] & 63](b, e);
 Ki(i);
 l = h;
 return;
}

function Fj(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0;
 g = l;
 l = l + 16 | 0;
 h = g;
 qh(h, b);
 b = Ji(h, 23140) | 0;
 sc[c[(c[b >> 2] | 0) + 48 >> 2] & 7](b, 15968, 16e3, d) | 0;
 d = Ji(h, 23148) | 0;
 c[e >> 2] = pc[c[(c[d >> 2] | 0) + 12 >> 2] & 63](d) | 0;
 c[f >> 2] = pc[c[(c[d >> 2] | 0) + 16 >> 2] & 63](d) | 0;
 Bc[c[(c[d >> 2] | 0) + 20 >> 2] & 63](a, d);
 Ki(h);
 l = g;
 return;
}

function Ql(b, d, e, f, g, h) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 var i = 0, j = 0, k = 0, m = 0;
 i = l;
 l = l + 16 | 0;
 j = i;
 a[j >> 0] = 37;
 k = j + 1 | 0;
 a[k >> 0] = g;
 m = j + 2 | 0;
 a[m >> 0] = h;
 a[j + 3 >> 0] = 0;
 if (h << 24 >> 24) {
  a[k >> 0] = h;
  a[m >> 0] = g;
 }
 g = Rl(d, c[e >> 2] | 0) | 0;
 c[e >> 2] = d + (ub(d | 0, g | 0, j | 0, f | 0, c[b >> 2] | 0) | 0);
 l = i;
 return;
}

function ds(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0;
 a : do if (Ir(b, c[d + 8 >> 2] | 0, 0) | 0) Jr(0, d, e, f); else {
  g = c[b + 12 >> 2] | 0;
  h = b + 16 + (g << 3) | 0;
  es(b + 16 | 0, d, e, f);
  if ((g | 0) > 1) {
   g = d + 54 | 0;
   i = b + 24 | 0;
   do {
    es(i, d, e, f);
    if (a[g >> 0] | 0) break a;
    i = i + 8 | 0;
   } while (i >>> 0 < h >>> 0);
  }
 } while (0);
 return;
}

function xq(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0;
 c[b + 12 >> 2] = 0;
 c[b + 16 >> 2] = f;
 do if (!d) g = 0; else {
  h = f + 112 | 0;
  if (d >>> 0 < 29 & (a[h >> 0] | 0) == 0) {
   a[h >> 0] = 1;
   g = f;
   break;
  } else {
   g = Tq(d << 2) | 0;
   break;
  }
 } while (0);
 c[b >> 2] = g;
 f = g + (e << 2) | 0;
 c[b + 8 >> 2] = f;
 c[b + 4 >> 2] = f;
 c[b + 12 >> 2] = g + (d << 2);
 return;
}

function uh(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 if (c[b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  vh(e, b);
  if (a[e >> 0] | 0) {
   f = c[b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
   if ((pc[c[(c[f >> 2] | 0) + 24 >> 2] & 63](f) | 0) == -1) {
    f = b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) | 0;
    nh(f, c[f + 16 >> 2] | 1);
   }
  }
  wh(e);
 }
 l = d;
 return b | 0;
}

function nf(b, c, d) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;
 a : do if (!d) e = 0; else {
  f = b;
  g = d;
  h = c;
  while (1) {
   i = a[f >> 0] | 0;
   j = a[h >> 0] | 0;
   if (i << 24 >> 24 != j << 24 >> 24) break;
   g = g + -1 | 0;
   if (!g) {
    e = 0;
    break a;
   } else {
    f = f + 1 | 0;
    h = h + 1 | 0;
   }
  }
  e = (i & 255) - (j & 255) | 0;
 } while (0);
 return e | 0;
}

function ke(b, c) {
 b = b | 0;
 c = c | 0;
 var d = 0, e = 0, f = 0, g = 0;
 d = a[b >> 0] | 0;
 e = a[c >> 0] | 0;
 if (d << 24 >> 24 == 0 ? 1 : d << 24 >> 24 != e << 24 >> 24) {
  f = e;
  g = d;
 } else {
  d = c;
  c = b;
  do {
   c = c + 1 | 0;
   d = d + 1 | 0;
   b = a[c >> 0] | 0;
   e = a[d >> 0] | 0;
  } while (!(b << 24 >> 24 == 0 ? 1 : b << 24 >> 24 != e << 24 >> 24));
  f = e;
  g = b;
 }
 return (g & 255) - (f & 255) | 0;
}

function Jr(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0;
 b = d + 16 | 0;
 g = c[b >> 2] | 0;
 do if (!g) {
  c[b >> 2] = e;
  c[d + 24 >> 2] = f;
  c[d + 36 >> 2] = 1;
 } else {
  if ((g | 0) != (e | 0)) {
   h = d + 36 | 0;
   c[h >> 2] = (c[h >> 2] | 0) + 1;
   c[d + 24 >> 2] = 2;
   a[d + 54 >> 0] = 1;
   break;
  }
  h = d + 24 | 0;
  if ((c[h >> 2] | 0) == 2) c[h >> 2] = f;
 } while (0);
 return;
}

function xl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 4 | 0;
 j = h;
 k = a + 8 | 0;
 a = pc[c[(c[k >> 2] | 0) + 4 >> 2] & 63](k) | 0;
 c[j >> 2] = c[e >> 2];
 c[i >> 2] = c[j >> 2];
 j = (Qj(d, i, a, a + 288 | 0, g, f, 0) | 0) - a | 0;
 if ((j | 0) < 288) c[b >> 2] = ((j | 0) / 12 | 0 | 0) % 12 | 0;
 l = h;
 return;
}

function Ok(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 4 | 0;
 j = h;
 k = a + 8 | 0;
 a = pc[c[(c[k >> 2] | 0) + 4 >> 2] & 63](k) | 0;
 c[j >> 2] = c[e >> 2];
 c[i >> 2] = c[j >> 2];
 j = (pj(d, i, a, a + 288 | 0, g, f, 0) | 0) - a | 0;
 if ((j | 0) < 288) c[b >> 2] = ((j | 0) / 12 | 0 | 0) % 12 | 0;
 l = h;
 return;
}

function wl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 4 | 0;
 j = h;
 k = a + 8 | 0;
 a = pc[c[c[k >> 2] >> 2] & 63](k) | 0;
 c[j >> 2] = c[e >> 2];
 c[i >> 2] = c[j >> 2];
 j = (Qj(d, i, a, a + 168 | 0, g, f, 0) | 0) - a | 0;
 if ((j | 0) < 168) c[b >> 2] = ((j | 0) / 12 | 0 | 0) % 7 | 0;
 l = h;
 return;
}

function Nk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 4 | 0;
 j = h;
 k = a + 8 | 0;
 a = pc[c[c[k >> 2] >> 2] & 63](k) | 0;
 c[j >> 2] = c[e >> 2];
 c[i >> 2] = c[j >> 2];
 j = (pj(d, i, a, a + 168 | 0, g, f, 0) | 0) - a | 0;
 if ((j | 0) < 168) c[b >> 2] = ((j | 0) / 12 | 0 | 0) % 7 | 0;
 l = h;
 return;
}

function tq(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;
 d = a + 4 | 0;
 e = c[d >> 2] | 0;
 f = c[a >> 2] | 0;
 g = e - f >> 2;
 h = f;
 f = e;
 a : do if (g >>> 0 < b >>> 0) uq(a, b - g | 0); else if (g >>> 0 > b >>> 0) {
  e = h + (b << 2) | 0;
  i = f;
  while (1) {
   if ((i | 0) == (e | 0)) break a;
   j = i + -4 | 0;
   c[d >> 2] = j;
   i = j;
  }
 } while (0);
 return;
}

function Yf(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 if (a - b >> 2 >>> 0 < d >>> 0) {
  e = d;
  do {
   e = e + -1 | 0;
   c[a + (e << 2) >> 2] = c[b + (e << 2) >> 2];
  } while ((e | 0) != 0);
 } else if (d | 0) {
  e = b;
  b = a;
  f = d;
  while (1) {
   f = f + -1 | 0;
   c[b >> 2] = c[e >> 2];
   if (!f) break; else {
    e = e + 4 | 0;
    b = b + 4 | 0;
   }
  }
 }
 return a | 0;
}

function bt(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 c[a >> 2] = c[b >> 2];
 c[a + 4 >> 2] = c[b + 4 >> 2];
 c[a + 8 >> 2] = c[b + 8 >> 2];
 d = 0;
 while (1) {
  if ((d | 0) == 3) break;
  c[b + (d << 2) >> 2] = 0;
  d = d + 1 | 0;
 }
 d = a + 12 | 0;
 c[d >> 2] = 0;
 c[d + 4 >> 2] = 0;
 c[d + 8 >> 2] = 0;
 a = 0;
 while (1) {
  if ((a | 0) == 3) break;
  c[d + (a << 2) >> 2] = 0;
  a = a + 1 | 0;
 }
 return;
}

function Xt(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 11 >> 0] = 10;
 sg(b, d, 10) | 0;
 a[f >> 0] = 0;
 mh(b + 10 | 0, f);
 f = b + 12 | 0;
 c[f >> 2] = 0;
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[f + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = e;
 return;
}

function su(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 11 >> 0] = 4;
 sg(b, d, 4) | 0;
 a[f >> 0] = 0;
 mh(b + 4 | 0, f);
 f = b + 12 | 0;
 c[f >> 2] = 0;
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[f + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = e;
 return;
}

function Yu(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 11 >> 0] = 8;
 sg(b, d, 8) | 0;
 a[f >> 0] = 0;
 mh(b + 8 | 0, f);
 f = b + 12 | 0;
 c[f >> 2] = 0;
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[f + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = e;
 return;
}

function Yt(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 11 >> 0] = 9;
 sg(b, d, 9) | 0;
 a[f >> 0] = 0;
 mh(b + 9 | 0, f);
 f = b + 12 | 0;
 c[f >> 2] = 0;
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[f + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = e;
 return;
}

function Wu(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 11 >> 0] = 3;
 sg(b, d, 3) | 0;
 a[f >> 0] = 0;
 mh(b + 3 | 0, f);
 f = b + 12 | 0;
 c[f >> 2] = 0;
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[f + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = e;
 return;
}

function Lt(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 11 >> 0] = 5;
 sg(b, d, 5) | 0;
 a[f >> 0] = 0;
 mh(b + 5 | 0, f);
 f = b + 12 | 0;
 c[f >> 2] = 0;
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[f + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = e;
 return;
}

function _k(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = bl(d, h, f, g, 4) | 0;
 if (!(c[f >> 2] & 4)) {
  if ((i | 0) < 69) j = i + 2e3 | 0; else j = (i | 0) < 100 ? i + 1900 | 0 : i;
  c[b >> 2] = j + -1900;
 }
 l = a;
 return;
}

function Jl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = Ml(d, h, f, g, 4) | 0;
 if (!(c[f >> 2] & 4)) {
  if ((i | 0) < 69) j = i + 2e3 | 0; else j = (i | 0) < 100 ? i + 1900 | 0 : i;
  c[b >> 2] = j + -1900;
 }
 l = a;
 return;
}

function Zu(b) {
 b = b | 0;
 var d = 0, e = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 11 >> 0] = 6;
 sg(b, 20513, 6) | 0;
 a[e >> 0] = 0;
 mh(b + 6 | 0, e);
 e = b + 12 | 0;
 c[e >> 2] = 0;
 c[e + 4 >> 2] = 0;
 c[e + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[e + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = d;
 return;
}

function Vu(b) {
 b = b | 0;
 var d = 0, e = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 11 >> 0] = 7;
 sg(b, 20100, 7) | 0;
 a[e >> 0] = 0;
 mh(b + 7 | 0, e);
 e = b + 12 | 0;
 c[e >> 2] = 0;
 c[e + 4 >> 2] = 0;
 c[e + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[e + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = d;
 return;
}

function Lu(b) {
 b = b | 0;
 var d = 0, e = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 11 >> 0] = 2;
 sg(b, 20324, 2) | 0;
 a[e >> 0] = 0;
 mh(b + 2 | 0, e);
 e = b + 12 | 0;
 c[e >> 2] = 0;
 c[e + 4 >> 2] = 0;
 c[e + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[e + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 l = d;
 return;
}

function af(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0, j = 0;
 f = O(d, b) | 0;
 g = (b | 0) == 0 ? 0 : d;
 if ((c[e + 76 >> 2] | 0) > -1) {
  d = (Nd(e) | 0) == 0;
  h = le(a, f, e) | 0;
  if (d) i = h; else {
   Od(e);
   i = h;
  }
 } else i = le(a, f, e) | 0;
 if ((i | 0) == (f | 0)) j = g; else j = (i >>> 0) / (b >>> 0) | 0;
 return j | 0;
}

function _s(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0;
 e = d + 12 | 0;
 f = a[e + 11 >> 0] | 0;
 g = f << 24 >> 24 < 0;
 qs(d, g ? c[e >> 2] | 0 : e, g ? c[d + 16 >> 2] | 0 : f & 255) | 0;
 c[b >> 2] = c[d >> 2];
 c[b + 4 >> 2] = c[d + 4 >> 2];
 c[b + 8 >> 2] = c[d + 8 >> 2];
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[d + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function Aq(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0;
 d = c[b + 4 >> 2] | 0;
 e = b + 8 | 0;
 f = c[e >> 2] | 0;
 while (1) {
  if ((f | 0) == (d | 0)) break;
  g = f + -4 | 0;
  c[e >> 2] = g;
  f = g;
 }
 f = c[b >> 2] | 0;
 do if (f | 0) {
  e = c[b + 16 >> 2] | 0;
  if ((f | 0) == (e | 0)) {
   a[e + 112 >> 0] = 0;
   break;
  } else {
   Uq(f);
   break;
  }
 } while (0);
 return;
}

function iu(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0;
 if ((a | 0) == (b | 0)) e = a; else {
  f = Qt(a, b, d) | 0;
  if ((f | 0) == (a | 0)) g = St(a, b, d) | 0; else g = f;
  if ((g | 0) == (a | 0)) e = a; else {
   f = c[d + 4 >> 2] | 0;
   if ((c[d >> 2] | 0) == (f | 0)) e = a; else {
    Ls(f + -24 | 0, 0, 18978) | 0;
    e = g;
   }
  }
 }
 return e | 0;
}

function Ws(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0, i = 0;
 f = a[b + 11 >> 0] | 0;
 g = f << 24 >> 24 < 0;
 if (g) h = c[b + 4 >> 2] | 0; else h = f & 255;
 if ((e | 0) == -1) $q(b);
 if (g) i = c[b >> 2] | 0; else i = b;
 b = h >>> 0 > e >>> 0;
 g = Mq(i, d, b ? e : h) | 0;
 if (!g) return (h >>> 0 < e >>> 0 ? -1 : b & 1) | 0; else return g | 0;
 return 0;
}

function Sd(b, c, e, f) {
 b = b | 0;
 c = c | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0;
 if ((b | 0) == 0 & (c | 0) == 0) g = e; else {
  h = e;
  e = c;
  c = b;
  while (1) {
   b = h + -1 | 0;
   a[b >> 0] = d[13036 + (c & 15) >> 0] | 0 | f;
   c = wv(c | 0, e | 0, 4) | 0;
   e = z;
   if ((c | 0) == 0 & (e | 0) == 0) {
    g = b;
    break;
   } else h = b;
  }
 }
 return g | 0;
}

function Oi(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0, g = 0;
 b = l;
 l = l + 48 | 0;
 d = b + 32 | 0;
 e = b + 24 | 0;
 f = b;
 g = b + 16 | 0;
 c[g >> 2] = 113;
 c[g + 4 >> 2] = 0;
 c[d >> 2] = c[g >> 2];
 c[d + 4 >> 2] = c[g + 4 >> 2];
 Ri(f, d, a);
 if ((c[a >> 2] | 0) != -1) {
  c[d >> 2] = f;
  c[e >> 2] = d;
  Sq(a, e, 114);
 }
 l = b;
 return (c[a + 4 >> 2] | 0) + -1 | 0;
}

function xk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = Pk(a, j, i, e, f, g, 16742, 16750) | 0;
 l = h;
 return m | 0;
}

function fl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = yl(a, j, i, e, f, g, 8848, 8880) | 0;
 l = h;
 return m | 0;
}

function me(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = b + 74 | 0;
 e = a[d >> 0] | 0;
 a[d >> 0] = e + 255 | e;
 e = c[b >> 2] | 0;
 if (!(e & 8)) {
  c[b + 8 >> 2] = 0;
  c[b + 4 >> 2] = 0;
  d = c[b + 44 >> 2] | 0;
  c[b + 28 >> 2] = d;
  c[b + 20 >> 2] = d;
  c[b + 16 >> 2] = d + (c[b + 48 >> 2] | 0);
  f = 0;
 } else {
  c[b >> 2] = e | 32;
  f = -1;
 }
 return f | 0;
}

function Qd(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0, h = 0;
 d = c[b >> 2] | 0;
 e = (a[d >> 0] | 0) + -48 | 0;
 if (e >>> 0 < 10) {
  f = 0;
  g = d;
  d = e;
  while (1) {
   e = d + (f * 10 | 0) | 0;
   g = g + 1 | 0;
   c[b >> 2] = g;
   d = (a[g >> 0] | 0) + -48 | 0;
   if (d >>> 0 >= 10) {
    h = e;
    break;
   } else f = e;
  }
 } else h = 0;
 return h | 0;
}

function zj(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = Ij(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function zi(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = nj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function yj(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = Jj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function xj(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = Lj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function wj(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = Mj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function vj(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = Nj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function uj(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = Oj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function tj(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = Pj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function dj(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0;
 g = l;
 l = l + 16 | 0;
 h = g;
 qh(h, d);
 d = Ji(h, 23108) | 0;
 sc[c[(c[d >> 2] | 0) + 32 >> 2] & 7](d, 15968, 15994, e) | 0;
 e = Ji(h, 23124) | 0;
 a[f >> 0] = pc[c[(c[e >> 2] | 0) + 16 >> 2] & 63](e) | 0;
 Bc[c[(c[e >> 2] | 0) + 20 >> 2] & 63](b, e);
 Ki(h);
 l = g;
 return;
}

function Kj(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 qh(g, b);
 b = Ji(g, 23140) | 0;
 sc[c[(c[b >> 2] | 0) + 48 >> 2] & 7](b, 15968, 15994, d) | 0;
 d = Ji(g, 23148) | 0;
 c[e >> 2] = pc[c[(c[d >> 2] | 0) + 16 >> 2] & 63](d) | 0;
 Bc[c[(c[d >> 2] | 0) + 20 >> 2] & 63](a, d);
 Ki(g);
 l = f;
 return;
}

function Hi(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = Ui(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function Gi(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = Zi(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function Fi(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = $i(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function Ei(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = bj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function Di(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = fj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function Ci(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = hj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function Bj(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = Ej(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function Bi(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = jj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function Aj(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = Hj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function Ai(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0, k = 0, m = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 12 | 0;
 j = h + 8 | 0;
 k = h + 4 | 0;
 m = h;
 c[k >> 2] = c[b >> 2];
 c[m >> 2] = c[d >> 2];
 c[j >> 2] = c[k >> 2];
 c[i >> 2] = c[m >> 2];
 m = lj(a, j, i, e, f, g) | 0;
 l = h;
 return m | 0;
}

function sq(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0;
 Oq(b);
 e = a + 8 | 0;
 f = c[e >> 2] | 0;
 if ((c[a + 12 >> 2] | 0) - f >> 2 >>> 0 > d >>> 0) {
  g = e;
  h = f;
 } else {
  tq(e, d + 1 | 0);
  g = e;
  h = c[e >> 2] | 0;
 }
 e = c[h + (d << 2) >> 2] | 0;
 if (e | 0) Qq(e) | 0;
 c[(c[g >> 2] | 0) + (d << 2) >> 2] = b;
 return;
}

function Kk() {
 var b = 0, d = 0;
 if (!(a[20832] | 0)) if (iv(20832) | 0) {
  b = 23228;
  do {
   c[b >> 2] = 0;
   c[b + 4 >> 2] = 0;
   c[b + 8 >> 2] = 0;
   d = 0;
   while (1) {
    if ((d | 0) == 3) break;
    c[b + (d << 2) >> 2] = 0;
    d = d + 1 | 0;
   }
   b = b + 12 | 0;
  } while ((b | 0) != 23516);
 }
 hr(23228, 16481) | 0;
 hr(23240, 16484) | 0;
 return;
}

function zl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = Ml(d, h, f, g, 2) | 0;
 g = c[f >> 2] | 0;
 if ((i + -1 | 0) >>> 0 < 31 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function tl() {
 var b = 0, d = 0;
 if (!(a[20912] | 0)) if (iv(20912) | 0) {
  b = 24040;
  do {
   c[b >> 2] = 0;
   c[b + 4 >> 2] = 0;
   c[b + 8 >> 2] = 0;
   d = 0;
   while (1) {
    if ((d | 0) == 3) break;
    c[b + (d << 2) >> 2] = 0;
    d = d + 1 | 0;
   }
   b = b + 12 | 0;
  } while ((b | 0) != 24328);
 }
 sr(24040, 7804) | 0;
 sr(24052, 7816) | 0;
 return;
}

function Sk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = bl(d, h, f, g, 2) | 0;
 g = c[f >> 2] | 0;
 if ((i + -1 | 0) >>> 0 < 12 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function Qk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = bl(d, h, f, g, 2) | 0;
 g = c[f >> 2] | 0;
 if ((i + -1 | 0) >>> 0 < 31 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function Bl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = Ml(d, h, f, g, 2) | 0;
 g = c[f >> 2] | 0;
 if ((i + -1 | 0) >>> 0 < 12 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function Ed(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0;
 e = l;
 l = l + 32 | 0;
 f = e;
 g = e + 20 | 0;
 c[f >> 2] = c[a + 60 >> 2];
 c[f + 4 >> 2] = 0;
 c[f + 8 >> 2] = b;
 c[f + 12 >> 2] = g;
 c[f + 16 >> 2] = d;
 if ((Fd(Ja(140, f | 0) | 0) | 0) < 0) {
  c[g >> 2] = -1;
  h = -1;
 } else h = c[g >> 2] | 0;
 l = e;
 return h | 0;
}

function ju(a) {
 a = a | 0;
 var b = 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 b = a + 12 | 0;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a = 0;
 while (1) {
  if ((a | 0) == 3) break;
  c[b + (a << 2) >> 2] = 0;
  a = a + 1 | 0;
 }
 return;
}

function Uk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = bl(d, h, f, g, 2) | 0;
 g = c[f >> 2] | 0;
 if ((i | 0) < 13 & (g & 4 | 0) == 0) c[b >> 2] = i + -1; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function Dl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = Ml(d, h, f, g, 2) | 0;
 g = c[f >> 2] | 0;
 if ((i | 0) < 13 & (g & 4 | 0) == 0) c[b >> 2] = i + -1; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function $e(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0, i = 0;
 e = a + 84 | 0;
 f = c[e >> 2] | 0;
 g = d + 256 | 0;
 h = Wd(f, 0, g) | 0;
 i = (h | 0) == 0 ? g : h - f | 0;
 h = i >>> 0 < d >>> 0 ? i : d;
 zv(b | 0, f | 0, h | 0) | 0;
 c[a + 4 >> 2] = f + h;
 b = f + i | 0;
 c[a + 8 >> 2] = b;
 c[e >> 2] = b;
 return h | 0;
}

function Tk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = bl(d, h, f, g, 3) | 0;
 g = c[f >> 2] | 0;
 if ((i | 0) < 366 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function Cl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = Ml(d, h, f, g, 3) | 0;
 g = c[f >> 2] | 0;
 if ((i | 0) < 366 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function Yk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = bl(d, h, f, g, 2) | 0;
 g = c[f >> 2] | 0;
 if ((i | 0) < 61 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function Vk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = bl(d, h, f, g, 2) | 0;
 g = c[f >> 2] | 0;
 if ((i | 0) < 60 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function Rk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = bl(d, h, f, g, 2) | 0;
 g = c[f >> 2] | 0;
 if ((i | 0) < 24 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function Hl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = Ml(d, h, f, g, 2) | 0;
 g = c[f >> 2] | 0;
 if ((i | 0) < 61 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function El(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = Ml(d, h, f, g, 2) | 0;
 g = c[f >> 2] | 0;
 if ((i | 0) < 60 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function Al(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = Ml(d, h, f, g, 2) | 0;
 g = c[f >> 2] | 0;
 if ((i | 0) < 24 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function so(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0;
 d = c[b >> 2] | 0;
 do if (d | 0) {
  e = b + 4 | 0;
  f = c[e >> 2] | 0;
  while (1) {
   if ((f | 0) == (d | 0)) break;
   g = f + -4 | 0;
   c[e >> 2] = g;
   f = g;
  }
  if ((d | 0) == (b + 16 | 0)) {
   a[b + 128 >> 0] = 0;
   break;
  } else {
   Uq(d);
   break;
  }
 } while (0);
 return;
}

function Zk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = bl(d, h, f, g, 1) | 0;
 g = c[f >> 2] | 0;
 if ((i | 0) < 7 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function Il(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = Ml(d, h, f, g, 1) | 0;
 g = c[f >> 2] | 0;
 if ((i | 0) < 7 & (g & 4 | 0) == 0) c[b >> 2] = i; else c[f >> 2] = g | 4;
 l = a;
 return;
}

function Zo(a, d, e, f) {
 a = a | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0;
 a = e;
 while (1) {
  if ((a | 0) == (f | 0)) {
   g = f;
   break;
  }
  if ((c[a >> 2] | 0) >>> 0 >= 128) {
   g = a;
   break;
  }
  e = Fo() | 0;
  if (!((b[e + (c[a >> 2] << 1) >> 1] & d) << 16 >> 16)) {
   g = a;
   break;
  }
  a = a + 4 | 0;
 }
 return g | 0;
}

function Td(b, c, d) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var e = 0, f = 0;
 if ((b | 0) == 0 & (c | 0) == 0) e = d; else {
  f = d;
  d = c;
  c = b;
  while (1) {
   b = f + -1 | 0;
   a[b >> 0] = c & 7 | 48;
   c = wv(c | 0, d | 0, 3) | 0;
   d = z;
   if ((c | 0) == 0 & (d | 0) == 0) {
    e = b;
    break;
   } else f = b;
  }
 }
 return e | 0;
}

function cf(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0;
 e = l;
 l = l + 128 | 0;
 f = e;
 g = f;
 h = g + 124 | 0;
 do {
  c[g >> 2] = 0;
  g = g + 4 | 0;
 } while ((g | 0) < (h | 0));
 c[f + 32 >> 2] = 30;
 c[f + 44 >> 2] = a;
 c[f + 76 >> 2] = -1;
 c[f + 84 >> 2] = a;
 a = ue(f, b, d) | 0;
 l = e;
 return a | 0;
}

function ho(a, b, d, e, f, g, h, i) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0;
 b = l;
 l = l + 16 | 0;
 a = b + 4 | 0;
 j = b;
 c[a >> 2] = d;
 c[j >> 2] = g;
 k = oo(d, e, a, g, h, j, 1114111, 0) | 0;
 c[f >> 2] = c[a >> 2];
 c[i >> 2] = c[j >> 2];
 l = b;
 return k | 0;
}

function go(a, b, d, e, f, g, h, i) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0;
 b = l;
 l = l + 16 | 0;
 a = b + 4 | 0;
 j = b;
 c[a >> 2] = d;
 c[j >> 2] = g;
 k = po(d, e, a, g, h, j, 1114111, 0) | 0;
 c[f >> 2] = c[a >> 2];
 c[i >> 2] = c[j >> 2];
 l = b;
 return k | 0;
}

function Hn(a, b, d, e, f, g, h, i) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0;
 b = l;
 l = l + 16 | 0;
 a = b + 4 | 0;
 j = b;
 c[a >> 2] = d;
 c[j >> 2] = g;
 k = On(d, e, a, g, h, j, 1114111, 0) | 0;
 c[f >> 2] = c[a >> 2];
 c[i >> 2] = c[j >> 2];
 l = b;
 return k | 0;
}

function Gn(a, b, d, e, f, g, h, i) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 var j = 0, k = 0;
 b = l;
 l = l + 16 | 0;
 a = b + 4 | 0;
 j = b;
 c[a >> 2] = d;
 c[j >> 2] = g;
 k = Pn(d, e, a, g, h, j, 1114111, 0) | 0;
 c[f >> 2] = c[a >> 2];
 c[i >> 2] = c[j >> 2];
 l = b;
 return k | 0;
}

function Oc(a) {
 a = a | 0;
 ab(10920, 3, 2120, 10933, 28, 17);
 ab(10938, 3, 2132, 10953, 1, 1);
 ab(10958, 2, 2144, 10971, 18, 39);
 Xa(64, 72, 88, 0, 10975, 61, 10978, 0, 10978, 0, 10980, 10992, 112);
 Ya(64, 2, 2152, 10971, 19, 62);
 a = Tq(8) | 0;
 c[a >> 2] = 29;
 c[a + 4 >> 2] = 0;
 Za(64, 10995, 4, 2160, 11005, 6, a | 0, 0);
 return;
}

function fs(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0;
 h = c[a + 4 >> 2] | 0;
 i = h >> 8;
 if (!(h & 1)) j = i; else j = c[(c[e >> 2] | 0) + i >> 2] | 0;
 i = c[a >> 2] | 0;
 Fc[c[(c[i >> 2] | 0) + 20 >> 2] & 15](i, b, d, e + j | 0, h & 2 | 0 ? f : 2, g);
 return;
}

function nv() {}
function ov(a, b) {
 a = a | 0;
 b = b | 0;
 var c = 0, d = 0, e = 0, f = 0;
 c = a & 65535;
 d = b & 65535;
 e = O(d, c) | 0;
 f = a >>> 16;
 a = (e >>> 16) + (O(d, f) | 0) | 0;
 d = b >>> 16;
 b = O(d, c) | 0;
 return (z = (a >>> 16) + (O(d, f) | 0) + (((a & 65535) + b | 0) >>> 16) | 0, a + b << 16 | e & 65535 | 0) | 0;
}

function Xq(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 g = mf((a[d + 11 >> 0] | 0) < 0 ? c[d >> 2] | 0 : d, 0, f) | 0;
 c[b >> 2] = g;
 if ((g | 0) < 0) {
  g = c[(Gd() | 0) >> 2] | 0;
  mp(f, 18121, d);
  wr(g, (a[f + 11 >> 0] | 0) < 0 ? c[f >> 2] | 0 : f);
 } else {
  l = e;
  return;
 }
}

function qo(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0, g = 0;
 c[a >> 2] = 9480;
 b = a + 8 | 0;
 d = a + 12 | 0;
 e = 0;
 while (1) {
  f = c[b >> 2] | 0;
  if (e >>> 0 >= (c[d >> 2] | 0) - f >> 2 >>> 0) break;
  g = c[f + (e << 2) >> 2] | 0;
  if (g | 0) Qq(g) | 0;
  e = e + 1 | 0;
 }
 br(a + 144 | 0);
 so(b);
 pi(a);
 return;
}

function Ih(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 th(b);
 c[b >> 2] = 6888;
 c[b + 32 >> 2] = d;
 Jq(g, b + 4 | 0);
 d = Ji(g, 24908) | 0;
 Ki(g);
 c[b + 36 >> 2] = d;
 c[b + 40 >> 2] = e;
 a[b + 44 >> 0] = (pc[c[(c[d >> 2] | 0) + 28 >> 2] & 63](d) | 0) & 1;
 l = f;
 return;
}
function Hh(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 sh(b);
 c[b >> 2] = 6952;
 c[b + 32 >> 2] = d;
 Jq(g, b + 4 | 0);
 d = Ji(g, 24900) | 0;
 Ki(g);
 c[b + 36 >> 2] = d;
 c[b + 40 >> 2] = e;
 a[b + 44 >> 0] = (pc[c[(c[d >> 2] | 0) + 28 >> 2] & 63](d) | 0) & 1;
 l = f;
 return;
}

function oh(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 c[a + 24 >> 2] = b;
 c[a + 16 >> 2] = (b | 0) == 0 & 1;
 c[a + 20 >> 2] = 0;
 c[a + 4 >> 2] = 4098;
 c[a + 12 >> 2] = 0;
 c[a + 8 >> 2] = 6;
 b = a + 28 | 0;
 d = a + 32 | 0;
 a = d + 40 | 0;
 do {
  c[d >> 2] = 0;
  d = d + 4 | 0;
 } while ((d | 0) < (a | 0));
 Lq(b);
 return;
}

function Yo(a, d, e, f) {
 a = a | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0;
 a = e;
 while (1) {
  if ((a | 0) == (f | 0)) {
   g = f;
   break;
  }
  if ((c[a >> 2] | 0) >>> 0 < 128) {
   e = Fo() | 0;
   if ((b[e + (c[a >> 2] << 1) >> 1] & d) << 16 >> 16) {
    g = a;
    break;
   }
  }
  a = a + 4 | 0;
 }
 return g | 0;
}

function ei(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 e = Ji(d, 24900) | 0;
 d = b + 36 | 0;
 c[d >> 2] = e;
 f = b + 44 | 0;
 c[f >> 2] = pc[c[(c[e >> 2] | 0) + 24 >> 2] & 63](e) | 0;
 e = c[d >> 2] | 0;
 a[b + 53 >> 0] = (pc[c[(c[e >> 2] | 0) + 28 >> 2] & 63](e) | 0) & 1;
 if ((c[f >> 2] | 0) > 8) Yl(15820); else return;
}

function Zh(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 e = Ji(d, 24908) | 0;
 d = b + 36 | 0;
 c[d >> 2] = e;
 f = b + 44 | 0;
 c[f >> 2] = pc[c[(c[e >> 2] | 0) + 24 >> 2] & 63](e) | 0;
 e = c[d >> 2] | 0;
 a[b + 53 >> 0] = (pc[c[(c[e >> 2] | 0) + 28 >> 2] & 63](e) | 0) & 1;
 if ((c[f >> 2] | 0) > 8) Yl(15820); else return;
}

function sd(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) | 0;
 c[d >> 2] = 2188;
 b = d + 64 | 0;
 c[b >> 2] = 2228;
 c[d + 8 >> 2] = 2208;
 e = d + 12 | 0;
 c[e >> 2] = 2244;
 f = d + 44 | 0;
 if ((a[f + 11 >> 0] | 0) < 0) Uq(c[f >> 2] | 0);
 cg(e);
 kh(d, 2304);
 Zf(b);
 Uq(d);
 return;
}

function Jd(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0;
 f = l;
 l = l + 32 | 0;
 g = f;
 c[b + 36 >> 2] = 6;
 if (!(c[b >> 2] & 64)) {
  c[g >> 2] = c[b + 60 >> 2];
  c[g + 4 >> 2] = 21523;
  c[g + 8 >> 2] = f + 16;
  if (Qa(54, g | 0) | 0) a[b + 75 >> 0] = -1;
 }
 g = Id(b, d, e) | 0;
 l = f;
 return g | 0;
}

function zk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 4 | 0;
 j = h;
 qh(i, e);
 e = Ji(i, 23108) | 0;
 Ki(i);
 c[j >> 2] = c[d >> 2];
 c[i >> 2] = c[j >> 2];
 Nk(a, g + 24 | 0, b, i, f, e);
 l = h;
 return c[b >> 2] | 0;
}

function jl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 4 | 0;
 j = h;
 qh(i, e);
 e = Ji(i, 23140) | 0;
 Ki(i);
 c[j >> 2] = c[d >> 2];
 c[i >> 2] = c[j >> 2];
 Jl(a, g + 20 | 0, b, i, f, e);
 l = h;
 return c[b >> 2] | 0;
}

function il(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 4 | 0;
 j = h;
 qh(i, e);
 e = Ji(i, 23140) | 0;
 Ki(i);
 c[j >> 2] = c[d >> 2];
 c[i >> 2] = c[j >> 2];
 xl(a, g + 16 | 0, b, i, f, e);
 l = h;
 return c[b >> 2] | 0;
}

function hl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 4 | 0;
 j = h;
 qh(i, e);
 e = Ji(i, 23140) | 0;
 Ki(i);
 c[j >> 2] = c[d >> 2];
 c[i >> 2] = c[j >> 2];
 wl(a, g + 24 | 0, b, i, f, e);
 l = h;
 return c[b >> 2] | 0;
}

function Bk(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 4 | 0;
 j = h;
 qh(i, e);
 e = Ji(i, 23108) | 0;
 Ki(i);
 c[j >> 2] = c[d >> 2];
 c[i >> 2] = c[j >> 2];
 _k(a, g + 20 | 0, b, i, f, e);
 l = h;
 return c[b >> 2] | 0;
}

function Ak(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0, j = 0;
 h = l;
 l = l + 16 | 0;
 i = h + 4 | 0;
 j = h;
 qh(i, e);
 e = Ji(i, 23108) | 0;
 Ki(i);
 c[j >> 2] = c[d >> 2];
 c[i >> 2] = c[j >> 2];
 Ok(a, g + 16 | 0, b, i, f, e);
 l = h;
 return c[b >> 2] | 0;
}

function We(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0, h = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[f >> 2] = c[d >> 2];
 g = Kd(0, 0, b, f) | 0;
 if ((g | 0) < 0) h = -1; else {
  f = g + 1 | 0;
  g = xd(f) | 0;
  c[a >> 2] = g;
  if (!g) h = -1; else h = Kd(g, f, b, d) | 0;
 }
 l = e;
 return h | 0;
}

function Gh(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 th(b);
 c[b >> 2] = 7016;
 c[b + 32 >> 2] = d;
 c[b + 40 >> 2] = e;
 c[b + 48 >> 2] = Ig() | 0;
 a[b + 52 >> 0] = 0;
 e = c[(c[b >> 2] | 0) + 8 >> 2] | 0;
 Jq(g, b + 4 | 0);
 Bc[e & 63](b, g);
 Ki(g);
 l = f;
 return;
}

function Fh(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 sh(b);
 c[b >> 2] = 7080;
 c[b + 32 >> 2] = d;
 c[b + 40 >> 2] = e;
 c[b + 48 >> 2] = qg() | 0;
 a[b + 52 >> 0] = 0;
 e = c[(c[b >> 2] | 0) + 8 >> 2] | 0;
 Jq(g, b + 4 | 0);
 Bc[e & 63](b, g);
 Ki(g);
 l = f;
 return;
}

function os(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0;
 b = c[a >> 2] | 0;
 if (b | 0) {
  d = a + 4 | 0;
  while (1) {
   e = c[d >> 2] | 0;
   if ((e | 0) == (b | 0)) break;
   f = e + -24 | 0;
   c[d >> 2] = f;
   ns(f);
  }
  d = c[a >> 2] | 0;
  Ds(a + 12 | 0, d, ((c[a + 8 >> 2] | 0) - d | 0) / 24 | 0);
 }
 return;
}

function Xo(a, d, f, g) {
 a = a | 0;
 d = d | 0;
 f = f | 0;
 g = g | 0;
 var h = 0;
 a = g;
 g = d;
 while (1) {
  if ((g | 0) == (f | 0)) break;
  if ((c[g >> 2] | 0) >>> 0 < 128) {
   d = Fo() | 0;
   h = e[d + (c[g >> 2] << 1) >> 1] | 0;
  } else h = 0;
  b[a >> 1] = h;
  a = a + 2 | 0;
  g = g + 4 | 0;
 }
 return f | 0;
}

function Sq(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 Dv(24948) | 0;
 while (1) {
  if ((c[a >> 2] | 0) != 1) break;
  ob(24976, 24948) | 0;
 }
 if (!(c[a >> 2] | 0)) {
  c[a >> 2] = 1;
  Ev(24948) | 0;
  Ac[d & 127](b);
  Dv(24948) | 0;
  c[a >> 2] = -1;
  Ev(24948) | 0;
  Cv(24976) | 0;
 } else Ev(24948) | 0;
 return;
}

function ou(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0;
 b = c[a + 4 >> 2] | 0;
 d = a + 8 | 0;
 while (1) {
  e = c[d >> 2] | 0;
  if ((e | 0) == (b | 0)) break;
  f = e + -24 | 0;
  c[d >> 2] = f;
  ns(f);
 }
 d = c[a >> 2] | 0;
 if (d | 0) Ds(c[a + 16 >> 2] | 0, d, ((c[a + 12 >> 2] | 0) - d | 0) / 24 | 0);
 return;
}

function rd(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = b + (c[(c[b >> 2] | 0) + -12 >> 2] | 0) | 0;
 c[d >> 2] = 2188;
 b = d + 64 | 0;
 c[b >> 2] = 2228;
 c[d + 8 >> 2] = 2208;
 e = d + 12 | 0;
 c[e >> 2] = 2244;
 f = d + 44 | 0;
 if ((a[f + 11 >> 0] | 0) < 0) Uq(c[f >> 2] | 0);
 cg(e);
 kh(d, 2304);
 Zf(b);
 return;
}

function Av(b, c, d) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var e = 0;
 if ((c | 0) < (b | 0) & (b | 0) < (c + d | 0)) {
  e = b;
  c = c + d | 0;
  b = b + d | 0;
  while ((d | 0) > 0) {
   b = b - 1 | 0;
   c = c - 1 | 0;
   d = d - 1 | 0;
   a[b >> 0] = a[c >> 0] | 0;
  }
  b = e;
 } else zv(b, c, d) | 0;
 return b | 0;
}

function gs(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0, i = 0;
 g = c[a + 4 >> 2] | 0;
 h = g >> 8;
 if (!(g & 1)) i = h; else i = c[(c[d >> 2] | 0) + h >> 2] | 0;
 h = c[a >> 2] | 0;
 Ec[c[(c[h >> 2] | 0) + 24 >> 2] & 3](h, b, d + i | 0, g & 2 | 0 ? e : 2, f);
 return;
}

function $n(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0;
 b = a + 8 | 0;
 a = Tf(c[b >> 2] | 0) | 0;
 d = pe(0, 0, 4) | 0;
 if (a | 0) Tf(a) | 0;
 if (!d) {
  d = c[b >> 2] | 0;
  if (!d) e = 1; else {
   b = Tf(d) | 0;
   d = Cf() | 0;
   if (b | 0) Tf(b) | 0;
   return (d | 0) == 1 | 0;
  }
 } else e = -1;
 return e | 0;
}

function fp(b, d, e, f, g) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 b = (e - d | 0) >>> 2;
 h = g;
 g = d;
 while (1) {
  if ((g | 0) == (e | 0)) break;
  i = c[g >> 2] | 0;
  a[h >> 0] = i >>> 0 < 128 ? i & 255 : f;
  h = h + 1 | 0;
  g = g + 4 | 0;
 }
 return d + (b << 2) | 0;
}

function us(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0;
 b = c[a >> 2] | 0;
 if (b | 0) {
  d = a + 4 | 0;
  while (1) {
   e = c[d >> 2] | 0;
   if ((e | 0) == (b | 0)) break;
   f = e + -16 | 0;
   c[d >> 2] = f;
   os(f);
  }
  d = c[a >> 2] | 0;
  vs(a + 12 | 0, d, (c[a + 8 >> 2] | 0) - d >> 4);
 }
 return;
}

function ts(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0;
 b = c[a >> 2] | 0;
 if (b | 0) {
  d = a + 4 | 0;
  while (1) {
   e = c[d >> 2] | 0;
   if ((e | 0) == (b | 0)) break;
   f = e + -16 | 0;
   c[d >> 2] = f;
   us(f);
  }
  d = c[a >> 2] | 0;
  zs(a + 12 | 0, d, (c[a + 8 >> 2] | 0) - d >> 4);
 }
 return;
}

function Ru(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0;
 b = c[a + 4 >> 2] | 0;
 d = a + 8 | 0;
 while (1) {
  e = c[d >> 2] | 0;
  if ((e | 0) == (b | 0)) break;
  f = e + -16 | 0;
  c[d >> 2] = f;
  os(f);
 }
 d = c[a >> 2] | 0;
 if (d | 0) vs(c[a + 16 >> 2] | 0, d, (c[a + 12 >> 2] | 0) - d >> 4);
 return;
}

function Ju(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0;
 b = c[a + 4 >> 2] | 0;
 d = a + 8 | 0;
 while (1) {
  e = c[d >> 2] | 0;
  if ((e | 0) == (b | 0)) break;
  f = e + -16 | 0;
  c[d >> 2] = f;
  us(f);
 }
 d = c[a >> 2] | 0;
 if (d | 0) zs(c[a + 16 >> 2] | 0, d, (c[a + 12 >> 2] | 0) - d >> 4);
 return;
}

function Fv(a) {
 a = a | 0;
 var b = 0, d = 0;
 a = a + 15 & -16 | 0;
 b = c[i >> 2] | 0;
 d = b + a | 0;
 if ((a | 0) > 0 & (d | 0) < (b | 0) | (d | 0) < 0) {
  W() | 0;
  Ia(12);
  return -1;
 }
 c[i >> 2] = d;
 if ((d | 0) > (V() | 0)) if (!(U() | 0)) {
  c[i >> 2] = b;
  Ia(12);
  return -1;
 }
 return b | 0;
}

function Kl(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = Ml(d, h, f, g, 4) | 0;
 if (!(c[f >> 2] & 4)) c[b >> 2] = i + -1900;
 l = a;
 return;
}

function $k(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0, i = 0;
 a = l;
 l = l + 16 | 0;
 h = a + 4 | 0;
 i = a;
 c[i >> 2] = c[e >> 2];
 c[h >> 2] = c[i >> 2];
 i = bl(d, h, f, g, 4) | 0;
 if (!(c[f >> 2] & 4)) c[b >> 2] = i + -1900;
 l = a;
 return;
}

function yo(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0;
 b = d;
 while (1) {
  if ((b | 0) == (e | 0)) break;
  d = a[b >> 0] | 0;
  if (d << 24 >> 24 > -1) {
   f = Do() | 0;
   g = c[f + (a[b >> 0] << 2) >> 2] & 255;
  } else g = d;
  a[b >> 0] = g;
  b = b + 1 | 0;
 }
 return e | 0;
}

function wo(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0;
 b = d;
 while (1) {
  if ((b | 0) == (e | 0)) break;
  d = a[b >> 0] | 0;
  if (d << 24 >> 24 > -1) {
   f = Eo() | 0;
   g = c[f + (a[b >> 0] << 2) >> 2] & 255;
  } else g = d;
  a[b >> 0] = g;
  b = b + 1 | 0;
 }
 return e | 0;
}

function Bq(a, b) {
 a = a | 0;
 b = b | 0;
 c[a + 4 >> 2] = b + -1;
 c[a >> 2] = 9592;
 c[a + 8 >> 2] = 46;
 c[a + 12 >> 2] = 44;
 b = a + 16 | 0;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a = 0;
 while (1) {
  if ((a | 0) == 3) break;
  c[b + (a << 2) >> 2] = 0;
  a = a + 1 | 0;
 }
 return;
}

function Cq(b, d) {
 b = b | 0;
 d = d | 0;
 c[b + 4 >> 2] = d + -1;
 c[b >> 2] = 9552;
 a[b + 8 >> 0] = 46;
 a[b + 9 >> 0] = 44;
 d = b + 12 | 0;
 c[d >> 2] = 0;
 c[d + 4 >> 2] = 0;
 c[d + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[d + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function ye(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[e >> 2] = c[a >> 2];
 a = b;
 while (1) {
  b = (c[e >> 2] | 0) + (4 - 1) & ~(4 - 1);
  f = c[b >> 2] | 0;
  c[e >> 2] = b + 4;
  if (a >>> 0 > 1) a = a + -1 | 0; else break;
 }
 l = d;
 return f | 0;
}

function es(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0;
 f = c[a + 4 >> 2] | 0;
 g = f >> 8;
 if (!(f & 1)) h = g; else h = c[(c[d >> 2] | 0) + g >> 2] | 0;
 g = c[a >> 2] | 0;
 Dc[c[(c[g >> 2] | 0) + 28 >> 2] & 15](g, b, d + h | 0, f & 2 | 0 ? e : 2);
 return;
}

function Eq(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 if ((wq(b) | 0) >>> 0 < d >>> 0) np(b);
 e = b + 128 | 0;
 if (d >>> 0 < 29 & (a[e >> 0] | 0) == 0) {
  a[e >> 0] = 1;
  f = b + 16 | 0;
 } else f = Tq(d << 2) | 0;
 c[b + 4 >> 2] = f;
 c[b >> 2] = f;
 c[b + 8 >> 2] = f + (d << 2);
 return;
}

function bp(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 a = b;
 while (1) {
  if ((a | 0) == (d | 0)) break;
  b = c[a >> 2] | 0;
  if (b >>> 0 < 128) {
   e = Do() | 0;
   f = c[e + (c[a >> 2] << 2) >> 2] | 0;
  } else f = b;
  c[a >> 2] = f;
  a = a + 4 | 0;
 }
 return d | 0;
}

function $o(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 a = b;
 while (1) {
  if ((a | 0) == (d | 0)) break;
  b = c[a >> 2] | 0;
  if (b >>> 0 < 128) {
   e = Eo() | 0;
   f = c[e + (c[a >> 2] << 2) >> 2] | 0;
  } else f = b;
  c[a >> 2] = f;
  a = a + 4 | 0;
 }
 return d | 0;
}

function sv(b) {
 b = b | 0;
 var c = 0;
 c = a[n + (b & 255) >> 0] | 0;
 if ((c | 0) < 8) return c | 0;
 c = a[n + (b >> 8 & 255) >> 0] | 0;
 if ((c | 0) < 8) return c + 8 | 0;
 c = a[n + (b >> 16 & 255) >> 0] | 0;
 if ((c | 0) < 8) return c + 16 | 0;
 return (a[n + (b >>> 24) >> 0] | 0) + 24 | 0;
}

function qd(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = b + -8 | 0;
 c[d >> 2] = 2188;
 b = d + 64 | 0;
 c[b >> 2] = 2228;
 c[d + 8 >> 2] = 2208;
 e = d + 12 | 0;
 c[e >> 2] = 2244;
 f = d + 44 | 0;
 if ((a[f + 11 >> 0] | 0) < 0) Uq(c[f >> 2] | 0);
 cg(e);
 kh(d, 2304);
 Zf(b);
 Uq(d);
 return;
}

function Ft(b, c, d) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0;
 if ((c - b | 0) > 2) if ((a[b >> 0] | 0) == 115) if ((a[b + 1 >> 0] | 0) == 112) {
  e = b + 2 | 0;
  f = kt(e, c, d) | 0;
  g = (f | 0) == (e | 0) ? b : f;
 } else g = b; else g = b; else g = b;
 return g | 0;
}

function $f(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0, g = 0;
 d = a + 32 | 0;
 e = a + 36 | 0;
 f = c[a + 40 >> 2] | 0;
 while (1) {
  if (!f) break;
  g = f + -1 | 0;
  Cc[c[(c[d >> 2] | 0) + (g << 2) >> 2] & 0](b, a, c[(c[e >> 2] | 0) + (g << 2) >> 2] | 0);
  f = g;
 }
 return;
}

function mu(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0;
 c[a + 12 >> 2] = 0;
 c[a + 16 >> 2] = e;
 if (!b) f = 0; else f = pu(e, b) | 0;
 c[a >> 2] = f;
 e = f + (d * 24 | 0) | 0;
 c[a + 8 >> 2] = e;
 c[a + 4 >> 2] = e;
 c[a + 12 >> 2] = f + (b * 24 | 0);
 return;
}

function pd(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = b + -8 | 0;
 c[d >> 2] = 2188;
 b = d + 64 | 0;
 c[b >> 2] = 2228;
 c[d + 8 >> 2] = 2208;
 e = d + 12 | 0;
 c[e >> 2] = 2244;
 f = d + 44 | 0;
 if ((a[f + 11 >> 0] | 0) < 0) Uq(c[f >> 2] | 0);
 cg(e);
 kh(d, 2304);
 Zf(b);
 return;
}

function js(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 ev(e, b);
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 f = c[e >> 2] | 0;
 c[a + 8 >> 2] = 0;
 c[a + 12 >> 2] = f;
 ks(e, b);
 fv(a + 16 | 0, e);
 gv(e, b);
 hv(a + 32 | 0, e);
 l = d;
 return;
}

function Pu(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0;
 c[a + 12 >> 2] = 0;
 c[a + 16 >> 2] = e;
 if (!b) f = 0; else f = Su(e, b) | 0;
 c[a >> 2] = f;
 e = f + (d << 4) | 0;
 c[a + 8 >> 2] = e;
 c[a + 4 >> 2] = e;
 c[a + 12 >> 2] = f + (b << 4);
 return;
}

function Hu(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0;
 c[a + 12 >> 2] = 0;
 c[a + 16 >> 2] = e;
 if (!b) f = 0; else f = Ku(e, b) | 0;
 c[a >> 2] = f;
 e = f + (d << 4) | 0;
 c[a + 8 >> 2] = e;
 c[a + 4 >> 2] = e;
 c[a + 12 >> 2] = f + (b << 4);
 return;
}

function od(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 c[b >> 2] = 2188;
 d = b + 64 | 0;
 c[d >> 2] = 2228;
 c[b + 8 >> 2] = 2208;
 e = b + 12 | 0;
 c[e >> 2] = 2244;
 f = b + 44 | 0;
 if ((a[f + 11 >> 0] | 0) < 0) Uq(c[f >> 2] | 0);
 cg(e);
 kh(b, 2304);
 Zf(d);
 Uq(b);
 return;
}

function Or(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 var h = 0;
 if (Ir(a, c[b + 8 >> 2] | 0, g) | 0) Lr(0, b, d, e, f); else {
  h = c[a + 8 >> 2] | 0;
  Fc[c[(c[h >> 2] | 0) + 20 >> 2] & 15](h, b, d, e, f, g);
 }
 return;
}

function nd(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 c[b >> 2] = 2188;
 d = b + 64 | 0;
 c[d >> 2] = 2228;
 c[b + 8 >> 2] = 2208;
 e = b + 12 | 0;
 c[e >> 2] = 2244;
 f = b + 44 | 0;
 if ((a[f + 11 >> 0] | 0) < 0) Uq(c[f >> 2] | 0);
 cg(e);
 kh(b, 2304);
 Zf(d);
 return;
}

function ne(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0;
 e = a + 20 | 0;
 f = c[e >> 2] | 0;
 g = (c[a + 16 >> 2] | 0) - f | 0;
 a = g >>> 0 > d >>> 0 ? d : g;
 zv(f | 0, b | 0, a | 0) | 0;
 c[e >> 2] = (c[e >> 2] | 0) + a;
 return d | 0;
}

function Co(b, c, d, e, f) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 b = f;
 f = c;
 while (1) {
  if ((f | 0) == (d | 0)) break;
  c = a[f >> 0] | 0;
  a[b >> 0] = c << 24 >> 24 > -1 ? c : e;
  b = b + 1 | 0;
  f = f + 1 | 0;
 }
 return d | 0;
}

function _c(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0, h = 0;
 f = c[a >> 2] | 0;
 g = c[a + 4 >> 2] | 0;
 a = b + (g >> 1) | 0;
 if (!(g & 1)) h = f; else h = c[(c[a >> 2] | 0) + f >> 2] | 0;
 return rc[h & 31](a, d, e) | 0;
}

function Rs(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 c[a >> 2] = 0;
 e = a + 4 | 0;
 c[e >> 2] = 0;
 f = c[d >> 2] | 0;
 c[a + 8 >> 2] = 0;
 c[a + 12 >> 2] = f;
 Tu(a);
 Ns(c[e >> 2] | 0, b);
 c[e >> 2] = (c[e >> 2] | 0) + 24;
 return;
}

function ui(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 a = 0;
 e = b;
 while (1) {
  if ((e | 0) == (d | 0)) break;
  b = (c[e >> 2] | 0) + (a << 4) | 0;
  f = b & -268435456;
  a = (f >>> 24 | f) ^ b;
  e = e + 4 | 0;
 }
 return a | 0;
}

function oi(b, c, d) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var e = 0, f = 0;
 b = 0;
 e = c;
 while (1) {
  if ((e | 0) == (d | 0)) break;
  c = (b << 4) + (a[e >> 0] | 0) | 0;
  f = c & -268435456;
  b = (f >>> 24 | f) ^ c;
  e = e + 1 | 0;
 }
 return b | 0;
}

function Sf(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0;
 if (d | 0) {
  e = d;
  d = b;
  b = a;
  while (1) {
   e = e + -1 | 0;
   c[b >> 2] = c[d >> 2];
   if (!e) break; else {
    d = d + 4 | 0;
    b = b + 4 | 0;
   }
  }
 }
 return a | 0;
}

function ps(b) {
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = a[b + 11 >> 0] | 0;
 if (d << 24 >> 24 < 0) e = c[b + 4 >> 2] | 0; else e = d & 255;
 d = a[b + 12 + 11 >> 0] | 0;
 if (d << 24 >> 24 < 0) f = c[b + 16 >> 2] | 0; else f = d & 255;
 return f + e | 0;
}

function lv(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0, g = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[f >> 2] = c[d >> 2];
 g = rc[c[(c[a >> 2] | 0) + 16 >> 2] & 31](a, b, f) | 0;
 if (g) c[d >> 2] = c[f >> 2];
 l = e;
 return g & 1 | 0;
}

function we(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0;
 c[a + 104 >> 2] = b;
 d = c[a + 8 >> 2] | 0;
 e = c[a + 4 >> 2] | 0;
 f = d - e | 0;
 c[a + 108 >> 2] = f;
 c[a + 100 >> 2] = (b | 0) != 0 & (f | 0) > (b | 0) ? e + b | 0 : d;
 return;
}

function mg(b) {
 b = b | 0;
 var d = 0, e = 0;
 d = pc[c[(c[b >> 2] | 0) + 36 >> 2] & 63](b) | 0;
 if ((d | 0) == (qg() | 0)) e = qg() | 0; else {
  d = b + 12 | 0;
  b = c[d >> 2] | 0;
  c[d >> 2] = b + 1;
  e = rg(a[b >> 0] | 0) | 0;
 }
 return e | 0;
}

function Wc(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0;
 if (!a) return;
 b = c[a + 16 >> 2] | 0;
 if (b | 0) {
  d = a + 20 | 0;
  e = c[d >> 2] | 0;
  if ((e | 0) != (b | 0)) c[d >> 2] = e + (~((e + -4 - b | 0) >>> 2) << 2);
  Uq(b);
 }
 Uq(a);
 return;
}

function Eg(a) {
 a = a | 0;
 var b = 0, d = 0;
 b = pc[c[(c[a >> 2] | 0) + 36 >> 2] & 63](a) | 0;
 if ((b | 0) == (Ig() | 0)) d = Ig() | 0; else {
  b = a + 12 | 0;
  a = c[b >> 2] | 0;
  c[b >> 2] = a + 4;
  d = Jg(c[a >> 2] | 0) | 0;
 }
 return d | 0;
}

function vh(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0;
 a[b >> 0] = 0;
 c[b + 4 >> 2] = d;
 e = d + (c[(c[d >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(c[e + 16 >> 2] | 0)) {
  d = c[e + 72 >> 2] | 0;
  if (d | 0) uh(d) | 0;
  a[b >> 0] = 1;
 }
 return;
}

function Ur() {
 var a = 0, b = 0;
 a = yr() | 0;
 if (a | 0) {
  b = c[a >> 2] | 0;
  if (b | 0) {
   a = b + 48 | 0;
   if ((c[a >> 2] & -256 | 0) == 1126902528 ? (c[a + 4 >> 2] | 0) == 1129074247 : 0) Vr(c[b + 12 >> 2] | 0);
  }
 }
 Vr(Wr() | 0);
}

function Ne(a, b) {
 a = +a;
 b = +b;
 var d = 0, e = 0, f = 0;
 h[j >> 3] = a;
 d = c[j >> 2] | 0;
 e = c[j + 4 >> 2] | 0;
 h[j >> 3] = b;
 f = c[j + 4 >> 2] & -2147483648 | e & 2147483647;
 c[j >> 2] = d;
 c[j + 4 >> 2] = f;
 return +(+h[j >> 3]);
}

function $j(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 var g = 0, h = 0;
 g = l;
 l = l + 16 | 0;
 h = g;
 c[h >> 2] = f;
 f = Tf(d) | 0;
 d = Kd(a, b, e, h) | 0;
 if (f | 0) Tf(f) | 0;
 l = g;
 return d | 0;
}

function Mm(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 8 + 3 >> 0] = 1;
 rk(b, 1, 45) | 0;
 c[e >> 2] = 0;
 vi(b + 4 | 0, e);
 l = d;
 return;
}

function Bm(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 8 + 3 >> 0] = 1;
 rk(b, 1, 45) | 0;
 c[e >> 2] = 0;
 vi(b + 4 | 0, e);
 l = d;
 return;
}

function qm(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 11 >> 0] = 1;
 im(b, 1, 45) | 0;
 a[e >> 0] = 0;
 mh(b + 1 | 0, e);
 l = d;
 return;
}

function em(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 11 >> 0] = 1;
 im(b, 1, 45) | 0;
 a[e >> 0] = 0;
 mh(b + 1 | 0, e);
 l = d;
 return;
}

function Ti(a) {
 a = a | 0;
 var b = 0, d = 0, e = 0, f = 0;
 b = c[a + 4 >> 2] | 0;
 d = c[a + 8 >> 2] | 0;
 e = (c[a >> 2] | 0) + (d >> 1) | 0;
 if (!(d & 1)) f = b; else f = c[(c[e >> 2] | 0) + b >> 2] | 0;
 Ac[f & 127](e);
 return;
}

function Qr(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0;
 if (Ir(a, c[b + 8 >> 2] | 0, 0) | 0) Jr(0, b, d, e); else {
  f = c[a + 8 >> 2] | 0;
  Dc[c[(c[f >> 2] | 0) + 28 >> 2] & 15](f, b, d, e);
 }
 return;
}

function qu(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0, f = 0;
 d = ys(b) | 0;
 b = a + 4096 | 0;
 e = c[b >> 2] | 0;
 if ((a + 4096 - e | 0) >>> 0 < d >>> 0) f = xd(d) | 0; else {
  c[b >> 2] = e + d;
  f = e;
 }
 return f | 0;
}

function Tq(a) {
 a = a | 0;
 var b = 0, c = 0;
 b = (a | 0) == 0 ? 1 : a;
 while (1) {
  a = xd(b) | 0;
  if (a | 0) {
   c = a;
   break;
  }
  a = kv() | 0;
  if (!a) {
   c = 0;
   break;
  }
  zc[a & 3]();
 }
 return c | 0;
}

function Rv(a, b, c, d, e, f, g, h, i) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 return yc[a & 15](b | 0, c | 0, d | 0, e | 0, f | 0, g | 0, h | 0, i | 0) | 0;
}

function cr(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 if ((b | 0) != (d | 0)) {
  e = a[d + 11 >> 0] | 0;
  f = e << 24 >> 24 < 0;
  dr(b, f ? c[d >> 2] | 0 : d, f ? c[d + 4 >> 2] | 0 : e & 255) | 0;
 }
 return b | 0;
}

function ck(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 c[g >> 2] = e;
 e = Tf(b) | 0;
 b = We(a, d, g) | 0;
 if (e | 0) Tf(e) | 0;
 l = f;
 return b | 0;
}

function Sh(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0;
 pc[c[(c[b >> 2] | 0) + 24 >> 2] & 63](b) | 0;
 e = Ji(d, 24900) | 0;
 c[b + 36 >> 2] = e;
 a[b + 44 >> 0] = (pc[c[(c[e >> 2] | 0) + 28 >> 2] & 63](e) | 0) & 1;
 return;
}

function Ni(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 c[g >> 2] = e;
 e = Tf(b) | 0;
 b = cf(a, d, g) | 0;
 if (e | 0) Tf(e) | 0;
 l = f;
 return b | 0;
}

function Lh(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0;
 pc[c[(c[b >> 2] | 0) + 24 >> 2] & 63](b) | 0;
 e = Ji(d, 24908) | 0;
 c[b + 36 >> 2] = e;
 a[b + 44 >> 0] = (pc[c[(c[e >> 2] | 0) + 28 >> 2] & 63](e) | 0) & 1;
 return;
}

function Pe(a) {
 a = a | 0;
 var b = 0, e = 0, f = 0;
 b = l;
 l = l + 16 | 0;
 e = b;
 if (!(oe(a) | 0)) if ((rc[c[a + 32 >> 2] & 31](a, e, 1) | 0) == 1) f = d[e >> 0] | 0; else f = -1; else f = -1;
 l = b;
 return f | 0;
}

function yq(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 d = a + 8 | 0;
 a = b;
 b = c[d >> 2] | 0;
 do {
  c[b >> 2] = 0;
  b = (c[d >> 2] | 0) + 4 | 0;
  c[d >> 2] = b;
  a = a + -1 | 0;
 } while ((a | 0) != 0);
 return;
}

function vq(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 d = a + 4 | 0;
 a = b;
 b = c[d >> 2] | 0;
 do {
  c[b >> 2] = 0;
  b = (c[d >> 2] | 0) + 4 | 0;
  c[d >> 2] = b;
  a = a + -1 | 0;
 } while ((a | 0) != 0);
 return;
}

function cj(a) {
 a = a | 0;
 var b = 0;
 switch (c[a + 4 >> 2] & 74) {
 case 64:
  {
   b = 8;
   break;
  }
 case 8:
  {
   b = 16;
   break;
  }
 case 0:
  {
   b = 0;
   break;
  }
 default:
  b = 10;
 }
 return b | 0;
}

function kf(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[f >> 2] = a;
 c[f + 4 >> 2] = b;
 c[f + 8 >> 2] = d;
 d = Fd(Oa(3, f | 0) | 0) | 0;
 l = e;
 return d | 0;
}

function th(a) {
 a = a | 0;
 var b = 0;
 c[a >> 2] = 6584;
 Lq(a + 4 | 0);
 b = a + 8 | 0;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 c[b + 12 >> 2] = 0;
 c[b + 16 >> 2] = 0;
 c[b + 20 >> 2] = 0;
 return;
}

function sh(a) {
 a = a | 0;
 var b = 0;
 c[a >> 2] = 6520;
 Lq(a + 4 | 0);
 b = a + 8 | 0;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 c[b + 12 >> 2] = 0;
 c[b + 16 >> 2] = 0;
 c[b + 20 >> 2] = 0;
 return;
}

function Bu(b, d) {
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 if ((b | 0) != (d | 0)) {
  e = a[d + 11 >> 0] | 0;
  f = e << 24 >> 24 < 0;
  Ot(b, f ? c[d >> 2] | 0 : d, f ? c[d + 4 >> 2] | 0 : e & 255);
 }
 return;
}

function Ao(b, c, d, e) {
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 b = e;
 e = c;
 while (1) {
  if ((e | 0) == (d | 0)) break;
  a[b >> 0] = a[e >> 0] | 0;
  b = b + 1 | 0;
  e = e + 1 | 0;
 }
 return d | 0;
}

function lp(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 c[b + 4 >> 2] = f + -1;
 c[b >> 2] = 9500;
 f = b + 8 | 0;
 c[f >> 2] = d;
 a[b + 12 >> 0] = e & 1;
 if (!d) c[f >> 2] = Fo() | 0;
 return;
}

function vv(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0;
 f = l;
 l = l + 16 | 0;
 g = f | 0;
 tv(a, b, d, e, g) | 0;
 l = f;
 return (z = c[g + 4 >> 2] | 0, c[g >> 2] | 0) | 0;
}

function Xf(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0;
 if (d | 0) {
  e = d;
  d = a;
  while (1) {
   e = e + -1 | 0;
   c[d >> 2] = b;
   if (!e) break; else d = d + 4 | 0;
  }
 }
 return a | 0;
}

function dp(b, d, e, f) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 b = f;
 f = d;
 while (1) {
  if ((f | 0) == (e | 0)) break;
  c[b >> 2] = a[f >> 0];
  b = b + 4 | 0;
  f = f + 1 | 0;
 }
 return e | 0;
}

function ws(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0;
 if (xs(a, b) | 0) {
  e = b + (ys(d) | 0) | 0;
  d = a + 4096 | 0;
  if ((e | 0) == (c[d >> 2] | 0)) c[d >> 2] = b;
 } else yd(b);
 return;
}

function yg(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 g = a;
 c[g >> 2] = 0;
 c[g + 4 >> 2] = 0;
 g = a + 8 | 0;
 c[g >> 2] = -1;
 c[g + 4 >> 2] = -1;
 return;
}

function gg(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 g = a;
 c[g >> 2] = 0;
 c[g + 4 >> 2] = 0;
 g = a + 8 | 0;
 c[g >> 2] = -1;
 c[g + 4 >> 2] = -1;
 return;
}

function pv(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var e = 0, f = 0;
 e = a;
 a = c;
 c = ov(e, a) | 0;
 f = z;
 return (z = (O(b, a) | 0) + (O(d, e) | 0) + f | f & 0, c | 0 | 0) | 0;
}

function Qv(a, b, c, d, e, f, g, h) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 return xc[a & 7](b | 0, c | 0, d | 0, e | 0, f | 0, g | 0, h | 0) | 0;
}

function zm(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function ym(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function pm(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function om(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function nm(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function dm(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function cm(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function bm(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function Lm(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function Km(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function Jm(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function Am(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 c[a + 8 >> 2] = 0;
 b = 0;
 while (1) {
  if ((b | 0) == 3) break;
  c[a + (b << 2) >> 2] = 0;
  b = b + 1 | 0;
 }
 return;
}

function co(a) {
 a = a | 0;
 var b = 0, d = 0;
 b = c[a + 8 >> 2] | 0;
 if (!b) d = 1; else {
  a = Tf(b) | 0;
  b = Cf() | 0;
  if (!a) d = b; else {
   Tf(a) | 0;
   d = b;
  }
 }
 return d | 0;
}

function jd(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0;
 f = d + 8 | 0;
 Fc[c[(c[b >> 2] | 0) + 16 >> 2] & 15](a, b, c[f >> 2] | 0, c[f + 4 >> 2] | 0, 0, e);
 return;
}

function Tf(a) {
 a = a | 0;
 var b = 0, d = 0;
 b = (Uf() | 0) + 188 | 0;
 d = c[b >> 2] | 0;
 if (a | 0) c[b >> 2] = (a | 0) == (-1 | 0) ? 21980 : a;
 return ((d | 0) == 21980 ? -1 : d) | 0;
}

function qe(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 var f = 0, g = 0;
 f = l;
 l = l + 16 | 0;
 g = f;
 c[g >> 2] = e;
 e = Kd(a, b, d, g) | 0;
 l = f;
 return e | 0;
}

function jf(a) {
 a = a | 0;
 var b = 0, d = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 c[d >> 2] = Hd(a) | 0;
 a = Ra(6, d | 0) | 0;
 d = Fd((a | 0) == -4 ? 0 : a) | 0;
 l = b;
 return d | 0;
}

function Ri(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 e = c[b >> 2] | 0;
 f = c[b + 4 >> 2] | 0;
 c[a >> 2] = d;
 c[a + 4 >> 2] = e;
 c[a + 8 >> 2] = f;
 return;
}

function Lf(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[e >> 2] = a;
 c[e + 4 >> 2] = b;
 b = Fd(Sa(91, e | 0) | 0) | 0;
 l = d;
 return b | 0;
}

function rv(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var e = 0;
 e = b - d >>> 0;
 e = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (z = e, a - c >>> 0 | 0) | 0;
}

function Kr(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 if ((c[b + 4 >> 2] | 0) == (d | 0)) {
  d = b + 28 | 0;
  if ((c[d >> 2] | 0) != 1) c[d >> 2] = e;
 }
 return;
}

function xv(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 if ((c | 0) < 32) {
  z = b << c | (a & (1 << c) - 1 << 32 - c) >>> 32 - c;
  return a << c;
 }
 z = a << c - 32;
 return 0;
}

function _f(a) {
 a = a | 0;
 c[a >> 2] = 6504;
 $f(a, 0);
 Ki(a + 28 | 0);
 yd(c[a + 32 >> 2] | 0);
 yd(c[a + 36 >> 2] | 0);
 yd(c[a + 48 >> 2] | 0);
 yd(c[a + 60 >> 2] | 0);
 return;
}

function Pv(a, b, c, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 return wc[a & 63](b | 0, c | 0, d | 0, e | 0, f | 0, g | 0) | 0;
}

function zg(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 e = a;
 c[e >> 2] = 0;
 c[e + 4 >> 2] = 0;
 e = a + 8 | 0;
 c[e >> 2] = -1;
 c[e + 4 >> 2] = -1;
 return;
}

function wv(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 if ((c | 0) < 32) {
  z = b >>> c;
  return a >>> c | (b & (1 << c) - 1) << 32 - c;
 }
 z = 0;
 return b >>> c - 32 | 0;
}

function hg(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 e = a;
 c[e >> 2] = 0;
 c[e + 4 >> 2] = 0;
 e = a + 8 | 0;
 c[e >> 2] = -1;
 c[e + 4 >> 2] = -1;
 return;
}

function Tu(a) {
 a = a | 0;
 var b = 0;
 if (!(lu(a) | 0)) np(a); else {
  b = pu(a + 12 | 0, 1) | 0;
  c[a + 4 >> 2] = b;
  c[a >> 2] = b;
  c[a + 8 >> 2] = b + 24;
  return;
 }
}

function Re(a) {
 a = a | 0;
 var b = 0, c = 0, d = 0;
 b = (Qe(a) | 0) + 1 | 0;
 c = xd(b) | 0;
 if (!c) d = 0; else {
  zv(c | 0, a | 0, b | 0) | 0;
  d = c;
 }
 return d | 0;
}

function Ov(a, b, c, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = +g;
 return vc[a & 3](b | 0, c | 0, d | 0, e | 0, f | 0, +g) | 0;
}

function Sn(a, b, d, e, f, g, h, i) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 c[f >> 2] = d;
 c[i >> 2] = g;
 return 3;
}

function Rn(a, b, d, e, f, g, h, i) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 i = i | 0;
 c[f >> 2] = d;
 c[i >> 2] = g;
 return 3;
}

function Wo(a, c, d) {
 a = a | 0;
 c = c | 0;
 d = d | 0;
 var e = 0;
 if (d >>> 0 < 128) e = (b[(Fo() | 0) + (d << 1) >> 1] & c) << 16 >> 16 != 0; else e = 0;
 return e | 0;
}

function Cd(a) {
 a = a | 0;
 var b = 0, d = 0;
 b = l;
 l = l + 16 | 0;
 d = b;
 c[d >> 2] = Hd(c[a + 60 >> 2] | 0) | 0;
 a = Fd(Ra(6, d | 0) | 0) | 0;
 l = b;
 return a | 0;
}

function Yv(a, b, c, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 Fc[a & 15](b | 0, c | 0, d | 0, e | 0, f | 0, g | 0);
}

function yr() {
 var a = 0, b = 0;
 a = l;
 l = l + 16 | 0;
 if (!(rb(25024, 2) | 0)) {
  b = pb(c[6257] | 0) | 0;
  l = a;
  return b | 0;
 } else zr(18486, a);
 return 0;
}

function pp(b, d) {
 b = b | 0;
 d = d | 0;
 c[b >> 2] = 0;
 c[b + 4 >> 2] = 0;
 c[b + 8 >> 2] = 0;
 a[b + 128 >> 0] = 0;
 if (d | 0) {
  Eq(b, d);
  vq(b, d);
 }
 return;
}

function bf(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 var e = 0, f = 0;
 e = l;
 l = l + 16 | 0;
 f = e;
 c[f >> 2] = d;
 d = cf(a, b, f) | 0;
 l = e;
 return d | 0;
}

function zr(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[e >> 2] = b;
 b = c[617] | 0;
 Ld(b, a, e) | 0;
 Ze(10, b) | 0;
 jb();
}

function Fr(a, b, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 if (Ir(a, c[b + 8 >> 2] | 0, g) | 0) Lr(0, b, d, e, f);
 return;
}

function qv(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var e = 0;
 e = a + c >>> 0;
 return (z = b + d + (e >>> 0 < a >>> 0 | 0) >>> 0, e | 0) | 0;
}

function eo(a) {
 a = a | 0;
 var b = 0, d = 0;
 c[a >> 2] = 9432;
 b = a + 8 | 0;
 d = c[b >> 2] | 0;
 if ((d | 0) != (Mi() | 0)) Qf(c[b >> 2] | 0);
 pi(a);
 return;
}

function xn(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 e = Jf((a[d + 11 >> 0] | 0) < 0 ? c[d >> 2] | 0 : d, 1) | 0;
 return e >>> ((e | 0) != (-1 | 0) & 1) | 0;
}

function Cn(b, d, e) {
 b = b | 0;
 d = d | 0;
 e = e | 0;
 e = Jf((a[d + 11 >> 0] | 0) < 0 ? c[d >> 2] | 0 : d, 1) | 0;
 return e >>> ((e | 0) != (-1 | 0) & 1) | 0;
}

function Nv(a, b, c, d, e, f) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 return uc[a & 31](b | 0, c | 0, d | 0, e | 0, f | 0) | 0;
}

function hv(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 d = c[b >> 2] | 0;
 c[a + 8 >> 2] = 0;
 c[a + 12 >> 2] = d;
 return;
}

function fv(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 c[a >> 2] = 0;
 c[a + 4 >> 2] = 0;
 d = c[b >> 2] | 0;
 c[a + 8 >> 2] = 0;
 c[a + 12 >> 2] = d;
 return;
}

function xo(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 if (b << 24 >> 24 > -1) d = c[(Do() | 0) + (b << 24 >> 24 << 2) >> 2] & 255; else d = b;
 return d | 0;
}

function Xc(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0, e = 0;
 d = l;
 l = l + 16 | 0;
 e = d;
 c[e >> 2] = b;
 b = pc[a & 63](e) | 0;
 l = d;
 return b | 0;
}

function Qq(a) {
 a = a | 0;
 var b = 0;
 if ((Rq(a + 4 | 0) | 0) == -1) {
  Ac[c[(c[a >> 2] | 0) + 8 >> 2] & 127](a);
  b = 1;
 } else b = 0;
 return b | 0;
}

function vo(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 if (b << 24 >> 24 > -1) d = c[(Eo() | 0) + ((b & 255) << 2) >> 2] & 255; else d = b;
 return d | 0;
}

function Mv(a, b, c, d, e, f) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = +f;
 return tc[a & 7](b | 0, c | 0, d | 0, e | 0, +f) | 0;
}

function he(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 if (!b) d = 0; else d = ie(c[b >> 2] | 0, c[b + 4 >> 2] | 0, a) | 0;
 return (d | 0 ? d : a) | 0;
}

function iw(a, b, c, d, e, f, g, h) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 h = h | 0;
 S(11);
 return 0;
}

function hd(b) {
 b = b | 0;
 var d = 0;
 c[b >> 2] = 2244;
 d = b + 32 | 0;
 if ((a[d + 11 >> 0] | 0) < 0) Uq(c[d >> 2] | 0);
 cg(b);
 Uq(b);
 return;
}

function Xv(a, b, c, d, e, f) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 Ec[a & 3](b | 0, c | 0, d | 0, e | 0, f | 0);
}

function Tr(a) {
 a = a | 0;
 var b = 0;
 b = l;
 l = l + 16 | 0;
 yd(a);
 if (!(sb(c[6257] | 0, 0) | 0)) {
  l = b;
  return;
 } else zr(18585, b);
}

function Wn(a, b, c, d, e) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 b = d - c | 0;
 return (b >>> 0 < e >>> 0 ? b : e) | 0;
}

function to(b) {
 b = b | 0;
 var d = 0;
 c[b >> 2] = 9500;
 d = c[b + 8 >> 2] | 0;
 if (d | 0) if (a[b + 12 >> 0] | 0) Vq(d);
 pi(b);
 return;
}

function gd(b) {
 b = b | 0;
 var d = 0;
 c[b >> 2] = 2244;
 d = b + 32 | 0;
 if ((a[d + 11 >> 0] | 0) < 0) Uq(c[d >> 2] | 0);
 cg(b);
 return;
}

function $r(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 var d = 0;
 if (Ir(a, b, 0) | 0) d = 1; else d = Ir(b, 2e3, 0) | 0;
 return d | 0;
}

function ap(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 if (b >>> 0 < 128) d = c[(Do() | 0) + (b << 2) >> 2] | 0; else d = b;
 return d | 0;
}

function _o(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 if (b >>> 0 < 128) d = c[(Eo() | 0) + (b << 2) >> 2] | 0; else d = b;
 return d | 0;
}

function rk(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 var d = 0;
 if (!b) d = a; else {
  Xf(a, c, b) | 0;
  d = a;
 }
 return d | 0;
}

function pr(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 var d = 0;
 if (!c) d = a; else {
  Yf(a, b, c) | 0;
  d = a;
 }
 return d | 0;
}

function Lv(a, b, c, d, e) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 return sc[a & 7](b | 0, c | 0, d | 0, e | 0) | 0;
}

function Kg(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 var d = 0;
 if (!c) d = a; else {
  Sf(a, b, c) | 0;
  d = a;
 }
 return d | 0;
}

function Fd(a) {
 a = a | 0;
 var b = 0;
 if (a >>> 0 > 4294963200) {
  c[(Gd() | 0) >> 2] = 0 - a;
  b = -1;
 } else b = a;
 return b | 0;
}

function hw(a, b, c, d, e, f, g) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 g = g | 0;
 S(10);
 return 0;
}

function Hr(a, b, d, e) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 if (Ir(a, c[b + 8 >> 2] | 0, 0) | 0) Jr(0, b, d, e);
 return;
}

function te(a) {
 a = a | 0;
 var b = 0;
 b = a;
 while (1) if (!(c[b >> 2] | 0)) break; else b = b + 4 | 0;
 return b - a >> 2 | 0;
}

function im(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 if (b | 0) Bv(a | 0, (rg(c) | 0) & 255 | 0, b | 0) | 0;
 return a | 0;
}

function Wv(a, b, c, d, e) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 Dc[a & 15](b | 0, c | 0, d | 0, e | 0);
}

function tm(b, c) {
 b = b | 0;
 c = c | 0;
 a[b >> 0] = 2;
 a[b + 1 >> 0] = 3;
 a[b + 2 >> 0] = 0;
 a[b + 3 >> 0] = 4;
 return;
}

function sm(b, c) {
 b = b | 0;
 c = c | 0;
 a[b >> 0] = 2;
 a[b + 1 >> 0] = 3;
 a[b + 2 >> 0] = 0;
 a[b + 3 >> 0] = 4;
 return;
}

function hm(b, c) {
 b = b | 0;
 c = c | 0;
 a[b >> 0] = 2;
 a[b + 1 >> 0] = 3;
 a[b + 2 >> 0] = 0;
 a[b + 3 >> 0] = 4;
 return;
}

function gm(b, c) {
 b = b | 0;
 c = c | 0;
 a[b >> 0] = 2;
 a[b + 1 >> 0] = 3;
 a[b + 2 >> 0] = 0;
 a[b + 3 >> 0] = 4;
 return;
}

function Pm(b, c) {
 b = b | 0;
 c = c | 0;
 a[b >> 0] = 2;
 a[b + 1 >> 0] = 3;
 a[b + 2 >> 0] = 0;
 a[b + 3 >> 0] = 4;
 return;
}

function Om(b, c) {
 b = b | 0;
 c = c | 0;
 a[b >> 0] = 2;
 a[b + 1 >> 0] = 3;
 a[b + 2 >> 0] = 0;
 a[b + 3 >> 0] = 4;
 return;
}

function Em(b, c) {
 b = b | 0;
 c = c | 0;
 a[b >> 0] = 2;
 a[b + 1 >> 0] = 3;
 a[b + 2 >> 0] = 0;
 a[b + 3 >> 0] = 4;
 return;
}

function Dm(b, c) {
 b = b | 0;
 c = c | 0;
 a[b >> 0] = 2;
 a[b + 1 >> 0] = 3;
 a[b + 2 >> 0] = 0;
 a[b + 3 >> 0] = 4;
 return;
}

function Mq(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 var d = 0;
 if (!c) d = 0; else d = nf(a, b, c) | 0;
 return d | 0;
}

function lo(a, b, c, d, e) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 return no(c, d, e, 1114111, 0) | 0;
}

function iv(b) {
 b = b | 0;
 var c = 0;
 if ((a[b >> 0] | 0) == 1) c = 0; else {
  a[b >> 0] = 1;
  c = 1;
 }
 return c | 0;
}

function Ln(a, b, c, d, e) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 return Nn(c, d, e, 1114111, 0) | 0;
}

function qf(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 var d = 0;
 d = pf(a, b, c, 0, -2147483648) | 0;
 return d | 0;
}

function Sr() {
 var a = 0;
 a = l;
 l = l + 16 | 0;
 if (!(qb(25028, 117) | 0)) {
  l = a;
  return;
 } else zr(18535, a);
}

function Dq(a, b) {
 a = a | 0;
 b = b | 0;
 c[a + 4 >> 2] = b + -1;
 c[a >> 2] = 9432;
 c[a + 8 >> 2] = Mi() | 0;
 return;
}

function nl(b) {
 b = b | 0;
 if (!(a[20904] | 0)) if (iv(20904) | 0) {
  tl();
  c[6082] = 24040;
 }
 return c[6082] | 0;
}

function ml(b) {
 b = b | 0;
 if (!(a[20920] | 0)) if (iv(20920) | 0) {
  ul();
  c[6155] = 24332;
 }
 return c[6155] | 0;
}

function ll(b) {
 b = b | 0;
 if (!(a[20936] | 0)) if (iv(20936) | 0) {
  vl();
  c[6198] = 24624;
 }
 return c[6198] | 0;
}

function Fk(b) {
 b = b | 0;
 if (!(a[20824] | 0)) if (iv(20824) | 0) {
  Kk();
  c[5879] = 23228;
 }
 return c[5879] | 0;
}

function Ek(b) {
 b = b | 0;
 if (!(a[20840] | 0)) if (iv(20840) | 0) {
  Lk();
  c[5952] = 23520;
 }
 return c[5952] | 0;
}

function Dk(b) {
 b = b | 0;
 if (!(a[20856] | 0)) if (iv(20856) | 0) {
  Mk();
  c[5995] = 23812;
 }
 return c[5995] | 0;
}

function gw(a, b, c, d, e, f) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 S(9);
 return 0;
}

function fw(a, b, c, d, e, f) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = +f;
 S(8);
 return 0;
}

function Kv(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 return rc[a & 31](b | 0, c | 0, d | 0) | 0;
}

function mv(a) {
 a = a | 0;
 var b = 0;
 if (!a) b = 0; else b = (Mr(a, 1904, 1960, 0) | 0) != 0 & 1;
 return b | 0;
}

function Mi() {
 if (!(a[20784] | 0)) if (iv(20784) | 0) c[5779] = Of(2147483647, 16004, 0) | 0;
 return c[5779] | 0;
}

function Sl(a) {
 a = a | 0;
 var b = 0;
 b = c[a >> 2] | 0;
 if ((b | 0) != (Mi() | 0)) Qf(c[a >> 2] | 0);
 return;
}

function of(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 var d = 0;
 d = pf(a, b, c, -1, -1) | 0;
 return d | 0;
}

function io(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 c[f >> 2] = d;
 return 3;
}

function Tn(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 c[f >> 2] = d;
 return 3;
}

function In(a, b, d, e, f) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 c[f >> 2] = d;
 return 3;
}

function yv(a) {
 a = a | 0;
 return (a & 255) << 24 | (a >> 8 & 255) << 16 | (a >> 16 & 255) << 8 | a >>> 24 | 0;
}

function sg(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 if (c | 0) zv(a | 0, b | 0, c | 0) | 0;
 return a | 0;
}

function er(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 if (c | 0) Av(a | 0, b | 0, c | 0) | 0;
 return a | 0;
}

function Kq() {
 if (!(a[21432] | 0)) if (iv(21432) | 0) {
  Iq() | 0;
  c[6236] = 24940;
 }
 return c[6236] | 0;
}

function Fq() {
 if (!(a[21264] | 0)) if (iv(21264) | 0) {
  Gq() | 0;
  c[6234] = 24932;
 }
 return c[6234] | 0;
}

function _d(a) {
 a = +a;
 var b = 0;
 h[j >> 3] = a;
 b = c[j >> 2] | 0;
 z = c[j + 4 >> 2] | 0;
 return b | 0;
}

function Yd(a, b) {
 a = a | 0;
 b = b | 0;
 var c = 0;
 if (!a) c = 0; else c = be(a, b, 0) | 0;
 return c | 0;
}

function Me(a) {
 a = +a;
 var b = 0;
 h[j >> 3] = a;
 b = c[j >> 2] | 0;
 z = c[j + 4 >> 2] | 0;
 return b | 0;
}

function pw(a, b, c, d, e, f) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 f = f | 0;
 S(18);
}

function je(a, b) {
 a = a | 0;
 b = b | 0;
 var c = 0;
 c = yv(a | 0) | 0;
 return ((b | 0) == 0 ? a : c) | 0;
}

function fn(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return b >>> 0 <= a >>> 0 & a >>> 0 < c >>> 0 | 0;
}

function Xm(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return b >>> 0 <= a >>> 0 & a >>> 0 < c >>> 0 | 0;
}

function Wh(a) {
 a = a | 0;
 var b = 0;
 if (ph(a, qg() | 0) | 0) b = ~(qg() | 0); else b = a;
 return b | 0;
}

function Wf(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 d = qf(a, b, c) | 0;
 return d | 0;
}

function Vf(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 d = of(a, b, c) | 0;
 return d | 0;
}

function Ph(a) {
 a = a | 0;
 var b = 0;
 if (rh(a, Ig() | 0) | 0) b = ~(Ig() | 0); else b = a;
 return b | 0;
}

function xs(a, b) {
 a = a | 0;
 b = b | 0;
 return a >>> 0 <= b >>> 0 & (a + 4096 | 0) >>> 0 >= b >>> 0 | 0;
}

function Qi(a) {
 a = a | 0;
 var b = 0;
 b = c[5780] | 0;
 c[5780] = b + 1;
 c[a + 4 >> 2] = b + 1;
 return;
}

function Pd(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 if (!(c[a >> 2] & 32)) le(b, d, a) | 0;
 return;
}

function Jq(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 d = c[b >> 2] | 0;
 c[a >> 2] = d;
 Oq(d);
 return;
}

function lf() {
 var a = 0, b = 0;
 a = l;
 l = l + 16 | 0;
 b = Ma(20, a | 0) | 0;
 l = a;
 return b | 0;
}

function ew(a, b, c, d, e) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 S(7);
 return 0;
}

function Vv(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 Cc[a & 0](b | 0, c | 0, d | 0);
}

function Be(a) {
 a = a | 0;
 var b = 0;
 if (!a) b = 1; else b = (c[a >> 2] | 0) == 0 & 1;
 return b | 0;
}

function Ji(a, b) {
 a = a | 0;
 b = b | 0;
 var d = 0;
 d = c[a >> 2] | 0;
 return Pi(d, Oi(b) | 0) | 0;
}

function Ff(a) {
 a = a | 0;
 return ((a + -48 | 0) >>> 0 < 10 | ((a | 32) + -97 | 0) >>> 0 < 6) & 1 | 0;
}

function uv(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 return tv(a, b, c, d, 0) | 0;
}

function dw(a, b, c, d, e) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = +e;
 S(6);
 return 0;
}

function zf(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return Ae(0, a, b, c | 0 ? c : 22044) | 0;
}

function Lq(a) {
 a = a | 0;
 var b = 0;
 b = c[(Kq() | 0) >> 2] | 0;
 c[a >> 2] = b;
 Oq(b);
 return;
}

function Hv(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = +c;
 d = +d;
 return +oc[a & 1](b | 0, +c, +d);
}

function Ds(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 ws(c[a >> 2] | 0, b, d * 24 | 0);
 return;
}

function Cf() {
 var a = 0;
 a = (c[c[(Df() | 0) + 188 >> 2] >> 2] | 0) != 0;
 return (a ? 4 : 1) | 0;
}

function nh(a, b) {
 a = a | 0;
 b = b | 0;
 c[a + 16 >> 2] = (c[a + 24 >> 2] | 0) == 0 | b;
 return;
}

function iq() {
 c[5301] = 0;
 c[5300] = 9676;
 kp(21208);
 c[5300] = 7524;
 c[5302] = 7572;
 return;
}

function gq() {
 c[5297] = 0;
 c[5296] = 9676;
 jp(21192);
 c[5296] = 7440;
 c[5298] = 7488;
 return;
}

function ep(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return (b >>> 0 < 128 ? b & 255 : c) | 0;
}

function Rq(a) {
 a = a | 0;
 var b = 0;
 b = c[a >> 2] | 0;
 c[a >> 2] = b + -1;
 return b + -1 | 0;
}

function Bo(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return (b << 24 >> 24 > -1 ? b : c) | 0;
}

function $u(b, d) {
 b = b | 0;
 d = d | 0;
 c[b >> 2] = d;
 a[b + 4 >> 0] = a[d >> 0] | 0;
 return;
}

function kh(a, b) {
 a = a | 0;
 b = b | 0;
 _g(a + 8 | 0, b + 12 | 0);
 Qg(a, b + 4 | 0);
 return;
}

function zs(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 ws(c[a >> 2] | 0, b, d << 4);
 return;
}

function vs(a, b, d) {
 a = a | 0;
 b = b | 0;
 d = d | 0;
 ws(c[a >> 2] | 0, b, d << 4);
 return;
}

function Nf(a) {
 a = a | 0;
 return (a | 0) != 2980 & ((a | 0) != 0 & (a | 0) != 22004) & 1 | 0;
}
function Gc(a) {
 a = a | 0;
 var b = 0;
 b = l;
 l = l + a | 0;
 l = l + 15 & -16;
 return b | 0;
}

function ow(a, b, c, d, e) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 e = e | 0;
 S(17);
}

function _u(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = b;
 c[a + 4 >> 2] = c[b >> 2];
 return;
}

function Jv(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return qc[a & 31](b | 0, c | 0) | 0;
}

function Pi(a, b) {
 a = a | 0;
 b = b | 0;
 return c[(c[a + 8 >> 2] | 0) + (b << 2) >> 2] | 0;
}

function Vr(a) {
 a = a | 0;
 var b = 0;
 b = l;
 l = l + 16 | 0;
 zc[a & 3]();
 zr(18638, b);
}

function Ls(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return Nu(a, b, c, lh(c) | 0) | 0;
}

function Ah(a) {
 a = a | 0;
 var b = 0;
 b = a + 16 | 0;
 c[b >> 2] = c[b >> 2] | 1;
 return;
}

function mq() {
 c[5309] = 0;
 c[5308] = 9676;
 c[5310] = Mi() | 0;
 c[5308] = 8912;
 return;
}

function kq() {
 c[5305] = 0;
 c[5304] = 9676;
 c[5306] = Mi() | 0;
 c[5304] = 8888;
 return;
}

function Ns(a, b) {
 a = a | 0;
 b = b | 0;
 hu(a, b);
 hu(a + 12 | 0, b + 12 | 0);
 return;
}

function li(a) {
 a = a | 0;
 if (a | 0) Ac[c[(c[a >> 2] | 0) + 4 >> 2] & 127](a);
 return;
}

function cw(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 S(5);
 return 0;
}

function nr(b) {
 b = b | 0;
 if ((a[b + 8 + 3 >> 0] | 0) < 0) Uq(c[b >> 2] | 0);
 return;
}

function Ir(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return (a | 0) == (b | 0) | 0;
}

function Rf(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 return d | 0;
}

function Pc(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return qc[a & 31](b, c) | 0;
}

function jh(a) {
 a = a | 0;
 fh(a + (c[(c[a >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function ih(a) {
 a = a | 0;
 eh(a + (c[(c[a >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function ch(a) {
 a = a | 0;
 ah(a + (c[(c[a >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function br(b) {
 b = b | 0;
 if ((a[b + 11 >> 0] | 0) < 0) Uq(c[b >> 2] | 0);
 return;
}

function bh(a) {
 a = a | 0;
 $g(a + (c[(c[a >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function Zg(a) {
 a = a | 0;
 Xg(a + (c[(c[a >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function Yg(a) {
 a = a | 0;
 Wg(a + (c[(c[a >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function Ug(a) {
 a = a | 0;
 Sg(a + (c[(c[a >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function Tg(a) {
 a = a | 0;
 Rg(a + (c[(c[a >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function Pg(a) {
 a = a | 0;
 Ng(a + (c[(c[a >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function Og(a) {
 a = a | 0;
 Mg(a + (c[(c[a >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function Es(b) {
 b = b | 0;
 if ((a[b + 11 >> 0] | 0) < 0) Cs(c[b >> 2] | 0);
 return;
}

function ve(a) {
 a = a | 0;
 return ((a | 0) == 32 | (a + -9 | 0) >>> 0 < 5) & 1 | 0;
}

function pu(a, b) {
 a = a | 0;
 b = b | 0;
 return qu(c[a >> 2] | 0, b * 24 | 0) | 0;
}

function Uv(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 Bc[a & 63](b | 0, c | 0);
}

function df(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return $e(a, b, c) | 0;
}

function Yr(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return Ir(a, b, 0) | 0;
}

function Rt(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return St(a, b, c) | 0;
}

function Su(a, b) {
 a = a | 0;
 b = b | 0;
 return qu(c[a >> 2] | 0, b << 4) | 0;
}

function Ku(a, b) {
 a = a | 0;
 b = b | 0;
 return qu(c[a >> 2] | 0, b << 4) | 0;
}

function nw(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 S(16);
}

function Rc(a, b, c) {
 a = a | 0;
 b = +b;
 c = +c;
 return +(+nc[a & 1](b, c));
}

function No(a) {
 a = a | 0;
 c[a >> 2] = 9592;
 br(a + 16 | 0);
 pi(a);
 return;
}

function Hf(a, b) {
 a = a | 0;
 b = b | 0;
 return (a + -48 | 0) >>> 0 < 10 | 0;
}

function Go(a) {
 a = a | 0;
 c[a >> 2] = 9552;
 br(a + 12 | 0);
 pi(a);
 return;
}

function xf(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return +(+uf(a, b));
}

function wf(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return +(+rf(a, b));
}

function vf(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return +(+tf(a, b));
}

function mh(b, c) {
 b = b | 0;
 c = c | 0;
 a[b >> 0] = a[c >> 0] | 0;
 return;
}

function Gv(a, b, c) {
 a = a | 0;
 b = +b;
 c = +c;
 return +nc[a & 1](+b, +c);
}

function rs(a) {
 a = a | 0;
 ts(a + 32 | 0);
 us(a + 16 | 0);
 os(a);
 return;
}

function zp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24900) | 0);
 return;
}

function xp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(23140) | 0);
 return;
}

function vp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(23108) | 0);
 return;
}

function tp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(23100) | 0);
 return;
}

function rq(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24892) | 0);
 return;
}

function rp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(23092) | 0);
 return;
}

function pq(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24884) | 0);
 return;
}

function nq(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24812) | 0);
 return;
}

function lq(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24804) | 0);
 return;
}

function kv() {
 var a = 0;
 a = c[6258] | 0;
 c[6258] = a + 0;
 return a | 0;
}

function jq(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24796) | 0);
 return;
}

function hq(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(23984) | 0);
 return;
}

function fq(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24876) | 0);
 return;
}

function dq(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24868) | 0);
 return;
}

function bq(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24860) | 0);
 return;
}

function Zp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24844) | 0);
 return;
}

function Xp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24836) | 0);
 return;
}

function Wr() {
 var a = 0;
 a = c[2493] | 0;
 c[2493] = a + 0;
 return a | 0;
}

function Vp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24828) | 0);
 return;
}

function Tp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24820) | 0);
 return;
}

function Rp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(23172) | 0);
 return;
}

function Pp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(23164) | 0);
 return;
}

function Np(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(23156) | 0);
 return;
}

function Lp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(23132) | 0);
 return;
}

function Jp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(23148) | 0);
 return;
}

function Hp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(23124) | 0);
 return;
}

function Fp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24924) | 0);
 return;
}

function Dp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24916) | 0);
 return;
}

function Bp(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24908) | 0);
 return;
}

function $p(a, b) {
 a = a | 0;
 b = b | 0;
 sq(a, b, Oi(24852) | 0);
 return;
}

function bv(b) {
 b = b | 0;
 a[c[b >> 2] >> 0] = a[b + 4 >> 0] | 0;
 return;
}

function Vd(a) {
 a = a | 0;
 return fe(a, c[(ee() | 0) + 188 >> 2] | 0) | 0;
}

function vi(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = c[b >> 2];
 return;
}

function sr(a, b) {
 a = a | 0;
 b = b | 0;
 return or(a, b, sl(b) | 0) | 0;
}

function hr(a, b) {
 a = a | 0;
 b = b | 0;
 return dr(a, b, lh(b) | 0) | 0;
}

function bw(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 S(4);
 return 0;
}

function Ms(a, b) {
 a = a | 0;
 b = b | 0;
 return qs(a, b, lh(b) | 0) | 0;
}

function Du(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = c[b >> 2];
 return;
}

function rh(a, b) {
 a = a | 0;
 b = b | 0;
 return (a | 0) == (b | 0) | 0;
}

function ph(a, b) {
 a = a | 0;
 b = b | 0;
 return (a | 0) == (b | 0) | 0;
}

function Kc(a, b) {
 a = a | 0;
 b = b | 0;
 if (!o) {
  o = a;
  p = b;
 }
}

function Nt(a, b) {
 a = a | 0;
 b = b | 0;
 Ot(a, b, lh(b) | 0);
 return;
}

function Iv(a, b) {
 a = a | 0;
 b = b | 0;
 return pc[a & 63](b | 0) | 0;
}

function xg(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return a | 0;
}

function fg(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 return a | 0;
}

function cv(a) {
 a = a | 0;
 c[c[a >> 2] >> 2] = c[a + 4 >> 2];
 return;
}

function ug(a) {
 a = a | 0;
 c[a >> 2] = 6584;
 Ki(a + 4 | 0);
 return;
}

function qh(a, b) {
 a = a | 0;
 b = b | 0;
 Jq(a, b + 28 | 0);
 return;
}

function cg(a) {
 a = a | 0;
 c[a >> 2] = 6520;
 Ki(a + 4 | 0);
 return;
}

function _v(a, b, c) {
 a = a | 0;
 b = +b;
 c = +c;
 S(1);
 return 0.0;
}

function Ro(a, b) {
 a = a | 0;
 b = b | 0;
 ar(a, b + 16 | 0);
 return;
}

function Ko(a, b) {
 a = a | 0;
 b = b | 0;
 ar(a, b + 12 | 0);
 return;
}

function Pq(a) {
 a = a | 0;
 c[a >> 2] = (c[a >> 2] | 0) + 1;
 return;
}

function cp(a, b) {
 a = a | 0;
 b = b | 0;
 return b << 24 >> 24 | 0;
}

function Ul(a) {
 a = a | 0;
 Sl(a + 8 | 0);
 pi(a);
 Uq(a);
 return;
}

function Ol(a) {
 a = a | 0;
 Sl(a + 8 | 0);
 pi(a);
 Uq(a);
 return;
}

function uf(a, b) {
 a = a | 0;
 b = b | 0;
 return +(+sf(a, b, 2));
}

function tf(a, b) {
 a = a | 0;
 b = b | 0;
 return +(+sf(a, b, 0));
}

function rf(a, b) {
 a = a | 0;
 b = b | 0;
 return +(+sf(a, b, 1));
}

function ks(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = b;
 return;
}

function gv(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = b;
 return;
}

function ev(a, b) {
 a = a | 0;
 b = b | 0;
 c[a >> 2] = b;
 return;
}

function eh(a) {
 a = a | 0;
 kh(a, 6852);
 Zf(a + 12 | 0);
 return;
}

function Xl(a, b) {
 a = a | 0;
 b = b | 0;
 return b - a >> 2 | 0;
}

function Wg(a) {
 a = a | 0;
 _g(a, 6736);
 Zf(a + 4 | 0);
 return;
}

function Rg(a) {
 a = a | 0;
 Vg(a, 6728);
 bg(a + 8 | 0);
 return;
}

function Mg(a) {
 a = a | 0;
 Qg(a, 6680);
 Zf(a + 8 | 0);
 return;
}

function $g(a) {
 a = a | 0;
 dh(a, 6784);
 bg(a + 4 | 0);
 return;
}

function mw(a, b, c) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 S(15);
}

function Af(a) {
 a = a | 0;
 return (a + -65 | 0) >>> 0 < 26 | 0;
}

function ge(a, b) {
 a = a | 0;
 b = b | 0;
 return he(a, b) | 0;
}

function Si(a) {
 a = a | 0;
 Ti(c[c[a >> 2] >> 2] | 0);
 return;
}

function Tv(a, b) {
 a = a | 0;
 b = b | 0;
 Ac[a & 127](b | 0);
}

function wd(a) {
 a = a | 0;
 return Re(c[a + 4 >> 2] | 0) | 0;
}

function ns(a) {
 a = a | 0;
 Es(a + 12 | 0);
 Es(a);
 return;
}

function Rl(a, b) {
 a = a | 0;
 b = b | 0;
 return b - a | 0;
}

function Pf(a, b) {
 a = a | 0;
 b = b | 0;
 return Ff(a) | 0;
}

function Ke(a, b) {
 a = +a;
 b = b | 0;
 return +(+He(a, b));
}

function $d(a, b) {
 a = +a;
 b = b | 0;
 return +(+ae(a, b));
}

function pg(a, b) {
 a = a | 0;
 b = b | 0;
 return qg() | 0;
}

function ng(a, b) {
 a = a | 0;
 b = b | 0;
 return qg() | 0;
}

function aw(a, b) {
 a = a | 0;
 b = b | 0;
 S(3);
 return 0;
}

function Yq(a) {
 a = a | 0;
 jf(c[a >> 2] | 0) | 0;
 return;
}

function Tl(a) {
 a = a | 0;
 Sl(a + 8 | 0);
 pi(a);
 return;
}

function Nl(a) {
 a = a | 0;
 Sl(a + 8 | 0);
 pi(a);
 return;
}

function Ki(a) {
 a = a | 0;
 Qq(c[a >> 2] | 0) | 0;
 return;
}

function Hg(a, b) {
 a = a | 0;
 b = b | 0;
 return Ig() | 0;
}

function Fg(a, b) {
 a = a | 0;
 b = b | 0;
 return Ig() | 0;
}

function ss(a) {
 a = a | 0;
 c[a + 4096 >> 2] = 0;
 return;
}

function is(a) {
 a = a | 0;
 c[a + 4096 >> 2] = a;
 return;
}

function Xs(a) {
 a = a | 0;
 Mu(a, lh(20327) | 0);
 return;
}

function Qf(a) {
 a = a | 0;
 if (Nf(a) | 0) yd(a);
 return;
}

function Jf(a, b) {
 a = a | 0;
 b = b | 0;
 return -1 | 0;
}

function Je(a, b) {
 a = +a;
 b = +b;
 return +(+Le(a, b));
}

function Jc(a, b) {
 a = a | 0;
 b = b | 0;
 l = a;
 m = b;
}

function Ie(a, b) {
 a = +a;
 b = +b;
 return +(+Ne(a, b));
}

function zo(a, b) {
 a = a | 0;
 b = b | 0;
 return b | 0;
}

function Zv(a, b) {
 a = +a;
 b = +b;
 S(0);
 return 0.0;
}

function kp(a) {
 a = a | 0;
 c[a >> 2] = 9944;
 return;
}

function jp(a) {
 a = a | 0;
 c[a >> 2] = 9908;
 return;
}

function Qo(a) {
 a = a | 0;
 return c[a + 12 >> 2] | 0;
}

function yp() {
 c[5249] = 0;
 c[5248] = 9764;
 return;
}

function wp() {
 c[5247] = 0;
 c[5246] = 9696;
 return;
}

function sp() {
 c[5241] = 0;
 c[5240] = 7176;
 return;
}

function qq() {
 c[5315] = 0;
 c[5314] = 9304;
 return;
}

function qp() {
 c[5239] = 0;
 c[5238] = 7144;
 return;
}

function oq() {
 c[5313] = 0;
 c[5312] = 9272;
 return;
}

function eq() {
 c[5295] = 0;
 c[5294] = 9244;
 return;
}

function cq() {
 c[5293] = 0;
 c[5292] = 9216;
 return;
}

function aq() {
 c[5291] = 0;
 c[5290] = 9188;
 return;
}

function _p() {
 c[5289] = 0;
 c[5288] = 9160;
 return;
}

function Yp() {
 c[5287] = 0;
 c[5286] = 9104;
 return;
}

function Wp() {
 c[5285] = 0;
 c[5284] = 9048;
 return;
}

function Up() {
 c[5283] = 0;
 c[5282] = 8992;
 return;
}

function Sp() {
 c[5281] = 0;
 c[5280] = 8936;
 return;
}

function Qp() {
 c[5279] = 0;
 c[5278] = 7388;
 return;
}

function Po(a) {
 a = a | 0;
 return c[a + 8 >> 2] | 0;
}

function Op() {
 c[5277] = 0;
 c[5276] = 7336;
 return;
}

function Mp() {
 c[5275] = 0;
 c[5274] = 7272;
 return;
}

function Kp() {
 c[5273] = 0;
 c[5272] = 7208;
 return;
}

function Jo(b) {
 b = b | 0;
 return a[b + 9 >> 0] | 0;
}

function Io(b) {
 b = b | 0;
 return a[b + 8 >> 0] | 0;
}

function Gq() {
 Hq();
 c[6233] = 21272;
 return 24932;
}

function Ep() {
 c[5257] = 0;
 c[5256] = 9860;
 return;
}

function Cp() {
 c[5255] = 0;
 c[5254] = 9812;
 return;
}

function ys(a) {
 a = a | 0;
 return a + 15 & -16 | 0;
}

function hh(a) {
 a = a | 0;
 fh(a + -8 | 0);
 return;
}

function gh(a) {
 a = a | 0;
 eh(a + -8 | 0);
 return;
}

function xi(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function wn(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function vm(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function vk(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function vg(a) {
 a = a | 0;
 ug(a);
 Uq(a);
 return;
}

function uo(a) {
 a = a | 0;
 to(a);
 Uq(a);
 return;
}

function ro(a) {
 a = a | 0;
 qo(a);
 Uq(a);
 return;
}

function rj(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function ri(a) {
 a = a | 0;
 qi(a);
 Uq(a);
 return;
}

function qn(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function kn(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function km(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function ki(a) {
 a = a | 0;
 ji(a);
 Uq(a);
 return;
}

function ip(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function hp(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function hk(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function gp(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function fo(a) {
 a = a | 0;
 eo(a);
 Uq(a);
 return;
}

function fh(a) {
 a = a | 0;
 eh(a);
 Uq(a);
 return;
}

function dl(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function di(a) {
 a = a | 0;
 ci(a);
 Uq(a);
 return;
}

function dg(a) {
 a = a | 0;
 cg(a);
 Uq(a);
 return;
}

function as(a) {
 a = a | 0;
 Ar(a);
 Uq(a);
 return;
}

function an(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function ah(a) {
 a = a | 0;
 $g(a);
 Uq(a);
 return;
}

function ag(a) {
 a = a | 0;
 _f(a);
 Uq(a);
 return;
}

function _l(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function Zr(a) {
 a = a | 0;
 Ar(a);
 Uq(a);
 return;
}

function Yh(a) {
 a = a | 0;
 Xh(a);
 Uq(a);
 return;
}

function Xr(a) {
 a = a | 0;
 Ar(a);
 Uq(a);
 return;
}

function Xg(a) {
 a = a | 0;
 Wg(a);
 Uq(a);
 return;
}

function Vo(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function Uo(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function Sj(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function Sg(a) {
 a = a | 0;
 Rg(a);
 Uq(a);
 return;
}

function Rm(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function Rh(a) {
 a = a | 0;
 Qh(a);
 Uq(a);
 return;
}

function Qn(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function Oq(a) {
 a = a | 0;
 Pq(a + 4 | 0);
 return;
}

function Oo(a) {
 a = a | 0;
 No(a);
 Uq(a);
 return;
}

function Nr(a) {
 a = a | 0;
 Ar(a);
 Uq(a);
 return;
}

function Ng(a) {
 a = a | 0;
 Mg(a);
 Uq(a);
 return;
}

function Kh(a) {
 a = a | 0;
 Jh(a);
 Uq(a);
 return;
}

function Ho(a) {
 a = a | 0;
 Go(a);
 Uq(a);
 return;
}

function Gm(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function Fn(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function Br(a) {
 a = a | 0;
 Ar(a);
 Uq(a);
 return;
}

function Bn(a) {
 a = a | 0;
 pi(a);
 Uq(a);
 return;
}

function zn(a, b) {
 a = a | 0;
 b = b | 0;
 return;
}

function wg(a, b) {
 a = a | 0;
 b = b | 0;
 return;
}

function eg(a, b) {
 a = a | 0;
 b = b | 0;
 return;
}

function dh(a, b) {
 a = a | 0;
 b = b | 0;
 return;
}

function _g(a, b) {
 a = a | 0;
 b = b | 0;
 return;
}

function Vg(a, b) {
 a = a | 0;
 b = b | 0;
 return;
}

function Qg(a, b) {
 a = a | 0;
 b = b | 0;
 return;
}

function Iq() {
 Jq(24940, Fq() | 0);
 return 24940;
}

function En(a, b) {
 a = a | 0;
 b = b | 0;
 return;
}

function lw(a, b) {
 a = a | 0;
 b = b | 0;
 S(14);
}

function fd(a) {
 a = a | 0;
 Ca(a | 0) | 0;
 Ur();
}

function wr(a, b) {
 a = a | 0;
 b = b | 0;
 jb();
}

function gi(a) {
 a = a | 0;
 return ii(a, 1) | 0;
}

function fi(a) {
 a = a | 0;
 return ii(a, 0) | 0;
}

function _h(a) {
 a = a | 0;
 return bi(a, 0) | 0;
}

function $h(a) {
 a = a | 0;
 return bi(a, 1) | 0;
}

function tg(a) {
 a = a | 0;
 return a & 255 | 0;
}

function rg(a) {
 a = a | 0;
 return a & 255 | 0;
}

function xm(a) {
 a = a | 0;
 return 2147483647;
}

function wq(a) {
 a = a | 0;
 return 1073741823;
}

function wm(a) {
 a = a | 0;
 return 2147483647;
}

function Im(a) {
 a = a | 0;
 return 2147483647;
}

function Hm(a) {
 a = a | 0;
 return 2147483647;
}

function sl(a) {
 a = a | 0;
 return te(a) | 0;
}

function lu(a) {
 a = a | 0;
 return 178956970;
}

function lh(a) {
 a = a | 0;
 return Qe(a) | 0;
}

function Ou(a) {
 a = a | 0;
 return 268435455;
}

function Gu(a) {
 a = a | 0;
 return 268435455;
}

function Fo() {
 return c[(Bf() | 0) >> 2] | 0;
}

function Eo() {
 return c[(Ef() | 0) >> 2] | 0;
}

function Do() {
 return c[(Gf() | 0) >> 2] | 0;
}

function Bs(a) {
 a = a | 0;
 return xd(a) | 0;
}

function lg(a) {
 a = a | 0;
 return qg() | 0;
}

function Dg(a) {
 a = a | 0;
 return Ig() | 0;
}

function $v(a) {
 a = a | 0;
 S(2);
 return 0;
}

function wi(a) {
 a = a | 0;
 pi(a);
 return;
}

function vn(a) {
 a = a | 0;
 pi(a);
 return;
}

function up() {
 lp(20968, 0, 0, 1);
 return;
}

function um(a) {
 a = a | 0;
 pi(a);
 return;
}

function uk(a) {
 a = a | 0;
 pi(a);
 return;
}

function qj(a) {
 a = a | 0;
 pi(a);
 return;
}

function qi(a) {
 a = a | 0;
 pi(a);
 return;
}

function pn(a) {
 a = a | 0;
 pi(a);
 return;
}

function jn(a) {
 a = a | 0;
 pi(a);
 return;
}

function jm(a) {
 a = a | 0;
 pi(a);
 return;
}

function ji(a) {
 a = a | 0;
 pi(a);
 return;
}

function gk(a) {
 a = a | 0;
 pi(a);
 return;
}

function cl(a) {
 a = a | 0;
 pi(a);
 return;
}

function ci(a) {
 a = a | 0;
 cg(a);
 return;
}

function bg(a) {
 a = a | 0;
 _f(a);
 return;
}

function Zl(a) {
 a = a | 0;
 pi(a);
 return;
}

function Zf(a) {
 a = a | 0;
 _f(a);
 return;
}

function Xh(a) {
 a = a | 0;
 ug(a);
 return;
}

function Vq(a) {
 a = a | 0;
 Uq(a);
 return;
}

function Uq(a) {
 a = a | 0;
 yd(a);
 return;
}

function Rj(a) {
 a = a | 0;
 pi(a);
 return;
}

function Qm(a) {
 a = a | 0;
 pi(a);
 return;
}

function Qh(a) {
 a = a | 0;
 cg(a);
 return;
}

function Jh(a) {
 a = a | 0;
 ug(a);
 return;
}

function Fm(a) {
 a = a | 0;
 pi(a);
 return;
}

function Cs(a) {
 a = a | 0;
 yd(a);
 return;
}

function An(a) {
 a = a | 0;
 pi(a);
 return;
}

function $m(a) {
 a = a | 0;
 pi(a);
 return;
}

function Lg(a) {
 a = a | 0;
 return a | 0;
}

function Jg(a) {
 a = a | 0;
 return a | 0;
}

function Hd(a) {
 a = a | 0;
 return a | 0;
}

function Te() {
 Fa(22032);
 return 22040;
}

function Sv(a) {
 a = a | 0;
 zc[a & 3]();
}

function mm(a) {
 a = a | 0;
 return 127;
}

function lm(a) {
 a = a | 0;
 return 127;
}

function am(a) {
 a = a | 0;
 return 127;
}

function $l(a) {
 a = a | 0;
 return 127;
}

function Vc(a) {
 a = a | 0;
 return 64;
}

function wk(a) {
 a = a | 0;
 return 2;
}

function rm(a) {
 a = a | 0;
 return 0;
}

function mo(a) {
 a = a | 0;
 return 4;
}

function ko(a) {
 a = a | 0;
 return 0;
}

function jo(a) {
 a = a | 0;
 return 0;
}

function jg(a) {
 a = a | 0;
 return 0;
}

function ig(a) {
 a = a | 0;
 return 0;
}

function fm(a) {
 a = a | 0;
 return 0;
}

function el(a) {
 a = a | 0;
 return 2;
}

function ao(a) {
 a = a | 0;
 return 0;
}

function Xn(a) {
 a = a | 0;
 return 1;
}

function Vn(a) {
 a = a | 0;
 return 1;
}

function Un(a) {
 a = a | 0;
 return 1;
}

function Nm(a) {
 a = a | 0;
 return 0;
}

function Nd(a) {
 a = a | 0;
 return 0;
}

function Mn(a) {
 a = a | 0;
 return 4;
}

function Kn(a) {
 a = a | 0;
 return 0;
}

function Jn(a) {
 a = a | 0;
 return 0;
}

function Ip() {
 Bq(21056, 1);
 return;
}

function If(a) {
 a = a | 0;
 return 0;
}

function Hq() {
 op(21272, 1);
 return;
}

function Gp() {
 Cq(21032, 1);
 return;
}

function Ev(a) {
 a = a | 0;
 return 0;
}

function Dv(a) {
 a = a | 0;
 return 0;
}

function Cv(a) {
 a = a | 0;
 return 0;
}

function Cm(a) {
 a = a | 0;
 return 0;
}

function Bg(a) {
 a = a | 0;
 return 0;
}

function Ag(a) {
 a = a | 0;
 return 0;
}

function Ap() {
 Dq(21e3, 1);
 return;
}

function pi(a) {
 a = a | 0;
 return;
}

function jv(a) {
 a = a | 0;
 return;
}

function Um(a) {
 a = a | 0;
 return;
}

function Rr(a) {
 a = a | 0;
 return;
}

function Od(a) {
 a = a | 0;
 return;
}

function Nq(a) {
 a = a | 0;
 return;
}

function Dr(a) {
 a = a | 0;
 return;
}

function Cr(a) {
 a = a | 0;
 return;
}

function Ar(a) {
 a = a | 0;
 return;
}

function kw(a) {
 a = a | 0;
 S(13);
}

function Ue() {
 Ta(22032);
 return;
}

function Lc(a) {
 a = a | 0;
 z = a;
}

function Ic(a) {
 a = a | 0;
 l = a;
}

function np(a) {
 a = a | 0;
 jb();
}

function _q(a) {
 a = a | 0;
 jb();
}

function Yl(a) {
 a = a | 0;
 jb();
}

function $q(a) {
 a = a | 0;
 jb();
}

function re() {
 return de() | 0;
}

function gf() {
 return de() | 0;
}

function ee() {
 return de() | 0;
}

function ce() {
 return de() | 0;
}

function Uf() {
 return de() | 0;
}

function Oe() {
 return de() | 0;
}

function Df() {
 return de() | 0;
}

function ud() {
 vd(0);
 return;
}

function Nc() {
 Oc(0);
 return;
}

function Dh() {
 Eh(0);
 return;
}

function Bh() {
 Dh();
 return;
}

function Mc() {
 return z | 0;
}

function Hc() {
 return l | 0;
}

function Gd() {
 return 21936;
}

function de() {
 return 3128;
}

function Gf() {
 return 4956;
}

function Ef() {
 return 3416;
}

function Bf() {
 return 3412;
}

function qg() {
 return -1;
}

function Ig() {
 return -1;
}

function Mf() {
 return;
}

function Ch() {
 return;
}

function jw() {
 S(12);
}

function Wq() {
 jb();
}

// EMSCRIPTEN_END_FUNCS

 var nc = [ Zv, Sc ];
 var oc = [ _v, Rc ];
 var pc = [ $v, ig, jg, kd, mg, Cd, lg, Ag, Bg, Dg, Eg, Mh, Th, _h, $h, fi, gi, wk, Dk, Ek, Fk, Gk, Hk, Ik, Jk, el, ll, ml, nl, ol, pl, ql, rl, $l, am, fm, lm, mm, rm, wm, xm, Cm, Hm, Im, Nm, Jn, Kn, Mn, $n, ao, co, Io, Jo, Po, Qo, Un, Vn, Xn, jo, ko, mo, Vc, Yc, $v ];
 var qc = [ aw, ld, md, ng, pg, Fg, Hg, Oh, Vh, ai, hi, vo, xo, zo, _o, ap, cp, Qc, Tc, Xc, aw, aw, aw, aw, aw, aw, aw, aw, aw, aw, aw, aw ];
 var rc = [ bw, fg, kg, og, Dd, Ed, Id, Jd, ne, xg, Cg, Gg, Nh, Uh, oi, ui, xn, Cn, wo, yo, Bo, Wo, $o, bp, ep, Er, Yr, _r, Pc, Zc, df, bw ];
 var sc = [ cw, Ao, Xo, Yo, Zo, dp, _c, cw ];
 var tc = [ dw, Yj, Zj, nk, ok, dw, dw, dw ];
 var uc = [ ew, mi, si, Tj, Uj, Wj, _j, ik, jk, lk, pk, In, Ln, _n, bo, Co, fp, Tn, Wn, io, lo, ew, ew, ew, ew, ew, ew, ew, ew, ew, ew, ew ];
 var vc = [ fw, ln, rn, fw ];
 var wc = [ gw, yi, zi, Ai, Bi, Ci, Di, Ei, Fi, Gi, Hi, Ii, sj, tj, uj, vj, wj, xj, yj, zj, Aj, Bj, Cj, Vj, Xj, kk, mk, xk, yk, zk, Ak, Bk, fl, gl, hl, il, jl, mn, sn, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw, gw ];
 var xc = [ hw, Pl, Vl, Sm, Tm, bn, cn, hw ];
 var yc = [ iw, Ck, kl, Gn, Hn, Yn, Zn, Rn, Sn, go, ho, iw, iw, iw, iw, iw ];
 var zc = [ jw, xr, Sr, jw ];
 var Ac = [ kw, nd, od, pd, qd, rd, sd, Mg, Ng, Og, Pg, gd, hd, eh, fh, gh, hh, ih, jh, Wg, Xg, Yg, Zg, _f, ag, cg, dg, ug, vg, Rg, Sg, Tg, Ug, $g, ah, bh, ch, Jh, Kh, Qh, Rh, Xh, Yh, ci, di, ji, ki, li, qi, ri, wi, xi, qj, rj, Rj, Sj, gk, hk, uk, vk, cl, dl, Nl, Ol, Tl, Ul, Zl, _l, jm, km, um, vm, Fm, Gm, Qm, Rm, $m, an, jn, kn, pn, qn, vn, wn, An, Bn, pi, Qn, Fn, eo, fo, qo, ro, to, uo, Go, Ho, No, Oo, Uo, Vo, gp, hp, ip, Ar, Br, Cr, Dr, Nr, Xr, Zr, as, Wc, Qi, Si, Um, yd, Tr, kw, kw, kw, kw, kw, kw, kw, kw, kw, kw ];
 var Bc = [ lw, eg, wg, Lh, Sh, Zh, ei, bm, cm, dm, em, gm, hm, nm, om, pm, qm, sm, tm, ym, zm, Am, Bm, Dm, Em, Jm, Km, Lm, Mm, Om, Pm, zn, En, Ko, Lo, Mo, Ro, So, To, Uc, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw, lw ];
 var Cc = [ mw ];
 var Dc = [ nw, jd, hg, zg, ni, ti, Hr, Qr, ds, nw, nw, nw, nw, nw, nw, nw ];
 var Ec = [ ow, Gr, Pr, cs ];
 var Fc = [ pw, id, gg, yg, yn, Dn, Fr, Or, bs, pw, pw, pw, pw, pw, pw, pw ];
 return {
  __GLOBAL__I_000101: Bh,
  __GLOBAL__sub_I_bind_cpp: ud,
  __GLOBAL__sub_I_dawg_node_api_cpp: Nc,
  __GLOBAL__sub_I_iostream_cpp: Ch,
  ___cxa_can_catch: lv,
  ___cxa_demangle: hs,
  ___cxa_is_pointer_type: mv,
  ___errno_location: Gd,
  ___getTypeName: wd,
  ___muldi3: pv,
  ___udivdi3: uv,
  ___uremdi3: vv,
  _bitshift64Lshr: wv,
  _bitshift64Shl: xv,
  _free: yd,
  _i64Add: qv,
  _i64Subtract: rv,
  _llvm_bswap_i32: yv,
  _malloc: xd,
  _memcpy: zv,
  _memmove: Av,
  _memset: Bv,
  _pthread_cond_broadcast: Cv,
  _pthread_mutex_lock: Dv,
  _pthread_mutex_unlock: Ev,
  _sbrk: Fv,
  dynCall_ddd: Gv,
  dynCall_didd: Hv,
  dynCall_ii: Iv,
  dynCall_iii: Jv,
  dynCall_iiii: Kv,
  dynCall_iiiii: Lv,
  dynCall_iiiiid: Mv,
  dynCall_iiiiii: Nv,
  dynCall_iiiiiid: Ov,
  dynCall_iiiiiii: Pv,
  dynCall_iiiiiiii: Qv,
  dynCall_iiiiiiiii: Rv,
  dynCall_v: Sv,
  dynCall_vi: Tv,
  dynCall_vii: Uv,
  dynCall_viii: Vv,
  dynCall_viiii: Wv,
  dynCall_viiiii: Xv,
  dynCall_viiiiii: Yv,
  establishStackSpace: Jc,
  getTempRet0: Mc,
  runPostSets: nv,
  setTempRet0: Lc,
  setThrew: Kc,
  stackAlloc: Gc,
  stackRestore: Ic,
  stackSave: Hc
 };
})


// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var __GLOBAL__I_000101 = Module["__GLOBAL__I_000101"] = asm["__GLOBAL__I_000101"];
var __GLOBAL__sub_I_bind_cpp = Module["__GLOBAL__sub_I_bind_cpp"] = asm["__GLOBAL__sub_I_bind_cpp"];
var __GLOBAL__sub_I_dawg_node_api_cpp = Module["__GLOBAL__sub_I_dawg_node_api_cpp"] = asm["__GLOBAL__sub_I_dawg_node_api_cpp"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var ___cxa_demangle = Module["___cxa_demangle"] = asm["___cxa_demangle"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _free = Module["_free"] = asm["_free"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _memset = Module["_memset"] = asm["_memset"];
var _pthread_cond_broadcast = Module["_pthread_cond_broadcast"] = asm["_pthread_cond_broadcast"];
var _pthread_mutex_lock = Module["_pthread_mutex_lock"] = asm["_pthread_mutex_lock"];
var _pthread_mutex_unlock = Module["_pthread_mutex_unlock"] = asm["_pthread_mutex_unlock"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var stackSave = Module["stackSave"] = asm["stackSave"];
var dynCall_ddd = Module["dynCall_ddd"] = asm["dynCall_ddd"];
var dynCall_didd = Module["dynCall_didd"] = asm["dynCall_didd"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
Module["asm"] = asm;
if (memoryInitializer) {
 if (!isDataURI(memoryInitializer)) {
  if (typeof Module["locateFile"] === "function") {
   memoryInitializer = Module["locateFile"](memoryInitializer);
  } else if (Module["memoryInitializerPrefixURL"]) {
   memoryInitializer = Module["memoryInitializerPrefixURL"] + memoryInitializer;
  }
 }
 if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
  var data = Module["readBinary"](memoryInitializer);
  HEAPU8.set(data, GLOBAL_BASE);
 } else {
  addRunDependency("memory initializer");
  var applyMemoryInitializer = (function(data) {
   if (data.byteLength) data = new Uint8Array(data);
   HEAPU8.set(data, GLOBAL_BASE);
   if (Module["memoryInitializerRequest"]) delete Module["memoryInitializerRequest"].response;
   removeRunDependency("memory initializer");
  });
  function doBrowserLoad() {
   Module["readAsync"](memoryInitializer, applyMemoryInitializer, (function() {
    throw "could not load memory initializer " + memoryInitializer;
   }));
  }
  var memoryInitializerBytes = tryParseAsDataURI(memoryInitializer);
  if (memoryInitializerBytes) {
   applyMemoryInitializer(memoryInitializerBytes.buffer);
  } else if (Module["memoryInitializerRequest"]) {
   function useRequest() {
    var request = Module["memoryInitializerRequest"];
    var response = request.response;
    if (request.status !== 200 && request.status !== 0) {
     var data = tryParseAsDataURI(Module["memoryInitializerRequestURL"]);
     if (data) {
      response = data.buffer;
     } else {
      console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: " + request.status + ", retrying " + memoryInitializer);
      doBrowserLoad();
      return;
     }
    }
    applyMemoryInitializer(response);
   }
   if (Module["memoryInitializerRequest"].response) {
    setTimeout(useRequest, 0);
   } else {
    Module["memoryInitializerRequest"].addEventListener("load", useRequest);
   }
  } else {
   doBrowserLoad();
  }
 }
}
function ExitStatus(status) {
 this.name = "ExitStatus";
 this.message = "Program terminated with exit(" + status + ")";
 this.status = status;
}
ExitStatus.prototype = new Error;
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
dependenciesFulfilled = function runCaller() {
 if (!Module["calledRun"]) run();
 if (!Module["calledRun"]) dependenciesFulfilled = runCaller;
};
function run(args) {
 args = args || Module["arguments"];
 if (runDependencies > 0) {
  return;
 }
 preRun();
 if (runDependencies > 0) return;
 if (Module["calledRun"]) return;
 function doRun() {
  if (Module["calledRun"]) return;
  Module["calledRun"] = true;
  if (ABORT) return;
  ensureInitRuntime();
  preMain();
  if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
  postRun();
 }
 if (Module["setStatus"]) {
  Module["setStatus"]("Running...");
  setTimeout((function() {
   setTimeout((function() {
    Module["setStatus"]("");
   }), 1);
   doRun();
  }), 1);
 } else {
  doRun();
 }
}
Module["run"] = run;
function exit(status, implicit) {
 if (implicit && Module["noExitRuntime"] && status === 0) {
  return;
 }
 if (Module["noExitRuntime"]) {} else {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  exitRuntime();
  if (Module["onExit"]) Module["onExit"](status);
 }
 if (ENVIRONMENT_IS_NODE) {
  process["exit"](status);
 }
 Module["quit"](status, new ExitStatus(status));
}
Module["exit"] = exit;
function abort(what) {
 if (Module["onAbort"]) {
  Module["onAbort"](what);
 }
 if (what !== undefined) {
  Module.print(what);
  Module.printErr(what);
  what = JSON.stringify(what);
 } else {
  what = "";
 }
 ABORT = true;
 EXITSTATUS = 1;
 throw "abort(" + what + "). Build with -s ASSERTIONS=1 for more info.";
}
Module["abort"] = abort;
if (Module["preInit"]) {
 if (typeof Module["preInit"] == "function") Module["preInit"] = [ Module["preInit"] ];
 while (Module["preInit"].length > 0) {
  Module["preInit"].pop()();
 }
}
Module["noExitRuntime"] = true;
run();





}).call(this,require('_process'),require("buffer").Buffer)
},{"_process":124,"buffer":50,"crypto":59,"fs":3,"path":117}],2:[function(require,module,exports){
// Driver example code for dawgjs
var dawg = require('./dawg.js')

console.log("Hello dawg_walker here");

console.log("getRandomInt(0, 100)", dawg.getRandomInt(0, 100));
console.log("getRandomInt(0, 100)", dawg.getRandomInt(0, 100));
console.log("getRandomInt(0, 100)", dawg.getRandomInt(0, 100));

console.log("getRandomFloat(0, 100)", dawg.getRandomFloat(0, 100));
console.log("getRandomFloat(0, 100)", dawg.getRandomFloat(0, 100));
console.log("getRandomFloat(0, 100)", dawg.getRandomFloat(0, 100));

console.log("getDawgError('ahhhhh')", dawg.getDawgError('ahhhhh'));

var dawgWrapper = new dawg.DawgWrapper(4);
console.log("getRandom(0, 10000)", dawgWrapper.getRandom(0, 10000));
console.log("getRandom(0, 10000)", dawgWrapper.getRandom(0, 10000));
console.log("getRandom(0, 10000)", dawgWrapper.getRandom(0, 10000));
console.log("getRandom(0, 10000)", dawgWrapper.getRandom(0, 10000));
dawgWrapper.delete();

},{"./dawg.js":1}],3:[function(require,module,exports){

},{}],4:[function(require,module,exports){
var asn1 = exports;

asn1.bignum = require('bn.js');

asn1.define = require('./asn1/api').define;
asn1.base = require('./asn1/base');
asn1.constants = require('./asn1/constants');
asn1.decoders = require('./asn1/decoders');
asn1.encoders = require('./asn1/encoders');

},{"./asn1/api":5,"./asn1/base":7,"./asn1/constants":11,"./asn1/decoders":13,"./asn1/encoders":16,"bn.js":19}],5:[function(require,module,exports){
var asn1 = require('../asn1');
var inherits = require('inherits');

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named;
  try {
    named = require('vm').runInThisContext(
      '(function ' + this.name + '(entity) {\n' +
      '  this._initNamed(entity);\n' +
      '})'
    );
  } catch (e) {
    named = function (entity) {
      this._initNamed(entity);
    };
  }
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};

},{"../asn1":4,"inherits":104,"vm":159}],6:[function(require,module,exports){
var inherits = require('inherits');
var Reporter = require('../base').Reporter;
var Buffer = require('buffer').Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};

},{"../base":7,"buffer":50,"inherits":104}],7:[function(require,module,exports){
var base = exports;

base.Reporter = require('./reporter').Reporter;
base.DecoderBuffer = require('./buffer').DecoderBuffer;
base.EncoderBuffer = require('./buffer').EncoderBuffer;
base.Node = require('./node');

},{"./buffer":6,"./node":8,"./reporter":9}],8:[function(require,module,exports){
var Reporter = require('../base').Reporter;
var EncoderBuffer = require('../base').EncoderBuffer;
var DecoderBuffer = require('../base').DecoderBuffer;
var assert = require('minimalistic-assert');

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  var result = state['default'];
  var present = true;

  var prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    var tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      var save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    var start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input, options);
    else
      result = this._decodeChoice(input, options);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      var data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
          ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
        ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
};

},{"../base":7,"minimalistic-assert":110}],9:[function(require,module,exports){
var inherits = require('inherits');

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  var state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  var state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};

},{"inherits":104}],10:[function(require,module,exports){
var constants = require('../constants');

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);

},{"../constants":11}],11:[function(require,module,exports){
var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = require('./der');

},{"./der":10}],12:[function(require,module,exports){
var inherits = require('inherits');

var asn1 = require('../../asn1');
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.save();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
                                                    options) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    var raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    var str = '';
    for (var i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    var numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    var printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var result;
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    var tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  var res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}

},{"../../asn1":4,"inherits":104}],13:[function(require,module,exports){
var decoders = exports;

decoders.der = require('./der');
decoders.pem = require('./pem');

},{"./der":12,"./pem":14}],14:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var DERDecoder = require('./der');

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  var lines = data.toString().split(/[\r\n]+/g);

  var label = options.label.toUpperCase();

  var re = /^-----(BEGIN|END) ([^-]+)-----$/;
  var start = -1;
  var end = -1;
  for (var i = 0; i < lines.length; i++) {
    var match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  var base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9\+\/=]+/gi, '');

  var input = new Buffer(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};

},{"./der":12,"buffer":50,"inherits":104}],15:[function(require,module,exports){
var inherits = require('inherits');
var Buffer = require('buffer').Buffer;

var asn1 = require('../../asn1');
var base = asn1.base;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    var buf = new Buffer(str.length * 2);
    for (var i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s\.]+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    var numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}

},{"../../asn1":4,"buffer":50,"inherits":104}],16:[function(require,module,exports){
var encoders = exports;

encoders.der = require('./der');
encoders.pem = require('./pem');

},{"./der":15,"./pem":17}],17:[function(require,module,exports){
var inherits = require('inherits');

var DEREncoder = require('./der');

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  var buf = DEREncoder.prototype.encode.call(this, data);

  var p = buf.toString('base64');
  var out = [ '-----BEGIN ' + options.label + '-----' ];
  for (var i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};

},{"./der":15,"inherits":104}],18:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

},{}],19:[function(require,module,exports){
(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = require('buffer').Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

},{"buffer":21}],20:[function(require,module,exports){
var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = require('crypto');
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}

},{"crypto":21}],21:[function(require,module,exports){
arguments[4][3][0].apply(exports,arguments)
},{"dup":3}],22:[function(require,module,exports){
// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = require('safe-buffer').Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES

},{"safe-buffer":147}],23:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')
var GHASH = require('./ghash')
var xor = require('buffer-xor')
var incr32 = require('./incr32')

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher

},{"./aes":22,"./ghash":27,"./incr32":28,"buffer-xor":49,"cipher-base":51,"inherits":104,"safe-buffer":147}],24:[function(require,module,exports){
var ciphers = require('./encrypter')
var deciphers = require('./decrypter')
var modes = require('./modes/list.json')

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers

},{"./decrypter":25,"./encrypter":26,"./modes/list.json":36}],25:[function(require,module,exports){
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var MODES = require('./modes')
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv

},{"./aes":22,"./authCipher":23,"./modes":35,"./streamCipher":38,"cipher-base":51,"evp_bytestokey":87,"inherits":104,"safe-buffer":147}],26:[function(require,module,exports){
var MODES = require('./modes')
var AuthCipher = require('./authCipher')
var Buffer = require('safe-buffer').Buffer
var StreamCipher = require('./streamCipher')
var Transform = require('cipher-base')
var aes = require('./aes')
var ebtk = require('evp_bytestokey')
var inherits = require('inherits')

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher

},{"./aes":22,"./authCipher":23,"./modes":35,"./streamCipher":38,"cipher-base":51,"evp_bytestokey":87,"inherits":104,"safe-buffer":147}],27:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH

},{"safe-buffer":147}],28:[function(require,module,exports){
function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32

},{}],29:[function(require,module,exports){
var xor = require('buffer-xor')

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}

},{"buffer-xor":49}],30:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var xor = require('buffer-xor')

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}

},{"buffer-xor":49,"safe-buffer":147}],31:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":147}],32:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}

},{"safe-buffer":147}],33:[function(require,module,exports){
var xor = require('buffer-xor')
var Buffer = require('safe-buffer').Buffer
var incr32 = require('../incr32')

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

},{"../incr32":28,"buffer-xor":49,"safe-buffer":147}],34:[function(require,module,exports){
exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}

},{}],35:[function(require,module,exports){
var modeModules = {
  ECB: require('./ecb'),
  CBC: require('./cbc'),
  CFB: require('./cfb'),
  CFB8: require('./cfb8'),
  CFB1: require('./cfb1'),
  OFB: require('./ofb'),
  CTR: require('./ctr'),
  GCM: require('./ctr')
}

var modes = require('./list.json')

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes

},{"./cbc":29,"./cfb":30,"./cfb1":31,"./cfb8":32,"./ctr":33,"./ecb":34,"./list.json":36,"./ofb":37}],36:[function(require,module,exports){
module.exports={
  "aes-128-ecb": {
    "cipher": "AES",
    "key": 128,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-192-ecb": {
    "cipher": "AES",
    "key": 192,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-256-ecb": {
    "cipher": "AES",
    "key": 256,
    "iv": 0,
    "mode": "ECB",
    "type": "block"
  },
  "aes-128-cbc": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-192-cbc": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-256-cbc": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes128": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes192": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes256": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CBC",
    "type": "block"
  },
  "aes-128-cfb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-192-cfb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-256-cfb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB",
    "type": "stream"
  },
  "aes-128-cfb8": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-192-cfb8": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-256-cfb8": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB8",
    "type": "stream"
  },
  "aes-128-cfb1": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-192-cfb1": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-256-cfb1": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CFB1",
    "type": "stream"
  },
  "aes-128-ofb": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-192-ofb": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-256-ofb": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "OFB",
    "type": "stream"
  },
  "aes-128-ctr": {
    "cipher": "AES",
    "key": 128,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-192-ctr": {
    "cipher": "AES",
    "key": 192,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-256-ctr": {
    "cipher": "AES",
    "key": 256,
    "iv": 16,
    "mode": "CTR",
    "type": "stream"
  },
  "aes-128-gcm": {
    "cipher": "AES",
    "key": 128,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-192-gcm": {
    "cipher": "AES",
    "key": 192,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  },
  "aes-256-gcm": {
    "cipher": "AES",
    "key": 256,
    "iv": 12,
    "mode": "GCM",
    "type": "auth"
  }
}

},{}],37:[function(require,module,exports){
(function (Buffer){
var xor = require('buffer-xor')

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

}).call(this,require("buffer").Buffer)
},{"buffer":50,"buffer-xor":49}],38:[function(require,module,exports){
var aes = require('./aes')
var Buffer = require('safe-buffer').Buffer
var Transform = require('cipher-base')
var inherits = require('inherits')

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher

},{"./aes":22,"cipher-base":51,"inherits":104,"safe-buffer":147}],39:[function(require,module,exports){
var ebtk = require('evp_bytestokey')
var aes = require('browserify-aes/browser')
var DES = require('browserify-des')
var desModes = require('browserify-des/modes')
var aesModes = require('browserify-aes/modes')
function createCipher (suite, password) {
  var keyLen, ivLen
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}
function createDecipher (suite, password) {
  var keyLen, ivLen
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }
  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    return aes.createCipheriv(suite, key, iv)
  } else if (desModes[suite]) {
    return new DES({
      key: key,
      iv: iv,
      mode: suite
    })
  } else {
    throw new TypeError('invalid suite type')
  }
}
function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) {
    return aes.createDecipheriv(suite, key, iv)
  } else if (desModes[suite]) {
    return new DES({
      key: key,
      iv: iv,
      mode: suite,
      decrypt: true
    })
  } else {
    throw new TypeError('invalid suite type')
  }
}
exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}
exports.listCiphers = exports.getCiphers = getCiphers

},{"browserify-aes/browser":24,"browserify-aes/modes":35,"browserify-des":40,"browserify-des/modes":41,"evp_bytestokey":87}],40:[function(require,module,exports){
(function (Buffer){
var CipherBase = require('cipher-base')
var des = require('des.js')
var inherits = require('inherits')

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return new Buffer(this._des.update(data))
}
DES.prototype._final = function () {
  return new Buffer(this._des.final())
}

}).call(this,require("buffer").Buffer)
},{"buffer":50,"cipher-base":51,"des.js":60,"inherits":104}],41:[function(require,module,exports){
exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}

},{}],42:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
var randomBytes = require('randombytes');
module.exports = crt;
function blind(priv) {
  var r = getr(priv);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv) {
  var blinds = blind(priv);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).umod(p);
  h.imul(q);
  m2.iadd(h);
  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
}
crt.getr = getr;
function getr(priv) {
  var len = priv.modulus.byteLength();
  var r = new bn(randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
    r = new bn(randomBytes(len));
  }
  return r;
}

}).call(this,require("buffer").Buffer)
},{"bn.js":19,"buffer":50,"randombytes":131}],43:[function(require,module,exports){
module.exports = require('./browser/algorithms.json')

},{"./browser/algorithms.json":44}],44:[function(require,module,exports){
module.exports={
  "sha224WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "RSA-SHA224": {
    "sign": "ecdsa/rsa",
    "hash": "sha224",
    "id": "302d300d06096086480165030402040500041c"
  },
  "sha256WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "RSA-SHA256": {
    "sign": "ecdsa/rsa",
    "hash": "sha256",
    "id": "3031300d060960864801650304020105000420"
  },
  "sha384WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "RSA-SHA384": {
    "sign": "ecdsa/rsa",
    "hash": "sha384",
    "id": "3041300d060960864801650304020205000430"
  },
  "sha512WithRSAEncryption": {
    "sign": "rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA512": {
    "sign": "ecdsa/rsa",
    "hash": "sha512",
    "id": "3051300d060960864801650304020305000440"
  },
  "RSA-SHA1": {
    "sign": "rsa",
    "hash": "sha1",
    "id": "3021300906052b0e03021a05000414"
  },
  "ecdsa-with-SHA1": {
    "sign": "ecdsa",
    "hash": "sha1",
    "id": ""
  },
  "sha256": {
    "sign": "ecdsa",
    "hash": "sha256",
    "id": ""
  },
  "sha224": {
    "sign": "ecdsa",
    "hash": "sha224",
    "id": ""
  },
  "sha384": {
    "sign": "ecdsa",
    "hash": "sha384",
    "id": ""
  },
  "sha512": {
    "sign": "ecdsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-SHA1": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA": {
    "sign": "dsa",
    "hash": "sha1",
    "id": ""
  },
  "DSA-WITH-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-SHA224": {
    "sign": "dsa",
    "hash": "sha224",
    "id": ""
  },
  "DSA-WITH-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-SHA256": {
    "sign": "dsa",
    "hash": "sha256",
    "id": ""
  },
  "DSA-WITH-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-SHA384": {
    "sign": "dsa",
    "hash": "sha384",
    "id": ""
  },
  "DSA-WITH-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-SHA512": {
    "sign": "dsa",
    "hash": "sha512",
    "id": ""
  },
  "DSA-RIPEMD160": {
    "sign": "dsa",
    "hash": "rmd160",
    "id": ""
  },
  "ripemd160WithRSA": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "RSA-RIPEMD160": {
    "sign": "rsa",
    "hash": "rmd160",
    "id": "3021300906052b2403020105000414"
  },
  "md5WithRSAEncryption": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  },
  "RSA-MD5": {
    "sign": "rsa",
    "hash": "md5",
    "id": "3020300c06082a864886f70d020505000410"
  }
}

},{}],45:[function(require,module,exports){
module.exports={
  "1.3.132.0.10": "secp256k1",
  "1.3.132.0.33": "p224",
  "1.2.840.10045.3.1.1": "p192",
  "1.2.840.10045.3.1.7": "p256",
  "1.3.132.0.34": "p384",
  "1.3.132.0.35": "p521"
}

},{}],46:[function(require,module,exports){
(function (Buffer){
var createHash = require('create-hash')
var stream = require('stream')
var inherits = require('inherits')
var sign = require('./sign')
var verify = require('./verify')

var algorithms = require('./algorithms.json')
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = new Buffer(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

}).call(this,require("buffer").Buffer)
},{"./algorithms.json":44,"./sign":47,"./verify":48,"buffer":50,"create-hash":54,"inherits":104,"stream":156}],47:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var createHmac = require('create-hmac')
var crt = require('browserify-rsa')
var EC = require('elliptic').ec
var BN = require('bn.js')
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [ 0, 1 ]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return new Buffer(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [ 0 ].concat(r)
  if (s[0] & 0x80) s = [ 0 ].concat(s)

  var total = r.length + s.length + 4
  var res = [ 0x30, total, 0x02, r.length ]
  res = res.concat(r, [ 0x02, s.length ], s)
  return new Buffer(res)
}

function getKey (x, q, hash, algo) {
  x = new Buffer(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - x.length)
    zeros.fill(0)
    x = Buffer.concat([ zeros, x ])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = new Buffer(hlen)
  v.fill(1)
  var k = new Buffer(hlen)
  k.fill(0)
  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = new Buffer(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - out.length)
    zeros.fill(0)
    out = Buffer.concat([ zeros, out ])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = new Buffer(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([ t, kv.v ])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

}).call(this,require("buffer").Buffer)
},{"./curves.json":45,"bn.js":19,"browserify-rsa":42,"buffer":50,"create-hmac":57,"elliptic":70,"parse-asn1":116}],48:[function(require,module,exports){
(function (Buffer){
// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var BN = require('bn.js')
var EC = require('elliptic').ec
var parseKeys = require('parse-asn1')
var curves = require('./curves.json')

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [ 1 ]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = new Buffer(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = new Buffer(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify

}).call(this,require("buffer").Buffer)
},{"./curves.json":45,"bn.js":19,"buffer":50,"elliptic":70,"parse-asn1":116}],49:[function(require,module,exports){
(function (Buffer){
module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

}).call(this,require("buffer").Buffer)
},{"buffer":50}],50:[function(require,module,exports){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  get: function () {
    if (!(this instanceof Buffer)) {
      return undefined
    }
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  get: function () {
    if (!(this instanceof Buffer)) {
      return undefined
    }
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('Invalid typed array length')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  return fromObject(value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj) {
    if (ArrayBuffer.isView(obj) || 'length' in obj) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0)
      }
      return fromArrayLike(obj)
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data)
    }
  }

  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (ArrayBuffer.isView(buf)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : new Buffer(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check
// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166
function isArrayBuffer (obj) {
  return obj instanceof ArrayBuffer ||
    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&
      typeof obj.byteLength === 'number')
}

function numberIsNaN (obj) {
  return obj !== obj // eslint-disable-line no-self-compare
}

},{"base64-js":18,"ieee754":102}],51:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var StringDecoder = require('string_decoder').StringDecoder
var inherits = require('inherits')

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase

},{"inherits":104,"safe-buffer":147,"stream":156,"string_decoder":157}],52:[function(require,module,exports){
(function (Buffer){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

}).call(this,{"isBuffer":require("../../is-buffer/index.js")})
},{"../../is-buffer/index.js":105}],53:[function(require,module,exports){
(function (Buffer){
var elliptic = require('elliptic');
var BN = require('bn.js');

module.exports = function createECDH(curve) {
	return new ECDH(curve);
};

var aliases = {
	secp256k1: {
		name: 'secp256k1',
		byteLength: 32
	},
	secp224r1: {
		name: 'p224',
		byteLength: 28
	},
	prime256v1: {
		name: 'p256',
		byteLength: 32
	},
	prime192v1: {
		name: 'p192',
		byteLength: 24
	},
	ed25519: {
		name: 'ed25519',
		byteLength: 32
	},
	secp384r1: {
		name: 'p384',
		byteLength: 48
	},
	secp521r1: {
		name: 'p521',
		byteLength: 66
	}
};

aliases.p224 = aliases.secp224r1;
aliases.p256 = aliases.secp256r1 = aliases.prime256v1;
aliases.p192 = aliases.secp192r1 = aliases.prime192v1;
aliases.p384 = aliases.secp384r1;
aliases.p521 = aliases.secp521r1;

function ECDH(curve) {
	this.curveType = aliases[curve];
	if (!this.curveType ) {
		this.curveType = {
			name: curve
		};
	}
	this.curve = new elliptic.ec(this.curveType.name);
	this.keys = void 0;
}

ECDH.prototype.generateKeys = function (enc, format) {
	this.keys = this.curve.genKeyPair();
	return this.getPublicKey(enc, format);
};

ECDH.prototype.computeSecret = function (other, inenc, enc) {
	inenc = inenc || 'utf8';
	if (!Buffer.isBuffer(other)) {
		other = new Buffer(other, inenc);
	}
	var otherPub = this.curve.keyFromPublic(other).getPublic();
	var out = otherPub.mul(this.keys.getPrivate()).getX();
	return formatReturnValue(out, enc, this.curveType.byteLength);
};

ECDH.prototype.getPublicKey = function (enc, format) {
	var key = this.keys.getPublic(format === 'compressed', true);
	if (format === 'hybrid') {
		if (key[key.length - 1] % 2) {
			key[0] = 7;
		} else {
			key [0] = 6;
		}
	}
	return formatReturnValue(key, enc);
};

ECDH.prototype.getPrivateKey = function (enc) {
	return formatReturnValue(this.keys.getPrivate(), enc);
};

ECDH.prototype.setPublicKey = function (pub, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(pub)) {
		pub = new Buffer(pub, enc);
	}
	this.keys._importPublic(pub);
	return this;
};

ECDH.prototype.setPrivateKey = function (priv, enc) {
	enc = enc || 'utf8';
	if (!Buffer.isBuffer(priv)) {
		priv = new Buffer(priv, enc);
	}
	var _priv = new BN(priv);
	_priv = _priv.toString(16);
	this.keys._importPrivate(_priv);
	return this;
};

function formatReturnValue(bn, enc, len) {
	if (!Array.isArray(bn)) {
		bn = bn.toArray();
	}
	var buf = new Buffer(bn);
	if (len && buf.length < len) {
		var zeros = new Buffer(len - buf.length);
		zeros.fill(0);
		buf = Buffer.concat([zeros, buf]);
	}
	if (!enc) {
		return buf;
	} else {
		return buf.toString(enc);
	}
}

}).call(this,require("buffer").Buffer)
},{"bn.js":19,"buffer":50,"elliptic":70}],54:[function(require,module,exports){
(function (Buffer){
'use strict'
var inherits = require('inherits')
var md5 = require('./md5')
var RIPEMD160 = require('ripemd160')
var sha = require('sha.js')

var Base = require('cipher-base')

function HashNoConstructor (hash) {
  Base.call(this, 'digest')

  this._hash = hash
  this.buffers = []
}

inherits(HashNoConstructor, Base)

HashNoConstructor.prototype._update = function (data) {
  this.buffers.push(data)
}

HashNoConstructor.prototype._final = function () {
  var buf = Buffer.concat(this.buffers)
  var r = this._hash(buf)
  this.buffers = null

  return r
}

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new HashNoConstructor(md5)
  if (alg === 'rmd160' || alg === 'ripemd160') return new Hash(new RIPEMD160())

  return new Hash(sha(alg))
}

}).call(this,require("buffer").Buffer)
},{"./md5":56,"buffer":50,"cipher-base":51,"inherits":104,"ripemd160":146,"sha.js":149}],55:[function(require,module,exports){
(function (Buffer){
'use strict'
var intSize = 4
var zeroBuffer = new Buffer(intSize)
zeroBuffer.fill(0)

var charSize = 8
var hashSize = 16

function toArray (buf) {
  if ((buf.length % intSize) !== 0) {
    var len = buf.length + (intSize - (buf.length % intSize))
    buf = Buffer.concat([buf, zeroBuffer], len)
  }

  var arr = new Array(buf.length >>> 2)
  for (var i = 0, j = 0; i < buf.length; i += intSize, j++) {
    arr[j] = buf.readInt32LE(i)
  }

  return arr
}

module.exports = function hash (buf, fn) {
  var arr = fn(toArray(buf), buf.length * charSize)
  buf = new Buffer(hashSize)
  for (var i = 0; i < arr.length; i++) {
    buf.writeInt32LE(arr[i], i << 2, true)
  }
  return buf
}

}).call(this,require("buffer").Buffer)
},{"buffer":50}],56:[function(require,module,exports){
'use strict'
/*
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */

var makeHash = require('./make-hash')

/*
 * Calculate the MD5 of an array of little-endian words, and a bit length
 */
function core_md5 (x, len) {
  /* append padding */
  x[len >> 5] |= 0x80 << ((len) % 32)
  x[(((len + 64) >>> 9) << 4) + 14] = len

  var a = 1732584193
  var b = -271733879
  var c = -1732584194
  var d = 271733878

  for (var i = 0; i < x.length; i += 16) {
    var olda = a
    var oldb = b
    var oldc = c
    var oldd = d

    a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936)
    d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586)
    c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819)
    b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330)
    a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897)
    d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426)
    c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341)
    b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983)
    a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416)
    d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417)
    c = md5_ff(c, d, a, b, x[i + 10], 17, -42063)
    b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162)
    a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682)
    d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101)
    c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290)
    b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329)

    a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510)
    d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632)
    c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713)
    b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302)
    a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691)
    d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083)
    c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335)
    b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848)
    a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438)
    d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690)
    c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961)
    b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501)
    a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467)
    d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784)
    c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473)
    b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734)

    a = md5_hh(a, b, c, d, x[i + 5], 4, -378558)
    d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463)
    c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562)
    b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556)
    a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060)
    d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353)
    c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632)
    b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640)
    a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174)
    d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222)
    c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979)
    b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189)
    a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487)
    d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835)
    c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520)
    b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651)

    a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844)
    d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415)
    c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905)
    b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055)
    a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571)
    d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606)
    c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523)
    b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799)
    a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359)
    d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744)
    c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380)
    b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649)
    a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070)
    d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379)
    c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259)
    b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551)

    a = safe_add(a, olda)
    b = safe_add(b, oldb)
    c = safe_add(c, oldc)
    d = safe_add(d, oldd)
  }

  return [a, b, c, d]
}

/*
 * These functions implement the four basic operations the algorithm uses.
 */
function md5_cmn (q, a, b, x, s, t) {
  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b)
}

function md5_ff (a, b, c, d, x, s, t) {
  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t)
}

function md5_gg (a, b, c, d, x, s, t) {
  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t)
}

function md5_hh (a, b, c, d, x, s, t) {
  return md5_cmn(b ^ c ^ d, a, b, x, s, t)
}

function md5_ii (a, b, c, d, x, s, t) {
  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t)
}

/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */
function safe_add (x, y) {
  var lsw = (x & 0xFFFF) + (y & 0xFFFF)
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16)
  return (msw << 16) | (lsw & 0xFFFF)
}

/*
 * Bitwise rotate a 32-bit number to the left.
 */
function bit_rol (num, cnt) {
  return (num << cnt) | (num >>> (32 - cnt))
}

module.exports = function md5 (buf) {
  return makeHash(buf, core_md5)
}

},{"./make-hash":55}],57:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Legacy = require('./legacy')
var Base = require('cipher-base')
var Buffer = require('safe-buffer').Buffer
var md5 = require('create-hash/md5')
var RIPEMD160 = require('ripemd160')

var sha = require('sha.js')

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}

},{"./legacy":58,"cipher-base":51,"create-hash/md5":56,"inherits":104,"ripemd160":146,"safe-buffer":147,"sha.js":149}],58:[function(require,module,exports){
'use strict'
var inherits = require('inherits')
var Buffer = require('safe-buffer').Buffer

var Base = require('cipher-base')

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac

},{"cipher-base":51,"inherits":104,"safe-buffer":147}],59:[function(require,module,exports){
'use strict'

exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')
exports.createHash = exports.Hash = require('create-hash')
exports.createHmac = exports.Hmac = require('create-hmac')

var algos = require('browserify-sign/algos')
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = require('pbkdf2')
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = require('browserify-cipher')

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = require('diffie-hellman')

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = require('browserify-sign')

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = require('create-ecdh')

var publicEncrypt = require('public-encrypt')

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

var rf = require('randomfill')

exports.randomFill = rf.randomFill
exports.randomFillSync = rf.randomFillSync

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}

},{"browserify-cipher":39,"browserify-sign":46,"browserify-sign/algos":43,"create-ecdh":53,"create-hash":54,"create-hmac":57,"diffie-hellman":66,"pbkdf2":118,"public-encrypt":125,"randombytes":131,"randomfill":132}],60:[function(require,module,exports){
'use strict';

exports.utils = require('./des/utils');
exports.Cipher = require('./des/cipher');
exports.DES = require('./des/des');
exports.CBC = require('./des/cbc');
exports.EDE = require('./des/ede');

},{"./des/cbc":61,"./des/cipher":62,"./des/des":63,"./des/ede":64,"./des/utils":65}],61:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};

},{"inherits":104,"minimalistic-assert":110}],62:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};

},{"minimalistic-assert":110}],63:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var utils = des.utils;
var Cipher = des.Cipher;

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};

},{"../des":60,"inherits":104,"minimalistic-assert":110}],64:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

var des = require('../des');
var Cipher = des.Cipher;
var DES = des.DES;

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;

},{"../des":60,"inherits":104,"minimalistic-assert":110}],65:[function(require,module,exports){
'use strict';

exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};

},{}],66:[function(require,module,exports){
(function (Buffer){
var generatePrime = require('./lib/generatePrime')
var primes = require('./lib/primes.json')

var DH = require('./lib/dh')

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

}).call(this,require("buffer").Buffer)
},{"./lib/dh":67,"./lib/generatePrime":68,"./lib/primes.json":69,"buffer":50}],67:[function(require,module,exports){
(function (Buffer){
var BN = require('bn.js');
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = require('./generatePrime');
var randomBytes = require('randombytes');
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

}).call(this,require("buffer").Buffer)
},{"./generatePrime":68,"bn.js":19,"buffer":50,"miller-rabin":109,"randombytes":131}],68:[function(require,module,exports){
var randomBytes = require('randombytes');
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = require('bn.js');
var TWENTYFOUR = new BN(24);
var MillerRabin = require('miller-rabin');
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}

},{"bn.js":19,"miller-rabin":109,"randombytes":131}],69:[function(require,module,exports){
module.exports={
    "modp1": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
    },
    "modp2": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
    },
    "modp5": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
    },
    "modp14": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
    },
    "modp15": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
    },
    "modp16": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
    },
    "modp17": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
    },
    "modp18": {
        "gen": "02",
        "prime": "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
    }
}
},{}],70:[function(require,module,exports){
'use strict';

var elliptic = exports;

elliptic.version = require('../package.json').version;
elliptic.utils = require('./elliptic/utils');
elliptic.rand = require('brorand');
elliptic.curve = require('./elliptic/curve');
elliptic.curves = require('./elliptic/curves');

// Protocols
elliptic.ec = require('./elliptic/ec');
elliptic.eddsa = require('./elliptic/eddsa');

},{"../package.json":85,"./elliptic/curve":73,"./elliptic/curves":76,"./elliptic/ec":77,"./elliptic/eddsa":80,"./elliptic/utils":84,"brorand":20}],71:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

},{"../../elliptic":70,"bn.js":19}],72:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - 1) / (d y^2 + 1)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.one);
  var rhs = y2.redMul(this.d).redAdd(this.one);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;

},{"../../elliptic":70,"../curve":73,"bn.js":19,"inherits":104}],73:[function(require,module,exports){
'use strict';

var curve = exports;

curve.base = require('./base');
curve.short = require('./short');
curve.mont = require('./mont');
curve.edwards = require('./edwards');

},{"./base":71,"./edwards":72,"./mont":74,"./short":75}],74:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var elliptic = require('../../elliptic');
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};

},{"../../elliptic":70,"../curve":73,"bn.js":19,"inherits":104}],75:[function(require,module,exports){
'use strict';

var curve = require('../curve');
var elliptic = require('../../elliptic');
var BN = require('bn.js');
var inherits = require('inherits');
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

},{"../../elliptic":70,"../curve":73,"bn.js":19,"inherits":104}],76:[function(require,module,exports){
'use strict';

var curves = exports;

var hash = require('hash.js');
var elliptic = require('../elliptic');

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = require('./precomputed/secp256k1');
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});

},{"../elliptic":70,"./precomputed/secp256k1":83,"hash.js":89}],77:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var HmacDRBG = require('hmac-drbg');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = require('./key');
var Signature = require('./signature');

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

},{"../../elliptic":70,"./key":78,"./signature":79,"bn.js":19,"hmac-drbg":101}],78:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

},{"../../elliptic":70,"bn.js":19}],79:[function(require,module,exports){
'use strict';

var BN = require('bn.js');

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};

},{"../../elliptic":70,"bn.js":19}],80:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = require('./key');
var Signature = require('./signature');

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};

},{"../../elliptic":70,"./key":81,"./signature":82,"hash.js":89}],81:[function(require,module,exports){
'use strict';

var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;

},{"../../elliptic":70}],82:[function(require,module,exports){
'use strict';

var BN = require('bn.js');
var elliptic = require('../../elliptic');
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;

},{"../../elliptic":70,"bn.js":19}],83:[function(require,module,exports){
module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};

},{}],84:[function(require,module,exports){
'use strict';

var utils = exports;
var BN = require('bn.js');
var minAssert = require('minimalistic-assert');
var minUtils = require('minimalistic-crypto-utils');

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;


},{"bn.js":19,"minimalistic-assert":110,"minimalistic-crypto-utils":111}],85:[function(require,module,exports){
module.exports={
  "_from": "elliptic@^6.0.0",
  "_id": "elliptic@6.4.0",
  "_inBundle": false,
  "_integrity": "sha1-ysmvh2LIWDYYcAPI3+GT5eLq5d8=",
  "_location": "/browserify/elliptic",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "elliptic@^6.0.0",
    "name": "elliptic",
    "escapedName": "elliptic",
    "rawSpec": "^6.0.0",
    "saveSpec": null,
    "fetchSpec": "^6.0.0"
  },
  "_requiredBy": [
    "/browserify/browserify-sign",
    "/browserify/create-ecdh"
  ],
  "_resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz",
  "_shasum": "cac9af8762c85836187003c8dfe193e5e2eae5df",
  "_spec": "elliptic@^6.0.0",
  "_where": "/usr/lib/node_modules/browserify/node_modules/browserify-sign",
  "author": {
    "name": "Fedor Indutny",
    "email": "fedor@indutny.com"
  },
  "bugs": {
    "url": "https://github.com/indutny/elliptic/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bn.js": "^4.4.0",
    "brorand": "^1.0.1",
    "hash.js": "^1.0.0",
    "hmac-drbg": "^1.0.0",
    "inherits": "^2.0.1",
    "minimalistic-assert": "^1.0.0",
    "minimalistic-crypto-utils": "^1.0.0"
  },
  "deprecated": false,
  "description": "EC cryptography",
  "devDependencies": {
    "brfs": "^1.4.3",
    "coveralls": "^2.11.3",
    "grunt": "^0.4.5",
    "grunt-browserify": "^5.0.0",
    "grunt-cli": "^1.2.0",
    "grunt-contrib-connect": "^1.0.0",
    "grunt-contrib-copy": "^1.0.0",
    "grunt-contrib-uglify": "^1.0.1",
    "grunt-mocha-istanbul": "^3.0.1",
    "grunt-saucelabs": "^8.6.2",
    "istanbul": "^0.4.2",
    "jscs": "^2.9.0",
    "jshint": "^2.6.0",
    "mocha": "^2.1.0"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/indutny/elliptic",
  "keywords": [
    "EC",
    "Elliptic",
    "curve",
    "Cryptography"
  ],
  "license": "MIT",
  "main": "lib/elliptic.js",
  "name": "elliptic",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/indutny/elliptic.git"
  },
  "scripts": {
    "jscs": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "jshint": "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
    "lint": "npm run jscs && npm run jshint",
    "test": "npm run lint && npm run unit",
    "unit": "istanbul test _mocha --reporter=spec test/index.js",
    "version": "grunt dist && git add dist/"
  },
  "version": "6.4.0"
}

},{}],86:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var objectCreate = Object.create || objectCreatePolyfill
var objectKeys = Object.keys || objectKeysPolyfill
var bind = Function.prototype.bind || functionBindPolyfill

function EventEmitter() {
  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {
    this._events = objectCreate(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

var hasDefineProperty;
try {
  var o = {};
  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });
  hasDefineProperty = o.x === 0;
} catch (err) { hasDefineProperty = false }
if (hasDefineProperty) {
  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
    enumerable: true,
    get: function() {
      return defaultMaxListeners;
    },
    set: function(arg) {
      // check whether the input is a positive number (whose value is zero or
      // greater and not a NaN).
      if (typeof arg !== 'number' || arg < 0 || arg !== arg)
        throw new TypeError('"defaultMaxListeners" must be a positive number');
      defaultMaxListeners = arg;
    }
  });
} else {
  EventEmitter.defaultMaxListeners = defaultMaxListeners;
}

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || isNaN(n))
    throw new TypeError('"n" argument must be a positive number');
  this._maxListeners = n;
  return this;
};

function $getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return $getMaxListeners(this);
};

// These standalone emit* functions are used to optimize calling of event
// handlers for fast cases because emit() itself often has a variable number of
// arguments and can be deoptimized because of that. These functions always have
// the same number of arguments and thus do not get deoptimized, so the code
// inside them can execute faster.
function emitNone(handler, isFn, self) {
  if (isFn)
    handler.call(self);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self);
  }
}
function emitOne(handler, isFn, self, arg1) {
  if (isFn)
    handler.call(self, arg1);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1);
  }
}
function emitTwo(handler, isFn, self, arg1, arg2) {
  if (isFn)
    handler.call(self, arg1, arg2);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2);
  }
}
function emitThree(handler, isFn, self, arg1, arg2, arg3) {
  if (isFn)
    handler.call(self, arg1, arg2, arg3);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].call(self, arg1, arg2, arg3);
  }
}

function emitMany(handler, isFn, self, args) {
  if (isFn)
    handler.apply(self, args);
  else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      listeners[i].apply(self, args);
  }
}

EventEmitter.prototype.emit = function emit(type) {
  var er, handler, len, args, i, events;
  var doError = (type === 'error');

  events = this._events;
  if (events)
    doError = (doError && events.error == null);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    if (arguments.length > 1)
      er = arguments[1];
    if (er instanceof Error) {
      throw er; // Unhandled 'error' event
    } else {
      // At least give some kind of context to the user
      var err = new Error('Unhandled "error" event. (' + er + ')');
      err.context = er;
      throw err;
    }
    return false;
  }

  handler = events[type];

  if (!handler)
    return false;

  var isFn = typeof handler === 'function';
  len = arguments.length;
  switch (len) {
      // fast cases
    case 1:
      emitNone(handler, isFn, this);
      break;
    case 2:
      emitOne(handler, isFn, this, arguments[1]);
      break;
    case 3:
      emitTwo(handler, isFn, this, arguments[1], arguments[2]);
      break;
    case 4:
      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
      break;
      // slower
    default:
      args = new Array(len - 1);
      for (i = 1; i < len; i++)
        args[i - 1] = arguments[i];
      emitMany(handler, isFn, this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');

  events = target._events;
  if (!events) {
    events = target._events = objectCreate(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener) {
      target.emit('newListener', type,
          listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (!existing) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
          prepend ? [listener, existing] : [existing, listener];
    } else {
      // If we've already got an array, just append.
      if (prepend) {
        existing.unshift(listener);
      } else {
        existing.push(listener);
      }
    }

    // Check for listener leak
    if (!existing.warned) {
      m = $getMaxListeners(target);
      if (m && m > 0 && existing.length > m) {
        existing.warned = true;
        var w = new Error('Possible EventEmitter memory leak detected. ' +
            existing.length + ' "' + String(type) + '" listeners ' +
            'added. Use emitter.setMaxListeners() to ' +
            'increase limit.');
        w.name = 'MaxListenersExceededWarning';
        w.emitter = target;
        w.type = type;
        w.count = existing.length;
        if (typeof console === 'object' && console.warn) {
          console.warn('%s: %s', w.name, w.message);
        }
      }
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    switch (arguments.length) {
      case 0:
        return this.listener.call(this.target);
      case 1:
        return this.listener.call(this.target, arguments[0]);
      case 2:
        return this.listener.call(this.target, arguments[0], arguments[1]);
      case 3:
        return this.listener.call(this.target, arguments[0], arguments[1],
            arguments[2]);
      default:
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; ++i)
          args[i] = arguments[i];
        this.listener.apply(this.target, args);
    }
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = bind.call(onceWrapper, state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  if (typeof listener !== 'function')
    throw new TypeError('"listener" argument must be a function');
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      if (typeof listener !== 'function')
        throw new TypeError('"listener" argument must be a function');

      events = this._events;
      if (!events)
        return this;

      list = events[type];
      if (!list)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = objectCreate(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else
          spliceOne(list, position);

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (!events)
        return this;

      // not listening for removeListener, no need to emit
      if (!events.removeListener) {
        if (arguments.length === 0) {
          this._events = objectCreate(null);
          this._eventsCount = 0;
        } else if (events[type]) {
          if (--this._eventsCount === 0)
            this._events = objectCreate(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = objectKeys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = objectCreate(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

EventEmitter.prototype.listeners = function listeners(type) {
  var evlistener;
  var ret;
  var events = this._events;

  if (!events)
    ret = [];
  else {
    evlistener = events[type];
    if (!evlistener)
      ret = [];
    else if (typeof evlistener === 'function')
      ret = [evlistener.listener || evlistener];
    else
      ret = unwrapListeners(evlistener);
  }

  return ret;
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
};

// About 1.5x faster than the two-arg version of Array#splice().
function spliceOne(list, index) {
  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)
    list[i] = list[k];
  list.pop();
}

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function objectCreatePolyfill(proto) {
  var F = function() {};
  F.prototype = proto;
  return new F;
}
function objectKeysPolyfill(obj) {
  var keys = [];
  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {
    keys.push(k);
  }
  return k;
}
function functionBindPolyfill(context) {
  var fn = this;
  return function () {
    return fn.apply(context, arguments);
  };
}

},{}],87:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer
var MD5 = require('md5.js')

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey

},{"md5.js":107,"safe-buffer":147}],88:[function(require,module,exports){
(function (Buffer){
'use strict'
var Transform = require('stream').Transform
var inherits = require('inherits')

function HashBase (blockSize) {
  Transform.call(this)

  this._block = new Buffer(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    if (encoding !== 'buffer') chunk = new Buffer(chunk, encoding)
    this.update(chunk)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this._digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = new Buffer(data, encoding || 'binary')

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function (data) {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)
  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase

}).call(this,require("buffer").Buffer)
},{"buffer":50,"inherits":104,"stream":156}],89:[function(require,module,exports){
var hash = exports;

hash.utils = require('./hash/utils');
hash.common = require('./hash/common');
hash.sha = require('./hash/sha');
hash.ripemd = require('./hash/ripemd');
hash.hmac = require('./hash/hmac');

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

},{"./hash/common":90,"./hash/hmac":91,"./hash/ripemd":92,"./hash/sha":93,"./hash/utils":100}],90:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

},{"./utils":100,"minimalistic-assert":110}],91:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var assert = require('minimalistic-assert');

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

},{"./utils":100,"minimalistic-assert":110}],92:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var common = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

},{"./common":90,"./utils":100}],93:[function(require,module,exports){
'use strict';

exports.sha1 = require('./sha/1');
exports.sha224 = require('./sha/224');
exports.sha256 = require('./sha/256');
exports.sha384 = require('./sha/384');
exports.sha512 = require('./sha/512');

},{"./sha/1":94,"./sha/224":95,"./sha/256":96,"./sha/384":97,"./sha/512":98}],94:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":90,"../utils":100,"./common":99}],95:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var SHA256 = require('./256');

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};


},{"../utils":100,"./256":96}],96:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var shaCommon = require('./common');
var assert = require('minimalistic-assert');

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

},{"../common":90,"../utils":100,"./common":99,"minimalistic-assert":110}],97:[function(require,module,exports){
'use strict';

var utils = require('../utils');

var SHA512 = require('./512');

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

},{"../utils":100,"./512":98}],98:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var common = require('../common');
var assert = require('minimalistic-assert');

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

},{"../common":90,"../utils":100,"minimalistic-assert":110}],99:[function(require,module,exports){
'use strict';

var utils = require('../utils');
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;

},{"../utils":100}],100:[function(require,module,exports){
'use strict';

var assert = require('minimalistic-assert');
var inherits = require('inherits');

exports.inherits = inherits;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;

},{"inherits":104,"minimalistic-assert":110}],101:[function(require,module,exports){
'use strict';

var hash = require('hash.js');
var utils = require('minimalistic-crypto-utils');
var assert = require('minimalistic-assert');

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};

},{"hash.js":89,"minimalistic-assert":110,"minimalistic-crypto-utils":111}],102:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],103:[function(require,module,exports){

var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};
},{}],104:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],105:[function(require,module,exports){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}

},{}],106:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],107:[function(require,module,exports){
(function (Buffer){
'use strict'
var inherits = require('inherits')
var HashBase = require('hash-base')

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = new Buffer(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5

}).call(this,require("buffer").Buffer)
},{"buffer":50,"hash-base":108,"inherits":104}],108:[function(require,module,exports){
'use strict'
var Buffer = require('safe-buffer').Buffer
var Transform = require('stream').Transform
var inherits = require('inherits')

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase

},{"inherits":104,"safe-buffer":147,"stream":156}],109:[function(require,module,exports){
var bn = require('bn.js');
var brorand = require('brorand');

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};

},{"bn.js":19,"brorand":20}],110:[function(require,module,exports){
module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

},{}],111:[function(require,module,exports){
'use strict';

var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};

},{}],112:[function(require,module,exports){
module.exports={"2.16.840.1.101.3.4.1.1": "aes-128-ecb",
"2.16.840.1.101.3.4.1.2": "aes-128-cbc",
"2.16.840.1.101.3.4.1.3": "aes-128-ofb",
"2.16.840.1.101.3.4.1.4": "aes-128-cfb",
"2.16.840.1.101.3.4.1.21": "aes-192-ecb",
"2.16.840.1.101.3.4.1.22": "aes-192-cbc",
"2.16.840.1.101.3.4.1.23": "aes-192-ofb",
"2.16.840.1.101.3.4.1.24": "aes-192-cfb",
"2.16.840.1.101.3.4.1.41": "aes-256-ecb",
"2.16.840.1.101.3.4.1.42": "aes-256-cbc",
"2.16.840.1.101.3.4.1.43": "aes-256-ofb",
"2.16.840.1.101.3.4.1.44": "aes-256-cfb"
}
},{}],113:[function(require,module,exports){
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.
'use strict'

var asn1 = require('asn1.js')

exports.certificate = require('./certificate')

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})

},{"./certificate":114,"asn1.js":4}],114:[function(require,module,exports){
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen

'use strict'

var asn = require('asn1.js')

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate

},{"asn1.js":4}],115:[function(require,module,exports){
(function (Buffer){
// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED\n\r?DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\n\r?\n\r?([0-9A-z\n\r\+\/\=]+)\n\r?/m
var startRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----\n/m
var fullRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----\n\r?([0-9A-z\n\r\+\/\=]+)\n\r?-----END \1-----$/m
var evp = require('evp_bytestokey')
var ciphers = require('browserify-aes')
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = new Buffer(match2[2].replace(/\r?\n/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = new Buffer(match[2], 'hex')
    var cipherText = new Buffer(match[3].replace(/\r?\n/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}

}).call(this,require("buffer").Buffer)
},{"browserify-aes":24,"buffer":50,"evp_bytestokey":87}],116:[function(require,module,exports){
(function (Buffer){
var asn1 = require('./asn1')
var aesid = require('./aesid.json')
var fixProc = require('./fixProc')
var ciphers = require('browserify-aes')
var compat = require('pbkdf2')
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = new Buffer(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen)
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

}).call(this,require("buffer").Buffer)
},{"./aesid.json":112,"./asn1":113,"./fixProc":115,"browserify-aes":24,"buffer":50,"pbkdf2":118}],117:[function(require,module,exports){
(function (process){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

}).call(this,require('_process'))
},{"_process":124}],118:[function(require,module,exports){

exports.pbkdf2 = require('./lib/async')

exports.pbkdf2Sync = require('./lib/sync')

},{"./lib/async":119,"./lib/sync":122}],119:[function(require,module,exports){
(function (process,global){
var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var sync = require('./sync')
var Buffer = require('safe-buffer').Buffer

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = {
  'sha': 'SHA-1',
  'sha-1': 'SHA-1',
  'sha1': 'SHA-1',
  'sha256': 'SHA-256',
  'sha-256': 'SHA-256',
  'sha384': 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  'sha512': 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}
function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}
function resolvePromise (promise, callback) {
  promise.then(function (out) {
    process.nextTick(function () {
      callback(null, out)
    })
  }, function (e) {
    process.nextTick(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  checkParameters(iterations, keylen)
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]
  if (!algo || typeof global.Promise !== 'function') {
    return process.nextTick(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
  }
  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) {
      return browserPbkdf2(password, salt, iterations, keylen, algo)
    } else {
      return sync(password, salt, iterations, keylen, digest)
    }
  }), callback)
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./default-encoding":120,"./precondition":121,"./sync":122,"_process":124,"safe-buffer":147}],120:[function(require,module,exports){
(function (process){
var defaultEncoding
/* istanbul ignore next */
if (process.browser) {
  defaultEncoding = 'utf-8'
} else {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
}
module.exports = defaultEncoding

}).call(this,require('_process'))
},{"_process":124}],121:[function(require,module,exports){
var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs
module.exports = function (iterations, keylen) {
  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}

},{}],122:[function(require,module,exports){
var md5 = require('create-hash/md5')
var rmd160 = require('ripemd160')
var sha = require('sha.js')

var checkParameters = require('./precondition')
var defaultEncoding = require('./default-encoding')
var Buffer = require('safe-buffer').Buffer
var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  checkParameters(iterations, keylen)

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2

},{"./default-encoding":120,"./precondition":121,"create-hash/md5":56,"ripemd160":146,"safe-buffer":147,"sha.js":149}],123:[function(require,module,exports){
(function (process){
'use strict';

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}


}).call(this,require('_process'))
},{"_process":124}],124:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],125:[function(require,module,exports){
exports.publicEncrypt = require('./publicEncrypt');
exports.privateDecrypt = require('./privateDecrypt');

exports.privateEncrypt = function privateEncrypt(key, buf) {
  return exports.publicEncrypt(key, buf, true);
};

exports.publicDecrypt = function publicDecrypt(key, buf) {
  return exports.privateDecrypt(key, buf, true);
};
},{"./privateDecrypt":127,"./publicEncrypt":128}],126:[function(require,module,exports){
(function (Buffer){
var createHash = require('create-hash');
module.exports = function (seed, len) {
  var t = new Buffer('');
  var  i = 0, c;
  while (t.length < len) {
    c = i2ops(i++);
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);
  }
  return t.slice(0, len);
};

function i2ops(c) {
  var out = new Buffer(4);
  out.writeUInt32BE(c,0);
  return out;
}
}).call(this,require("buffer").Buffer)
},{"buffer":50,"create-hash":54}],127:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var crt = require('browserify-rsa');
var createHash = require('create-hash');
var withPublic = require('./withPublic');
module.exports = function privateDecrypt(private_key, enc, reverse) {
  var padding;
  if (private_key.padding) {
    padding = private_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  
  var key = parseKeys(private_key);
  var k = key.modulus.byteLength();
  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error');
  }
  var msg;
  if (reverse) {
    msg = withPublic(new bn(enc), key);
  } else {
    msg = crt(enc, key);
  }
  var zBuffer = new Buffer(k - msg.length);
  zBuffer.fill(0);
  msg = Buffer.concat([zBuffer, msg], k);
  if (padding === 4) {
    return oaep(key, msg);
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    return msg;
  } else {
    throw new Error('unknown padding');
  }
};

function oaep(key, msg){
  var n = key.modulus;
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (msg[0] !== 0) {
    throw new Error('decryption error');
  }
  var maskedSeed = msg.slice(1, hLen + 1);
  var maskedDb =  msg.slice(hLen + 1);
  var seed = xor(maskedSeed, mgf(maskedDb, hLen));
  var db = xor(maskedDb, mgf(seed, k - hLen - 1));
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error');
  }
  var i = hLen;
  while (db[i] === 0) {
    i++;
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error');
  }
  return db.slice(i);
}

function pkcs1(key, msg, reverse){
  var p1 = msg.slice(0, 2);
  var i = 2;
  var status = 0;
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++;
      break;
    }
  }
  var ps = msg.slice(2, i - 1);
  var p2 = msg.slice(i - 1, i);

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){
    status++;
  }
  if (ps.length < 8) {
    status++;
  }
  if (status) {
    throw new Error('decryption error');
  }
  return  msg.slice(i);
}
function compare(a, b){
  a = new Buffer(a);
  b = new Buffer(b);
  var dif = 0;
  var len = a.length;
  if (a.length !== b.length) {
    dif++;
    len = Math.min(a.length, b.length);
  }
  var i = -1;
  while (++i < len) {
    dif += (a[i] ^ b[i]);
  }
  return dif;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":126,"./withPublic":129,"./xor":130,"bn.js":19,"browserify-rsa":42,"buffer":50,"create-hash":54,"parse-asn1":116}],128:[function(require,module,exports){
(function (Buffer){
var parseKeys = require('parse-asn1');
var randomBytes = require('randombytes');
var createHash = require('create-hash');
var mgf = require('./mgf');
var xor = require('./xor');
var bn = require('bn.js');
var withPublic = require('./withPublic');
var crt = require('browserify-rsa');

var constants = {
  RSA_PKCS1_OAEP_PADDING: 4,
  RSA_PKCS1_PADDIN: 1,
  RSA_NO_PADDING: 3
};

module.exports = function publicEncrypt(public_key, msg, reverse) {
  var padding;
  if (public_key.padding) {
    padding = public_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  var key = parseKeys(public_key);
  var paddedMsg;
  if (padding === 4) {
    paddedMsg = oaep(key, msg);
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    paddedMsg = new bn(msg);
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus');
    }
  } else {
    throw new Error('unknown padding');
  }
  if (reverse) {
    return crt(paddedMsg, key);
  } else {
    return withPublic(paddedMsg, key);
  }
};

function oaep(key, msg){
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long');
  }
  var ps = new Buffer(k - mLen - hLen2 - 2);
  ps.fill(0);
  var dblen = k - hLen - 1;
  var seed = randomBytes(hLen);
  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));
  var maskedSeed = xor(seed, mgf(maskedDb, hLen));
  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));
}
function pkcs1(key, msg, reverse){
  var mLen = msg.length;
  var k = key.modulus.byteLength();
  if (mLen > k - 11) {
    throw new Error('message too long');
  }
  var ps;
  if (reverse) {
    ps = new Buffer(k - mLen - 3);
    ps.fill(0xff);
  } else {
    ps = nonZero(k - mLen - 3);
  }
  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));
}
function nonZero(len, crypto) {
  var out = new Buffer(len);
  var i = 0;
  var cache = randomBytes(len*2);
  var cur = 0;
  var num;
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len*2);
      cur = 0;
    }
    num = cache[cur++];
    if (num) {
      out[i++] = num;
    }
  }
  return out;
}
}).call(this,require("buffer").Buffer)
},{"./mgf":126,"./withPublic":129,"./xor":130,"bn.js":19,"browserify-rsa":42,"buffer":50,"create-hash":54,"parse-asn1":116,"randombytes":131}],129:[function(require,module,exports){
(function (Buffer){
var bn = require('bn.js');
function withPublic(paddedMsg, key) {
  return new Buffer(paddedMsg
    .toRed(bn.mont(key.modulus))
    .redPow(new bn(key.publicExponent))
    .fromRed()
    .toArray());
}

module.exports = withPublic;
}).call(this,require("buffer").Buffer)
},{"bn.js":19,"buffer":50}],130:[function(require,module,exports){
module.exports = function xor(a, b) {
  var len = a.length;
  var i = -1;
  while (++i < len) {
    a[i] ^= b[i];
  }
  return a
};
},{}],131:[function(require,module,exports){
(function (process,global){
'use strict'

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = require('safe-buffer').Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > 65536) throw new Error('requested too many random bytes')
  // in case browserify  isn't using the Uint8Array version
  var rawBytes = new global.Uint8Array(size)

  // This will not work in older browsers.
  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
  if (size > 0) {  // getRandomValues fails on IE if size == 0
    crypto.getRandomValues(rawBytes)
  }

  // XXX: phantomjs doesn't like a buffer being passed here
  var bytes = Buffer.from(rawBytes.buffer)

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":124,"safe-buffer":147}],132:[function(require,module,exports){
(function (process,global){
'use strict'

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}
var safeBuffer = require('safe-buffer')
var randombytes = require('randombytes')
var Buffer = safeBuffer.Buffer
var kBufferMaxLength = safeBuffer.kMaxLength
var crypto = global.crypto || global.msCrypto
var kMaxUint32 = Math.pow(2, 32) - 1
function assertOffset (offset, length) {
  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number')
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32')
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range')
  }
}

function assertSize (size, offset, length) {
  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number')
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32')
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small')
  }
}
if ((crypto && crypto.getRandomValues) || !process.browser) {
  exports.randomFill = randomFill
  exports.randomFillSync = randomFillSync
} else {
  exports.randomFill = oldBrowser
  exports.randomFillSync = oldBrowser
}
function randomFill (buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  if (typeof offset === 'function') {
    cb = offset
    offset = 0
    size = buf.length
  } else if (typeof size === 'function') {
    cb = size
    size = buf.length - offset
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function')
  }
  assertOffset(offset, buf.length)
  assertSize(size, offset, buf.length)
  return actualFill(buf, offset, size, cb)
}

function actualFill (buf, offset, size, cb) {
  if (process.browser) {
    var ourBuf = buf.buffer
    var uint = new Uint8Array(ourBuf, offset, size)
    crypto.getRandomValues(uint)
    if (cb) {
      process.nextTick(function () {
        cb(null, buf)
      })
      return
    }
    return buf
  }
  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err)
      }
      bytes.copy(buf, offset)
      cb(null, buf)
    })
    return
  }
  var bytes = randombytes(size)
  bytes.copy(buf, offset)
  return buf
}
function randomFillSync (buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0
  }
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  assertOffset(offset, buf.length)

  if (size === undefined) size = buf.length - offset

  assertSize(size, offset, buf.length)

  return actualFill(buf, offset, size)
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":124,"randombytes":131,"safe-buffer":147}],133:[function(require,module,exports){
module.exports = require('./lib/_stream_duplex.js');

},{"./lib/_stream_duplex.js":134}],134:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args').nextTick;
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

var keys = objectKeys(Writable.prototype);
for (var v = 0; v < keys.length; v++) {
  var method = keys[v];
  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  processNextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  processNextTick(cb, err);
};

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}
},{"./_stream_readable":136,"./_stream_writable":138,"core-util-is":52,"inherits":104,"process-nextick-args":123}],135:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":137,"core-util-is":52,"inherits":104}],136:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args').nextTick;
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/BufferList');
var destroyImpl = require('./internal/streams/destroy');
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    processNextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        processNextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    processNextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    processNextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function forEach(xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":134,"./internal/streams/BufferList":139,"./internal/streams/destroy":140,"./internal/streams/stream":141,"_process":124,"core-util-is":52,"events":86,"inherits":104,"isarray":106,"process-nextick-args":123,"safe-buffer":147,"string_decoder/":157,"util":21}],137:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":134,"core-util-is":52,"inherits":104}],138:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.

'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args').nextTick;
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = require('./internal/streams/destroy');

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  processNextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    processNextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    processNextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    processNextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      processNextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) processNextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./_stream_duplex":134,"./internal/streams/destroy":140,"./internal/streams/stream":141,"_process":124,"core-util-is":52,"inherits":104,"process-nextick-args":123,"safe-buffer":147,"util-deprecate":158}],139:[function(require,module,exports){
'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = require('safe-buffer').Buffer;
var util = require('util');

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}
},{"safe-buffer":147,"util":21}],140:[function(require,module,exports){
'use strict';

/*<replacement>*/

var processNextTick = require('process-nextick-args').nextTick;
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      processNextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      processNextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};
},{"process-nextick-args":123}],141:[function(require,module,exports){
module.exports = require('events').EventEmitter;

},{"events":86}],142:[function(require,module,exports){
module.exports = require('./readable').PassThrough

},{"./readable":143}],143:[function(require,module,exports){
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_duplex.js":134,"./lib/_stream_passthrough.js":135,"./lib/_stream_readable.js":136,"./lib/_stream_transform.js":137,"./lib/_stream_writable.js":138}],144:[function(require,module,exports){
module.exports = require('./readable').Transform

},{"./readable":143}],145:[function(require,module,exports){
module.exports = require('./lib/_stream_writable.js');

},{"./lib/_stream_writable.js":138}],146:[function(require,module,exports){
(function (Buffer){
'use strict'
var inherits = require('inherits')
var HashBase = require('hash-base')

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var m = new Array(16)
  for (var i = 0; i < 16; ++i) m[i] = this._block.readInt32LE(i * 4)

  var al = this._a
  var bl = this._b
  var cl = this._c
  var dl = this._d
  var el = this._e

  // Mj = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
  // K = 0x00000000
  // Sj = 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8
  al = fn1(al, bl, cl, dl, el, m[0], 0x00000000, 11); cl = rotl(cl, 10)
  el = fn1(el, al, bl, cl, dl, m[1], 0x00000000, 14); bl = rotl(bl, 10)
  dl = fn1(dl, el, al, bl, cl, m[2], 0x00000000, 15); al = rotl(al, 10)
  cl = fn1(cl, dl, el, al, bl, m[3], 0x00000000, 12); el = rotl(el, 10)
  bl = fn1(bl, cl, dl, el, al, m[4], 0x00000000, 5); dl = rotl(dl, 10)
  al = fn1(al, bl, cl, dl, el, m[5], 0x00000000, 8); cl = rotl(cl, 10)
  el = fn1(el, al, bl, cl, dl, m[6], 0x00000000, 7); bl = rotl(bl, 10)
  dl = fn1(dl, el, al, bl, cl, m[7], 0x00000000, 9); al = rotl(al, 10)
  cl = fn1(cl, dl, el, al, bl, m[8], 0x00000000, 11); el = rotl(el, 10)
  bl = fn1(bl, cl, dl, el, al, m[9], 0x00000000, 13); dl = rotl(dl, 10)
  al = fn1(al, bl, cl, dl, el, m[10], 0x00000000, 14); cl = rotl(cl, 10)
  el = fn1(el, al, bl, cl, dl, m[11], 0x00000000, 15); bl = rotl(bl, 10)
  dl = fn1(dl, el, al, bl, cl, m[12], 0x00000000, 6); al = rotl(al, 10)
  cl = fn1(cl, dl, el, al, bl, m[13], 0x00000000, 7); el = rotl(el, 10)
  bl = fn1(bl, cl, dl, el, al, m[14], 0x00000000, 9); dl = rotl(dl, 10)
  al = fn1(al, bl, cl, dl, el, m[15], 0x00000000, 8); cl = rotl(cl, 10)

  // Mj = 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8
  // K = 0x5a827999
  // Sj = 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12
  el = fn2(el, al, bl, cl, dl, m[7], 0x5a827999, 7); bl = rotl(bl, 10)
  dl = fn2(dl, el, al, bl, cl, m[4], 0x5a827999, 6); al = rotl(al, 10)
  cl = fn2(cl, dl, el, al, bl, m[13], 0x5a827999, 8); el = rotl(el, 10)
  bl = fn2(bl, cl, dl, el, al, m[1], 0x5a827999, 13); dl = rotl(dl, 10)
  al = fn2(al, bl, cl, dl, el, m[10], 0x5a827999, 11); cl = rotl(cl, 10)
  el = fn2(el, al, bl, cl, dl, m[6], 0x5a827999, 9); bl = rotl(bl, 10)
  dl = fn2(dl, el, al, bl, cl, m[15], 0x5a827999, 7); al = rotl(al, 10)
  cl = fn2(cl, dl, el, al, bl, m[3], 0x5a827999, 15); el = rotl(el, 10)
  bl = fn2(bl, cl, dl, el, al, m[12], 0x5a827999, 7); dl = rotl(dl, 10)
  al = fn2(al, bl, cl, dl, el, m[0], 0x5a827999, 12); cl = rotl(cl, 10)
  el = fn2(el, al, bl, cl, dl, m[9], 0x5a827999, 15); bl = rotl(bl, 10)
  dl = fn2(dl, el, al, bl, cl, m[5], 0x5a827999, 9); al = rotl(al, 10)
  cl = fn2(cl, dl, el, al, bl, m[2], 0x5a827999, 11); el = rotl(el, 10)
  bl = fn2(bl, cl, dl, el, al, m[14], 0x5a827999, 7); dl = rotl(dl, 10)
  al = fn2(al, bl, cl, dl, el, m[11], 0x5a827999, 13); cl = rotl(cl, 10)
  el = fn2(el, al, bl, cl, dl, m[8], 0x5a827999, 12); bl = rotl(bl, 10)

  // Mj = 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12
  // K = 0x6ed9eba1
  // Sj = 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5
  dl = fn3(dl, el, al, bl, cl, m[3], 0x6ed9eba1, 11); al = rotl(al, 10)
  cl = fn3(cl, dl, el, al, bl, m[10], 0x6ed9eba1, 13); el = rotl(el, 10)
  bl = fn3(bl, cl, dl, el, al, m[14], 0x6ed9eba1, 6); dl = rotl(dl, 10)
  al = fn3(al, bl, cl, dl, el, m[4], 0x6ed9eba1, 7); cl = rotl(cl, 10)
  el = fn3(el, al, bl, cl, dl, m[9], 0x6ed9eba1, 14); bl = rotl(bl, 10)
  dl = fn3(dl, el, al, bl, cl, m[15], 0x6ed9eba1, 9); al = rotl(al, 10)
  cl = fn3(cl, dl, el, al, bl, m[8], 0x6ed9eba1, 13); el = rotl(el, 10)
  bl = fn3(bl, cl, dl, el, al, m[1], 0x6ed9eba1, 15); dl = rotl(dl, 10)
  al = fn3(al, bl, cl, dl, el, m[2], 0x6ed9eba1, 14); cl = rotl(cl, 10)
  el = fn3(el, al, bl, cl, dl, m[7], 0x6ed9eba1, 8); bl = rotl(bl, 10)
  dl = fn3(dl, el, al, bl, cl, m[0], 0x6ed9eba1, 13); al = rotl(al, 10)
  cl = fn3(cl, dl, el, al, bl, m[6], 0x6ed9eba1, 6); el = rotl(el, 10)
  bl = fn3(bl, cl, dl, el, al, m[13], 0x6ed9eba1, 5); dl = rotl(dl, 10)
  al = fn3(al, bl, cl, dl, el, m[11], 0x6ed9eba1, 12); cl = rotl(cl, 10)
  el = fn3(el, al, bl, cl, dl, m[5], 0x6ed9eba1, 7); bl = rotl(bl, 10)
  dl = fn3(dl, el, al, bl, cl, m[12], 0x6ed9eba1, 5); al = rotl(al, 10)

  // Mj = 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2
  // K = 0x8f1bbcdc
  // Sj = 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12
  cl = fn4(cl, dl, el, al, bl, m[1], 0x8f1bbcdc, 11); el = rotl(el, 10)
  bl = fn4(bl, cl, dl, el, al, m[9], 0x8f1bbcdc, 12); dl = rotl(dl, 10)
  al = fn4(al, bl, cl, dl, el, m[11], 0x8f1bbcdc, 14); cl = rotl(cl, 10)
  el = fn4(el, al, bl, cl, dl, m[10], 0x8f1bbcdc, 15); bl = rotl(bl, 10)
  dl = fn4(dl, el, al, bl, cl, m[0], 0x8f1bbcdc, 14); al = rotl(al, 10)
  cl = fn4(cl, dl, el, al, bl, m[8], 0x8f1bbcdc, 15); el = rotl(el, 10)
  bl = fn4(bl, cl, dl, el, al, m[12], 0x8f1bbcdc, 9); dl = rotl(dl, 10)
  al = fn4(al, bl, cl, dl, el, m[4], 0x8f1bbcdc, 8); cl = rotl(cl, 10)
  el = fn4(el, al, bl, cl, dl, m[13], 0x8f1bbcdc, 9); bl = rotl(bl, 10)
  dl = fn4(dl, el, al, bl, cl, m[3], 0x8f1bbcdc, 14); al = rotl(al, 10)
  cl = fn4(cl, dl, el, al, bl, m[7], 0x8f1bbcdc, 5); el = rotl(el, 10)
  bl = fn4(bl, cl, dl, el, al, m[15], 0x8f1bbcdc, 6); dl = rotl(dl, 10)
  al = fn4(al, bl, cl, dl, el, m[14], 0x8f1bbcdc, 8); cl = rotl(cl, 10)
  el = fn4(el, al, bl, cl, dl, m[5], 0x8f1bbcdc, 6); bl = rotl(bl, 10)
  dl = fn4(dl, el, al, bl, cl, m[6], 0x8f1bbcdc, 5); al = rotl(al, 10)
  cl = fn4(cl, dl, el, al, bl, m[2], 0x8f1bbcdc, 12); el = rotl(el, 10)

  // Mj = 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
  // K = 0xa953fd4e
  // Sj = 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
  bl = fn5(bl, cl, dl, el, al, m[4], 0xa953fd4e, 9); dl = rotl(dl, 10)
  al = fn5(al, bl, cl, dl, el, m[0], 0xa953fd4e, 15); cl = rotl(cl, 10)
  el = fn5(el, al, bl, cl, dl, m[5], 0xa953fd4e, 5); bl = rotl(bl, 10)
  dl = fn5(dl, el, al, bl, cl, m[9], 0xa953fd4e, 11); al = rotl(al, 10)
  cl = fn5(cl, dl, el, al, bl, m[7], 0xa953fd4e, 6); el = rotl(el, 10)
  bl = fn5(bl, cl, dl, el, al, m[12], 0xa953fd4e, 8); dl = rotl(dl, 10)
  al = fn5(al, bl, cl, dl, el, m[2], 0xa953fd4e, 13); cl = rotl(cl, 10)
  el = fn5(el, al, bl, cl, dl, m[10], 0xa953fd4e, 12); bl = rotl(bl, 10)
  dl = fn5(dl, el, al, bl, cl, m[14], 0xa953fd4e, 5); al = rotl(al, 10)
  cl = fn5(cl, dl, el, al, bl, m[1], 0xa953fd4e, 12); el = rotl(el, 10)
  bl = fn5(bl, cl, dl, el, al, m[3], 0xa953fd4e, 13); dl = rotl(dl, 10)
  al = fn5(al, bl, cl, dl, el, m[8], 0xa953fd4e, 14); cl = rotl(cl, 10)
  el = fn5(el, al, bl, cl, dl, m[11], 0xa953fd4e, 11); bl = rotl(bl, 10)
  dl = fn5(dl, el, al, bl, cl, m[6], 0xa953fd4e, 8); al = rotl(al, 10)
  cl = fn5(cl, dl, el, al, bl, m[15], 0xa953fd4e, 5); el = rotl(el, 10)
  bl = fn5(bl, cl, dl, el, al, m[13], 0xa953fd4e, 6); dl = rotl(dl, 10)

  var ar = this._a
  var br = this._b
  var cr = this._c
  var dr = this._d
  var er = this._e

  // M'j = 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12
  // K' = 0x50a28be6
  // S'j = 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6
  ar = fn5(ar, br, cr, dr, er, m[5], 0x50a28be6, 8); cr = rotl(cr, 10)
  er = fn5(er, ar, br, cr, dr, m[14], 0x50a28be6, 9); br = rotl(br, 10)
  dr = fn5(dr, er, ar, br, cr, m[7], 0x50a28be6, 9); ar = rotl(ar, 10)
  cr = fn5(cr, dr, er, ar, br, m[0], 0x50a28be6, 11); er = rotl(er, 10)
  br = fn5(br, cr, dr, er, ar, m[9], 0x50a28be6, 13); dr = rotl(dr, 10)
  ar = fn5(ar, br, cr, dr, er, m[2], 0x50a28be6, 15); cr = rotl(cr, 10)
  er = fn5(er, ar, br, cr, dr, m[11], 0x50a28be6, 15); br = rotl(br, 10)
  dr = fn5(dr, er, ar, br, cr, m[4], 0x50a28be6, 5); ar = rotl(ar, 10)
  cr = fn5(cr, dr, er, ar, br, m[13], 0x50a28be6, 7); er = rotl(er, 10)
  br = fn5(br, cr, dr, er, ar, m[6], 0x50a28be6, 7); dr = rotl(dr, 10)
  ar = fn5(ar, br, cr, dr, er, m[15], 0x50a28be6, 8); cr = rotl(cr, 10)
  er = fn5(er, ar, br, cr, dr, m[8], 0x50a28be6, 11); br = rotl(br, 10)
  dr = fn5(dr, er, ar, br, cr, m[1], 0x50a28be6, 14); ar = rotl(ar, 10)
  cr = fn5(cr, dr, er, ar, br, m[10], 0x50a28be6, 14); er = rotl(er, 10)
  br = fn5(br, cr, dr, er, ar, m[3], 0x50a28be6, 12); dr = rotl(dr, 10)
  ar = fn5(ar, br, cr, dr, er, m[12], 0x50a28be6, 6); cr = rotl(cr, 10)

  // M'j = 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2
  // K' = 0x5c4dd124
  // S'j = 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11
  er = fn4(er, ar, br, cr, dr, m[6], 0x5c4dd124, 9); br = rotl(br, 10)
  dr = fn4(dr, er, ar, br, cr, m[11], 0x5c4dd124, 13); ar = rotl(ar, 10)
  cr = fn4(cr, dr, er, ar, br, m[3], 0x5c4dd124, 15); er = rotl(er, 10)
  br = fn4(br, cr, dr, er, ar, m[7], 0x5c4dd124, 7); dr = rotl(dr, 10)
  ar = fn4(ar, br, cr, dr, er, m[0], 0x5c4dd124, 12); cr = rotl(cr, 10)
  er = fn4(er, ar, br, cr, dr, m[13], 0x5c4dd124, 8); br = rotl(br, 10)
  dr = fn4(dr, er, ar, br, cr, m[5], 0x5c4dd124, 9); ar = rotl(ar, 10)
  cr = fn4(cr, dr, er, ar, br, m[10], 0x5c4dd124, 11); er = rotl(er, 10)
  br = fn4(br, cr, dr, er, ar, m[14], 0x5c4dd124, 7); dr = rotl(dr, 10)
  ar = fn4(ar, br, cr, dr, er, m[15], 0x5c4dd124, 7); cr = rotl(cr, 10)
  er = fn4(er, ar, br, cr, dr, m[8], 0x5c4dd124, 12); br = rotl(br, 10)
  dr = fn4(dr, er, ar, br, cr, m[12], 0x5c4dd124, 7); ar = rotl(ar, 10)
  cr = fn4(cr, dr, er, ar, br, m[4], 0x5c4dd124, 6); er = rotl(er, 10)
  br = fn4(br, cr, dr, er, ar, m[9], 0x5c4dd124, 15); dr = rotl(dr, 10)
  ar = fn4(ar, br, cr, dr, er, m[1], 0x5c4dd124, 13); cr = rotl(cr, 10)
  er = fn4(er, ar, br, cr, dr, m[2], 0x5c4dd124, 11); br = rotl(br, 10)

  // M'j = 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13
  // K' = 0x6d703ef3
  // S'j = 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5
  dr = fn3(dr, er, ar, br, cr, m[15], 0x6d703ef3, 9); ar = rotl(ar, 10)
  cr = fn3(cr, dr, er, ar, br, m[5], 0x6d703ef3, 7); er = rotl(er, 10)
  br = fn3(br, cr, dr, er, ar, m[1], 0x6d703ef3, 15); dr = rotl(dr, 10)
  ar = fn3(ar, br, cr, dr, er, m[3], 0x6d703ef3, 11); cr = rotl(cr, 10)
  er = fn3(er, ar, br, cr, dr, m[7], 0x6d703ef3, 8); br = rotl(br, 10)
  dr = fn3(dr, er, ar, br, cr, m[14], 0x6d703ef3, 6); ar = rotl(ar, 10)
  cr = fn3(cr, dr, er, ar, br, m[6], 0x6d703ef3, 6); er = rotl(er, 10)
  br = fn3(br, cr, dr, er, ar, m[9], 0x6d703ef3, 14); dr = rotl(dr, 10)
  ar = fn3(ar, br, cr, dr, er, m[11], 0x6d703ef3, 12); cr = rotl(cr, 10)
  er = fn3(er, ar, br, cr, dr, m[8], 0x6d703ef3, 13); br = rotl(br, 10)
  dr = fn3(dr, er, ar, br, cr, m[12], 0x6d703ef3, 5); ar = rotl(ar, 10)
  cr = fn3(cr, dr, er, ar, br, m[2], 0x6d703ef3, 14); er = rotl(er, 10)
  br = fn3(br, cr, dr, er, ar, m[10], 0x6d703ef3, 13); dr = rotl(dr, 10)
  ar = fn3(ar, br, cr, dr, er, m[0], 0x6d703ef3, 13); cr = rotl(cr, 10)
  er = fn3(er, ar, br, cr, dr, m[4], 0x6d703ef3, 7); br = rotl(br, 10)
  dr = fn3(dr, er, ar, br, cr, m[13], 0x6d703ef3, 5); ar = rotl(ar, 10)

  // M'j = 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14
  // K' = 0x7a6d76e9
  // S'j = 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8
  cr = fn2(cr, dr, er, ar, br, m[8], 0x7a6d76e9, 15); er = rotl(er, 10)
  br = fn2(br, cr, dr, er, ar, m[6], 0x7a6d76e9, 5); dr = rotl(dr, 10)
  ar = fn2(ar, br, cr, dr, er, m[4], 0x7a6d76e9, 8); cr = rotl(cr, 10)
  er = fn2(er, ar, br, cr, dr, m[1], 0x7a6d76e9, 11); br = rotl(br, 10)
  dr = fn2(dr, er, ar, br, cr, m[3], 0x7a6d76e9, 14); ar = rotl(ar, 10)
  cr = fn2(cr, dr, er, ar, br, m[11], 0x7a6d76e9, 14); er = rotl(er, 10)
  br = fn2(br, cr, dr, er, ar, m[15], 0x7a6d76e9, 6); dr = rotl(dr, 10)
  ar = fn2(ar, br, cr, dr, er, m[0], 0x7a6d76e9, 14); cr = rotl(cr, 10)
  er = fn2(er, ar, br, cr, dr, m[5], 0x7a6d76e9, 6); br = rotl(br, 10)
  dr = fn2(dr, er, ar, br, cr, m[12], 0x7a6d76e9, 9); ar = rotl(ar, 10)
  cr = fn2(cr, dr, er, ar, br, m[2], 0x7a6d76e9, 12); er = rotl(er, 10)
  br = fn2(br, cr, dr, er, ar, m[13], 0x7a6d76e9, 9); dr = rotl(dr, 10)
  ar = fn2(ar, br, cr, dr, er, m[9], 0x7a6d76e9, 12); cr = rotl(cr, 10)
  er = fn2(er, ar, br, cr, dr, m[7], 0x7a6d76e9, 5); br = rotl(br, 10)
  dr = fn2(dr, er, ar, br, cr, m[10], 0x7a6d76e9, 15); ar = rotl(ar, 10)
  cr = fn2(cr, dr, er, ar, br, m[14], 0x7a6d76e9, 8); er = rotl(er, 10)

  // M'j = 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
  // K' = 0x00000000
  // S'j = 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
  br = fn1(br, cr, dr, er, ar, m[12], 0x00000000, 8); dr = rotl(dr, 10)
  ar = fn1(ar, br, cr, dr, er, m[15], 0x00000000, 5); cr = rotl(cr, 10)
  er = fn1(er, ar, br, cr, dr, m[10], 0x00000000, 12); br = rotl(br, 10)
  dr = fn1(dr, er, ar, br, cr, m[4], 0x00000000, 9); ar = rotl(ar, 10)
  cr = fn1(cr, dr, er, ar, br, m[1], 0x00000000, 12); er = rotl(er, 10)
  br = fn1(br, cr, dr, er, ar, m[5], 0x00000000, 5); dr = rotl(dr, 10)
  ar = fn1(ar, br, cr, dr, er, m[8], 0x00000000, 14); cr = rotl(cr, 10)
  er = fn1(er, ar, br, cr, dr, m[7], 0x00000000, 6); br = rotl(br, 10)
  dr = fn1(dr, er, ar, br, cr, m[6], 0x00000000, 8); ar = rotl(ar, 10)
  cr = fn1(cr, dr, er, ar, br, m[2], 0x00000000, 13); er = rotl(er, 10)
  br = fn1(br, cr, dr, er, ar, m[13], 0x00000000, 6); dr = rotl(dr, 10)
  ar = fn1(ar, br, cr, dr, er, m[14], 0x00000000, 5); cr = rotl(cr, 10)
  er = fn1(er, ar, br, cr, dr, m[0], 0x00000000, 15); br = rotl(br, 10)
  dr = fn1(dr, er, ar, br, cr, m[3], 0x00000000, 13); ar = rotl(ar, 10)
  cr = fn1(cr, dr, er, ar, br, m[9], 0x00000000, 11); er = rotl(er, 10)
  br = fn1(br, cr, dr, er, ar, m[11], 0x00000000, 11); dr = rotl(dr, 10)

  // change state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160

}).call(this,require("buffer").Buffer)
},{"buffer":50,"hash-base":88,"inherits":104}],147:[function(require,module,exports){
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":50}],148:[function(require,module,exports){
var Buffer = require('safe-buffer').Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash

},{"safe-buffer":147}],149:[function(require,module,exports){
var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = require('./sha')
exports.sha1 = require('./sha1')
exports.sha224 = require('./sha224')
exports.sha256 = require('./sha256')
exports.sha384 = require('./sha384')
exports.sha512 = require('./sha512')

},{"./sha":150,"./sha1":151,"./sha224":152,"./sha256":153,"./sha384":154,"./sha512":155}],150:[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha

},{"./hash":148,"inherits":104,"safe-buffer":147}],151:[function(require,module,exports){
/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1

},{"./hash":148,"inherits":104,"safe-buffer":147}],152:[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Sha256 = require('./sha256')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224

},{"./hash":148,"./sha256":153,"inherits":104,"safe-buffer":147}],153:[function(require,module,exports){
/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256

},{"./hash":148,"inherits":104,"safe-buffer":147}],154:[function(require,module,exports){
var inherits = require('inherits')
var SHA512 = require('./sha512')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384

},{"./hash":148,"./sha512":155,"inherits":104,"safe-buffer":147}],155:[function(require,module,exports){
var inherits = require('inherits')
var Hash = require('./hash')
var Buffer = require('safe-buffer').Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512

},{"./hash":148,"inherits":104,"safe-buffer":147}],156:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":86,"inherits":104,"readable-stream/duplex.js":133,"readable-stream/passthrough.js":142,"readable-stream/readable.js":143,"readable-stream/transform.js":144,"readable-stream/writable.js":145}],157:[function(require,module,exports){
'use strict';

var Buffer = require('safe-buffer').Buffer;

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return -1;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// UTF-8 replacement characters ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd'.repeat(p);
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd'.repeat(p + 1);
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd'.repeat(p + 2);
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character for each buffered byte of a (partial)
// character needs to be added to the output.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd'.repeat(this.lastTotal - this.lastNeed);
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":147}],158:[function(require,module,exports){
(function (global){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],159:[function(require,module,exports){
var indexOf = require('indexof');

var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    forEach(Object_keys(ctx), function (key) {
        context[key] = ctx[key];
    });

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};

},{"indexof":103}]},{},[2]);
